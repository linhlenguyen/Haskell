%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%Title: metaOCamlVersion.dvi
%%CreationDate: Tue Sep 20 15:20:15 2005
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman CMSS9 CMR9 Times-Italic CMSY7
%%+ CMSY8 CMR10 CMTT9 MSAM7 CMSY9 MSAM10 CMR6 CMMI6 CMTT8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: C:\texmf\miktex\bin\dvips.exe -P cmz -t Letter
%+ metaOCamlVersion
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.09.20:1520
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0pre  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0pre",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT8
%!PS-AdobeFont-1.1: CMTT8 1.0
%%CreationDate: 1991 Aug 20 16:46:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 56 /eight put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 85 /U put
dup 86 /V put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
/FontBBox{-5 -232 545 699}readonly def
/UniqueID 5000830 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0187316F83DDE3E2D27FCDF6C5CE4F95B6EE
3317BD91B7921F3039DD35FEA387D5CFB6C6E9DC84C178F3432994FC7FAC6E5A
ED41A1E2EBA350178FBFEB45944511731BA827167DDAC238FC69A5486B995477
C469E2E27493B0B711DF8E267D3D5613B450011921685147114106C9472580BD
F531022F6DF5432B2A4EBC51A8032C7F9689B6FA942D849B29709631613DA68D
4DF7B6F059A19304F40A3C3580CE3B51D79D42984194D4F178801720892FB6E7
61FF43C63F9256B5E9F4227B1378222BAAD4D52C77462DF01892220E11129C16
6C9E45BB9F01ED7C1AD5D8B4D72BE0E12969AFEA90FEF170603CDB91CB243173
B19A56084D10293B80A35275F41BF78A054DDC98F4A1FFF592463D944960FB31
6BE5F03960F9B1F213CBCC7FD448657FE388F10104D42B0715FC9571CC60CF23
C72560CBB8835A0CA208FE06676B3B48B093CB7FB2C0C53AF17EC5B372A9771B
BFD52FFB7062B4FE0106A01A2A1A1DD4EF5C8C7623EC9324A2CB3B402FCC1FCE
52BFC8662F8A39D5F1B41C97E7CE34E16AC28A1E94007AEA7D4C519399F1B7A9
48FA7DDB671067244F09C29F95DD60668223F45BBDA8B1C452E930A9F3F341C5
351D59EA87462FFB30277D3B24E2104D4AAB873BB2B16DA5B23BEE25BE2C8128
C4CF2F4F438A4E520CD864F3EAFB5363753B82978F6FD664A14E5D6F3A929348
5839EA752FD635619C4FABF1E1454510BD9D6B538A343BE748AE05B47F917367
1BA5EDB15F1BDBE806E51B294257D7087334165419A6520462D794D670A1D6E1
3BB03BF689391D056D55AD660D15A386E6D222C9572BDC4DC8A46EEC75124BB5
F0E8978FD6031A90E4768CCBF62A5ED8C8087FD66D2033011947634878BDC0AB
6501DA7E6D96E227068E993DBB0072F037CA41101911405BD8F9EC1205659AE8
871E3553F8A66C7B236E24A8193564752FA005231D7782FBEA7FF662B03A92E0
5D6D6F3C722075ECEDAE09927C81890B0805C18B00AC0AD5ECD3C0EE564D8ED8
57D37D318049ABFFF65F838483D054C3B40FC73075081D7280BF21005E56C574
DD963EB7A769CF9BDA67D029D1A83B97DC7DB1F7DAB3A546508D203733A2E658
2AEB0EE2112249F1EE311B5B23E85A759977085A7BC5DFAD8F43C4F0A2A36A21
699BF5A23A652CF457962089CB7750F622C638D0F253AD5E81EB6C3EED4280D4
889A4A54B9A3C6BFCB052E93118D8F1935B287532C9D534EE6B0E53A08C71E8D
2DC00CDB5FEAD38AD50990EB2B6F54B6B2FE26DBE81A5C5B70DAF9562305E937
0EB630929E4038C8D065CCEC99635DB415569B6B102B679020E8EB9856AF70F9
4ECCC60565A07F7C760BF70C00DEDB8EA7548540EF8E8DEDFEBB9EC3E89C0A70
C3E30E4ED430EDD5E3E82B02AAF4C1FE6A6C0ABBC0A73BA928BD043CA72EC239
6D7CFAFBAC625B33820EB124B8EFD82722A2BFDD8F8E6CBE2461CCFCB510C46E
99BC981048F0E81C48BB705F9FD9FB3321E302B08C6836703E5D6618DCACDC79
59C69E2917E37B4ABDF38311104BBAA1942B49C9F40CBA81B576227D1AF53010
76FBD4DB98E55A32EFA8C5D177443CF00E04546942BF96F8C52870FF91009DA9
AA76799640EDBA42034658ED0CDEB48BCF8EF3C420738969AD54A00D3D55B7A7
2EBD6E9CCA5111CC41F3B24FC7E9EF61071947E8A8A2ED7D64D980142D73A0D2
6EE0E4BB0EB27945CC64F8B547B4AA912F522AF54306563E8F91F704A86F786A
3F8EA0366DCF19E784653CECBAD4F79E9281DBA8B1D0DEC79D0AE3E3E8825259
24BD3B2073A82C2A11151EDBE30887B27470DCEA6188551E1854C7B89F2AF28F
25A5DD6C44E083BC6B29E2169FE38B20709F293E68FCD0B1466930A63D08262F
A98220F4CA331A543667A23A9A3AE33C8D7D25400E7FB6C98CEF64BB2AC3C198
2FF4D99ED1D01A0104D227F900AA93D561E78465CA332F65DF1630449CD717CE
F174BD9868994378AB5C8446842A33B875BDAA9B6168EB130F0414D06FF079B1
8B7EEC731F5FDF47226D60A75A236D347E1A9F8299C179A9913032AC0972EB97
8F3C6BEDA16131C34C9E926444F71AD00E0AEB8ED940AD29C9880C944A924398
5419C5589FE0F6B3485CF2FF1BFBEAED2EBF3B51A0372801418FBB1BEA99C1C9
BCB28C0DA6806DBD51293DB84696302F3FC7888102846759818056917A3F8D9B
7CBDB078E4B3452898E7D8A9D5A4E4B3894346C7619E1135455E9962F3103E7C
8F9C0CEB5A4652DE8D076AF2D5C0B5C5A89E73E5279D8BF5BB5974BDFAA74557
AA9A9C6001BD14E576BC4F820B96BD9391EDFD790D945C64E8E1D74330FD8DF6
2D759C3B33FB0C1A187F1361E668D55D37FAD00612F4B2997D244A4D15ADCEC1
7860DD0E8F9B0573C27878A291704A997273EC53899A33950BB62E9764C8C3DB
58A11C70B633DBB339726757CFD30C24DAF971E7FF7D0EFEE64CE2ED2D1A468E
842ECBB094BD89940E912DC9BB70645ED4B2C5B659D2ABE6E13583C44151B687
F2206D6095BCB5431C860394F9BE2ADF88C7E29DC266C4A1E0087F150D37E456
1EA5D420D3D589862095EE45572F9E675E408C978907A872F5C3D52E30560109
909736E55907028DC88516672B5DD354D7F250CF7F61F5F681B92B45383D0F37
B329D43425345643D8B858D4997BC4192F3D101E70CE754AC986690D113F896C
9256EA7B7D03C124C41FC708CAE2E3B2065DC3C0AF5B9DF918AC1E2C4A788F48
1FF8748CA17FFD1CC6CF40ACC186AD0334E1C993A5F2FE880E837F0EE72D027F
ECDDCA9EE1AE1F21049A6DF028E8EBB8783727A7E91F473C702806EC82F30C50
34ED14D1104A8B962F1B875568F38687A2187E9D88D2B69811C1CA0A02C8BEF6
2C7A66A71A99CE06CB34C68C8D978EC97D293CD0FDD965DEF2262C0ADDD7CEF7
449A01A0B639CD3735AC95F3C553B605BFA207FCBD8A0CBC52A3D9878F7F8B2B
099FACF2C69A0591DD22091D853ABFC963A1F4B331297D871A4B100984978DB5
297411EAE48A2A53335E025A7B76658F461F3F974507838A5BBFCE5A1A2C1984
E2444BEF483D2711CE95A2786D386367DDAE74EAE06B736648490CD4F5C089B7
46571B1E6602A73C5E405CBCF7917B62B7E48C5B9A67FAD2E42F7C251DD78E02
E7B850E685226E5651C065726030805DA9ABEF9950DF1B84A593DDA50221E640
A76FC4D45AE8C6FABD17414E6203788523F96992357C5B8C730F7F6412298784
FEB29DE3F1EB1FDAA38CE2A34EE781B1B6AC9603E7F28E3AC9B3FB49B776DC64
F9E2F3265AC67C97619A04AD59E76C01C6710BA2A4DC2E8AB597818749E5D6A5
891AF2E3DCAEC004CBE10DC3560F2BFC18C5C9697BB4A8414A1E46E83513F5F7
86A5F0BBA55981E728B95993C5C32C4A44A7023F4732567BDA7A2A4B0C02115E
3EE57621D049BA331F5A18565516527344A2C686D0B617B56853695163F3C9CD
05C021BC205B96D7F09009EAC505108E743F2AAA8C6F7825ACB8D4C99158D8B9
DF74C2C9F48C3CFFEC5D33DBA9075D796C94F1E3E2060CF4D511508E486B59CD
DAF9060AB150A30AEDD7FBAF0834AE7F76BD2C53142A392A364FEBE49346ED57
7BA46A297AE915C488AB950B4E283A0ED0FAE6E506B38C88F8877697E42BFB05
C56D632B38F8DB4B3DBB7061279BD6EA613A4DCDA678457FCE2E72D6DD89CE37
1DCCAC054DFBB21B4D294729E159FCE80C65867D76169043F96A3699FE577982
F9CF6255A4F15052377A0C29F4ADC67749D0640293AA94F89C5F7ACAB70232F6
24E62649BC2A942655160EF175853BCDBCB2E70CE8D4A46733720C9562EAC2FB
0584005AA6B64198A58E9B5016950862F0E5EAA1CA12DD77B7A8B98F450075E2
AF49ECA9014FF21EA68735023AFF4DBD8413041A084B89FAA1C117B5EA4B00CF
C07FD9B670F9CEDA7AE511D7F922853BC536DAEEC4B4E3A981C6846D46FD31D4
AD0B2B96C4C2C254C31226B8526224BFA9E0A8B250E438FBC323E7DACC6C94DC
A34F1AD5787702F26E3A7F23551AE3484430A9431B25C5C34CA56706B9BD5AAA
A7CFE9D3E717FF9418980496FF0ADED7165FD050DE65962B17502F071A43C195
7B964DCC9061BFDC56275C5A3C54BD0FDBC736AF9FD159174C50772F2EB6AD60
6E78FA08317EC0048829F39C0534A9960D531F664C30E2A5E8E62A9C0AE6BF02
B257EFECEA948990D9243A25139AAF6306DB60EB997D1DF4725129D16FB6DF8F
7570CD1EE5D84605DF9170719C56A53757897CB4729D806AB0DBEF06C030DC22
E9E714245259F68A73CC6EFD3EFA92D694763E21ECAD7F1A27C4C37BCF829A4C
39F32DDFDD314BA8F6F5971A44690D5E6B7BF70B850FE7B096E166D80E6B7359
D67636C17B0619CE90A45ED1D14E90BE4581DFC7219E8C343C6C64D806FA7B1A
F3B17970505770B1991A28B6BE5D057E19F5ED14023C9235A3080CEA59587096
6294328BB6F54083A846D7A3D4A077DB036E6691FBDBFF17C40BB7264FDE27E0
46B4DCA82437DC072ACD14110670356B84E7E3FDD24740DA84D3EC0362F6EBE5
D00EFF386C8B837D53C6FED8DCCA589A7DE7EC08BE13A184C76F3B77AD2325F2
391826841F2D6CCC684C044A85671B752D6BD82A68EE79DDACFE5CC23B1CAA28
5D22F90F6A9B2B56568941A888D60D03C2CD567BEF64D7551682B97EF162EF23
2A02A03B861C6AC55D96E345684F74882FF2720B775AAE623FB92337C289BEEF
1F1E243B5C26E05D89608352EC21FE168A700D670A5FAD0DA309D8A3045D2DA3
158431C958522CDB913C5E1EA2E01245C960836020559515DEC00BFC0E5B1E0C
CB598948FD926AA4BB5BE9DE1F707A79224A090BFD67DA4969F4FAEA825F2300
003E4715F5FF08D8827D0D97C11C23914BBB286CD9101BA75D5F31224F11860E
EAE28DE82FE6E5A32DCE57B0E40D3CD52FC6321CE36550A6E8594E1501ED8DF1
36E65EB2C644DAD57F6FBD531F8B89F2BDC77EF37ED3CD7DCF742C1DE4CF88FB
433180B3A6810DF28C016ABB40C47A75EB198706DDB5CE467766D95EF61DA52B
6A3058EDCA7B434657DD3083C7F6ED1E774E351FA5354DFE29B3C186BE77E769
46AFB1056FDDD80BACEB52DCCBF5845F6A299637BA434D799D1996A211935D47
F6127906E3AFD90B31AA8072A7BDB88B7BD93E55DEBA09AA35CA48BCFE5ADB76
D5CA6039B7AF2F72409389CDD22C95129A799E659FEB82978A30EE9BB1DC7405
D8A6A868075BDF6793EAB68972A3A29D91F7239882A875D7FCFFE8EF144863B8
D47B62FFE786E4A09B243C7045C2F78940013D0B17555A30D14E6CBE871DCED3
CCB72C0F6C9EDC4F29634DA362484ED6278CF35CCB098D19627B85F9E2CD6C2F
ED63DFB5DC5C3F0FC97114499706F91EC7C977822DECBC205B59231FD4B869A7
A9AEDF075D508EA4F788C73D949640C4BA6079916DD3340118C5AA7CE2F63C31
F3BA6D3838B55C20A6DA60C2CB0147615F9C690516FA6883AFB6A200C48EAB6F
152E947C395A038296D7B2C01830E59A736531284160B1099452A5FA55213688
416D176A5DA4FC57F8EC5CBD0830B7E1DCAB6DE8B53AA24FEA8BD4F0C2D6F850
B3EEEA0A997509734650DD6FD509B7C7659AA3FCB47230CAA0224C01F4B914DE
C5D466E04DC77BC7234C7016FF934AB3E43A563D27AB13670302AD41C0AF1BBB
986BB88425A03133744CC09E45838249E32E65F6DFA24F2586A399F58255CF0D
677C7A4C4E60D08F92F2D5B56CEC5CF8136D122286209CB909585DF420B01FB9
C49A1597DD0B537150DF286644200339855573477D43EA9E6971BA03F2AFA721
1F4F8E41BA0B3BD1B9AEE32978621B8A04AF0A4AA67C5703BE2DED3690C86723
E29B8D6AE210E9109A471A7301D68F60BA9F9BE37976341C28C88A74D282B3B0
E6B5FA1CE6FD6B69BD4E13DA47015EB1715C114409829E92022E4720FD904E15
A41856A933477FAD1F0155FA119BD52EEA3244F08580FBF941E6C9D5F809FEDA
345975A1517BC7A5F0876572DF09B64D5079878574FCCFE9596553C4397D5FD8
C33AA0CAB01F5289993093C38E2FAD2DDC5BE5C5C6E442BBE2A6CEC32E73AFD2
BA6FB590C99989FDF60040311744AFCA8FB59D9E1168FDF824B163B218A4AB7E
CD3B461DB52C6795AE0E9227C2168D25B3654764A71443D695817ED5F62007D4
C8481943EE759825D8ADF8C0C423B7B4B73BFA2C0025DD62DEE5AEADA7B91197
DED446C523A320C88DB6EA547CAD31C9703F4E11CE9A99FB12DE06121203C0FE
11FAAFC1974DAFDE51C59A9B27735E2DCC57B931EF4167EDA333D78A863F76FF
DC0A60CA92AD69B67BE850D30FE709EC11D20E90868D46C709B47319E8BE8B56
DD804CEFC34658C4CB060A68B128B3CD1123B18F9A9837E3ED391DA2AB8AEA87
DD073D721D5325FFF1DF6146EC90DF03AEAF8A128467CFA6FEF94816CD9E099A
9EAF29838D13EE9798C8D6831D280E9C40875F2C10F15C31C328EC10AB01E011
206FAE87445E6B5BAA7110A8DD0C0D02F200F889C34A8B5685D1AF7A82CFF74C
05257A3CAE82401828CCCE075DBAC0458C5B6A87DE865843A73CD74E122CCE6C
3FC1A996FDBDCAB3BE37523CBCB404401F816A2685554AAEF8BB1A81F09B9396
92AFA76D35C5A251FA6AD85EC26FCF39E1DD6D59D84600EF14341003DB246AE0
4EF6F0EAF70ED00F4D440D1620522139F5A027A32599617DD5290CC857A5BCC6
938ED25B4725C2BDE5FAA469F591CE419B5EDEAEEC2D3F81386D78AC3EE24C67
87B3FA85DEDCA80B6F09CA5228AD42E8D8982E0E1096B10820DA95D8A49CD614
584D90E451FC43E40D98B8AA1AE0F4E0FC8C2B5051498E122C180CFBCA52B223
8B54D544A4883966CA09E71A8BDCAD1107982E1B1680E43531518C72AC5DC921
DEE125E1C48284C4039191BD85789F28875AF433B1D2D71A5116B8361D88F63D
D9F69FD1957A2C1CE256C6F2B645B06549C602CE56DD0CD5283DA8605C67C013
B8E1CAA0DE0E1BDB01289AD82BD80DCE0A578E65201B524384998B6A2FE90A92
E2FBF9AD6F83D945FBA9C828AD3626D0EB7D7956635DE9C1CD5C427DE2CEFC6C
2FEE4DD6D71972407E8318B68AE4FE26B0D97552BD7959EEE1A9EB82D29441BF
ED2F312FC6E70111396AACB66EA52ADC540586DC6ADA7EC5A01A3867A790E8A8
3200B16AC6523115B310CBF2615A39ED08C10E7B42E89EEE90AE841BFEF24EBF
588D636C528B3027DA35CEA2336AD27072F0F42599EB8803BBEC3628DD13F00C
79F69D6FA4F4916BC0FD17525CD8913FBB44A4E425F63016A8BE2F305341A366
B2A1369731427A87498577BD342D0BD318679C1080ACB354D7A5E1E9EBD1CA9A
7B5411A2FADD6C0A41C721519176739052949FE94822481D71D1F9CC42539A76
A68D0378BDE6CF214C9C190096E760B95E24D0303B4D8D11B573D4354058CD3D
40E20C2A61C26A325346AF9620BCF4ED23A7DBD18003CA77D9E7BD4B727E8171
BCC58187BD6F7F093831B7883655E2510DF70C3E6AE556197664E845F2CE267C
C1AFF0720AD80A50F51B19282D4988BF1B0133D313050956EC152E6FCB4D20CE
8B9B4A4B39D8F5754D8AB86C9EA629898CF32B8F2E0CAEA6809A7FEBDB90E2F4
93F965D0D107F9071C32D1755A77E229AE18769A2DD01C67E46180EA4C7AE39D
99E26EE54DFD4BB6744832416340B085425A7422C5C6EA42E78E0AB880EBE1FC
6CED5407716521EB6E9CA5B991B5C0D38AE0DA52ACE4813F2DF2360C6ED9B9EC
433618E1B4A9973E6FCE004AD5B326BAC3DC2E76D6A6724F5BC8C7562D9E730A
97D4716D90AE389C3EF4DEA15457F08815F729D04D43675459F660EC7AB7C31F
F57DAD40FA673ADA94BE8A85FB6AAD796FE0EF1A2B044BDA1C4C527DD919A0BD
9E5D9EFB7ACC3D50AE9709E02C69C6596FAFF3DA810B1FCC8856169645E92492
29FD2942B940AD29CA9BB6ACBC9D636C6AE7CF5775114520F3F2B120BD7A6B6A
655276F0FE0ED9B66F316278961452CCFE7EA19AF4888A66EB9BE6B15F29E689
1E1A9571BC3F9AFCA2EC7C0DB05C73F9C20516FA1A11601CB4834C9B5FEF5774
FCB5FF61116A7955E816DDF53B771BB68C336C51BEC269BEF45C940794F2F5A7
24748C023789872B69879B24880D9308840C8E49419757B0C06DE122A76D3AC9
A6D3E6CA59E1FACEFEDB95D614C361352C8538DE5E5BA628391305C237A2824E
CCE916BC0B6F86668D77135568CE7B6AAA9950220CB9B452510DC1A09785A780
EC128A0D4A9CF05CBBF41D8AE344C11307C1CFD440702BE7B73C7D60C9BB4AC2
4BCEF8F0C56725463D9116D0B4729D224DE7A38353A07DEDAA0C1DDF3EBC398C
73D4F086372173F5C5F041CB340F8D33A8816FC9F3CD42050160D9F9300CD5F1
43F5834EF1D9120AFCD7B5E7B43D9D0F4C0A8996FF780ABEE21AA68D5368CC2C
52B16BEC058820EDDC2BE7839ED3A2C519CD9BE54E57406E3BF325873E20BF77
96E3740C9EBD16064D7FFCCD1AF4410598081B8885060ABEB77A9172009DE285
3C93CE19E03675CD9E87F4101AA7B6EB5BEC84CC5185FCCD2686AA90E7236841
4E630051B3BE7461371D22BC4B689B7B1C578874100EA5280DF5FCCC66852CAA
D69A8E4B5B5944D126BD2C183ACCCF2D29130AD358EFC7D96FB79D17EB32EFC6
43677FABE3545FF850E95A48EDAB76496148EF1242E8F757D7F177400FD8CA01
EDC4A24534676F388E0DADC2720ABEACC4735AE759CFB6370ACE9D71A67F98D9
AEBCF27A1E6D0ED9A11D3CD5A246D3E3C763EF74DAA4C00B28812685C9B4DF07
181DF8B353E7D6C95EAD3500A057D8161DB2D2A9D8D84EEA00E7BD57DBF0A4B0
3100A4C3DE78CC8520E7A969D79E6E896C31267293E2138590A25F0208775E9B
C3C2AB9B226E51A51D4318AA56CF762ED3616679000AC61E6E27E3E1D874739F
AFFE993A1BB6C11FCCD600F561B8FE63E334A299620EC9750D1D01B9C6963548
5C4F75648E380B922E2FECB7782A37FE0F1AA8E041836EEC4FB7ECFDEEA39260
4411B5F3A93C9E2D81AE5E3EFAC365F2ED274496EA5946996821E4A6EB66B82A
738EFF79224F9C5EA5C56D4CE8438EB84AD4E0140BCF3DF87298971E89B879CE
56A6D944BC57276F4BB7863F04E81EA37A15C30D96677EC555BEF5355133B3C4
7D4D7A136D0DC25B546E3CC5C7878CFDDF850778C84B1E370639128C6B7832E0
8F1E2A7EA8C3B8091E12D6D33520E2F4F7905ED1040C709972DE27A2C980D3B1
450E11B127BF605CD377B85F0F8359035AA1B3B5DAC8EAFAAE5D8FDECC2B38F4
5659819F61021AE512F90D33858978FA8EF8637CE556BCC2327CE1BDD1158D9D
FB30369061276119B36AEA5A17344497C83BE8F528A9F42E2D672C621AB9DFE0
A2AAE00CF082422C7DB6385D5C0191E2FD81D763796EE7EB75538ED441209958
A9A0E33EA5BEB9B3178BDA08DFEE5449DCC451E257B12A578E0ABB2417565D2F
4F06EC4612DAB228D01A6E0880F9359EBB239BD23E592A52FC9224B18D5BAA48
D6AA3FF511AD720677924D938B0947601A85969B95525BE50D2CD65651AFF0F2
EA639679493109163BA5A5BA402ED3D640B0A0269A1FB6C1C281FD326C158335
362D469F79365A93F9934920EE05A198268F7C47A0045A6B6691B3AD96B7312D
55F87597C3FBCC40C5D2290E783E10B1B420B558F7C4C70738A42041BD89C0B3
C8472713A5FCBC31CC96DF287B2E44F680A88C9B16A4935ED9481CBDEF3ACA9B
00751D4D48C9603229C83AB9FBF397A489E1A9261C0B8811029E63A81A1D6E31
F1610FDB4F8D177A7E6290138B1E2C1D2B2FF993D9BB52A999CD5429C8D7E430
3FA079FC9675D0CD44FA05BCB6B2E13D41E69792EFA17D958777861FAC829A9D
41F0770FD3C53DAE06CDB646CC8051E9647E9EC1050FB17974AB4C5B3A7054B9
9CED4439F8C313DD33C5589D9D6C7D7A06060BE4A099C8B945E35095D18002DB
7B10D3D065C91A7B5652A89FD3A11A93362FEE9B7439D4485F7D0C071FB50C50
100BCE12DE401375A76894E28C169C6624EB78C8D5D8591FB1FB23F641A202F5
FC4A359A1FFBA4423D699712CBA9F257CFBF48DC8B04CE9A15CEEE4F009FA6CC
C109E01E5871F24AD2B02392E700C8E1CC45237675B86B155DFECC2E5A1C3596
DB6864B5040BC5457BB26FCA2B9E430AF28972933DEEDCD8F857B647ECE680B8
2A688102D28988A49916EFEB89055437115160833B0DFB89C48C38BFA1E04532
43A5AD1AFBB0F6ED1BEDF1FAF29C990D2D181E88FEBFE59923FAAB901204791A
4E8713CD15B78F0B111AC1C4207CE14914B850C98B126DAEF11CF9ADC3E46956
0CE19A92D49E9550A629D9B2083491C5083AFE7951E82D0D49B3E18060A81E7D
E39E2C28911FD85D1C5AA2216B5C6F39FC0C9D315A1732FFDC1A4844D3E70D9A
05F86F74E0325543461D11A880AB34A5C4C3049CA4F26D966E5551644AFBA799
99D630ECFFAE11E07C9E4CEE3CB5661204093366AF4D2AB18E14EA0A8A44DAC8
A6FA93BF56C3D2CFC8CD7F2D054EA2003AFF76C088FF6A03D40B1A1A7C1E1DAB
CC983C73A0C6E1914790B9184835F1C4E629664C80862BE3EB3CFC41B5ABA938
2B8D8CCFB3A69B283BC24C03BF353752C4F230F1EF8D31819DCF6FD472FBA500
40D342185F68E3A8A6A09601172AF195506B65B10F416A52591368C74347D8F7
A6B1722738260EAB516054F551BCB927FCC1967605091A34CBAB73EF4E8BB3BF
DE5E1243D0917F7CCCCC0CBF4D3768D70A8364966DEACD360938A6D5AB85DEE1
5C6B3DC89C1971E2DB875FA658A004E7C5D0D174ABE36A733723EAC138579D93
DD36823E41C2EBAC000F3F5280C391E6BB81E301C3BB459BDF5176C2EDBBF548
84F44C08005F3F858276DE1B268D0F287011154FFC6D07AB5C1936D9278789FA
0CD1838A4F65806B446B0559417C87A87638F6D5A9230764DC729F147B2FAE14
D692A3640D0B8AF671BF9D229092B46BFE2A01FAFE7945626D69ED7542BA7422
3A1D3BF7A8F47D6EFD13DCF6D76DAA36DF1E53064B3E17596663D07F10FB38EA
34CB360ADFD74B6DB17414CE5E9061F343F0EA8DD9A4C8E5B6A81B0F21DD951D
09AAF00DA6EAA5435FE4E546BFB5C923A86393E81B35A552A343E16D824024A7
6BF1E1F07C5365E353506C76EB9726C6FF422CAC9BF2AEBB7A534647F7ED4BFD
6D52787DD4917206D1B9B88AC0DE277D70C63BA8A33D259185227B9E51498228
A140964F973CA5286067410DEEC2D56EC7B5BC42734023B76FDB790C59BDD5DC
099150ECA302D2341D6A0A89D31B65C47F34E5FB7665CDCB0CD58439CD227821
3CEC1E82294F4E5377D46FF769D3890B5A65ACC19B6EFAE5D64656330F120BF9
46047AA04929FC6A794DC8AF1B1C3495A22D2BFF00C2FD06F19FA5AB5FF07776
613EB3CA08E78D9CD69BE46664B101FBDA45240278F765E26BE29B359549D9B9
01E956F565F4BFAC29DA4A152782C7E93AAE67E41BCBEDEC54A7138A366428D5
99D5AAE362DFFE579EE5B5F90484C722FEBFCDDC72C18A1AC496DF7B7CB1D5C3
FFD6D9BC006026207C371A3B6FDA97293B4BB4BC9EAB3F1C95B431CD8BBC1D48
2E292681EE39DC6D4F39E4F30672115B0437DE311A334DB9CC8B0DF3771E6DAF
916F7BC1D53BFEB417B124D13A66DE00859CC3348A30063E292438C97874C375
6B7AE2C8AE39C6492BCF5F5FEEE9F3E7A99CB4295C20F501C742AE97ACA22793
2DCFC64F321791D740C1155DACAA4D6159B4C4DB2027F57FD05793CD53827E04
6C56E833C84C7DF2583F4E570C56843E6ED740226AF4625781B53E09C299F22C
811EB74F733E814E53CAE893057C712D3E3D971A8AB0E3CEE890355FF7487D1F
EC47F4D898402AF8BCF11DF4D84F348EC22AEE65B3F7B8AC7362F26CD96C1DAA
9420C7EB0A3C0EDF4CA55BD1DE0754340CF5DFC1E45B4CB72464A6D1102DFD3D
F30FCECBE52FAFEB131170D2DF13756949D1A70A47DD18B12924469367A461E2
10B873B9BE932111480B3CC62EDE8240FEFF46769CF0774D0EB4CB99A87A6264
3A5926F7ACA800D95A8FAC656E460C27C96E5555801B89F291D31AEBA2B9B88E
9419D588A0737B70A6F970EBCC88075BC04C44A70DD896088E2BC812B12DB1DF
036FCDE89749E2FDF88AC73F563C6C5E9A3FC266706296B7DD7788FBD81878B2
34F062ECC2FDD3D235CF43279E3DA1A95B5FE6AD54249667977AC5E2571F55D2
26F6D542414D6E4BAE31D415A0C0615696A108155284BC9D17000F471FFB1226
9FC70B02B7908F34847AD6E406990B83E2050E576EAFCACE8E8FCF90AA9E0DB3
7E2BCA18361CE3D871E45926BB1619F67C399D0E926F9AE41CB7CA3A2CCAE94B
83A6C7DA21A6A403A2AAB01E491B4325E5AA06ED56C37A445876FE27B150D542
FDFE2F3C3732EC1751A1D776FF578D6A77793AD427928828A326DF14BCD8FCDD
D6A299255D887A46ABBA67BA8D97B46597EFA0377802FEF2DC03CAC000EE097B
1F37575992E87BB52D893AA2F682D536B60D6C471B82D20B10A7B17AAB3E8D8C
C352D77CD02F09BCEBDD5954BE660A6885411A5CC0F17F581A2254F9DCCF786F
4EA7008B8A851E1B0149C87EE3DF3F58392F409DE99B1557CE897729A5289D3E
D081CB17B0F06905ADE621E2E028392DD657E53F9F8DD272A1B6224B41C8107F
30EF270BCF2320015D82522E84AEF1E4F71988C7D71591D23E3AAE7DC2FA92EF
938D1D4D70A010EAF647C15C133DFE192F62A8D0DA750986F8C5275316C7C7D4
05AA4DD571773D552FED13143465F1C8BC650AAF54AE9EFDF70FCE8476ED9057
08303B209DB2C360BF74EDA3FBFEEB446FE8E670C8957530013B97ABC9975F11
E3F95F2E561C9552BA51FDC80B39432CE83CC2774D13196D251E2B07030AACE1
AB5F067687B2A6E06ACE8BC3C4054C2772FBF0F1B40BFE0A095E288C9DEB1832
E3EA8DB2EB1FC9C045D7CF56AD8DC6726DF2A2170762C951C981C48E9B443B8F
9BB4FC6004FC6327DCF30300A97DADC33B455D9ACBA0E7F5D6209E75B8436127
235AC76725BA59F9AC30A2D026EDD1996E564106B003C1073EA2B55C91144C4D
C8A3B71686846A921C27E04DF71A774770EA12CCBB0776F6E691FEFC3B121CB6
6A4D205105E2ECD939E818BC63D495CFA1A57B68C43D86C10FA85E0BA68B8069
6E9716C83B3496DB939158BB8192D3D95A94D84ED66F67B3788E5DA250AC4626
3B7310AA45DB09DA3C56B1E0F68C96CE89F2C91D404CE5466F1A6FA4CAC00E1F
E1E8D5114481A9564B1A71B3421D5045658C248A082444AEC525B89F3F8FF0ED
722E4D21295C76742C648F1AD5C957EAF937BCE4137FFF1186C0EC8B027A5FA2
9BD429FD7E479F583AF76F0EA454F8D360A6F66F7326DB538823307C014798BF
2504BE5BC7D36403B11E2E36DEEC178CE029A26063CC4E89B3985A461568C602
11CEA4EF6112F797B10EDF89564D92FBED7C5BBFA4191BFC641B6FC35164FB2E
2BA818E28FB72FC669612273505B3970E4E09ACCA1EE12C0AAB3E02FB6C8EB9D
E94C84B275F2A2C1A5B16EE6D41B443FBE0F6ACACE84E51B7A2721
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /n put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C71AC58D7C35AB3247575482E538773F05A1046C7F0B68F30141B4BD2
1EFE3163B8C24E6B3E74F2DF4E778B22A7C1132EEDB9AE074E6A6A5E1E8E9C27
C610C906F4A8EDED1688D0368E86412CFE4E9FB49E2F2772D321C72A0315DABE
458C97F398F270787D9AD51A242AE0FB2CE2D74557F155088F5560897807D54C
462D1B41EA14906503BD89940FC26F3E5E22B8CBD474CB70A49CEDDDBFC093B7
15A14D1108808DC3B9AA5E8EB0054ED34186DFA834F42EC759D51997E575F93E
1ECADD102E48C110FC83AB0DBF776B969D81AED2620DE36A7C47DB62EFEA4B6B
0F5B7B569A9C434BC51F73867502C7B793F31A662317782D8FC352DD9B24E9CC
55F9B34170F67378116412D89C2AE4AD798E9FD38A1B96162167E361BAD8B4F9
AF83FEF57C7294058BFCEA1D2C3187A590D81347B249E6611E00A2F038949BE9
82EB2312AC6F23140AF44A8F244A45B28EFB434BDAB73234B106F29F4AFC35A0
9A6E423C33A815994E4E6D4A97AE2070BE701D7EBD92C62408332EBCEA130F7B
8EC0669F7C94A445220392867E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB67C3039A0F
BF0BA4B455D035FF3126F33A4DF59FF96752CF58DC0863924F6042B14DC2DEE4
099CAA764A8EFFEB78F7FFD276F0928BA32624C3A69ACEB8777A461298B201D3
4DA271476B8AC8966668D4E28A6FBA952F6D295AA80CC09B0CFD6BE840703B07
7ED93999EB5630C2C7CD9BA683ED457D1341C3AA702B5FA8593A51E8E9165FF6
1385693E19161FF1ADC1FE0BE16FD3AFCDC3916A309FCE6B3F2B362C9F958A16
821E1EB2DD899522DD3155C0B7A7F0876E4DA32FD30D8289266D9F05E77F1F1C
D3BFD2D4D6C8B6FDE0E8957BDBBEC54458C70B96F4CD77E734EE0CF620684024
EB05DF0536FAFF10FC6F6050AB338D44EA9C38150D3779A550C505C06D417A71
62D41C2D23843E0A2A73F72D4B5286E3CB7B8695B2434479776A59CB3BC6D352
677CCABF4133E20F12D91CFD8978C09FB81DF801707194AB8FABA9A6599C20FA
B36DB0A166490D20BB0BD53581A8715B099754E6FA0F7D2892F5573380DDFF1E
F9C3DA9F74BDBEBBDFA5715AE23264F967BC7841CE58E5EE2764555978D904F6
E8DEF6ED66C478848FC35A9827ACEA1D7CE85C8626C162FF296869DE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.1: MSAM10 2.1
%%CreationDate: 1993 Sep 17 09:05:00
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
/FontBBox{8 -463 1331 1003}readonly def
/UniqueID 5031981 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50EC5FD93D6A04C2783B50EA48059E3E7407537CB8D
4C206846EF0764C05289733920E2399E58AD8F137C229F3CE3E34D2D1EAB2D53
20D44EFAC8EFA4D14A2EFE389D952527F98D0E49BD5BD2C8D58FF9CB9C78D974
75C2AB5467D73D2B5E277A3FDC35909938A9DF0EB91BD9159D3437BE22EE4544
3429AC8E2BFBE34AE54D3BA3AD04BDF3F4F43A2B43992DF88678681B3AB32CFD
A23E2C98D1AF00AB206AC95B78BBE6316F7A0AB6BD3236C28C76288B3C25D1EB
E9ABB3576C5EC15A71D26177F5883E9B48293D59015615E2EEAF2E9BA04151ED
5497B9A1C41CBA44BAFF13EA218F5EAC11952EE336AD1DBE6CE92F002EAA3B3D
3BE4C3792F3405763C4BD93EFC3B4FC34193439561841BA989DD8D9F9AEE7A7B
24AEB4654B35023C9720B8F31AA9452E29753FB7915CB29977E725611E37C0B7
784BCC26FACF8A7A0EB1E54290D27FFE52B2D87FAD080AD15EE1984C37E0EB30
122C3012D3A16B09C28903D138352AB5462674B6CFB63F1371768D094DDF288C
36FB9B58443F872D61F2CD8CED42FE0EFF3D7E9952A172BB1AFECB60BF79F2B6
04265FDE4F78BC9FD619AA733CD0412F1D9A7C13B271BF827DCBDC8ABAE24FF0
74D3C220621D7FF0EFE62D835A221D0A7C139E2E6681FC2BBA58FA3B80D416EC
3854C63BA040A4262B458340DAA18AA6AEA3BBAC61615CB85982B18664D3D3AF
340C65B969071CF2D0CABEB80E04623D0526F862ECA8280EEE236C535F70561A
854181132E677674AD5E14C6636F57541D3C821F0776D2CB9B8526D4B826791A
0B179B387D47B0811BB2C543C33C8D2E85C0963D01F865C6CAF0142A9A2579CD
305FDB83EE4360D6F14FB45F36149F144EDD40F5AD478F2A40A1B0350D02F91A
37C7B0C40EF70EFBAD0C322298C4CF581F1F753F7BEE26B56AB00363E62BA6C3
351EEA00CDE1365BC14698AF4B86193692A9AAB635D6B69B56907F1811021C80
EF24551295EBF4200B50DFAD78089297DA0A3884560E5C026D32A689B70EE227
E06A3F1BB2531E85D1F23E5F91DFFD7E30A94906147DFE3FA8C788274F33B058
E6FF0A3164B000CAAD8EAC5C25EF89B15F5CB1951741A0708953E8C806E7FB7B
6A53147B57BC529C9100D4E207FF508116F90429577F5F7C8E966BE6148C0389
56FDC687BD74BE3DB8B61BDC732603AA0C9CC93CBF48D29D1026BF287A44967D
6B8AC95404C3F61C77C1B892730F2CF825708D99A19086F6B8B6BD2BA84AB231
3A82B074EC6D65ED022C8D3621C9986E8015A00BDEF51970F89FB2B6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BE8C2F499A1AD3753691F4D1DAB520
BDD769B833BDC17A12D173B98F41A0273D94CE6865582C3B90F753CA10C8EEF6
6C9C9BCDC3835E48B5544834FD4823A663A8C0CF080F341E8F63D1C6CC7E7BDF
4F7C68F6D7DF7874C2A2FACF30102B5BA9ED87D62A3FD001B66CF29A982CDD8C
44DA0232B3158D86557D27B09A2C86EEDAFC9E3E61C19184FCE0817CAD46F407
BCB6C266E7E85F075C7D25F412331D09939A7B9613EECCCAC3C51B8482A59D01
A1E20F568F724FA1747E7B8AF3B0A7D73955AC96B054086B66E057236AE7B791
91D491C2E85261CA7BD66CFC9E02279C4E863D8B116A41B6AD7A749CC914D002
1403968B2D2E0B2CFA2F8A6EB76530A0B0E35A2E38843AA885937CF00AE66287
6ECA321F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM7
%!PS-AdobeFont-1.1: MSAM7 2.1
%%CreationDate: 1992 Oct 17 08:30:29
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
/FontBBox{0 -576 1569 1076}readonly def
/UniqueID 5032012 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50ECC186431EE52EE8453683AEC95E456840BE0C86B
C5F5FFF679BB62F2B28D7268A06205508769CDC9C37768A9FE109FF077CE0E17
9831D554030EAE0FCF724C4E634DB32DEC9DD3915E6EA7A11C524241C3AE0E64
D32B4199268E6EAA30BD2D896BF5D3271DCDE73EA7C5B891B83E2B6ECB37A624
27E45D2FAE5E2430B23A077C526652C149C0A74AFC47962A80F4D3CA1C27FDAA
C4D9E221DCDE6B7A521F1BC3EB69A04D8EAFF08B20503092DDB12F96197F4053
C3B3CF22AD6C5273505E627A6941022ADBB9A4C468B6E4A9EEE9A28499813AD1
536CF5BBE72A0D586F1E1CAEFC9E4E116AB4195F41D056D7407E121679F9AE3F
C1B389368FF1C276CCDABF3CAF54EEB15594E028A92DAA461CEE87D159A5EECE
4C664AFEFCCC72DFEE7D90E9C2B03A4490CFF4C3EEDFC69E0083D898B995D789
48C442FBFFC067A0936B7268123239A73860CA130F18846B2378689E48691C98
0F8110E70AB919F6133A70F964110D67CCC793AD7D0A8909771C20A06342FF94
98938263097E84B970E3197BCE3B659FD9F760C1F3A3D8036EC27B4C040DB93B
5E3C3B033438B0D982F027D524AA72C506FAF860B30A7DF5DF3D73B8E229666C
7B0A7B49D7E6D62C1F79743B266648777FFD457C93E40ADB929E04890CE5F7A3
C37DB82158B3868A62A63D903CB61F15D3F92F2323F2BFB06CCD9188E5BC70F4
2FB0E393984499418AFFE0663AAFD236FDE91DCD8A794DFD4CB9CEDB8A8CB0BD
FD4EDF4F2D323E028F0286A4232ACF9860BA7A2C6B3DBE825440257C1FB5255E
FF725BAC34321D324D4AF41F2DD9B607FEF56ADBEA273B2E7D48291148C547CD
E0D5F7031649BCD9E49D937C8DB80EEE749208377EDDCC86A819265045CF0E74
7ED1CA56C5B33D0CC3D07AE422DE10C3C0A437D8B823030FAC31CA50D81F53F0
61C6BE2D640310CDE07E1D94932E6AEA1000048D3C72517BE44CB2733896EC26
12A82290FB147C1A6F85D6CA12395B8B421A298B2BC0259602A92A308AA68C24
D19C90E3B0AA02BD249BDE5DEB850465C6A4BD0FEFD6BEC324087BE2C8F8E990
709D1047746A08E2DA7A049A4690866B8DE6457D646A69EC6FC5F3FDF4292DA9
F6AD030D915FEBCA82F56A569131FEF172BF0BD7936C6040986EE78DD26E0EED
E8E950E406AD3F41DF6D50A85307531C82D1BA2D91C94FF6F0AFBF3B5F005835
4D74F2D31D1841F9DC03818496B9F044636ADF06216D5E54033C697234E19725
35ABB01070394C7BD6864F735968C292125A9292B17C5326E291D732B55A922A
321B1B9E5EA0711E31218538783BD8BFF5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 35 /numbersign put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 90 /Z put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 94 /asciicircum put
dup 95 /underscore put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueID 5000831 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D1E
2931CE5F5D18C658602059F07BE66E6EFC9239D7AB2FB8A4CBD41675B8ECF279
650C29E53B14AC0E392A664848C1844B1CECBB2D5CFB72D0916B675C9A9A1E35
F12696A6F628473C604A95376468E06E295AD6F76CEB939D94113532050B9D5A
D2F41A9EFB9424D986612313B89EFE9C8A71313340B248F6853B1EDBF02B7F9E
F447220FE131D7D54CFB8AA1281DBAEA73E665BACB1F164552CC0CEDB63BD4B1
4A9AE8AC6FA02242DBE8DA46B64B6BFC11762F0784F216FC8B9120D688D1705A
438B14F5E5DEAF2A98408B3B64620DE3732A4DAE6D08D5D97E34C75DAE19EABD
BA0796165C1151BCBFB1DF8D29A63A8300DBDB9E3323CB82D0337598B83F4F2B
A97CF5196D4D1CEC1EDB8966E548C0D9C194C932319610FB43EA1B86322FE641
AB48770FF13BD475A7267E142388563D1A400419C585B22A9886074687BEDF74
D905BE8EE440BA2ABF28EAB673399B7F129B9729DD5564C681954621903B84BB
CAF89AC5ADB2932472DF29ADA2BDBDB4D05F65F28F5F4C529613D61858E0074A
082A852710A62A147C966F2B85B51B0BE85F11D2057C66FDD61F6C5755367980
9F4DE680601D4DA41B46F8D2148450000413C27AA39B586B74B977B25F0FD3C0
4BA1EBFAFDBEC531EA1210365091671CE3C86A6D4BC591C37DCC02570042575A
9D24252D6E01A8603753934D7EA5CAC1BE4E5AD2BA047DE8F3983B23A8A1511F
B08D373B69E5076CE4300137B8805EBCC0AAB89BBB312A77835795E3C069322D
42C893A30AD739E2BDD299679B158F7493764F2321E3965141B5ED1C6F4765ED
F46D391A646B30C90002B1C461AEE79E5F094CACCA656CEA3DB921CC5205F328
A2C69F817061D6C60B121EEE844CA5008F23DF08D66E248C339CE7776CCC524C
8CA2BD3DD82DB5E1B9D7E86A730CFF9C77B5830C46B0E38B61F943F4E839A560
26E534B7875A13842620B31FD0335ED4D40F8BE59AC92A7458106F7579215BED
DA3374B6E87E6D9C18E32378880D77F23859A2DC404708257A6A4A238C08BBC8
86E74DD678E646C8EFB56EB5A9DB54DFB34B79E5AFAA0BBE7CD37EEDA2C9FD91
40E0FC294DEE554AC399BB8E5100C3DB43CCB7C5AA8EC39B362768B238FA3DE8
8C3C4B97AF9145CA6DDDF3931177A9C123EEE716102B4E6DC7D1A035EBD66164
D344A51FE501C7993567919CD7245EB43D594F62CAF85D2B3AFAB1BA6D3F1554
1938E71F7F1709AC7FD5959684E452DFFFDE85E9A4AAB16923D0E596F4F94111
1953F9D36D4DB7E3261419BDE5147DF53B9969C030AC61C2CBC907C05F510440
A7A0A195BC606D775DFD22C1C67BE3634B051D60099E5E8249703A635B9064CA
98BD6CE5730AE91B01033F7AAB38B4A7F5B07EEB997A18E6B12FEA1175DFF6B1
6A1E89707E999EA54054D4D3249766A2C58B69F5D81249E217C1DB9901DE41D9
4D41742CCBE7B09F2F22B9A9FC2C2D772762FA8794E0FB723D6661B524D8B669
780EE6337CBA33CAFC307A6033AAAA3D1E31AB0C914F5E360C685C0B14077C7E
5B2346E4D3CEBD1A70D88556415C1D1B783912E0B083E31D85C499B48D7BC0A7
81D1D45C2CA16D790EA1BACBE673E7F6460512B83C0E0F793B5E72CA5D10F187
98D866A5E3BA638DE6A983C053511F3A7D124F5129BC7B51D4528232D978B6FD
B9759EA9BB1D37DE101BD313635CB7E3648B02AC70804E89CA8B6B24A091A73E
D878CFF700FC10E38E3FFEF6D26552A0155E98416DF9C8DFB1F960EED59A44AC
2FF608630888CA7A1447FAC41F0735C33A3079627F32E8DB46C27B2BB844080A
C04A42CADF3C6FB06B68700DCF6A81CB712C98737682AE799DC59C839BF7DC9E
ED3491A3F55790E416C3960FE2EE9DAD9620714A65DC2CD80193676439DFB771
3DB4B6CF55FF9A22282EC46D3ED3203162C0516E3CD90299048C82A476E8E1C0
0FD327FDE505F53FF9443CBF8B3CD3F319D94C1E8B857AE08E698BFD155C0E77
D320FEC5070CFA3F110E8EEDCAFE6FA24B60E4ECFD5714BA4DCE8C7FC68B376D
7CAFB9F8A232DC54A086288A124D728936DAA75C8ACF1DA1C237DE343574C55B
3328FE761009BBA6F9C8B116F2652B4FFE56AFF2A9BDF69D03E29275AF757CF4
E0E366113567F1E0353A49AC0036FECFF7703AEB4ED0F3D627657E5B2B86FE63
5543971CFFCA872C112A0C9254093448D927CED4FA31CE25957887D292BEC090
1A12490D3ACC22E3DF16AB2227A6734B142B462799EDB26112F4709C31E880DA
D651CE0827B859A1999B8A136D4649DBF7855A198B1FE9FFF3363147A9D9863B
32A7C6B905DDC0F8C14C3367AC41D31E4F2933FD2778DE187D5EE8A702EB6A81
8D45E775462022491A6189558107191A334D71EB8B05F0FA6607778A444424DD
23EED9FD30800417D79B871692761BBD8A24079EEF1F34BA6B4B86855CE7BB0D
5438481C26CDA0CDD56598F5A88AD699CEDDF04A5E55F0273E640034889DE54F
E69B102E0001E4BC64352145EB15E29500D9A3D15F262140BB61F90F77820681
7636F730E65A42B61751F3C0C6BFD98AC260AEF8B2AA65EC3B6612F3186AD68C
B9FFD69E71B2B2B55DE777F7343B730B1CD6F951B923909887991BE6A3F1085E
C891D94DD9F976774C2272E6517F1634151E334E03C5F29241EFB48236DD1CAE
603DC015A21B7EE1E7F1853AFF47E730E54F0AF52E34CC485BFDC0FE49C83ABD
694F6E49D72F1B1A8C483C83219B3075965850B44D31BF9D906DEB579DC9AC5D
3F88E7E94479E6F04297F1B3C4A087593ECFF46AB03E1C29CD0E99BCD3C56D45
B7AA7D0973494F527DC5F269DEB59174C8FAC4C31E253CE8D779A430656D277E
9D5D8075502F8DBA4B96D37CEBDE98F90BAAFF9793B321BC6359983F919F434E
6476D3CFA3617D3D695CE4973C43B7BAEDD5D985DE75EFE7D5A9578460E13414
0F3893847F5C642912B3AE2F852A06D67169E54E3FFA3112C18DB898E7FD2195
0A16A19484FFF86354CE5067A3D889B6484A73251FE757405BBCC45436C42AFE
FA0099C298DCFC626755790891B55BBF33BC88CDC4835811E0B5DA05B86CFF04
2B09286631029105B20C83219263F46989CFBA997F45AF9BF3909CA3046E03EE
EB33EADF8DD72654E1143CDCEAE4CA64194ED17F8080B85F0B1D21C383674BCD
F908E68FC9515CEF7A75C180A8650F2361B3374D60712774A1DAC4E199CC9DCE
D2067BF3B6A953BA4D00B064145EF3396268C739E8289274C5F4971A0B02A520
0C3A116CAEB7C2DAD3D3495B540E2E973D27313B28F718D085514F9606626810
AE32D88B421F4C0945CAC5652D5C4D3BA60C8E2A11793A2453084030B105A7C9
7568883054112471317CB90F5EDB3042386A4B9F74C54424EF3F9F6E72D2B0F4
AEFFF29A81CE49DA71F492021D94092B3EA264E9866AEFCC180E53AEE888D66F
EB84600B40F82CFBFF50C4A5A9CF35E7888369ABB84A26042E5E044C57F60D7A
F2CD02B3C0218E22872764E83F477EC686DC84FA2C557EEF3199095EB23ACFB5
2AF974A74DAD0FC3D1A33B2618D568E0D5123D3D656607D7ACB42AD165EE47CC
910CA3974D35AC993C9AE33E9FEEC1F337D3A794F03DC10FC53BB8B091D66505
E95C3B3A402DD52A6362250C1F7D6349079E09A8A4E7A429BC1EDDEFC1D6EC69
6A52E2A293A0FE5AC2F01BF53A53741780B7830541F6F2103501738B00872D28
2ED87DDC99C7AD44B9D02AE9916BCB57DB2B4EF52B7364CFAA6DD507256F381D
D4F27D3CBDE2A8E4D986811065E002A34EDFAB6DF2BC52CF0FC88BBF9B5141B9
DB8201FB7EBB237DFFAAA55C0CEFA4221985D745FCB66053E5C9A7B36004535B
5D5B0F289471717BA34821A2A1AFBB6643BFB2D33432C48894F0B59C11E2AED1
A64EB66CC76F1B93F1A8F65F0DB911E0EF01940D537224389B0E220A9119DC01
1C716014ED2AB753453AAB7592283EAAAF5B78F572F4BFEC47A40D53B0BF35EA
7EC8B1C952E7795C04018C0F79D5DB4AB49CA4D5DC498CE97275C708AEB1B1CA
DCD15A94062CB24B92BEDDDAEED8DFD0CE92CB7DE2393AD374B867E7E4BC3981
FDFB438895EE17117403D509C297BF9BC614EA21BFC9D67B4D3DF99402473402
0E976434C73664D118FB95AA5E093D92C1E7D98F3829298CEC2FB13FB29F93FE
FDADD39DF5419E902EE20553756D763B065213DB608B3D24775E91BA422BDD6F
687456B79E3D365B5EB712C7C40B51EF99644A1461B48FD880F15A25702C602E
F5C3327AABA67E8EEBC246A7E2D25677AE88136FC61B2BF8581EE960A14C5204
25358D436ABE08711FF7DEDFE571011AA8304E89E2702E634DAF3E748857CD1A
B6962E597919402455B5069E49EA4580A42993869FF017A6CB699A238CD6116F
9F24B31F6B4C52AC62F73E915344BF89D75E55DF24295F7B53FA6F5B8EB12B72
563FDB13A14B9CCBBBDEB481582DB9E7C79CC69C1D4DF71B6E1099C1EDA6D6D1
8678849869DDEC56DEB849A6344106748446BC2554E29722C6142C640F5DFEBB
C6E88EF3970970461B2C6A648EA05CEC2942FF4D46B683C8939920CA59DDA6A4
2CBE1DA279495434A3F6D70FA08C5693165AA1F512EF0AC16E02E1BE883F54ED
9FEA9B126DACCF51EAAB74EDC2904E5BC12E0EC5066B78E7FA243540013578B2
922F368BC83A1E7A4057A0B4DE6FC256B2C5820F11E7782D702DA57CB3789B4E
6D51072E5FCED43BB618265F25B117AB118E53DFF7438549E9A544DE3F496BDD
8558E733F0A1E1BB3298EAD09ABDB5EF829D892845DD0140EB8CF49C61919AFF
BD7F255ACCF5FD7B6E5EB1B00A7CAA9E43FC648034DFF8ADCE124AF3C6886A42
93BE6A27234030E883B684757019EC065CD4C7D52363E3B86635D3E70355BFAE
2D258F837D4E0850FE956E7084B713BD5B83F8D86C82E8763963C3F3A6D8F089
52F724EBCA52A44A3026B794B7672F6216D32539CB65A5CEA216E8063AB7E9DA
3BE053C753101970601B836624403CEEAA8A2591B866EB23507DDF049F7209FD
39B45B2A907ECA34F1978579B112C3C7E27679D500ED1CCF54CA937A63F38675
2B295508E4357514AEBBFEDB897997A4E764C0307E3DD2D63454546D12E033E1
08D7D9DB55C33CC047A2CCAA31770BA31A2DDE468BD45B87C5EA66C2AEA77F15
2E7DA26D14F0E13E7BC5BF644E81A54BA30B20FA3AA4D5D014D57350C582D9FB
71CB4A03AB86E25EF1BF5CB430C48B76FB4AB4DD695FE8F449C83ABCFD3C9054
7D8C480AF29E531F36D793CA9ADDF7A30DFC3A8C3E4A10F4B3DA9C1B3289F116
6F3FAD6077FBFC33B4C54A5CA9A8F56DE45FFDBD2CD34FEEA0C0000F1E626DCA
66AEBA1E8655FD970535700398353C113FBB63C1D00FCC70968EE07DC1BC5BB9
CA300A2D3D5694E19349CDE278A1A06391248A3615F9D8F9FBC1D9577CF72AD2
7CBDBAFA1B594AC9E3C50F6E8FC2F074C96BBAF735D31A94C9006DA5F6F8B4D3
6FE4FF5B4B26DD902C09EA9CE770150E96C617C3B210DCAE9435C209FE369B10
A66935BE19E9B52F4CA4B70411143B4953C2844C21FD50CB59B5FC9C863BCDDB
B5192ACE741E191007A444AC11C296C35E5A4846A8E45532DD8EB04A17E3C8AD
F0DF98DD0626A19DAF2DF6DBFA1D553725A1DB4755DD501A752B78B97083AA5A
E06F8364DC67E0111E171154708CAC492EC791DEE835F3EE3B06EA493B8AF17D
6675683344988F399078A5E919E51F8909136ECD518A313AB9878ED6D0BF1DB9
C4A90318D423D89453E638BE8F474BC4C7C18C5C4D576737DC098B766B2AE12B
F43E21D56D283BB3C7F76CAB41E69CA733E8C322FA3594B567C118E651AFF929
5FA5EF31A3182687BE1DAF6F9CDC8585F9D8F19E3920FF595EF0F2116445F142
24C988424A268709CC975AB610CD1A58097C3E15DB417A54CC4B8DD770823BFB
70CCA5E75521F93CF4821D3BA697FE72E0FF33577FF01A35565342E28EEB6141
3BEA5F361EDD46C66C1AE40CD5637CFEFDB978C66D4E0AF481C201BE56503062
7D411EDB2BC7199E4B46BF423FDC0C1CF81EA5B5AC2B623731B576FB74082F08
1E9350FC148DE0701FD4D018906942B95B7D1919530A76C6C7EDD44767F0B47D
48B1E0478E3CB9F9FE1E65CD62E43DADFB3AE4BE0EC61E2F011F138A9BC1B808
87859F3E2C961F08D56366A340915406A993791ED1605FC2DDF952257C027881
AC9CDE49EE9FC24DEA14793AC2D282E019B9ED9EBC94C4BADC46E07454B7A83A
6822FF7DC6F695C7DF082757C58E9662B839742DFF0CC8210DBCF8D2A25C5516
2E1BC4BBE27FF7A944B59B03A2A22E7E4EC405130064100F128D355AAEE2D8C4
410114638AF72DCA8DADCF1126891C04098FF720568B81EA09BAB70E015D8890
D19A429B8F89662671A5C8DCB4A8E6F3D444624069B0C8266FA50979FD06A061
2BD16504C13D3ED0B3BD5766B1D3581FA1A41505887ED79E0876E56048099C9D
7ACB61C1E86580EEC58994F2359C8C807D504C51BE105A5F52F17A55327CF7D5
7C49BE53CFDE872B268FAB1ADC893EAB9713F36BAECA48DBD2CA397F1DF5C64F
AD86895C968B4866E228EAA450CA699EA9D1BBBD25742B958C502202440AB3B3
09FAC8380399015BAF865E8B9BC53928300BB03E11CFC7979EE29225054455BE
7C0AA6569A4C336C4BFC5E2CC5352DFD6BA35C9FD2EE629F2F2FDEE07B3425A0
2794AE81FE06803E7077EE1024665F52F46962FE29BC33C3E4226218561D3F2C
DE523C3C5BBD7CDBB2434B736440077ADB90085D9C60827B4CC9606E73C717A4
E780C891AADF079ACA184D0CAAEC388D2616E548C4C28CE9AA66B9A199364C95
9C2C3F1A06EDDF5782EAE775EA94B4E1958311722B796AC27963D6D139F84C52
001EB2DA95395531033273A25A5CFC451A7EE1CE556845CFF3E8913386DE6CDB
68FDEBA49413518B3F8AF43F45820223B07C0D98457EBC81F975ACA39109F985
4169DBB7A2B348674ADAB2FE9BCC60733107C34296DC3EBDBB84846F1DEB7DB4
A42C32C7517E3B0DBD57FDB13116240E6132B9A39B3C2DA58FC73527BB0EE492
1EE2FC5FF562F869D72E45D0EB6B38E74960EF84FF81AA469E6DB788917F4B8D
B36B57E2232179AA9A700E7B76FB493DC95F3B6021631740495574DD1120E805
922DBEA04D1C29DA01830D37EFCE90BAE00F0EF71BDF0DF4DBD97F007DF48A28
02CA1F34E66639FD144EA2F36ABE4197E350672F5384EDC03759B0E5BDD949C4
76C822E082008FDEBD092C18C232BCD82B0236FA631DA5B3255F18454D756C9F
68A6F6C5AF5A091AF4FCF071456ED569372EA7518862B6D1962D9817897FF75F
6E9675235329478FC0F1D237FAC839D7D13F0686EB021E9CAFDE4EE3F09B993E
6629F43B2A1FEFEEAFD70F64D18063333911955B8B279216F3E9D4DAB6835AF5
89D78FFC0A20BD38BCB9FE437E96377F5C2CE1726906910AD81A8559D9E7EE17
A2403AFD50008B97466803005D3BE6599EB5FCEC097E067176DEBDC3468B6D82
3139390A8E566BF980667612141EA936C12D0885575AE7EFFE11181D6F07B8A5
8A234BA70994B5F4036480F6F029BB72960A606DA4DE0353C3F78ECEEDA7A10D
9891E209646B593162778FCC145D0CC514010B69987025C88D14A4891307845C
3ABD007FDE6EEA24CFFF4415EBA985D656504B547715CD265B160BDEDC991380
7E45B54C368C05D2AA074FA4972EA642F078413B8402D4CC4F76F96753AC5B12
8D1B3E6C346AB8D201D9C3F825360D604762BF56D554E5CF50D2F42269BE6FD6
D1E007AACD2CF1498328713C8FA45B1C793CBAA0442CBCA161F951CC5D91E2EF
65C71758E91BCC7182961445531F06C8E15919387989F428F2CD3E3C57E1266E
80C6054BC741747589885080B740B9E670745402E1F762D52477912D06629712
2C8ADE4DF06EBA2E4BE9A92A23CE54DA590F46740FFCB6FB8238C1026E44AE18
D55CD151112F9BBB01CFC113AD8577756E27BEBCEA0E1EFCCD87618CE5862812
B3B732A3B168045F46CCDC534B9B80102C0B4FAA59661EEEC1285244D3BEFA2E
0587FA922CE2FCC47D70AD9DEA60768ACEF19814008288087B61CF0543B6D7E9
F539ADE1481A1764AC9C226AF7FD1C491D9ED04FBE3DD73A38130FF7A9A49327
2C0DA2C74892677D0926F09839DFC7B31AC2152A407E005DB5BB47CEB44A2679
6B4DE1A7BCF39D9FDF5FB0E71B8FA2D6C14E8612D688357514E7837DBA7CE2B0
F605EE7FA56F77B632466BC95897A548218AEA20E7566703B0DCC6C7FC7FBC24
35393FD5E973249F783AC404E1B4FAAEA772E9E25D8F37CFA48DF2F79FF26910
C9EF04376830A5842E9B26419130D1E5C6AEA11B6020D41643C96A8208770EE0
2CDFC1E9C6CAE3F78F60CAD11AA2CADF6519DC5B4EA73908D3AE3A257934DEDE
CCC10B5BE00A71EF8F8EF00F566678C95C077BF2F592FFB028B34DF8F8A56BA9
F1CE7F9679FA7A6176EDCB1C823AAC9196A2D4EA9FC15A9DFB165C40FD65CF19
9D27F6C3577ADF3A9457A1AFB56B9E5D2C6A6CF6F6668C3B38B11C3D222563A5
B18B4BE37F1D45E2538E702256418E256F4BA4E858BF3A4DB94953474E35F4B0
1CD1F3FD7E56E4CDAC999489BC0E76112E0BA78EE8C15CCA5F2D3E02F739AC58
DA7D3146CC186C2F4E9434C3415D25E2FBCCA56E7151EA4AC4E706E2D805CAB5
CD4C54F2A3D97B0B26EA5DD7F0419C697CB7659460F1F4F52F8C86696D63C58C
9A9E4F241D4AD1A10586BDCD5B5B1E2E18A4946C24BDECD02589363075502EBE
2E60D3C34B94E14D4D327B2B0F652E37B24E61B8EDA1DA9CEF707BB0EEFC9CC3
4CBE22E407484F37AB795B8D31A141A2BB4DC565FF7D5D305E911E7429C24B1D
1BB330B3845C76F19C0DD5E66615A219C528DC56BBCE3441A6E64170F708EAD2
308473F4086B233F872CABE937599AFBB7DE59F91C64D7D19C810F07A22FCC94
79B544EEC519247805585902979C23DBBA665721049B9841B361B74F7CA40DD0
652F3B80688D766AA13B84E91BE80E169E2A428A0449E9BBE8E84F21B90C5071
91B86B93CCCFAD38C2DB1D2D72D7665D8AF273AF4CFDBCFC9EEDD666F36153C7
FEA24CB2B820D9D5501CC0C0D868D7321DE1B506B03179E06F56DFD78C66F860
473A7063175405E679A4581ACB81791EFCD6C750A0F1FECA01DC0A0B26ABD38D
E66F0DA83E1DC5F75D2F11BCDEE85DD1AC36D9C81A4335AE26C4207A9EF0D331
F61721E0C0CBB4F526779E504FA583AECA8F39CD310DED28EF65D0E612E26BC9
E64116EAF68332B3281DDF1495251E275F92C850FD2AC845B0EBF2A928240734
AB0D65EC8AE137F19A9DFE42087BA0D953E9939A8D2472FAE73503565750E727
71F266EC4A2712D3119A328B61393CD954BAF8895D8F3F435D353C715AA78350
47215EFEB9A4E868F3ADA631CFCFDFE8785DA9F06D0C5943B774209DEA6901A8
8F2E661E810C3649F8447847C5EC505357AC57F1763B7FFA595F8D03582C9BFF
1C9E19ACDFDAE2023D8F1C757BAE679B2F940C8B72D7BC9885A6131D6CEED0D7
A2639E84883D9B09D635E4361211E1BA66B19F6D3F337BBE932A303C4D922F85
21EC073890D4367A4ED0AA89C3238E5E63374DDEE5DBF5BB62C82E169929E388
BCAFDC3F7A328FF44D27C6A173071F453AF28623559BD9C9E1780D8EEBD1FC11
EBB7D5598FBB94BE8F55FB5393171CA3D6E9DD29AA2E819733C5017776DB9363
E9AD737EC84231AEB2C89946F70E208141C25F66911E656369D93EECFD4A5338
35FF877D126487E53A36E61B192F06712DF2CFE60ADFB907E820EE5137E33F91
76A01CE018AB15E99B9AB89C017094A9D2AF5528406E8C3570842EDF3EBD24CF
84F553D60F7987726C18EEA973593A9AE3137DABD4A5DCD2DEC41BC9B8123966
0BCEFB302959CEA4E8E5F387F57267F831FBC9542B706730D37B48B0F48D5936
52CC1E30D711AD684D13A285940868454D35BBD585A774CE2CA4AEAC98A8FEE0
69A6629633490E4FBFC298494134C70C8668093F46DEE6E61CD844A1B2BA7F2F
09856465495B0A5D6875BD6C22097F19DF520634196234EF9109FF49112905CE
832903F78553EBD8C1EF95CA6F4D3789DBDFF310D406B46ED3AD4F3A3BE35412
9B40D263FDF53E5E2884DAF84DE68F72997AE4199B689DC44873D513BB935864
91E6ED07A648746B76340AAED28B2BE839C13B0B727562AF0B2DE03E99969F39
C404E3E4E2B5E93D541561460A0A60CEEC5DB1058221889A9A2D9D8BC3CC674E
22FE93384B328B20F678B586728166A294E247AFF49D03CEE814C8B9FBEF4E98
BC24EBA62BE9A6305B857100979F93BE9A9B5750ADC77F9E5690C7B468D03CDE
BB2820AD9F3DB5D419B39C62322889E16D1637425BEE7F013B9183748F86CD5C
00F9EF6F552BBFDD1CCEB4292FB5033C2F732E0C36C0FE61860D2CFD7E758738
66931B8AC825E34E75850C57920DECF893853F5D4538F9F0737AD0DD761CEEB6
9D4C4D237F4B2167C9D0E95F17ED92CBEDACDCB396EECBB9E8D0889B52572DCA
9F5E7D298A4ACF96F3581F3CFD80F417AD9E70CE8D64FBDF63E0875E38A77CB5
3A4E3E6584105990F0CD3894DA2F2D48B4E8F8BE4EC59989C687B4942FEE9AC8
8AC0B1139E59B9BE55371B14BB23653CFABAB19A741503B0262035F1461F68E4
81D9791786A58D1B72B0ACEC45C736FDEE88BFB8F776F78C1462570EFE70CBC7
ECC05F60C27CBF97454B1429084071462340C231407F9AF023E6DB225B286272
7877CA12BBCFC84904D2C6259B1C1BD6A085C6659BE4B9F4BFB95476CFF8F1D8
D5FB319B6AD3A9F59387110CE42362F9B46F796DD0715A7D2C3BECAB8300F0CE
04561FAA681EE2A518120985318D1CC5DDD14EDD896FC6668902F438CD539A11
BF1E1C6ED732F24CA520B802612EABD91A1224AF451B4E28135F90B822AC8126
84769F284453227CB152871837285CAC12408131DA891D6DF491C6E1C6A85C60
492178D810933B32C7924A6B9DDBE7F6CB76B96D0EF66220D4846E4592945B3A
AFF2EF40802B93AE2E9957E6C15B3B2B8C8D3C66C6E8189954361D9689BC1996
67465204213D1A63801E4D86AB6FA011D1A24F23B816F8E9CEBEDD7AA9F91005
A587098F6E242EA4F814044BE5307F775E23BF2AB35BA52FC49BFE07A86F6989
EFFF04E006BC8643382EFF68C7242CC78563F9AA7B98C2044BB5E020E775A6B4
508589E3C9287144412465889D13E85E2609D904C219D1D1CD818289042E3999
3F131DAE5603D095BD6DC37044494E702B95082CABA03220B9157C8B9ABFB16C
47732D4BD80803E23702D1EE6601A375B5529110ED47159EE6A0863C9DA5434B
F46B1DA184C79AC6D1774AAF6F2A50B5D4ACA25F90441F20E6051CB2F2FE5E24
3F7F37F55E3CC5AE9E5A7E4504198C935F59DF206997BB82CB4AE3E755EF73D6
F330CC55ABF6894D57B09165AE14E3F26348F92ECDCD2AC680D884A57E6FE4B0
620675E489A0CC33BEFFD654AEE5E936D62EA14D9E8CFCD445E2D1B5641F6829
3749846DD541AC2BC986F658C7DE6A6C77E6ACE5CEFD0558E49324FE6F4ECEB4
53B87080B04CAF5C80B8DB8204557ADE543D47F60C3B2C78FEFF7C2A2ECCE0AE
3D576EF2B105FD734B5E91889821A325E579A97CEA46D407C3BEF6E5EC9EF805
E78823FB5B5D6DA8FCA64F15D5D48238417492E186CD57412CFB32725B7F583F
0342673566F7517879A195FB5D2C73D32E8E446B93C8484240FEE06629E07B73
36F2807C4CDF46B35635933E83FDC9D89FC0D93B128AC01DBF58A9DA6FF1F0CB
9D0401E753171DEF04B6936ECB022056A03A15625D475DE75F80FD064676E48D
327DA71270FF3B2CB95EE56D295BA4D45DB8D5D79896B86C73DD912D299736E7
70C9096802E10E0E67399CD44DF77A772E9A3F32E507613E565C02CDC85C7BFD
06D47B8DB1B1BC6D06009B7787A1A7FBFBE542AF738133A04A6D630D2CB8C830
D324C5A35C9BDACE47FEFB580114A64D5A84C57EC3433BBA8555F1CA6D3B5ED2
DA8F3AC5901D47E8F988096A9652E497A65864EC367C2F3F68173EF052EAD35E
76927E2787EA7FAFE1961A89F6AD6B19DE1BED559B0102EA50DBF08274C5CEE4
B1F5DB7E6A07365F1FEFF4F2F81F39E87A031E791FAFEF0CD562DB57EAE380C2
BA0AD041176A417C3546EE453CF5F741A7E62C85A52D084BA62830A3B67A9A61
48A661BFFEE870539D620BD231D8EC58A6FAC90377C521FE878066B85BF35CAD
E8BD08228059B85D51BEEAD572D6C83CB6ECB6A2D5D15CCCF6E448DABE787330
4EBEDBF9DB32E626FB1BB277A8752EC935D27DC76099868DEDB52187AF74F1EA
A6B945232102CDF1E43B30BF16C8ED513B645FB9E4262E83503E92C85AAF5AC3
F07D73C84810D3FF8F2A975E6D78FFF330576AEF286F2DE450E37FB767CD149B
F1F551F014ED6E692F4BA4215F7AEF7ACC9729DC26D5822818178CED0754DD24
3BF407AA5385A2D67619F3612F1E93CDE06D8C96D7BEFF0B921558BFD366E67C
F4FC1769334E086525A70C3F2ED56A139388A692A103D42746DEEDF42EFFC03A
9092658E5B6D8D9D41A30B61F350ABD68F9DBF40C40E566BCFC47B13F5B1CC47
FA7EC8294812A06EB188EE5C7765696C066E403E79AD5DEEA3124E286C7987A1
A0D8FEC7701689659E73D6F38690149C8FDF087E5C902DC59315781A38179248
1825619C6CA17B82DF3F589B41A997B4CA49828A8D7DC38DBC18C1D185F3A768
BB9BC9BFF6319E9D4663E64606BD96BEEC494B74345557E48960F6363A048EC9
3F369579836437F45CE1A3A4E24528187C8E33952C34F1128E665278C8279828
AEBB0506A43B5948564CCB59BD1213007C60C50F7E1561F37A26AFFDCDE07A35
BDC90EF159E2A7EF61239B172450121D7138B9176E0E221B7E6D609145D82089
CECCA4200D3239E5CA13CCBCCCBF71D82B98C921826F767C4AD08754CCC2FF47
A7E6D30994129FBA6C243EAED3812AEE5E321459FAB2B93C23E058B55E60EB13
C03F9A22FBD75CC37F8759C8891C279DE9A7D6B6A22932A588716CF94E79A8F5
B02C347F315EDBF423AE08EABC469AF8384FF6BFAD029B40621A34E6ED28522D
FC2E105B5872FA4664C15BDDB75984190ED73F63CF8503422B25B54CD37D5453
5B75CFB2EB6FF763517473D2B52EAFC12BB5AF2CBF69101179C298A6A860D9C8
1E53F1F164A59E5F12D0C8F35C2455241524A3FDA118C8CB09A59CE424279048
1601DE72F2E8D1B8676912315F4B3932E5B82B89AF0F75CDDF57E370AAAD01DE
C67EEFB9456CA3F31D8F26F82716A57FE03648BB1DAFBA08CBCA60F2471D611D
96C052B77B1D57231F818BFDAC887E6E8FEBB1D59C43B30CFAEBF92D33B9941C
EC56CE89416DC9F87FBA9FB1F42A42A294C0018473D520F6B0F514756BC498CB
74724645CCD50D27D8BAFA96D356AC31D23414DE0C7157A62480B8F4C611CBFD
D7C3EE5876FAF454B65986542B8EE7BB380CD7470C081EBEBEB9C86A5D32F844
EBF48752CAA654A619D953F91331887C9EF08E4C93E95133866E44BBB51A4DEA
AD0E9AE418CB2B6233EFC215F4F7AC61F5C3E651C751B47232747B4395514841
129D6424BF4364FC865B805D6BEC73126BE7B44DC15E6BDFC793885B7033002F
DD9F4CB985699EC8DACAAD256821641BEF7C38DF758EABB8677E719557F63CF5
FD5EB9FB3981B729E020216AEAAE79F3C5048E087A756856DD47FAF4A09C6445
5E922023E61CDE1B86C8C9E4080F41C4B820D459C402BEBACF54BF25B8BFD17D
8D5154BC20ED7291735638B72DC73F5CCCE38634842627A48DD5534C65FEDBB1
51DD0662B7CF70183BDF1BBB6928FFFBB4B79F222F765C84B9DB128E7EBC1ED5
6DFA4145C136C0476EC16A272B342DAF7455936F6E4CC14643B8BC9FA73D810F
93D9FDF7067447F065F90F9483816F04B833137459DB0863F18C48011B2A674B
811BFDB7102A4C3BF6070D9426833DE33C3F9AE3749C503E8B7804FA2BC0F6C2
588394AD82757967A22D5FA2AE09329376380427F9B50817FA92FDCD63CE66AD
C7B21EE5419216E432E6A42AE66D7F53F591E8C619F65DC32CD099242C13EE9F
88391003EAAA94AD4EB90B5BAFE9D58C00FEF76163970F18E15418368C02FD5F
6FD7D43DE457482F57499E5F4A17EEC0599ACFBAA0E33A1382ED9AD19331D6E3
742190920C0CF452AA2DDC24EBF51A2F5C131AA37B2706DD7FE882014C657AE2
83B77D2D95C4535639451EB3E43247C977AD9E2347290B1011243B8EB5BE4E0A
B3FDF41D32460B22CC303B0F579EF69705972EC5E150140B0438012A5F217C72
34993F088BB137F3D4702A455ABD0566E513C5BA185650538F4E542478F1836F
F4134B8CEBCB50BCF62DE1B1CB81A85658406877A6798DD1940707BEDF95843E
0D6A8D78D4F99638381EE732B0DCBD6842B12C339BEFFF3FF23BEBF0065D62B8
386942A7396F2510E742AD8C317F36B56A36CF5E7E78220A8ADD352CD23461B4
7DC2FBEE47F6B81840364E6F31EFCB831D369D7AC90144044C3026F17B41C8AC
9828D8978B58942D873F8F6DC789DB66B05559F3B4EFCC83F5767AEF2423BC66
755C662C2900335711390C71CC0C678083FFE31957E009800126FC2E5B5EF717
0F9C151A2F451351A706E073DAEA1E0038D10325538BE9093550622D1D38099E
2976622F28444511E3300F3DDE123FC3300C843869572A811C1B67698679FA2A
E21FEC0825459333010701A63E2C67B927319683206D188F41A01BDEEB919C92
9A76F81FC4D1F588AC118C0CD47FDC7E3C574CA3E7F0B66DE817B38F6F0DBE4A
790D3C59591BBE5436387D654136F087DF5A40AF0C5EE6206529F17624017540
153C8666B55CDBD15A26660E2818DA11E623FA23B7C25BDA50909F96F003CAF5
AF960DA115FE313F93360646AD0AE21EF873DF9A40F80D320922C35B77FB84A0
919A89A7D1E707CC32B1A350964053E0FFBA1AEFA322BDB7B4B529CCB5EC711E
6187053653A724FCC5267F51AE5C69D06250CC480CA96AC4976B7C263D2C5C27
EF82C9B2782232A7FB0CAD666012AC53966B37D3100FCF233D15362F542DB846
2FC62F4FF6BEC7C680778ED04327A0190E30B6B25AD623E29B9DCC69B4289A4B
D255E3021C5D74E1C65C852E0841434E3EF4C0E3D8387A108DFCCD83714C09CB
185B01CC9DAE8C57DAF276E9698E3F3F866AF3B0A1B7604F30DA217DA95998C3
55C45AFE4040767692CEACCF4DE96F5CD5590785B47DC3AD5B7EA33689C2A1C7
FA993AD80E665931679496C4F792D0A802F6A5E2370727421FEDECC661FD8291
1CC3169B630F615DB6717DB2FA10958E8CAB1B822952D833C357A7278FC10AC5
5F05F8DC536FCCDFA9F2389E3BF8180E731C6C7953621DEC21631AF0E0A9FCBE
F8B4B5D18352B783493545BE209C5408E0BEF8849F427FA2FDA92F9659E18C68
3EF4D48C0CD1566FFE2E89129085E17CF73A5DD6373D7082DC43321E48F2024B
F685FECEAE964C2A0E05BA8420470D8BC06B689B838F286C4F265F94956BCFD4
31857D47848F0E76B5A0FE745463CF134FE72BB44B053B66CC11EB8195921B36
39EE2F3DEB4255242680398CC78ACE9935FEA403112F8270AF57458B2C6E6D05
950B22504AAFA6CFD4B2143561E2C5E81A9684D88517716FBAA26926EC65B891
358DC0A2704C0A918F8104C3309CFA12840F8783AEFFBB35C6FCA590C31AAE64
6DE589D56548AEEA51075D3AD4C2D2DD3B7D32DF5088527B3CD39FF172380057
6193D5A458117C2F6760746DB59B2D96D29DE408606124291C04E11730A4984A
01EE324FC8976B1498A17AC4DD27425D02911E4908BDF21BFFD990629E8EDD1F
D5F8DDD3DF377DE9895B461C119EC81EF2B307A1A0E0A44B3DCC085ABD59173C
7F00BD516FC302382D04F0B113A14B484849F966BA8A4EBD1AF14F39195CA15C
E4A5B6BA4BF4C008E4828642DFB45DACDC5FAD92E38058453B4CDAAAE2A2C958
D0E9D3E0544F3E67
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 10 /Omega put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB0342893C0BBC0A879
B7220832FB50103F72F8B5D9AC07708DB8EEF4D4DD64B26607F7709A06DAD652
EE45B91A5C948F6669E096DA43FB8F69CBE0BB547363573B8CECD3547B09089A
122F4B40FBF8C8D10EF1EE915FC1A0DC4FF513DD142742657413F5CA41A20311
568F00ECD53D198E85EDB04DFE819AD23F2905A986707B6152A8F11444A54BF6
A3947FB6E14B1E1784B74CD7568E16815A50DD66EE350D507376D384E13A1071
670BB6E1BD33C533F0A38C3A1D02454B92CCE836AB91D35A3DCB6F4CE9B00613
1E4647006202A05064AF5C26BEF6477845C08AD2791981D2C88FAA39B761FF62
A429086709CABCF3B97C0C219521D4141EC8342CB3628363F76A50EEF67802C9
146EAF879DB1A266089709DC0CC3C0912973B55DD5630D634C558272A38E2A1B
3AC4DE4CA6922F995C8BF7452DB285953C1D85B269997E9D568E68F84C92A845
6768661F56DCF206E0F210973A71C8CEF328BE6C2BD69A61
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302531886DDA73EBC9178917EFD0C20B
133F1E59A96CCE77DD2377C743046EEF2A8D0CD09C6191F4752EDC959FBF4442
D681C98FCC499BD1EC5B489A1EE151FDEC267D9919558FB025850740FC02D670
E76A2765AC8E4D15749D085C2C088F2A1145FD41150B3201F8FDE3977923FC92
E422DD1D4A2D8CF2D9B7EA537CC5D472842C36987968434EF5BE5C820EADA040
82CCD992468CB8DDD05AACF9DBF476F35E96F651DF9A01291E46E85F0E18F0CF
89461FE8C45C00F78A7541F460E704E05351AD72C24613C5C5B8D08AAE153F79
6E8C44B4485EF8BBF1C258DB26
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
dup 33 /arrowright put
dup 106 /bar put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D2841804B020B210C0470066F33B37E2
05805CEE785427E371A39CDDF238665E5A17E68F1CEF240657F07B44BC0EF3AB
6E141B294DFDBD8D10BDDE0F7812CA3B6FC0E943EFAA439D403A61DCD08D71DB
E24B7DBC6B5781450F88BCE03BA3310B2B6CCBD30AAFDD28AA697BC5C8A1AA87
AD71F9863F160CC7C747DDFC00AF175F9D5C999B8BBE65DFF8DBFD0C15167CD5
AA3131E8C5B3DD0BB0499C256A66807DF7E846D042EBA35F27169D0C4B47FEC1
64F1B8A0F5CF1AAC2C25E1CFD7CA0612BC39325B2A3873C4E24A41A5BE84FFB3
00A5AFF3FCE2B62D58859AAE9B36252013F9D49D4043B832AF3423D30C988B25
5C68BB8EF8DCFC24AF0A865DBD28C74FAE3EA174BD6FDE7F88DE7916C517BFB9
38D5D1C189FEA7B423790207E6B62FF35DCFBEEEC20E600A863509A73861FA42
55FFF1656A842FE1A05CCEF851DFED119726EB68A4EF59C677B05CA2447AFD66
62D9F3CBD25E89B319ABC62B7214C1BC66EAC7468635B6619D78A46F74B2FF14
52064DDCC6BDB9FE4D73DEC0A958E1C21DAEA999B8E2CC6E2CDD8C0B65B3939D
169C7A6264826564F3B97F606661A7C39409FF7F08325917C9C3CDA73C784D8B
8F756E24A923909C476F001933727018FF693E40BE1BD9735A6ED7333B00852D
D59809C1017EC22D59F7AEA78FE1EC21B847B4BABCA5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 10 /Omega put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7CDAD2416819
11B86BC0CFA2D1D39AED3522A3EE050EF79A53C12FCC6D41C77A68835A78B89D
D3242ED1316F2F75F436AC6FDE2C273A7D28149CBAE6648B81124DB647ADF950
940157470CF902FF9E08A27EFC4DD019D487618FFCACE8C94B4B153D419CFAF6
37E31335262F1F37698DB0ACA8EA311657229B7260B0BEC96AC6A46A10DA6378
F299823EF343E0D24CAD1260A1C1F90A09913F598118EFF53562C1FFC48A7478
3377780E050370C3F8FBF9E1B23071ACC69BE136BC51FB51CD838E51BCA6C367
59B4ABDAC914ADDC72BE9AC623CA604EF7A9D77CBECCAEDC29273210E607DFCE
6461756453CD3BDF08BD8579ACF3DF1B890E8AAC16E594312E10692765741EA6
1C0D55CB9DA5A01139C77A5CE7547B3E2CC6172069E6158FA4B9896FB53EC45C
B11091471F36893603ADC39173C6743A1B22476B27ACBA4131C206134439F197
EA2A2F646C391D33F606768FF4681E4DA557CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.1: CMSS9 1.0
%%CreationDate: 1991 Aug 20 17:34:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-63 -250 1027 760}readonly def
/UniqueID 5000802 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BDCEEA888D07B439DBD4E8B4C9
D198C0387612A3C669D6A672BF4726B90213C2EC063317A043B6447FEC896BD0
598D0AA1DDB874B7D72F3E89529FFB544C16C41F04AB6972093A91C201589D61
A8FE417702E200FC26E47359B881D02F7CB42A5B21F90424F82FEFEEC5ED59F6
C48895523098D73036537A54639526839F785D7157E08DDBCD96AEF023667FC0
1921070EA097CAAAE9E4E9D5D21DB9363555AD932858E23A534F7DA9F2F0E79E
9D46C0D5EDC452179B6A328A52412F2FC548B03A056663DCE243A441EADC0D63
8FF6D19EEC71606A368EC3EF1DB8FA9117DB6169ED3BD792D9AB2811378E50A8
535232683CFB2C5E0F3C350CD294AF9804B7B88FC848D962819940AC88247756
BD1EDE31C397076351447974F91BA99BF34081C1A6C65879C36934E1494108BF
FA61B57E3A8154D7CBB6AC9B671700FE227AECF9160145957A2E629C3931CA4D
42147A6CA42FE5E0947DD2EEEB0A640EF9C73800A59F0F0B6B75C3C9C863ADED
9627DEBC218141FA414913611061B3EBB46AA393CDB074A40492FDEAD1207838
A13CA709C2CDE567B9688DC5D4D622ACD752A7D6DE3F79002ACDA6AE41EEC084
BB1D3C962725E1AB05922698C598FEAB0D02ACFD97CD8BAD811193660043AEEE
659C18DADD0E614A401FA0F0A485AD4A47DB73FDB3D2B294145FFBCCB994FD2E
68B4ECB3364B377FF6243ED93921F3B3DFDAC3CE9CB3E2B23115BD45FF1F6734
70DDC37F712D78543A8A8A561DAF3303DD8F3742EB700043207D04A782D94952
1E57EC7E5858AA91F07524F2EF2A129D38CAF8698126B8981537CD4DC45AB99E
EE571322DA22745F552675C785D0A8898ADEDD5DA7388C11DF0FF5A3754E25E6
833AD6E242E15B6641E11FB80665FA8C73398DD821B5498EBB9CC956CC7D23EE
8E115D9D913B22869B3DE96B8BAD7E12CCAF351A787785B0FFAA474E78B3CFE1
EB391A1663B17870F1F1518181A3953EA5702B71636D985ECD509DF584593265
BDF094C78EA7B2D13577E0A2609E0765DB7E8B9B5FE495A686AEE1981A2C0ADE
36DF1350052ED2EFCBC86F380C921EE246685C6392F4CF054446E26C93EEAE53
413B0F00E73FE12955CCCCB30050C4536F04578A9F02A85082451382B7259746
DE4C5907971902EA96B01251840C4256E4D757415BFA3D64D60E058D75770B9D
C839D38A729E37C37CB18CB6031601FAED9768BE518AAB6FC7C3E91602CA001D
360E029C8A8F2CC1E96348083D2C42FBBE4179E63AF0291B1E511F94DABF00BA
A57DB1B4A6396FADC4437B8A1AC376165448CBF0659B6C1268B3579BDD0E6C9B
B4342914634E3DFAB6A6C42A931107368E0FCDAD9E07B4E93FD0CFB9248DB378
C59E986639A8A582474295C737E12EF1C0BACD210BA5CC4CEE1612DD9174471A
305262D185F03CAE7D2CECD3C46210D8162D8A7ED4A0D100B3B4873B00D30817
A11991499D6E1B3BE25CC3D3B7B9481BAE435158C54DCC75114EBF1D55BE0066
735A2A6159BBE1362067841A6E89FAB17E9E87FDAF6A173D49A9F3A0A677191A
425195F9F555B0C0EA0C98436F3C8964A814969FA8A79F8AF81DC9795F6756E8
1133AC8E9C60B072062CF6AF0131C9EDFAE97189321FDDD9A2B93CAA12EA0499
DEA81CF7EF21A0D334E6A6DFD0A42478B95E71029617DBC8D69A3B4599E843DE
D0B8110B72BC806DF1754271474983127DC4E13C0C25422882777A91425B093E
79E95821F3D69EC0E7297D7173F32B7814B257A36EBC78E5A875518616575D6D
36E51F8E7997D37B1716CB4B730A417495E097D4B398745915A9061F18B6E68C
EC366703A5B2D5EDE03E777CB3294779A55E77096B8C75AE0A88B7C620AFDEDA
C1AF51BBAE4A32C19743D71C4B1275470472C0F743068D0EC93C75FE057307D5
0E351A986A99902EF468F91D90ED5E3698E4CFDD826884C74E6E956A313C7589
09943FDEB78A00CAB9F7B131AEFFCBC9273A4872A8622F9EA57585B2820BEEFB
9CDD50A0FA020F63A15BFFFE30C3FBF1619EB043B0AF58793D327A08C7146684
5A6C65655C3340E2B23EBA86FCCB32A8666ED4F5E7B86B3267A0933FD7E34D5A
CE16AF660EE68FCF4EA3AFAD79E7BF188529E3D4CC1397697A2F015FC4ECC7A0
837721617E7AC12D03EE111A0F9C93F9F1CFDBFED88BC9CEBBC92F455B42CCD4
9D428483B6DC0CA41C9085CA162F80F2C229917BC37C305A1A71F76F97648044
B9AF7D0D603D48C88E9B9BA58A9F52FF6BEA173AFC8A4DE670D2757960F33D3F
59266CFABA99A5258045441B251234BD62EFDC6BF0965A356994EE0EF1EFDFD1
8B8ABAAC03826CA67DE720269954E9B876936A156CA983A742DFFE9D9BE9E17D
1896779C51E08B23C20EBD1AD11F64B5FC9B3267900894151BBC0E3AED364182
C8B3CF22C907118645AED8F7C5CEF895C713FFB270F7267347D4A42E9CA2A5CB
813F6611B9507DAEBEA0BB6CE6E53ECC242BA73C9710EAC4FD78870E5DE4B97F
E4D8BBA69EC4A80CE9CF46FBFA6B79E8E939180FB921DBC80385F840B8319BB7
DE283339EB4BA69701E625FC844820C25435BF33776F1225054972D58746176A
B6979D4CC2149E2F09E48C3C289DBD1BB00CEFD43BD285580B3F3735127A6FF5
8DAA83838013E9136C8B324576A97FFDFB159B40838B098E69FFFF965A6FBF77
C8E82C97CFA895B85B729FB00575EF4BDB225C0D1F38E429BD62436F1D4E3200
3E09B8A89FC4AC381D2BBD2D93AE3F5BFE46ED754ADB3289A2A86C4E34749E0A
7A54B192A6C3B4F62D8594B39959555A76C94E47258999408B06CAB2D3976A8C
018B1643DCD10A47DC958BD47863EEC1668C8194CF5AC47CBA011DE61E334205
FE6A8CB459973E3A2927201BFA8D3D62BE410D4BDBB33F6D7903C2DCBBA7CD05
A4AA971DDB565BF860192B19BEA617
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (metaOCamlVersion.dvi)
@start /Fa 129[31 6[31 1[31 31 31 31 1[31 31 31 31 31
31 31 31 31 31 31 31 31 31 31 31 11[31 2[31 1[31 8[31
3[31 1[31 6[31 10[31 31 31 45[{}32 58.1154 /CMTT8 rf
/Fb 105[33 28[29 1[44 29 33 18 26 26 33 33 33 33 48 18
29 1[18 33 33 18 29 33 29 33 33 8[41 55 41 1[37 33 41
1[41 48 44 55 37 1[29 22 48 48 41 41 48 44 41 41 6[22
33 33 33 33 33 33 33 33 33 33 1[17 22 17 2[22 22 22 52
38[{ TeXBase1Encoding ReEncodeFont }63 66.4176 /Times-Italic
rf /Fc 71[22 15[22 16[66 33 27[29 33 33 48 33 33 18 26
22 33 33 33 33 52 18 33 18 18 33 33 22 29 33 29 33 29
3[22 1[22 41 48 48 63 48 48 41 37 44 1[37 48 48 59 41
48 26 22 48 48 37 41 48 44 44 48 1[29 4[18 33 33 33 33
33 33 33 33 33 33 18 17 22 17 2[22 22 22 36[37 2[{
 TeXBase1Encoding ReEncodeFont }77 66.4176 /Times-Roman
rf /Fd 206[25 49[{ TeXBase1Encoding ReEncodeFont }1 49.8132
/Times-Roman rf /Fe 129[35 35 35 35 35 35 35 35 35 35
35 35 35 1[35 35 35 35 35 2[35 35 35 35 35 35 35 35 35
35 35 8[35 3[35 2[35 9[35 1[35 35 35 2[35 35 35 35 35
1[35 2[35 35 35 35 35 35 35 35 35 35 35 35 35 35 2[35
37[{}57 66.4176 /CMTT8 rf /Ff 145[38 110[{}1 49.8132
/CMMI6 rf /Fg 205[30 30 49[{}2 49.8132 /CMR6 rf /Fh 223[77
32[{}1 74.7198 /MSAM10 rf /Fi 222[77 33[{}1 74.7198 /CMSY9
rf /Fj 223[66 32[{}1 58.1154 /MSAM7 rf /Fk 134[21 2[21
21 12 16 2[21 1[21 32 12 6[18 1[18 1[18 97[{
 TeXBase1Encoding ReEncodeFont }12 41.511 /Times-Roman
rf /Fl 129[39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39 39
39 39 39 39 39 3[39 1[39 39 39 1[39 39 39 39 39 2[39
39 1[39 39 1[39 39 39 2[39 39 39 39 39 39 1[39 1[39 39
39 39 39 39 1[39 39 39 39 39 39 39 39 1[39 1[39 39 34[{}77
74.7198 /CMTT9 rf /Fm 133[33 37 1[54 37 42 25 29 33 1[42
37 42 62 21 42 25 21 42 37 25 33 42 33 42 37 9[75 54
1[50 42 54 1[46 58 1[71 50 58 2[58 58 46 50 54 54 50
54 8[37 37 37 37 37 37 37 37 2[19 25 19 44[{
 TeXBase1Encoding ReEncodeFont }53 74.7198 /Times-Bold
rf /Fn 245[66 10[{}1 90.9091 /CMR10 rf /Fo 240[35 15[{}1
66.4176 /CMSY8 rf /Fp 149[20 72[66 19[66 13[{}3 58.1154
/CMSY7 rf /Fq 134[29 1[42 29 29 16 23 19 29 29 29 29
45 16 29 1[16 29 29 19 26 29 26 29 26 3[19 1[19 36 5[36
32 39 1[32 1[42 52 3[19 5[39 1[42 6[16 4[29 2[29 29 29
16 15 1[15 1[29 19 19 19 2[29 33[32 2[{ TeXBase1Encoding ReEncodeFont }
49 58.1154 /Times-Roman rf /Fr 133[29 33 33 50 33 37
21 29 29 37 37 37 37 54 21 33 1[21 37 37 21 33 37 33
37 37 9[62 2[42 37 46 1[46 1[50 62 42 6[46 1[50 46 46
1[37 17[25 5[25 36[37 2[{ TeXBase1Encoding ReEncodeFont }41
74.7198 /Times-Italic rf /Fs 245[55 10[{}1 74.7198 /CMR9
rf /Ft 135[35 2[40 1[29 26 1[40 7[40 2[34 40 34 1[37
32[51 17[21 46[{}12 74.7198 /CMSS9 rf /Fu 104[75 37 1[33
33 24[33 37 37 54 37 37 21 29 25 37 37 37 37 58 21 37
21 21 37 37 25 33 37 33 37 33 3[25 1[25 2[54 71 54 54
46 42 50 54 42 54 54 66 46 54 1[25 54 54 42 46 54 50
50 54 1[33 3[21 21 37 37 37 37 37 37 37 37 37 37 21 19
25 19 2[25 25 25 5[25 29[42 42 2[{ TeXBase1Encoding ReEncodeFont }78
74.7198 /Times-Roman rf /Fv 141[30 4[71 3[25 46 2[41
46 2[41 12[56 51 83[{ TeXBase1Encoding ReEncodeFont }9
91.3242 /Times-Roman rf /Fw 134[33 33 1[33 37 22 26 29
1[37 33 37 4[18 37 1[22 29 2[37 33 10[48 2[37 48 1[41
12[48 44 48 14[33 8[22 22 40[{ TeXBase1Encoding ReEncodeFont }26
66.4176 /Times-Bold rf /Fx 134[46 46 66 46 51 30 36 41
1[51 46 51 76 25 51 1[25 51 46 30 41 51 41 51 46 12[61
51 66 4[86 61 2[36 3[61 1[66 61 66 8[46 46 46 46 46 46
46 46 2[23 30 45[{ TeXBase1Encoding ReEncodeFont }43
91.3242 /Times-Bold rf /Fy 134[75 1[108 2[50 58 2[83
1[83 124 42 2[42 83 75 1[66 3[75 12[100 83 2[91 21[50
58[{ TeXBase1Encoding ReEncodeFont }17 149.44 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black Black Black 1066
161 a Fy(Playing)36 b(with)g(T)-11 b(ype)37 b(Systems:)729
269 y Fx(A)-5 b(utomated)22 b(assistance)f(in)i(the)f(design)g(of)h(pr)
n(ogramming)e(languages)1796 344 y Fw(Re)o(vision)d(2)1729
643 y Fv(T)m(im)23 b(Sheard)1566 767 y Fu(Portland)c(State)f(Uni)n(v)o
(ersity)1646 867 y Ft(shea)n(rd@cs.p)r(dx.edu)p Black
-150 1346 a Fx(Abstract)-150 1462 y Fu(W)-6 b(e)14 b(introduce)h(the)g
(programming)h(language)g Fs(\012)p Fu(me)o(ga,)f(and)g(illustrate)f
(ho)n(w)-150 1545 y(it)25 b(can)h(be)g(used)h(as)f(a)f(general)i
(purpose)g(meta-language.)g Fs(\012)p Fu(me)o(ga)f(has)g(a)-150
1628 y(sophisticated)31 b(type)g(system)g(b)o(uilt)f(on)h(top)g(of)g
(Generalized)g(Algebraic)-150 1712 y(Datatypes)h(and)f(an)h(e)o
(xtensible)f(kind)h(system.)f(It)g(allo)n(ws)g(users)g(to)g(en-)-150
1795 y(code)c(object-le)n(v)o(el)g(types)g(in)f(the)g(meta-le)n(v)o(el)
h(data)f(structures)h(that)f(rep-)-150 1878 y(resent)c(object-le)n(v)o
(el)h(terms.)e(W)-6 b(e)22 b(sho)n(w)g Fs(\012)p Fu(me)o(ga)h(can)g(be)
f(used)h(to)f(e)o(xplore)-150 1961 y(language)h(designs)g(interacti)n
(v)o(ely)-5 b(,)22 b(by)g(constructing)h(both)f(static)g(and)g(dy-)-150
2044 y(namic)d(semantics)h(as)f Fs(\012)p Fu(me)o(ga)g(programs.)h
(These)f(programs)h(can)f(be)h(seen)-150 2127 y(as)25
b(partially)h(check)o(ed)h(proofs)f(of)f(soundness)i(of)f(the)f(system)
h(under)g(e)o(x-)-150 2210 y(ploration.)i(As)g(a)g(lar)o(ge)g(e)o
(xample)h(we)f(present)g(a)g(ne)n(w)h(type)f(system)g(for)-150
2293 y(MetaML,)19 b(that)g(is)f(simpler)h(than)g(pre)n(vious)i(type)e
(systems.)-150 2486 y Fx(1.)91 b(Intr)n(oduction.)-150
2602 y Fu(It)26 b(has)h(become)h(common)g(practice)f(when)h(designing)g
(a)f(ne)n(w)g(language)-150 2685 y(to)d(create)h(both)g(a)f(static)g
(semantics)h(\(type)g(system\))f(and)i(a)e(dynamic)h(se-)-150
2768 y(mantics)18 b(and)h(to)e(pro)o(v)o(e)i(the)f(soundness)h(of)f
(the)g(type)g(system)g(with)g(respect)-150 2851 y(to)27
b(the)f(dynamic)i(semantics.)f(This)g(process)g(is)g(often)g(e)o
(xploratory)-5 b(.)27 b(The)-150 2934 y(designer)e(has)g(an)g(idea,)f
(the)g(approach)i(is)e(analyzed,)i(and)f(hopefully)g(the)-150
3017 y(consequences)i(of)d(the)g(approach)h(are)g(quickly)g(disco)o(v)o
(ered.)f(Automated)-150 3100 y(aid)19 b(in)g(this)f(process)i(w)o(ould)
g(be)f(a)g(great)g(boon.)-50 3183 y(The)e(ultimate)h(goal)g(of)g(this)g
(e)o(xploratory)h(process)g(is)e(a)h(type)g(system,)g(a)-150
3266 y(semantics,)f(and)h(a)f(proof.)g(The)g(proof)g(witnesses)g(the)g
(f)o(act)g(that)g Fr(well-typed)-150 3349 y(pr)m(o)o(gr)o(ams)23
b(do)g(not)g(go)g(wr)m(ong)f Fu([17)q(])g(for)g(the)g(language)i(under)
f(considera-)-150 3432 y(tion.)h(Approaches)i(include)e(a)h(subject)f
(reduction)h(proof)g(in)f(the)g(style)g(of)-150 3515
y(Wright)j(and)i(Felleisen[43])f(on)g(a)g(small)f(step)h(semantics,)g
(or)g(by)h(using)-150 3598 y(denotational)22 b(approaches.)g(In)e
(either)h(case,)f(proofs)i(require)f(an)f(amazing)-150
3681 y(amount)26 b(of)g(detail)f(and)h(are)f(most)h(often)f(carried)h
(out)f(by)h(hand,)g(and)g(are)-150 3764 y(thus)f(subject)h(to)e(all)h
(the)g(foils)f(of)h(human)h(endea)o(v)o(ors.)f(It)g(has)g(long)g(been)
-150 3847 y(a)g(personal)h(goal)g(of)f(the)g(author)h(to)e(de)n(v)o
(elop)j(a)e(generic)h(meta-language)-150 3930 y(that)31
b(could)g(be)g(used)g(for)g(e)o(xploring)h(the)e(static)h(and)g
(dynamic)h(seman-)-150 4013 y(tics)e(for)h(ne)n(w)f
(object-languages[21)s(,)g(28)q(])g(that)h(could)g(aid)g(in)f(the)h
(gen-)-150 4096 y(eration)26 b(of)f(such)h(proofs.)g(Man)o(y)g(others)g
(ha)o(v)o(e)f(had)h(similar)f(desires)h(and)-150 4179
y(the)h(de)n(v)o(elopment)h(of)f(systems)g(lik)o(e)g(T)-6
b(welf[23])26 b(and)i(Coq[41)q(])e(attest)g(to)-150 4262
y(the)e(broad)g(appeal)g(of)g(these)f(ideas.)h(But,)f(while)g(the)g
(author)i(o)n(wes)f(much)-150 4345 y(to)29 b(these)g(systems)g(for)g
(inspiration,)g(he)g(has)g(al)o(w)o(ays)h(desired)f(a)g(system)-150
4428 y(whose)g(use)g(w)o(as)g(closer)g(in)g(style)f(to)h(the)g(use)g
(of)f(a)h(programming)h(lan-)-150 4511 y(guage)g(than)g(e)o(xisting)f
(systems.)g(Hence)h(the)f(de)n(v)o(elopment)i(of)e(the)g(lan-)p
Black Black Black -150 4944 a Fq(Permission)19 b(to)h(mak)o(e)f
(digital)h(or)f(hard)h(copies)e(of)i(all)f(or)g(part)h(of)f(this)g(w)o
(ork)h(for)g(personal)f(or)-150 5010 y(classroom)d(use)f(is)h(granted)h
(without)f(fee)g(pro)o(vided)h(that)g(copies)e(are)h(not)h(made)f(or)g
(distrib)o(uted)-150 5077 y(for)e(pro\002t)g(or)g(commercial)g(adv)o
(antage)e(and)h(that)h(copies)f(bear)g(this)g(notice)h(and)f(the)g
(full)h(citation)-150 5143 y(on)i(the)g(\002rst)g(page.)f(T)-5
b(o)16 b(cop)o(y)h(otherwise,)e(to)h(republish,)g(to)g(post)g(on)g
(serv)o(ers)g(or)g(to)g(redistrib)o(ute)-150 5210 y(to)f(lists,)e
(requires)i(prior)h(speci\002c)e(permission)g(and/or)h(a)g(fee.)-150
5359 y(Cop)o(yright)120 5357 y(c)100 5359 y Fp(\015)29
b Fq(A)n(CM)13 b([to)j(be)e(supplied].)9 b(.)g(.)g($5.00.)p
Black Black Black 2042 1346 a Fu(guage)22 b Fs(\012)p
Fu(me)o(ga.)f(This)g(paper)g(reports)h(on)f(our)g(e)o(xperience)h
(using)g(the)f(lan-)2042 1429 y(guage)h Fs(\012)p Fu(me)o(ga[29)q(,)e
(30)q(,)g(31)q(,)g(32])h(as)f(just)h(such)g(a)g(meta-language.)h(In)e
(this)2042 1512 y(paper)f(we)g(sho)n(w)h(that:)p Black
2085 1658 a Fo(\017)p Black 2150 1665 a Fu(Much)28 b(of)f(the)f(w)o
(ork)i(of)f(e)o(xploring)h(the)f(nuances)h(of)f(a)f(type)i(system)2150
1748 y(for)17 b(a)g(ne)n(w)h(language)h(can)f(be)g(assisted)f(by)h
(using)g(mechanized)h(tools)f(\226)2150 1831 y(a)i(generic)i
(meta-language.)g(W)-6 b(e)20 b(call)g(this)g(e)o(xploration)i(playing)
f(with)2150 1914 y(type)e(systems.)p Black 2085 2007
a Fo(\017)p Black 2150 2014 a Fu(Such)25 b(tools)g(need)i(not)e(be)h
(much)g(more)f(complicated)h(than)g(your)g(f)o(a-)2150
2097 y(v)o(orite)j(functional)i(language)g(\(Hask)o(ell\),)f(and)g(are)
g(thus)g(within)g(the)2150 2180 y(reach)f(most)f(language)j
(researchers.)e(After)f(all)g(playing)h(should)h(be)2150
2263 y(child')l(s)19 b(w)o(ork.)p Black 2085 2355 a Fo(\017)p
Black 2150 2362 a Fu(The)24 b(automation)i(helps)f(language)h
(designers)g(visualize)f(the)f(conse-)2150 2445 y(quences)j(of)e(their)
g(design)i(choices)f(quickly)-5 b(,)26 b(and)g(thus)g(helps)g(speed)
2150 2528 y(the)19 b(design)g(process.)p Black 2085 2621
a Fo(\017)p Black 2150 2628 a Fu(The)g(artif)o(acts)g(created)g(by)h
(this)f(e)o(xploration,)h(while)f(not)g(quite)g(proofs)2150
2711 y(in)26 b(the)g(full)f(sense,)i(are)f(check)o(ed)h(by)g(machine,)g
(and)f(are)g(hence)h(less)2150 2794 y(subject)k(to)f(error)h(than)g
(pencil)g(and)h(paper)f(proofs)h(constructed)g(by)2150
2877 y(hand.)2141 3030 y(In)23 b(addition)f(to)h(the)f(broad)h(goals)g
(about)f(meta-language)i(design,)f(the)2042 3113 y(author)32
b(has)h(also)f(de)n(v)o(oted)g(much)h(ener)o(gy)g(to)e(searching)i(for)
f(a)g(simple)2042 3196 y(ele)o(gant)26 b(type)g(system)h(for)f(a)g
(multi-stage)g(language)h(such)g(as)f(MetaML.)2042 3279
y(Such)17 b(a)g(system)h(should)g(not)f(thro)n(w)h(a)o(w)o(ay)f(too)h
(man)o(y)f(good)i(programs[18)r(,)2042 3362 y(40)q(,)c(36)q(])g(\(thus)
i(losing)f(much)h(of)f(its)f(usefulness\))i(or)f(be)h(o)o(v)o(erly)f
(comple)o(x[3)r(,)2042 3445 y(37)q(,)26 b(35].)g(After)h(man)o(y)g
(attempts,)f(the)h(search)h(has)f(been)g(fruitful.)f(Thus,)2042
3528 y(this)e(paper)i(has)f(tw)o(o)g(purposes.)g(First,)f(it)g
(demonstrates)h(the)g(ef)n(\002cac)o(y)g(of)2042 3611
y(the)c(language)h Fs(\012)p Fu(me)o(ga)g(as)f(a)f(\002rst)g(step)h(to)
n(w)o(ards)h(the)f(design)h(of)f(a)f(general)2042 3694
y(purpose)i(meta-language.)h(Second,)e(it)g(illustrates)g(that)g(a)g
(simple)g(ele)o(gant)2042 3777 y(type)26 b(system)f(for)h(a)f
(multi-stage)g(language)i(is)e(possible.)h(The)f(approach)2042
3860 y(is)h(so)g(general,)h(that)f(we)h(belie)n(v)o(e)f(it)g(can)h(be)g
(applied)g(to)f(an)o(y)h(multistage)2042 3943 y(language,)j(and)h(as)e
(such)h(is)g(of)f(wide)h(spread)g(interest)f(to)h(the)f(program)2042
4026 y(generation)20 b(community)-5 b(.)2141 4109 y(The)23
b(paper)f(is)g(di)n(vided)i(into)e(three)g(parts.)g(First,)f(in)h
(Section)g(2)g(we)g(in-)2042 4192 y(troduce)h(the)f(language)i
Fs(\012)p Fu(me)o(ga.)f(Second,)f(in)g(Section)h(3)f(we)g(discuss)h
(the)2042 4275 y(multi-staged)15 b(language)i(MetaML,)f(and)g(e)o
(xplain)f(why)h(it)e(is)h(so)h(hard)g(to)f(de-)2042 4358
y(v)o(elop)j(a)g(sound)h(type)f(system)h(for)e(a)h(staged)h(language.)g
(In)e(this)h(section)g(we)2042 4441 y(pro)o(vide)26 b(se)n(v)o(eral)g
(small)g(programs)g(that)g(illustrate)f(the)h(multiple)f(causes)2042
4524 y(of)h(soundness)i(errors)f(in)f(a)g(staged)h(language.)h(Third,)d
(in)i(Section)f(4)g(we)2042 4607 y(play)21 b(with)g(type)h(systems.)f
(In)g(this)g(section)h(we)f(introduce)h(our)g(static)e(and)2042
4690 y(dynamic)28 b(semantics)f(for)g(a)g(multi-stage)g(language)i(as)e
(an)g Fs(\012)p Fu(me)o(ga)h(pro-)2042 4773 y(gram.)d(W)-6
b(e)24 b(demonstrate)i(that)e(the)h(ability)g(to)g(e)o(xplore)g(issues)
g(is)g(greatly)2042 4856 y(enhanced)g(by)f(the)g(machine)g(assistance)h
(supplied)f(by)g Fs(\012)p Fu(me)o(ga,)g(and)g(that)2042
4939 y(the)19 b(artif)o(acts)f(produced)j(consist)e(of)g(machine)h
(check)o(ed)h(proofs.)2042 5147 y Fx(2.)91 b(The)22 b
Fn(\012)p Fx(mega)44 b(meta-pr)n(ogramming)21 b(language.)2042
5264 y Fu(Hask)o(ell)34 b(mak)o(es)g(a)f(f)o(air)h(meta-language.)h
(Its)e(support)h(for)f(abstraction)2042 5347 y(and)j(\002rst)f(class)h
(functions)g(mak)o(e)h(it)e(an)h(e)o(xcellent)g(tool)g(for)f
(de\002ning)2042 5430 y(object-language)26 b(programs)f(as)f(Hask)o
(ell)g(data,)g(and)h(for)e(de\002ning)i(meta-)p Black
Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black Black -150 66 a Fu(language)37
b(manipulations)f(as)f(Hask)o(ell)g(functions.)h(Unfortunately)-5
b(,)36 b(its)-150 149 y(type)15 b(system)g(is)f(too)h(weak)g(to)g(be)f
(a)h(true)g(generic)g(meta-programming)h(sys-)-150 232
y(tem.)21 b(In)g(particular)h(Hask)o(ell)f(lacks)h(the)g(f)o(acilities)
e(to)i(de\002ne)f(and)i(enforce)-150 315 y(type-systems)31
b(for)f(object-language)i(programs)f(represented)g(as)f(meta-)-150
399 y(language)h(data.)e(T)-6 b(o)28 b(o)o(v)o(ercome)j(this)d
(de\002cienc)o(y)i(we)f(ha)o(v)o(e)g(de\002ned)h(the)-150
482 y(language)20 b Fs(\012)p Fu(me)o(ga.)p Black -106
627 a Fo(\017)p Black -42 634 a Fs(\012)p Fu(me)o(ga)72
b(is)36 b(based)h(on)f(Hask)o(ell)h(so)f(that)g(it)f(is)h(easy)g(for)g
(Hask)o(ell)-42 717 y(programmers)20 b(to)f(learn.)p
Black -106 810 a Fo(\017)p Black -42 817 a Fu(W)-6 b(e)27
b(started)g(by)h(adding)g(some)g(features)g(and)g(remo)o(ving)g
(others.)f(T)-6 b(o)-42 900 y(mak)o(e)17 b(our)f(\002rst)e(attempt)i
(simple)g(we)g(ha)o(v)o(e)g(remo)o(v)o(ed)g(the)g(class)g(system)-42
983 y(of)g(Hask)o(ell,)g(and)h(made)f Fs(\012)p Fu(me)o(ga)33
b(strict)15 b(b)o(ut)h(pure.)g(W)-6 b(e)16 b(ha)o(v)o(e)g(tried)g(hard)
-42 1066 y(to)25 b(k)o(eep)i(all)e(the)g(other)h(features)g(of)f(Hask)o
(ell)h(not)g(af)n(fected)g(by)g(these)-42 1149 y(choices)20
b(intact.)p Black -106 1242 a Fo(\017)p Black -42 1249
a Fu(W)-6 b(e)29 b(added)h(small)f(\(backw)o(ard)h(compatible\))g
(features)f(that)g(support)-42 1332 y(programs)20 b(that)f(use)g(a)g
(form)g(of)g(re\002nement)g(or)g(dependent)i(types.)e(W)-6
b(e)-42 1415 y(tried)30 b(hard)i(not)f(to)f(disturb)h(the)g(functional)
g(programming)i(style)d(\226)-42 1498 y(in)g(particular)h(the)f(phase)h
(distinction)g(between)g(v)n(alues)g(and)g(types.)-42
1581 y(The)h(features)g(we)f(added)i(are)f(Generalized)h(Algebraic)f
(Datatypes)-42 1664 y(\(GADTs\))18 b(and)i(an)f(e)o(xtensible)g(kind)h
(system.)p Black -106 1756 a Fo(\017)p Black -42 1763
a Fu(W)-6 b(e)16 b(b)o(uilt)g(a)h(non-tri)n(vial)g(implementation)h
(and)f(ha)o(v)o(e)g(programmed)i(up)-42 1846 y(a)g(wide)g(array)g(of)g
(e)o(xamples)h(from)e(the)h(literature.)-150 2007 y Fm(2.1)75
b(Generalized)19 b(Algebraic)g(Datatypes)-150 2124 y
Fu(The)39 b(k)o(e)o(y)h(to)g(this)f(style)g(of)g(programming)i(is)e
(the)g(use)h(of)f(General-)-150 2207 y(ized)30 b(Algebraic)g(Datatypes)
h(\(GADTs\),)d(a)i(generalization)h(of)f(the)g(nor)o(-)-150
2290 y(mal)c(Algebraic)g(Datatypes)g(\(ADT\))f(a)o(v)n(ailable)g(in)h
(functional)g(program-)-150 2373 y(ming)32 b(languages)g(such)g(as)g
(Hask)o(ell,)f(ML,)g(and)g(O'Caml.)g(Implement-)-150
2456 y(ing)25 b(GADTs)f(in)g(a)h(functional)g(language)h(requires)f
(only)g(a)g(small,)f(back-)-150 2539 y(w)o(ard)36 b(compatible,)h
(change)g(to)e(the)h(ADT)g(notion)g(and)h(is)e(easily)h(un-)-150
2622 y(derstood)h(by)f(functional)g(programmers.)g(A)g(language)h(with)
e(GADTs)-150 2705 y(can)43 b(support)h(se)n(v)o(eral)f(closely)h
(related)e(concepts)i(such)g(Re\002nement)-150 2788 y(T)-6
b(ypes[11)q(,)29 b(46)q(,)g(8],)g(Guarded)h(Recursi)n(v)o(e)h(Datatype)
e(Constructors[44)r(],)-150 2871 y(Inducti)n(v)o(e)21
b(F)o(amilies[7)o(,)f(10],)f(First-class)g(phantom)i(types[5)q(],)e
(Silly)g(T)-6 b(ype)-150 2954 y(F)o(amilies[1],)44 b(and)h(Equality)g
(Quali\002ed)g(T)-6 b(ypes[29)q(,)44 b(32)q(].)g(There)h(are)-150
3037 y(man)o(y)30 b(e)o(xamples)g(of)f(the)g(usefulness)h(of)g(such)f
(concepts)i(in)e(the)g(recent)-150 3120 y(literature[2,)18
b(4)q(,)g(12)q(,)g(20)q(,)g(24)q(,)g(26)q(,)g(45)q(].)-50
3203 y(ADTs)25 b(generalize)i(other)f(forms)h(of)f(structuring)g(data)h
(such)g(as)f(enu-)-150 3286 y(merations,)15 b(records,)f(and)h(tagged)h
(v)n(ariants.)e(F)o(or)g(e)o(xample,)h(in)f Fs(\012)p
Fu(me)o(ga)30 b(\(and)-150 3369 y(in)19 b(Hask)o(ell\))g(we)g(write:)p
Black Black -111 3522 a Fl(--)40 b(An)g(enumeration)h(type)-150
3605 y(data)f(Major)h(=)e(CompScience)j(|)d(English)i(|)e(Chemistry)
-150 3771 y(type)h(Number)h(=)e(Int)-150 3854 y(type)h(Title)h(=)e
(String)-111 3937 y(--)h(A)f(record)i(structure)-150
4020 y(data)f(Class)h(=)e(MakeClass)i(Number)g(Title)-150
4186 y(--)f(A)f(tagged)i(Variant)-150 4269 y(data)f(Person)h(=)e
(Teacher)i([Class])80 b(|)40 b(Student)g(Major)-50 4422
y Fu(W)-6 b(e)24 b(assume)i(the)g(reader)f(has)h(a)f(certain)g(f)o
(amiliarity)g(with)g(ADTs.)f(In)-150 4505 y(particular)35
b(that)g(v)n(alues)g(of)g(ADTs)f(are)h(constructed)h(by)g
Fr(constructor)o(s)-150 4588 y Fu(and)24 b(that)f(the)o(y)g(are)g(tak)o
(en)h(apart)f(by)h(the)f(use)g(of)g Fr(pattern)h(matc)o(hing)p
Fu(.)f(T)-6 b(w)o(o)-150 4671 y(v)n(aluable)21 b(features)f(of)h(ADTS)e
(are)h(their)f(ability)h(to)g(be)h Fr(par)o(ameterized)g(by)-150
4754 y(a)27 b(type)h Fu(and)g(to)f(be)h Fr(r)m(ecur)o(sive)p
Fu(.)g(A)f(simple)h(e)o(xample)g(that)f(emplo)o(ys)i(both)-150
4837 y(these)19 b(features)g(is:)p Black Black -150 4967
a Fl(data)40 b(Tree)g(a)-32 5050 y(=)f(Fork)h(\(Tree)h(a\))e(\(Tree)i
(a\))-32 5133 y(|)e(Node)h(a)-32 5216 y(|)f(Tip)-150
5347 y Fu(This)29 b(declaration)i(de\002nes)f(the)g(polymorphic)h
Fl(Tree)g Fu(type)f(constructor)l(.)-150 5430 y(Example)j(tree)f(types)
h(include)g Fl(\(Tree)40 b(Int\))33 b Fu(and)g Fl(\(Tree)40
b(Bool\))p Fu(.)33 b(In)p Black Black 2042 66 a(f)o(act)28
b(the)h(type)g(constructor)g Fl(Tree)g Fu(can)g(be)g(applied)g(to)f(an)
o(y)h(type)g(what-)2042 149 y(soe)n(v)o(er)l(.)21 b(Note)g(ho)n(w)g
(the)g(constructor)h(functions)g(\()p Fl(Fork)p Fu(,)f
Fl(Node)p Fu(\))g(and)h(con-)2042 232 y(stants)d(\()p
Fl(Tip)p Fu(\))g(are)g(gi)n(v)o(en)g(polymorphic)i(types.)2042
375 y Fl(Fork)40 b(::)g(forall)g(a)g(.)f(Tree)h(a)g(->)f(Tree)i(a)e(->)
h(Tree)g(a)p 3572 388 236 4 v 2042 459 a(Node)g(::)g(forall)g(a)g(.)f
(a)h(->)f(Tree)h(a)p 2983 472 V 2042 542 a(Tip)g(::)f(forall)i(a)e(.)h
(Tree)g(a)p 2748 555 V 2141 685 a Fu(When)18 b(we)f(de\002ne)g(a)h
(parameterized)g(algebraic)f(datatype,)h(the)g(syntac-)2042
768 y(tic)25 b(formation)i(rules)f(of)g(the)g Fl(data)g
Fu(declaration)h(enforce)g(the)f(follo)n(wing)2042 851
y(restriction:)16 b(The)h(range)h(of)f(e)n(v)o(ery)h(constructor)g
(function,)f(and)h(the)f(type)g(of)2042 934 y(e)n(v)o(ery)25
b(constructor)g(constant)g(must)f(be)g(a)g(polymorphic)i(instance)f(of)
f(the)2042 1017 y(ne)n(w)k(type)g(constructor)g(being)g(de\002ned.)g
(Notice)g(ho)n(w)g(the)f(constructors)2042 1100 y(for)17
b Fl(Tree)h Fu(all)f(ha)o(v)o(e)g(range)h(\()p Fl(Tree)40
b Fr(a)p Fu(\))18 b(with)f(a)g(polymorphic)i(type)f(v)n(ariable)2042
1183 y Fr(a)p Fu(.)30 b(W)-6 b(e)30 b(can)h(remo)o(v)o(e)h(this)e
(restriction)g Fr(semantically)h Fu(by)h(strengthening)2042
1266 y(the)19 b(type)h(system)g(of)g(the)g(language.)g(The)g
(restriction)f(is)g Fr(syntactically)h Fu(re-)2042 1349
y(mo)o(v)o(ed)g(by)h(the)e(follo)n(wing)i(mechanism.)f(In)g(a)g
Fl(data)g Fu(declaration,)g(Rather)2042 1432 y(than)27
b(supplying)h(the)f(type)g(ar)o(guments)h(to)e(the)h(type)g(being)h
(de\002ned,)f(the)2042 1515 y(user)f(supplys)h(an)f(e)o(xplicit)g(kind)
g(declaration;)h(and)g(rather)e(than)i(lea)o(ving)2042
1598 y(the)17 b(range)g(of)g(the)f(constructor)i(functions)f(implicit,)
f(the)h(user)g(replaces)g(the)2042 1681 y(enumeration)j(of)f(the)g
(constructors)h(and)g(the)f(type)g(of)g(their)g(domains)g(with)2042
1764 y(a)e(full)g(e)o(xplicit)h(typing)g(of)g(each)g(constructor)l(.)g
(The)g(only)g(restriction)f(being)2042 1847 y(that)h(the)g(range)h
(must)f(be)h(some)f(instance)h(of)f(the)h(type)f(being)h(de\002ned.)g
(F)o(or)2042 1930 y(e)o(xample)25 b(we)g(could)g(de\002ne)g(the)f
Fl(Tree)i Fu(type)f(as)f(follo)n(ws)h(using)g(the)g(ne)n(w)2042
2013 y(syntax.)p Black Black 2042 2138 a Fl(data)40 b(Tree::)80
b(*0)39 b(~>)h(*0)g(where)2120 2221 y(Fork::)h(Tree)f(a)f(->)h(Tree)g
(a)g(->)f(Tree)i(a)2120 2304 y(Node::)g(a)e(->)h(Tree)g(a)2120
2387 y(Tip::)h(Tree)f(a)2042 2512 y Fu(It)29 b(is)g(not)g(necessary)i
(to)e(use)h(the)f(ne)n(w)h(syntax,)g(since)g Fl(Tree)g
Fu(meets)f(the)2042 2595 y(restriction.)17 b(As)g(we)g(will)f(see)i
(belo)n(w)-5 b(,)17 b(there)h(e)o(xist)f(man)o(y)h(useful)f(types)h
(that)2042 2678 y(do)k(not.)f(Remo)o(ving)i(the)f(restriction)f
(requires)h(ne)n(w)g(type)g(checking)h(rules)2042 2761
y(that)g(are)f(be)o(yond)j(the)e(scope)h(of)f(this)f(paper)m(,)i(b)o
(ut)e(which)i(ha)o(v)o(e)f(been)h(well)2042 2844 y(studied[13)q(,)19
b(44,)g(5].)2042 2995 y Fm(2.2)75 b(Repr)o(esenting)18
b(Object-Pr)o(ograms)h(with)f(T)-6 b(ypes)19 b(as)g(Data)2042
3111 y Fu(This)31 b(simple)h(e)o(xtension)h(allo)n(ws)f(us)g(to)g(b)o
(uild)g(datatypes)h(representing)2042 3194 y(object-programs,)d(whose)f
(meta-le)n(v)o(el)g(types)g(encode)h(the)f(object-le)n(v)o(el)2042
3277 y(types)22 b(of)g(the)g(programs)h(represented.)g(A)f(v)o(ery)g
(simple)g(object-language)2042 3360 y(e)o(xample)d(with)g(types)g(is:)p
Black Black 2042 3502 a Fl(data)40 b(Term)g(::)g(*0)f(~>)h(*0)g(where)
2120 3585 y(Const)h(::)e(a)h(->)f(Term)i(a)2120 3668
y(Pair)f(::)g(Term)g(a)g(->)f(Term)h(b)g(->)g(Term)g(\(a,b\))2120
3751 y(App)g(::)g(Term\(a)g(->)g(b\))g(->)f(Term)i(a)e(->)h(Term)g(b)
2141 3893 y Fu(Abo)o(v)o(e)24 b(we)e(introduced)j(the)d(ne)n(w)h(type)h
(constructor)f Fl(Term)p Fu(,)g(which)g(is)2042 3976
y(a)17 b(representation)h(of)f(a)g(simple)g(object-language)i(of)f
(constants)g(and)f(pairs.)2042 4059 y Fl(Term)28 b Fu(is)e(a)h(type)h
(constructor)l(.)g(It)e(must)h(be)h(applied)g(to)f(another)h(type)f(to)
2042 4142 y(create)k(a)h(v)n(alid)g(ne)n(w)g(type)g(of)g(kind)g
Fl(*0)g Fu(\(star)o(-zero\).)e(W)-6 b(e)31 b(say)h Fl(Term)g
Fu(is)2042 4225 y(classi\002ed)25 b(by)h(the)g(kind)g
Fl(*0)40 b(~>)f(*0)p Fu(.)26 b(The)f(kind)i Fl(*0)e Fu(classi\002es)h
(all)f(types)2042 4308 y(that)k(classify)h(computable)h(v)n(alues.)f(F)
o(or)f(more)h(on)g(kinds,)g(see)g(Section)2042 4391 y(2.3.)18
b(No)h(restriction)g(is)f(placed)i(on)f(the)g(types)h(of)f(the)g
(constructors)g(e)o(xcept)2042 4474 y(that)i(the)h(range)g(of)f(each)h
(constructor)g(must)g(be)g(a)f(fully)g(applied)h(instance)2042
4557 y(of)g(the)f(type)i(being)f(de\002ned,)h(and)f(that)g(the)g(type)g
(of)g(the)g(constructor)g(as)g(a)2042 4640 y(whole)i(must)h(be)f
(classi\002ed)h(by)f Fl(*0)p Fu(.)h(Note)f(ho)n(w)h(the)f(range)h(of)f
Fl(Pair)h Fu(is)f(a)2042 4723 y(non-tri)n(vial)19 b(instance)h(of)f
Fl(Term)p Fu(.)2141 4806 y(As)e(promised,)h Fl(Term)p
Fu(s)g(are)f(a)g(typed)g(object-language)i(representation,)2042
4889 y(i.e.)h(a)h(data)h(structure)f(that)g(represents)h(terms)f(in)h
(some)f(object-language.)2042 4973 y(The)k(meta-le)n(v)o(el)g(type)g
(of)g(the)g(representation)h(\()p Fl(Term)40 b(a)p Fu(\),)25
b(indicates)g(the)2042 5056 y(type)k(of)h(the)f(object-le)n(v)o(el)h
(term)f(\()p Fl(a)p Fu(\).)f(This)h(is)g(made)h(possible)g(only)g(by)
2042 5139 y(the)25 b(\003e)o(xibility)f(of)h(the)g(GADT)f(mechanism.)i
(Using)f(typed)h(object-le)n(v)o(el)2042 5222 y(terms,)e(it)h(is)g
(impossible)g(to)g(construct)h(ill-typed)f(term)g(representations,)2042
5305 y(because)20 b(the)f(meta-language)h(type)g(system)f(enforces)h
(this)e(constraint.)p Black Black 2042 5430 a Fl(ex1)40
b(::)f(Term)i(Int)p Black Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black Black -150 66 a Fl(ex1)40
b(=)f(App)h(\(App)g(\(Const)h(\(+\)\))f(\(Const)h(3\)\))f(\(Const)g
(5\))-150 232 y(ex2)g(::)g(Term)g(\(Int,String\))-150
315 y(ex2)g(=)f(Pair)i(ex1)e(\(Const)i("z"\))-150 447
y Fu(Attempting)15 b(to)f(construct)i(an)f(ill-typed)f(object)h(term,)f
(lik)o(e)h Fl(\(App)40 b(\(Const)-150 530 y(3\))g(\(Const)g(5\)\))p
Fu(,)19 b(causes)h(a)f(meta-le)n(v)o(el)g(\()p Fs(\012)p
Fu(me)o(ga\))g(type)h(error)l(.)-50 613 y(Another)27
b(adv)n(antage)i(of)d(using)i(GADTs)e(rather)h(than)g(ADTs)f(is)g(that)
-150 696 y(it)d(is)g(no)n(w)h(possible)g(to)f(construct)h(a)g
(tagless[21)q(,)f(39,)g(38)q(])g(interpreter)h(di-)-150
779 y(rectly)-5 b(.)27 b(An)h(interpreter)g(is)f(a)h(function)g(that)g
(tak)o(es)g(a)g(term)f(to)h(the)g(v)n(alue)-150 863 y(which)23
b(is)g(the)g(meaning)i(of)e(that)g(term.)f(In)h(a)g(language)i(without)
e(GADTs)-150 946 y(terms)31 b(are)f(untyped,)i(and)g(v)n(alues)f(are)g
(some)g(uni)n(v)o(ersal)h(v)n(alue)f(domain)-150 1029
y(lik)o(e:)77 b Fl(data)40 b(V)f(=)h(IntV)g(Int)g(|)f(PairV)i(V)e(V)g
(|)h(FunV)g(\(V)g(->)f(V\))p Fu(,)-150 1112 y(and)28
b(the)f(interpeter)h(is)e(said)i(to)f(be)g(tagged,)h(since)g(each)g(v)n
(alue)g(must)f(be)-150 1195 y(tagged)d(with)e(one)h(of)g(the)f
(constructors)i(of)e(the)h(uni)n(v)o(ersal)g(domain)h(\(such)-150
1278 y(as)17 b Fl(IntV)p Fu(,)h Fl(PairV)p Fu(,)g(or)g
Fl(FunV)p Fu(\).)f(See)g([20)q(])g(for)g(a)h(detailed)g(discussion)g
(of)g(this)-150 1361 y(phenomena.)i(But)e(using)h(GADTs)f(none)h(of)g
(this)f(is)g(necessary)-5 b(.)19 b(Consider:)p Black
Black -150 1517 a Fl(eval)40 b(::)g(Term)g(a)f(->)h(a)-150
1600 y(eval)g(\(Const)h(x\))e(=)h(x)-150 1683 y(eval)g(\(App)g(f)g(x\))
f(=)h(eval)g(f)f(\(eval)i(x\))-150 1766 y(eval)f(\(Pair)h(x)e(y\))h(=)f
(\(eval)h(x,eval)h(y\))-150 1921 y Fu(Here)25 b(the)g(uni)n(v)o(ersal)h
(domain)g(is)f(not)g(necessary)-5 b(,)26 b(and)g(the)f(tagless)g(inter)
o(-)-150 2005 y(preter)j(has)g(the)g(structure)g(of)f(a)h(denotational)
h(semantics.)f(Because)g(the)-150 2088 y Fl(eval)22 b
Fu(function)h(is)e(total)g(and)h(well-typed)g(at)f(the)h(meta-le)n(v)o
(el,)f(it)g(also)h(im-)-150 2171 y(plies)c(that)g(the)g(object-le)n(v)o
(el)h(semantics)f(\(de\002ned)h(by)f Fl(eval)p Fu(\))h(is)f(also)g
(well-)-150 2254 y(typed.)k(As)e(long)i(as)f Fl(eval)h
Fu(is)f(total,)f Fr(e)o(very)i Fu(well-typed)f(object)g(le)n(v)o(el)h
(term)-150 2337 y(e)n(v)n(aluates)e(to)f(a)g(well-formed)g(v)n(alue.)
-50 2420 y(While)f(we)i(w)o(ork)o(ed)g(hard)g(to)f(mak)o(e)h(this)g
(look)f(lik)o(e)h(Hask)o(ell)f(program-)-150 2503 y(ming,)j(there)g
(are)f(some)h(k)o(e)o(y)h(dif)n(ferences.)f(First,)e(the)i(prototype)h
(declara-)-150 2586 y(tion)c(\()p Fl(eval)40 b(::)f(Term)h(a)g(->)g(a)p
Fu(\))18 b(is)g(required,)h(not)g(optional.)g(Functions)-150
2669 y(which)27 b(pattern)g(match)g(o)o(v)o(er)g(GADTs)f(can)h(be)g
(type)g(check)o(ed,)h(b)o(ut)f(type)-150 2752 y(inference)32
b(is)e(much)i(harder)g(\(see)f([33)q(])f(for)h(w)o(ork)h(on)g(ho)n(w)f
(this)g(might)-150 2835 y(be)k(done\).)g(Functions)g(that)g(don')o(t)f
(pattern)h(match)g(o)o(v)o(er)g(GADTs)f(can)-150 2918
y(ha)o(v)o(e)19 b(Hindle)o(y-Milner)h(types)g(inferred)f(for)g(them)g
(\(see)h([13])f(for)g(ho)n(w)h(this)-150 3001 y(mixture)29
b(of)f(type-checking)j(and)e(type-inference)h(is)e(done\).)h(Requiring)
-150 3084 y(prototypes)e(for)f(only)g(some)g(functions)h(should)g(be)f
(f)o(amiliar)f(to)h(Hask)o(ell)-150 3167 y(programmers)21
b(because)h(polymorphic-recursi)n(v)o(e)g(functions)f(already)g(re-)
-150 3250 y(quire)e(prototypes[14)r(].)-150 3414 y Fm(2.3)75
b(V)-7 b(alues,)18 b(T)-6 b(ypes,)19 b(Kinds,)f(and)g(Sorts)-150
3530 y Fu(In)e(Hask)o(ell,)g(v)n(alues)h(are)g(classi\002ed)f(by)h
(types.)f(In)g(a)g(similar)g(f)o(ashion,)h(types)-150
3613 y(can)j(be)g(classi\002ed)f(by)h(kinds,)g(and)g(kinds)g(can)g(be)g
(classi\002ed)f(by)h(sorts.)f(W)-6 b(e)-150 3696 y(indicate)25
b(clasi\002cation)f(as)g(a)g(relation)g(using)h(the)g(in\002x)f
(symbol\()p Fl(::)p Fu(\).)h(W)-6 b(e)-150 3779 y(say)19
b(\()p Fl(::)p Fu(\))f(is)f(o)o(v)o(erloaded)j(because)f(the)g(same)f
(notation)h(can)f(be)h(used)g(in)f(all)-150 3862 y(three)h(conte)o
(xts:)g Fr(value)p Fl(::)p Fr(type)p Fu(,)i(and)e Fr(type)p
Fl(::)p Fr(kind)p Fu(,)h(and)g Fr(kind)p Fl(::)p Fr(sort)p
Fu(.)-50 3945 y(Some)31 b(concrete)g(e)o(xamples)h(at)f(the)g(v)n(alue)
h(le)n(v)o(el)f(include:)g Fl(5::Int)p Fu(,)-150 4028
y(and)23 b Fl([True]::[Bool])p Fu(.)j(W)-6 b(e)22 b(say)h
Fl(5)f Fu(is)h(classi\002ed)f(by)h Fl(Int)p Fu(.)g(At)f(the)h(type)-150
4111 y(le)n(v)o(el:)35 b Fl(Int::*0)41 b Fu(,)35 b Fl(Term::)41
b(*0)e(~>)h(*0)p Fu(.)35 b(W)-6 b(e)35 b(say)h Fl(Int)g
Fu(is)f(classi\002ed)-150 4194 y(by)29 b(star)o(-zero,)e(and)i
Fl(Tree)f Fu(is)g(classi\002ed)g(by)g(star)o(-zero)g(to)g(star)o
(-zero.)f Fl(*0)p Fu(,)-150 4277 y(and)33 b Fl(*0)40
b(~>)f(*0)33 b Fu(are)f(kinds.)h(At)f(the)h(kind)g(le)n(v)o(el)f(both:)
h Fl(*0::)40 b(*1)33 b Fu(and)-150 4360 y Fl(\(*O)40
b(~>)g(*0\)::)g(*1)p Fu(.)19 b(Here,)f Fl(*1)h Fu(is)g(a)g(sort.)-50
4444 y(The)31 b(kind)g Fl(*0)g Fu(is)g(interesting)g(because)i(it)d
(classi\002es)g(all)h(types)g(that)-150 4527 y(classify)j(v)n(alues)g
(\(things)g(we)f(actually)h(can)g(compute\).)g(F)o(or)f(e)o(xample,)
-150 4610 y Fl(Int::)40 b(*0)p Fu(,)28 b(and)h Fl([Int]::)41
b(*0)p Fu(,)28 b(b)o(ut)f(not)h Fl(Tree::)41 b(*0)p Fu(,)28
b(because)h(there)-150 4693 y(are)16 b(no)h(v)n(alues)g(of)g(type)f
Fl(Tree)h Fu(\(b)o(ut)f(there)h(are)f(v)n(alues)h(of)f(type)h
Fl(Tree)40 b(Int)p Fu(\).)-50 4776 y Fr(Ne)o(w)24 b(kinds)i
Fu(are)f(introduced)i(by)f(the)f Fr(kind)h Fu(declaration)g(that)f
(also)h(in-)-150 4859 y(troduces)21 b(the)f(type)h(constructors)g(that)
f(produce)h(types)g(classi\002ed)f(by)g(that)-150 4942
y(kind,)e(just)f(as)h Fr(ne)o(w)f(types)h Fu(are)g(introduced)g(by)g
(the)g Fr(data)g Fu(declaration)h(along)-150 5025 y(with)26
b(the)h(v)n(alue)g(constructors)g(that)g(produce)h(v)n(alues)f
(classi\002ed)f(by)h(that)-150 5108 y(type.)19 b(The)f
Fl(data)i Fu(and)f Fl(kind)g Fu(declarations)h(introduce)f(similar)f
(structures,)-150 5191 y(b)o(ut)27 b(at)f(dif)n(ferent)h(le)n(v)o(els)g
(in)g(the)f(type)i(hierarchy)-5 b(.)27 b(T)-6 b(w)o(o)27
b(interesting)g(kind)-150 5274 y(declarations,)19 b(of)g(interest)g(in)
g(this)f(paper)i(follo)n(w:)p Black Black -150 5430 a
Fl(kind)40 b(Nat)g(=)g(Z)f(|)g(S)h(Nat)p Black Black
Black Black Black 2042 12 2068 4 v 2040 78 4 67 v 2092
58 a Fk(v)o(alue)10 b(name)h(space)107 b Fp(j)222 b Fk(type)10
b(name)h(space)p 4108 78 V 2042 81 2068 4 v 2040 148
4 67 v 2175 128 a Fq(v)o(alue)189 b Fp(j)309 b Fq(type)h
Fp(j)185 b Fq(kind)h Fp(j)168 b Fq(sort)p 4108 148 V
2042 151 2068 4 v 2040 218 4 67 v 2223 198 a(5)231 b(::)321
b(Int)g(::)203 b(*0)f(::)177 b(*1)p 4108 218 V 2042 221
2068 4 v 2040 287 4 67 v 2204 267 a([2])212 b(::)302
b([Int])g(::)203 b(*0)f(::)177 b(*1)p 4108 287 V 2042
291 2068 4 v 2040 357 4 67 v 2849 337 a([])334 b(::)126
b(*0)15 b Fj( )f Fq(*0)126 b(::)177 b(*1)p 4108 357 V
2042 360 2068 4 v 2040 427 4 67 v 3443 407 a(Nat)189
b(::)177 b(*1)p 4108 427 V 2042 430 2068 4 v 2040 496
4 67 v 2851 477 a(Z)334 b(::)190 b(Nat)f(::)177 b(*1)p
4108 496 V 2042 500 2068 4 v 2040 566 4 67 v 2852 546
a(S)337 b(::)100 b(Nat)15 b Fj( )f Fq(Nat)100 b(::)177
b(*1)p 4108 566 V 2042 570 2068 4 v 2040 636 4 67 v 2817
616 a(Nat')301 b(::)113 b(Nat)15 b Fj( )f Fq(*0)113 b(::)177
b(*1)p 4108 636 V 2042 639 2068 4 v 2040 706 4 67 v 2220
686 a(Z)227 b(::)277 b(Nat')14 b(Z)276 b(::)195 b(*)15
b(0)195 b(::)177 b(*1)p 4108 706 V 2042 709 2068 4 v
2040 775 4 67 v 2221 755 a(S)230 b(::)100 b(Nat')15 b(m)f
Fp(!)h Fq(Nat')g(\(S)g(m\))100 b(::)203 b(*0)f(::)177
b(*1)p 4108 775 V 2042 779 2068 4 v 2040 845 4 67 v 2807
825 a(T)l(erm)292 b(::)119 b(*0)14 b Fj( )h Fq(*)g(0)118
b(::)177 b(*1)p 4108 845 V 2042 848 2068 4 v 2040 915
4 67 v 2170 895 a(Const)g(::)212 b(a)14 b Fp(!)h Fq(T)l(erm)f(a)211
b(::)203 b(*0)f(::)177 b(*1)p 4108 915 V 2042 918 2068
4 v 2040 985 4 67 v 3431 965 a(Ro)o(w)f(::)100 b(*1)15
b Fj( )f Fq(*1)p 4108 985 V 2042 988 2068 4 v 2040 1054
4 67 v 2812 1034 a(RNil)296 b(::)156 b(Ro)o(w)14 b(k)155
b(::)177 b(*1)p 4108 1054 V 2042 1058 2068 4 v 2042 1094
1993 3 v 2042 1178 a Fm(Figur)o(e)26 b(1.)37 b Fu(V)-8
b(alues,)27 b(types,)g(kinds,)g(and)g(sorts,)g(are)f(the)h(\002rst)f
(fe)n(w)h(le)n(v)o(els)2042 1261 y(of)21 b(the)g(in\002nite)g
(classi\002cation)g(hierarchy)-5 b(.)22 b(As)f(is)f(done)j(in)e(Hask)o
(ell,)g(there)2042 1344 y(are)c(tw)o(o)h(name)h(spaces.)f(One)g(name)g
(space,)g(names)g(v)n(alues,)h(and)f(the)g(other)2042
1427 y(name)27 b(space,)h(names)f(types,)g(kinds,)h(sorts)f(etc.)f(T)-6
b(w)o(o)27 b(objects)g(can)h(ha)o(v)o(e)2042 1510 y(the)23
b(same)g(name)h(if)f(the)o(y)g(li)n(v)o(e)g(in)g(dif)n(ferent)g(name)h
(spaces.)f(This)g(form)g(of)2042 1593 y(o)o(v)o(erloading)31
b(is)e(often)h(e)o(xploited)h(in)e Fs(\012)p Fu(me)o(ga)i(\(as)e(well)h
(as)f(in)h(Hask)o(ell\))2042 1676 y(programs.)e(Note)g(that)g
Fl(Z)g Fu(and)h Fl(S)f Fu(are)g(de\002ned)g(in)g(both)h(the)f(v)n(alue)
g(name)2042 1759 y(space)19 b(and)h(the)f(type)g(name)h(space.)p
2042 1779 1993 4 v Black 2141 2013 a(The)h Fl(Nat)g Fu(declaration)g
(introduces)h(the)f(kind)g Fl(Nat)g Fu(and)g(tw)o(o)g(ne)n(w)g(type)
2042 2096 y(constructors)g Fl(Z)f Fu(and)g Fl(S)g Fu(which)g(encode)i
(the)e(natural)g(numbers)h(at)f(the)g(type)2042 2179
y(le)n(v)o(el.)i(The)h(type)h Fl(Z)e Fu(has)i(kind)f
Fl(Nat)p Fu(,)g(and)h Fl(S)f Fu(has)g(kind)h Fl(Nat)39
b(~>)h(Nat)p Fu(.)23 b(The)2042 2262 y(type)34 b Fl(S)f
Fu(is)g(a)h(type)g(constructor)m(,)g(so)f(it)g(has)h(a)g(higher)o
(-order)g(kind.)g(W)-6 b(e)2042 2345 y(indicate)19 b(this)g(using)g
(the)g(classi\002es)g(relation)g(as)g(follo)n(ws:)p Black
Black 2042 2474 a Fl(Z)39 b(::)h(Nat)2042 2557 y(S)f(::)h(Nat)g(~>)g
(Nat)2042 2640 y(Nat)g(::)f(*1)2141 2770 y Fu(The)24
b(classi\002cation)f Fl(Nat::*1)i Fu(indicates)f(that)g
Fl(Nat)g Fu(is)f(a)g(kind)h(classi-)2042 2853 y(\002ed)d(by)h(the)f
(sort)g Fl(*1)p Fu(.)h(Both)f Fl(Nat)h Fu(and)g Fl(*0)f
Fu(are)h(kinds)g(at)f(the)g(same)h(\223le)n(v)o(el\224)2042
2936 y(\227)c(the)o(y)h(are)g(both)h(classi\002ed)f(by)g
Fl(*1)p Fu(.)p Black Black 2042 3086 a Fl(kind)40 b(Row)g(\(x)g(::)f
(*1\))h(=)g(RNil)g(|)f(RCons)i(x)e(\(Row)h(x\))2042 3236
y(Row)p Fu(s)19 b(are)h(list)e(lik)o(e)h(structures)h(at)e(the)i(type)f
(le)n(v)o(el,)g(which)h(are)f(constructed)2042 3319 y(by)30
b(the)f(type)h(constructors)h Fl(RNil)f Fu(and)g Fl(RCons)p
Fu(.)g(F)o(or)f(e)o(xample)h Fl(\(RCons)2042 3402 y(Int)40
b(\(RCons)g(Bool)g(RNil\)\))e Fu(and)g Fl(\(RCons)j(Z)e(RNil\))p
Fu(.)e(Such)h(types)2042 3485 y(are)29 b(kinded)i(by)f
Fl(Row)p Fu(.)f(The)h(kind)g Fl(Row)f Fu(is)g(a)h(higher)g(order)g
(kind,)f(and)h(is)2042 3568 y(classi\002ed)22 b(by)h
Fl(\(*1)40 b(~>)f(*1\))p Fu(.)23 b(Thus)g Fl(Row)f Fu(must)h(be)f
(applied)i(to)e(a)g(kind)h(to)2042 3651 y(be)18 b(well)g(formed)g
(\(the)h(ar)o(gument)f(indicates)h(the)f(kind)h(of)f(the)g(types)h
(stored)2042 3734 y(in)f(the)h(ro)n(w\).)g(F)o(or)f(e)o(xample)h(if)f
(we)h(classify)g(the)f(e)o(xamples)i(abo)o(v)o(e)g(we)e(get:)p
Black Black 2042 3863 a Fl(\(RCons)40 b(Int)g(\(RCons)h(Bool)f
(RNil\)\)::)h(Row)f(*0)2042 3946 y(\(RCons)g(Z)g(RNil\)::)h(Row)f(Nat)
2042 4076 y Fu(Both)19 b Fl(*1)g Fu(and)g Fl(\(*1)40
b(~>)g(*1\))19 b Fu(are)g(kinds)h(classi\002ed)f(by)g(the)g(sort)g
Fl(*2)p Fu(.)2141 4159 y(W)-6 b(e)21 b(illustrate)g(the)g(relationship)
h(between)g(v)n(alues,)f(types,)h(kinds,)f(and)2042 4242
y(sorts)15 b(by)h(e)o(xample)g(in)f(a)g(table)h(found)g(in)f(Figure)g
(1.)h(Note)f(that)g(the)g(table)h(has)2042 4325 y(empty)h(slots.)f(Not)
h(all)f(types)h(classify)g(v)n(alues.)g(F)o(or)f(e)o(xample,)h(there)g
(are)g(no)2042 4408 y(v)n(alues)27 b(of)g(type)g Fl([])g
Fu(\(list\))e(or)i Fl(Z)p Fu(,)f(b)o(ut)h(there)g(are)f(v)n(alues)i(of)
e(type)h Fl([Int])p Fu(.)2042 4491 y(The)22 b(same)h(holds)g(at)f(the)g
(kind)h(le)n(v)o(el.)g(Not)f(all)g(kinds)h(classify)f(types.)h(F)o(or)
2042 4574 y(e)o(xample,)i(there)g(are)g(no)h(types)f(classi\002ed)g(by)
h Fl(Row)p Fu(,)f(b)o(ut)f Fl(RNil)i Fu(could)g(be)2042
4657 y(classi\002ed)i(by)g Fl(\(Row)40 b(Int\))p Fu(.)28
b(Note)g(the)g(dif)n(ferent)g(kinds)h(of)f(arro)n(ws)g(\()p
Fi(!)2042 4740 y Fu(and)16 b Fh( )p Fu(\).)f(The)g(\002rst)f(is)i(used)
g(to)f(classify)h(functions)g(at)f(the)h(v)n(alue)g(le)n(v)o(el.)f(The)
2042 4823 y(second)25 b(is)f(used)h(to)f(classify)g(type)h
(constructors.)f(In)g Fs(\012)p Fu(me)o(ga)49 b(programs)2042
4906 y(we)19 b(write)f Fl(->)h Fu(for)g Fi(!)p Fu(,)f(and)h
Fl(~>)h Fu(for)e Fh( )p Fu(.)2042 5064 y Fm(2.4)75 b(Singleton)18
b(T)-6 b(ypes)2042 5181 y Fu(It)18 b(is)h(sometimes)g(useful)h(to)f(b)o
(uild)g(representations)h(of)f(types)g(at)g(the)g(v)n(alue)2042
5264 y(le)n(v)o(el.)30 b(Such)g(representations)h(are)f(called)g
Fr(singleton)h(types)f Fu(if)g(the)o(y)g(are)2042 5347
y(encoded)25 b(by)g(a)f(type)g(constructor)h(whose)g(ar)o(gument)f
(indicates)h(the)f(type)2042 5430 y(being)19 b(represented.)h(F)o(or)f
(e)o(xample)g(consider:)p Black Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black Black Black Black -150 66
a Fl(data)40 b(Nat'::)h(Nat)f(~>)f(*0)h(where)-32 149
y(Z::)g(Nat')g(Z)-32 232 y(S::)79 b(\(Nat')40 b(x\))g(->)g(Nat')g(\(S)f
(x\))-150 355 y Fu(V)-8 b(alues)20 b(classi\002ed)g(by)g(the)g(type)h
Fl(\(Nat')40 b(a\))20 b Fu(are)g(re\003ections)g(of)g(the)g
Fr(types)-150 439 y Fu(classi\002ed)f(by)g(the)f Fr(kind)i
Fl(Nat)p Fu(.)e(The)h(v)n(alue)g(constructors)h(of)f(the)g
Fl(data)g Fu(dec-)-150 522 y(laration)26 b(for)f Fl(Nat')i
Fu(mirror)e(the)h(type)g(constructors)h(in)f(the)g Fl(kind)g
Fu(decla-)-150 605 y(ration)e(of)g Fl(Nat)p Fu(,)h(and)g(the)f(type)g
(inde)o(x)h(of)f Fl(Nat')h Fu(is)f(equal)h(to)f(the)g(type)h(re-)-150
688 y(\003ected.)17 b(F)o(or)g(e)o(xample,)i(the)e(v)n(alue)i
Fl(S\(S\(S)40 b(Z\)\))18 b Fu(is)f(classi\002ed)h(by)g(the)g(type)-150
771 y Fl(Nat'\(S\(S\(S)42 b(Z\)\)\))p Fu(.)22 b(W)-6
b(e)23 b(say)f(that)h Fl(Nat')g Fu(is)f(a)h Fr(singleton)g(type)g
Fu(because)-150 854 y(there)d(is)g(only)h(one)g(element)f(of)g(an)o(y)h
(singleton)g(type.)f(F)o(or)g(e)o(xample,)h(only)-150
937 y Fl(S)39 b(\(S)h(Z\))18 b Fu(inhabits)h(the)f(type)g
Fl(Nat')40 b(\(S)g(\(S)f(Z\)\))p Fu(.)18 b(As)g(discussed)h(in)f(Fig-)
-150 1020 y(ure)23 b(1,)f(we)g(e)o(xploit)h(the)g(separate)g(name)g
(spaces)g(for)f(v)n(alue)i(and)f(types)g(by)-150 1103
y(using)e(the)f(same)g(names)h(for)f(the)g(type)g(constructors)h(of)g
(kind)f Fl(Nat)h Fu(\()p Fl(S)f Fu(and)-150 1186 y Fl(Z)p
Fu(\))26 b(and)i(the)e(constructor)i(functions)f(of)g
Fl(data)g Fu(type)g Fl(Nat')g Fu(\()p Fl(S)g Fu(and)g
Fl(Z)p Fu(\))f(to)-150 1269 y(emphasize)20 b(the)f(close)g
(relationship)h(between)f Fl(Nat)h Fu(and)f Fl(Nat')p
Fu(.)-50 1352 y(W)-6 b(e)23 b(will)f(\002nd)h(natural)h(numbers)h(at)e
(the)g(type)h(le)n(v)o(el)g(\(and)f(their)h Fl(Nat')-150
1435 y Fu(re\003ections)15 b(at)f(the)h(v)n(alue)h(le)n(v)o(el\))f(to)g
(be)g(so)g(useful)g(we)g(introduce)h(some)f(syn-)-150
1518 y(tactic)f(sugar)i(for)e(constructing)i(such)g(types)f(\(or)g(v)n
(alues\).)g(F)o(or)g(e)o(xample,)g Fl(#0)-150 1601 y(=)39
b(Z)p Fu(,)17 b(and)g Fl(#1)40 b(=)f(\(S)h(Z\))p Fu(,)17
b(and)g Fl(#2)40 b(=)f(\(S)h(\(S)g(Z\)\))17 b Fu(etc.)f(W)-6
b(e)16 b(also)h(support)-150 1684 y(the)30 b(syntax)g
Fl(#\(n)40 b(+)g(x\))g(=)f(\(S)705 1692 y Fg(1)740 1684
y Fl(\(S)818 1692 y Fg(2)892 1684 y Fl(...)h(\(S)1127
1692 y Ff(n)1209 1684 y Fl(x\)\)\))p Fu(.)31 b(This)e(syntactic)-150
1767 y(sugar)20 b(is)g(analogous)i(to)e(the)g(use)g(of)g(square)h
(brack)o(ets)g(to)f(describe)h(lists)e(in)-150 1850 y(addition)h(to)e
(the)h(use)h(of)f(the)g(constructor)g Fl(\(:\))p Fu(.)-150
1993 y Fm(2.5)75 b(T)-7 b(ags)20 b(and)e(Labels)-150
2110 y Fu(Man)o(y)j(object)f(languages)h(ha)o(v)o(e)f(a)g(notion)h(of)e
(name.)i(T)-6 b(o)19 b(mak)o(e)i(represent-)-150 2193
y(ing)f(names)g(in)g(the)g(type)g(system)g(easy)h(we)e(introduce)i(the)
f(notion)g(of)g(T)-6 b(ags)-150 2276 y(and)24 b(Labels.)f(As)g(a)g
Fr(\002r)o(st)h(appr)m(oximation)p Fu(,)g(consider)h(the)e(\002nite)g
(kind)h Fl(Tag)-150 2359 y Fu(and)c(its)e(singleton)i(type)f
Fl(Label)p Fu(:)p Black Black -150 2495 a Fl(kind)40
b(Tag)g(=)g(A)f(|)g(B)h(|)f(C)-150 2661 y(data)h(Label::)h(Tag)f(~>)g
(*0)f(where)-72 2744 y(A::)h(Label)h(A)-72 2827 y(B::)f(Label)h(B)-72
2910 y(C::)f(Label)h(C)-50 3047 y Fu(Here,)16 b(we)g(again)h
(deliberately)g(use)f(the)h(v)n(alue/type)g(name)g(space)h(o)o(v)o(er)o
(-)-150 3130 y(loading)24 b(\002rst)f(discussed)h(in)f(Figure)g(1.)g
(The)h(names)g Fl(A)p Fu(,)f Fl(B)p Fu(,)g(and)h Fl(C)f
Fu(are)g(de-)-150 3213 y(\002ned)c(in)f(both)h(the)g(v)n(alue)g(and)g
(type)g(name)g(spaces.)g(The)o(y)f(name)h(dif)n(ferent,)-150
3296 y(b)o(ut)c(related)g(objects)g(in)g(each)h(space.)f(At)g(the)g(v)n
(alue)g(le)n(v)o(el)g(e)n(v)o(ery)h Fl(Label)g Fu(has)-150
3379 y(a)g(type)h(inde)o(x)g(that)f(re\003ects)g(its)g(v)n(alue.)g
(I.e.)g Fl(A::Label)41 b(A)p Fu(,)16 b(and)h Fl(B::Label)-150
3462 y(B)p Fu(,)k(and)i Fl(C::Label)41 b(C)p Fu(.)21
b(No)n(w)h(consider)g(a)g(countably)h(in\002nite)e(set)h(of)f(tags)-150
3545 y(and)h(labels.)f(W)-6 b(e)21 b(can')o(t)g(de\002ne)h(this)f(e)o
(xplicitly)-5 b(,)21 b(b)o(ut)g(we)g(can)h(b)o(uild)f(such)h(a)-150
3628 y(type)g(as)g(a)g(primiti)n(v)o(e)g(inside)g(of)g
Fs(\012)p Fu(me)o(ga.)g(At)f(the)h(type)h(le)n(v)o(el,)e(e)n(v)o(ery)i
(le)o(gal)-150 3711 y(identi\002er)18 b(whose)i(name)f(is)g(preceded)h
(by)f(a)g(back-tick)h(\()p Fl(`)p Fu(\))e(is)g(a)h(type)g(clas-)-150
3794 y(si\002ed)h(by)h(the)g(kind)g Fl(Tag)p Fu(.)f(F)o(or)g(e)o
(xample,)h(the)f(type)h Fl(`abc)g Fu(is)g(classi\002ed)f(by)-150
3877 y Fl(Tag)p Fu(.)j(At)g(the)h(v)n(alue)g(le)n(v)o(el,)f(e)n(v)o
(ery)h(such)g(symbol)g Fl(`x)f Fu(is)g(classi\002ed)g(by)h(the)-150
3960 y(type)19 b Fl(\(Label)41 b(`x\))p Fu(.)-150 4104
y Fm(2.6)75 b(Ro)o(ws,)19 b(Records,)g(and)f(HasT)-6
b(ype.)-150 4220 y Fu(The)28 b(kind)h Fl(Row)f Fu(classi\002es)g
(list-lik)o(e)f(data)i(structures)f(at)g(the)g(type)h(le)n(v)o(el.)-150
4303 y(The)19 b(kind)g Fl(HasType)i Fu(classi\002es)d(pairs)h(at)g(the)
g(type)g(le)n(v)o(el.)p Black Black -150 4426 a Fl(kind)40
b(HasType)h(=)e(Has)h(Tag)g(*0)-150 4549 y Fu(It)c(aggre)o(gates)h(a)f
Fl(Tag)h Fu(and)g(an)o(y)f(type)h(classi\002ed)f(by)h
Fl(*0)p Fu(.)f(F)o(or)g(e)o(xam-)-150 4632 y(ple,)18
b Fl(\(Has)40 b(`a)g(Int\)::HasType)p Fu(.)21 b(W)-6
b(e)18 b(can)h(construct)g(lists)e(\(at)h(the)h(type)-150
4715 y(le)n(v)o(el\))c(of)g(such)g(pairs)g(using)h(the)f(type)g
(constructors)h(of)f Fl(Row)p Fu(.)g(F)o(or)g(e)o(xample,)p
Black Black -150 4838 a Fl(\(RCons)41 b(\(Has)f(`a)f(Int\))i(\(RCons)f
(\(Has)g(`b)g(Bool\))g(RNil\)\))-72 4921 y(::Row)h(HasType)-150
5044 y Fu(Note,)14 b Fl(\(RCons)41 b(\(Has)f(`a)g(Int\))g(\(RCons)g
(\(Has)g(`b)g(Bool\))g(RNil\)\))-150 5127 y Fu(is)24
b(a)g(type,)g(and)h(that)f Fl(\(Row)41 b(HasType\))25
b Fu(is)f(a)g(kind.)h(Such)f(a)h(type)f(can)h(be)-150
5210 y(thought)f(of)e(as)h(classifying)g(records)g(at)g(the)f(v)n(alue)
h(le)n(v)o(el.)g(W)-6 b(e)22 b(can)h(de\002ne)-150 5293
y(such)d(records)f(within)g Fs(\012)p Fu(me)o(ga)38 b(as)19
b(follo)n(ws:)p Black Black -150 5430 a Fl(data)40 b(Rec::)h(Row)e
(HasType)i(~>)f(*0)g(where)p Black Black 2120 66 a(RecNil)h(::)f(Rec)f
(RNil)2120 149 y(RecCons::)j(Label)e(s)f(->)h(t)f(->)2513
232 y(Rec)g(r)h(->)2513 315 y(Rec)f(\(RCons)i(\(Has)f(s)g(t\))f(r\))
2141 455 y Fu(W)-6 b(e)32 b(can)h(construct)g(records)f(by)h(using)g
(the)f(constructor)h(functions)2042 538 y Fl(RecNil)27
b Fu(and)g Fl(RecCons)p Fu(.)h(Such)e(v)n(alues)h(ha)o(v)o(e)g(types)g
Fl(\(Rec)40 b Fr(r)p Fl(\))26 b Fu(where)h Fl(r)2042
621 y Fu(is)18 b(classi\002ed)h(by)g Fl(\(Row)41 b(HasType\))p
Fu(.)20 b(F)o(or)e(e)o(xample,)i(consider)p Black Black
2042 761 a Fl(r1)39 b(::)h(Rec\(RCons)h(\(Has)g(`x)e(Int\))2669
844 y(\(RCons)i(\(Has)f(`a)g(Bool\))g(RNil\)\))2042 927
y(r1)f(=)h(RecCons)h(`x)e(5)h(\(RecCons)h(`a)f(True)g(RecNil\))2042
1094 y(r2::)g(Rec)g(u)f(->)h(Rec\(RCons)h(\(Has)f(`x)g(Int\))2983
1177 y(\(RCons)h(\(Has)f(`a)g(Bool\))g(u\)\))2042 1260
y(r2)f(x)h(=)f(RecCons)i(`x)f(5)f(\(RecCons)i(`a)f(True)g(x\))2141
1400 y Fu(It)15 b(is)f(interesting)h(to)g(note)g(that)f(we)h(ha)o(v)o
(e)g(managed)h(to)f(e)o(xpress)g(a)g(simple)2042 1483
y(form)k(of)h(W)-6 b(and')l(s)20 b(\(or)f(Remy')l(s\))h(ro)n
(w-polymorphism[42)s(,)f(27)q(])g(in)g Fs(\012)p Fu(me)o(ga)2042
1566 y(just)28 b(by)g(using)h(kinds.)g(W)-6 b(e)28 b(ha)o(v)o(e)g
(found)h Fl(Row)g Fu(and)g Fl(HasType)g Fu(so)g(useful)2042
1649 y(we)22 b(ha)o(v)o(e)g(b)o(uilt)f(special)h(syntactic)g(sugar)g
(for)g(printing)h(them.)e(F)o(or)h(e)o(xam-)2042 1732
y(ple,)57 b Fl(Rec\(RCons)41 b(\(Has)f(`x)g(Int\))g(\(RCons)g(\(Has)h
(`a)e(Bool\))i(RNil\)\))2042 1815 y Fu(prints)26 b(as)53
b Fl(Rec)39 b({`x:Int,`a:Bool})p Fu(.)30 b(The)c(syntactic)h(sugar)f
(for)h Fl(Row)2042 1898 y Fu(and)32 b Fl(HasType)g Fu(replaces)g
Fl(RCons)g Fu(and)g Fl(RNil)f Fu(with)g(squiggly)h(brack)o(ets,)2042
1981 y(and)24 b(replaces)f Fl(Has)h Fu(with)f(colon.)h(A)e(type)i
(classi\002ed)f(by)h Fl(Row)g Fu(whose)f(\(ul-)2042 2064
y(timate\))h(tail)f(is)h(not)h Fl(RNil)g Fu(\(i.e.)e(a)h(type)h(v)n
(ariable\))g(prints)f(with)g(a)g(trailing)2042 2147 y(semi-colon.)19
b(F)o(or)g(e)o(xample,)2042 2230 y Fl(Rec\(RCons)41 b(\(Has)f(`x)g
(Int\))g(\(RCons)h(\(Has)f(`a)f(Bool\))i(w\)\))i Fu(prints)2042
2313 y(as)37 b Fl(Rec)j({`x:Int,`a:Bool;)j(w})p Fu(.)2042
2461 y Fm(2.7)75 b(An)18 b(Object)h(Language)g(with)f(Binding)o(.)2042
2577 y Fu(Ro)n(ws)g(and)g(records)g(allo)n(w)g(us)g(to)g(de\002ne)g
(object-languages)i(with)d(binding)2042 2660 y(structures)26
b(that)h(track)f(their)g(free)h(v)n(ariables)g(in)f(their)g(meta-le)n
(v)o(el)h(types.)2042 2743 y(The)34 b(object-language)i
Fl(\(Lam)k(env)g(t\))35 b Fu(represents)g(the)f(simply)g(typed)2042
2826 y(lambda)19 b(calculus.)p Black Black 2042 2966
a Fl(data)40 b(Lam::)g(Row)g(HasType)h(~>)f(*0)f(~>)h(*0)79
b(where)2120 3049 y(Var)236 b(::)40 b(Label)g(s)g(->)f(Lam)h(\(RCons)h
(\(Has)f(s)g(t\))f(env\))h(t)2120 3132 y(Shift)158 b(::)40
b(Lam)g(env)g(t)f(->)2591 3215 y(Lam)h(\(RCons)g(\(Has)h(s)e(q\))h
(env\))g(t)2120 3298 y(Abstract)h(::)f(Label)g(a)g(->)2591
3381 y(Lam)g(\(RCons)g(\(Has)h(a)e(s\))h(env\))g(t)f(->)2591
3464 y(Lam)h(env)g(\(s)f(->)h(t\))2120 3547 y(Apply)158
b(::)40 b(Lam)g(env)g(\(s)f(->)h(t\))g(->)2591 3630 y(Lam)g(env)g(s)f
(->)h(Lam)g(env)g(t)2141 3770 y Fu(The)33 b(\002rst)f(inde)o(x)i(to)e
Fl(Lam)p Fu(,)h Fl(env)h Fu(is)e(a)h(Ro)n(w)g(tracking)h(its)e(v)n
(ariables,)2042 3853 y(and)c(the)h(second)g(inde)o(x,)f
Fl(t)g Fu(tracks)g(the)h(object-le)n(v)o(el)f(type)h(of)f(the)g(term.)
2042 3936 y(F)o(or)38 b(e)o(xample,)h(a)f(term)g(with)g(v)n(ariables)h
Fl(x)g Fu(and)g Fl(y)f Fu(might)h(ha)o(v)o(e)g(type)2042
4019 y Fl(Lam)h({`x:Int,)h(`y:Bool;)g(u})e(Int)p Fu(.)21
b(This)f(is)g(made)g(possible)h(by)g(the)2042 4102 y(use)e(of)g
Fl(Row)g Fu(and)h Fl(HasType)g Fu(in)f(the)g(GADT)f(representing)i
(lambda)g(terms.)2141 4185 y(The)27 b(k)o(e)o(y)h(to)f(this)g(approach)
h(is)f(the)g(typing)h(of)f(the)g(object-language)2042
4268 y(constructor)g(functions)f(for)g(v)n(ariables)h(and)f(lambda)h(e)
o(xpressions.)g(Con-)2042 4351 y(sider)19 b(the)h Fl(Var)f
Fu(constructor)i(function.)f(T)-6 b(o)19 b(construct)h(a)f(v)n(ariable)
h(we)f(sim-)2042 4434 y(ply)d(apply)h Fl(Var)g Fu(to)f(a)g(label,)g
(and)g(its)g(type)g(re\003ects)g(this.)g(F)o(or)f(e)o(xample,)i(here)
2042 4517 y(is)g(the)g(output)h(from)f(a)g(short)h(interacti)n(v)o(e)f
(session)h(with)f(the)g Fs(\012)p Fu(me)o(ga)35 b(inter)o(-)2042
4600 y(preter)l(.)p Black Black 2042 4724 a Fl(prompt>)41
b(Var)f(`name)2042 4807 y(\(Var)g(`name\)::)2042 4890
y(forall)g(a)g(\(u:Row)g(HasType\))h(.)f(Lam)g({`name:a;)h(u})f(a)2042
5056 y(prompt>)h(Var)f(`age)2042 5139 y(\(Var)g(`age\)::)2042
5222 y(forall)g(a)g(\(u:Row)g(HasType\))h(.)f(Lam)g({`age:a;)h(u})f(a)
2141 5347 y Fu(V)-8 b(ariables)36 b(beha)o(v)o(e)g(lik)o(e)f(Bruijn)h
(indices.)f(V)-8 b(ariables)36 b(created)f(with)2042
5430 y Fl(Var)f Fu(are)g(lik)o(e)h(the)f(natural)g(number)h(0.)f(A)g(v)
n(ariable)h(can)f(be)h(lifted)e(to)p Black Black eop
end
%%Page: 5 5
TeXDict begin 5 4 bop Black Black -150 66 a Fu(the)39
b(ne)o(xt)f(natural)h(number)h(by)f(the)f(successor)i(operator)f
Fl(Shift)p Fu(.)g(T)-6 b(o)-150 149 y(understand)40 b(why)f(this)g(is)f
(useful)h(consider)h(that)f(the)g(tw)o(o)f(e)o(xamples)-150
232 y(ha)o(v)o(e)32 b(dif)n(ferent)g(names)g(in)f(the)h(same)g(inde)o
(x)g(position.)g(The)g(tw)o(o)f(v)n(ari-)-150 315 y(ables)36
b(w)o(ould)g(clash)g(if)f(the)o(y)h(were)f(both)h(used)h(in)e(the)h
(same)g(lambda)-150 399 y(term.)23 b(T)-6 b(o)23 b(shift)g(the)g
(position)h(of)f(v)n(ariable)h(to)f(a)h(dif)n(ferent)f(inde)o(x,)h(we)f
(use)-150 482 y(the)c Fl(Shift::)41 b(Lam)f(u)f(a)h(->)g(Lam)f({v:b;)i
(u})f(a)19 b Fu(constructor)l(.)g(Rather)-150 565 y(than)k(counting)h
(with)e(natural)h(numbers)g(\(as)g(is)f(done)h(with)f(de)h(Bruijn)g
(in-)-150 648 y(dices\))17 b(we)g(\223count\224)h(with)e(ro)n(ws,)h
(recording)h(both)f(its)g(symbolic)g(name)h(and)-150
731 y(its)h(type.)g(Here)g(is)g(ho)n(w)g(we)g(could)h(de\002ne)g(tw)o
(o)f(v)n(ariables)h Fl(x)f Fu(and)h Fl(y)f Fu(for)g(use)-150
814 y(in)g(the)g(same)g(en)m(vironment.)p Black Black
-150 977 a Fl(x)39 b(::)h(Lam)g({`x:a;)h(u})e(a)-150
1060 y(x)g(=)h(Var)g(`x)-150 1226 y(y)f(::)h(Lam)g({u:a,`y:b;)i(v})d(b)
-150 1309 y(y)g(=)h(\(Shift)h(\(Var)f(`y\)\))-50 1472
y Fu(The)18 b(type)i(system)f(no)n(w)h(tracks)f(the)g(v)n(ariables)g
(in)g(an)g(e)o(xpressions.)p Black Black -150 1608 a
Fl(z)39 b(::)h(Lam)g({`x:a)g(->)g(b,`y:a;)h(u})f(b)-150
1691 y(z)f(=)h(\(Apply)h(\(Var)f(`x\))g(\(Shift)g(\(Var)g(`y\)\)\))-50
1826 y Fu(Finally)-5 b(,)19 b(and)i(of)f(great)g(interest,)f(we)h(can)g
(b)o(uild)g(a)g(well-typed)g(e)n(v)n(alua-)-150 1910
y(tor)f(for)f(the)h(GADT)g Fl(Lam)p Fu(.)p Black Black
-150 2045 a Fl(evalLam)41 b(::)f(Lam)f(env)h(t)g(->)f(Rec)h(env)g(->)g
(t)-150 2128 y(evalLam)h(\(Var)f(_\))g(\(RecCons)h(_)e(y)h(_\))f(=)h(y)
-150 2211 y(evalLam)h(\(Shift)f(x\))g(\(RecCons)h(_)f(_)f(rs\))h(=)f
(evalLam)i(x)f(rs)-150 2294 y(evalLam)h(\(Abstract)g(l)f(_)f(body\))h
(rs)g(=)-32 2377 y(\\)f(x)h(->)f(evalLam)i(body)f(\(RecCons)h(l)f(x)f
(rs\))-150 2460 y(evalLam)i(\(Apply)f(f)g(x\))g(rs)f(=)-32
2543 y(\(evalLam)i(f)e(rs\))h(\(evalLam)h(x)f(rs\))-150
2679 y Fu(W)-6 b(e)25 b(declare)g(that)g(the)g(type)h(of)f(our)g(e)n(v)
n(aluation)i(function)f(is)e(as)h(follo)n(ws:)-150 2762
y(\()p Fl(Lam)40 b(env)g(t)f(->)h(Rec)g(env)g(->)f(t)p
Fu(\).)27 b(W)-6 b(e)26 b(can)i(interpret)f(this)g(to)g(mean)-150
2845 y(that)c(e)n(v)o(ery)h(well)e(typed)i Fl(Lam)g Fu(term)f(with)g
(type)g Fl(t)g Fu(under)h(an)g(en)m(vironment)-150 2928
y(with)c(shape)i Fl(env)p Fu(,)f(can)g(be)g(gi)n(v)o(en)g(meaning)h(as)
e(a)h(function)g(from)g(a)g(record)-150 3011 y(with)36
b(shape)i Fl(env)f Fu(to)f Fl(t)p Fu(.)g(The)h(function)g
Fl(evalLam)h Fu(is)f(a)f(denotational)-150 3094 y(semantics.)31
b(It)f(pro)o(vides)h(a)f(meaning)i(for)e(e)n(v)o(ery)i(well)e(formed)h
(lambda)-150 3177 y(term.)-50 3260 y(In)22 b(essence,)g(the)g
(well-typing)h(of)f(the)g(e)n(v)n(aluation)h(function)g(is)f(one)g(of)
-150 3343 y(three)i(parts)f(that)h(comprise)g(a)g(proof)g(of)g
(soundness)h(of)f(the)g(type)g(system)-150 3426 y(with)k(respect)i(to)e
(the)h(semantics.)g(The)g(other)g(tw)o(o)g(parts)g(are)g(proofs)g(of)
-150 3509 y(totality)18 b(and)i(compositionality)-5 b(.)p
Black -106 3665 a Fo(\017)p Black -42 3672 a Fm(T)e(otality)i(.)24
b Fu(T)-6 b(o)24 b(ensure)i(that)e(e)n(v)o(ery)i(term)e(is)g(mapped)i
(to)e(a)h(well-typed)-42 3755 y(v)n(alue,)f(we)g(must)g(ensure)h(that)f
Fl(evalLam)h Fu(is)f(total.)f(That)g(is,)h(it)f(termi-)-42
3838 y(nates)f(for)f(e)n(v)o(ery)i(well-typed)f(lambda)g(term.)f(Ev)o
(ery)h(well-typed)g Fl(Lam)-42 3921 y Fu(term)g(matches)h(one)g(of)g
(the)f(clauses)h(of)g Fl(evalLam)p Fu(,)g(and)g(e)n(v)o(ery)h(recur)o
(-)-42 4004 y(si)n(v)o(e)19 b(call)g(of)g Fl(evalLam)i
Fu(is)d(called)i(on)f(a)g(smaller)g(subterm)h(of)f(the)g(orig-)-42
4087 y(inal)25 b(ar)o(gument,)g(so)h(e)n(v)o(ery)g(call)f(will)f
(terminate)h(with)g(a)g(v)n(alue)h(if)e(the)-42 4170
y(input)c(term)f(is)g(\002nite)f(and)i(the)g(meta-language)h(\(in)e
(this)g(case)h Fs(\012)p Fu(me)o(ga\))-42 4253 y(is)29
b(strongly)h(normalizing.)g(Note)g(that)f(the)g(input)h(to)g
Fl(evalLam)g Fu(is)f(a)-42 4337 y(meta-language)h(term,)e(so)h(if)g
(the)f(meta-language)j(is)d(strongly)i(nor)o(-)-42 4420
y(malizing)25 b(no)h(in\002nite)f(inputs)g(are)g(possible.)h(The)f(k)o
(e)o(y)h(is)f(a)g(strongly)-42 4503 y(normalizing)20
b(meta-language.)p Black -106 4595 a Fo(\017)p Black
-42 4602 a Fm(Compositionality)-5 b(.)33 b Fu(The)h(meaning)g(of)g(e)n
(v)o(ery)h(term)e(is)h(composed)-42 4685 y(only)19 b(from)g(the)g
(meaning)h(of)f(its)g(subterms.)-50 4848 y(While)c(neither)h(of)g
(these)g(tw)o(o)g(are)g(currently)h(enforced)g(by)f Fs(\012)p
Fu(me)o(ga,)g(we)-150 4932 y(ha)o(v)o(e)j(plans)h(to)e(pro)o(vide)i
(such)g(support)g(in)e(the)h(future.)-50 5015 y(Other)c(kinds)h(of)f
(proofs)h(are)f(also)g(possible.)h(Proofs)f(in)g(style)g(of)g(Wright)
-150 5098 y(and)22 b(Felleisen[43])f(w)o(ork)h(on)f(a)g(small)g(step)g
(semantics)h(de\002ned)g(in)f(terms)-150 5181 y(of)32
b(substitution.)g Fs(\012)p Fu(me)o(ga)h(can)f(also)g(be)h(used)g(to)e
(de\002ne)i(languages)g(in)-150 5264 y(this)k(w)o(ay)-5
b(.)37 b(See)f(our)h(paper)h Fr(Meta-pr)m(o)o(gr)o(amming)h(with)d
(Built-in)g(T)-6 b(ype)-150 5347 y(Equality)p Fu([32)q(])22
b(which)h(w)o(as)g(presented)g(at)f(the)h(Logical)f(Frame)n(w)o(orks)i
(and)-150 5430 y(Meta-Languages)d(W)-6 b(orkshop)20 b(to)f(see)g(ho)n
(w)g(this)g(can)g(be)g(done.)p Black Black 2042 66 a
Fm(2.8)75 b(The)18 b(bottom)h(line.)2042 183 y Fu(The)k(ability)g(to)h
(de\002ne)g(GADTs,)e(and)i(the)g(ability)f(to)g(de\002ne)h(ne)n(w)g
(kinds,)2042 266 y(creates)h(a)g(rich)f(playground)j(for)e(those)h
(wishing)f(to)g(e)o(xplore)g(the)g(design)2042 349 y(of)k(ne)n(w)h
(languages.)h(These)f(features,)f(along)i(with)e(the)g(use)h(of)g
(rank-N)2042 432 y(polymorphism)i(\(which)f(we)g(will)f(illustrate)g
(by)h(e)o(xample)h(later)e(in)h(the)2042 515 y(paper\))19
b(mak)o(e)h Fs(\012)p Fu(me)o(ga)38 b(a)19 b(better)g(meta-language)h
(than)g(Hask)o(ell.)f(In)g(order)2042 598 y(to)c(e)o(xplore)i(the)e
(design)i(of)e(a)h(ne)n(w)g(language)h(one)f(can)g(proceed)h(as)e
(follo)n(ws:)p Black 2085 752 a Fo(\017)p Black 2150
759 a Fu(First,)24 b(represent)j(the)f(object-language)j(as)d(a)g(type)
g(inde)o(x)o(ed)i(GADT)-6 b(.)2150 842 y(The)19 b(inde)o(x)o(es)g
(correspond)i(to)e(static)f(properties)i(of)f(the)g(program.)p
Black 2085 934 a Fo(\017)p Black 2150 941 a Fu(The)25
b(inde)o(x)o(es)h(can)f(ha)o(v)o(e)h(arbitrary)f(structure,)g(because)i
(the)o(y)e(are)g(in-)2150 1024 y(troduced)20 b(as)f(the)g(type)g
(constructors)h(of)f(ne)n(w)g(kinds.)p Black 2085 1117
a Fo(\017)p Black 2150 1124 a Fu(The)i(typed)i(constructor)f(functions)
h(of)e(the)h(object-language)i(GADT)2150 1207 y(de\002ne)19
b(a)g(static)f(semantics)i(for)e(the)h(object)h(language.)p
Black 2085 1299 a Fo(\017)p Black 2150 1306 a Fu(Meta)j(programs)h
(written)e(in)g Fs(\012)p Fu(me)o(ga,)h(manipulate)h(object-language)
2150 1389 y(represented)19 b(as)g(data,)f(and)i(check)f(and)g(maintain)
g(the)g(properties)g(cap-)2150 1473 y(tured)i(in)g(the)h(type)f(inde)o
(x)o(es)h(by)g(using)g(the)f(meta-language)i(type)f(sys-)2150
1556 y(tem.)c(This)h(lets)f(us)h(b)o(uild)g(and)h(test)e(type)h
(systems)h(interacti)n(v)o(ely)-5 b(.)p Black 2085 1648
a Fo(\017)p Black 2150 1655 a Fu(A)27 b(dynamic)i(semantics)f(for)g
(the)f(language)i(can)g(be)f(de\002ned)g(by)g(\(1\))2150
1738 y(writing)h(either)g(a)g(denotational)i(semantics)e(in)h(the)f
(form)g(of)h(an)f(in-)2150 1821 y(terpreter)24 b(or)g(e)n(v)n(aluation)
h(function,)g(or)f(by)g(\(2\))g(writing)g(a)g(small)g(step)2150
1904 y(semantics)17 b(in)g(terms)f(of)h(substitution)h(o)o(v)o(er)f
(the)g(term)g(language.)h(In)e(ei-)2150 1987 y(ther)j(case,)g(the)g
(type)g(system)g(of)g(the)g(meta-language)i(guarantees)f(that)2150
2070 y(these)f(meta-le)n(v)o(el)g(programs)h(maintain)f(object)g(le)n
(v)o(el)g(type-safety)-5 b(.)2042 2291 y Fx(3.)91 b(The)22
b(MetaML)g(language.)2042 2407 y Fu(MetaML)32 b(is)g(a)h(homogeneous,)h
(manually)g(annotated,)f(run-time)f(code)2042 2490 y(generation)17
b(system.)f(In)h(MetaML)f(we)g(use)h(angle)g(brack)o(ets)g(\()p
Fl(<)39 b(>)p Fu(\))16 b(as)g(quo-)2042 2573 y(tations,)g(and)i(tilde)f
(\()p Fl(~)39 b Fu(\))17 b(as)g(the)g(anti-quotation.)g(W)-6
b(e)17 b(call)f(the)i(object-le)n(v)o(el)2042 2656 y(code)33
b(inside)g(a)f(pair)h(of)f(angle)h(brack)o(ets,)h(along)f(with)f(its)g
(anti-quoted)2042 2739 y(holes)f(a)h Fr(template)p Fu(,)f(because)h
(its)f(stands)g(for)g(a)g(computation)i(that)e(will)2042
2822 y(b)o(uild)16 b(an)h(object-code)h(fragment)f(with)f(the)g(shape)i
(of)e(the)h(quoted)g(code.)g(In)2042 2905 y(MetaML)e(the)f(angle)h
(brack)o(ets,)g(the)g(escapes,)g(the)f Fl(lift)p Fu(s,)h(and)g(the)g
Fl(run)g Fu(op-)2042 2988 y(erator)k(are)f(staging)i(annotations.)g
(The)o(y)f(indicate)g(the)g(boundaries)h(within)2042
3071 y(a)33 b(MetaML)g(program)h(where)f(the)g(program)h(te)o(xt)f(mo)o
(v)o(es)g(from)g(meta-)2042 3154 y(program)d(to)f(object-program.)h
(The)f(staging)g(annotations)i(in)e(MetaML)2042 3237
y(are)f(placed)h(manually)h(by)f(the)f(programmer)i(and)f(are)f
(considered)i(part)2042 3320 y(of)24 b(the)g(language.)i(In)e(MetaML)h
(the)f(staging)h(annotations)h(ha)o(v)o(e)f(seman-)2042
3403 y(tic)20 b(meaning,)i(the)o(y)g(are)f(part)g(of)g(the)g(language)i
(de\002nition,)e(not)g(just)g(hints)2042 3486 y(or)26
b(directions)h(to)g(language)h(preprocessors.)g(A)e(simple)h(e)o
(xample)g(using)2042 3569 y(templates)19 b(follo)n(ws:)p
Black Black 2042 3722 a Fe(-|)36 b(val)g(x)f(=)h(<3)g(+)f(2>)h(;)2042
3796 y(val)g(x)f(=)h(<3)g(\045+)g(2>)g(:)f(<int>)2042
3946 y(-|)h(val)g(code)g(=)g(<show)g(~x>)h(;)2042 4021
y(val)f(code)g(=)g(<\045show)h(\(3)f(\045+)g(2\)>)g(:)f(<string>)2141
4181 y Fu(In)d(this)f(e)o(xample)h(we)f(construct)h(the)g
(object-program)g(fragment)g Fl(x)2042 4264 y Fu(and)25
b(use)g(the)g(anti-quotation)h(mechanism)g(to)e(splice)h(it)f(into)h
(the)g(object-)2042 4347 y(program)i(fragment)g Fl(code)p
Fu(.)g(Note)g(ho)n(w)g(the)g(de\002nition)f(of)h Fl(code)g
Fu(uses)g(a)2042 4430 y(template)i(with)g(a)g(hole)h(\(the)f(escaped)i
(e)o(xpression)f Fl(~x)p Fu(\).)f(MetaML)h(also)2042
4513 y(statically)21 b(scopes)i(free)f(v)n(ariable)h(occurrences)h(in)e
(code)h(templates.)e(This)2042 4596 y(is)d(called)g Fr(cr)m(oss-sta)o
(g)o(e)i(per)o(sistence)p Fu(.)f(V)-8 b(ariables)18 b(de\002ned)h(in)g
(earlier)f(stages)2042 4679 y(are)h(a)o(v)n(ailable)g(for)g(use)g(in)g
(later)f(stages.)p Black Black 2042 4832 a Fe(-|)71 b(fun)36
b(f)g(x)f(y)h(=)f(x)h(+)f(y)h(-)g(1;)2042 4907 y(val)g(f)f(=)h(fn)71
b(:)36 b(int)g(->)g(int)g(->)g(int)2042 5056 y(-|)g(val)g(z)f(=)h(<f)g
(4)f(5>;)2042 5131 y(val)h(z)f(=)h(<\045f)g(4)g(5>)g(:)f(<int>)2042
5280 y(-|)h(let)g(fun)g(f)f(x)h(y)g(=)f(not)h(x)g(andalso)h(y)2148
5355 y(in)e(run)i(z)e(end;)2042 5430 y(val)h(it)g(=)f(8)h(:)f(int)p
Black Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black Black -50 66 a Fu(When)20
b(printing)i(code)f(with)f(a)h(le)o(xically)g(scoped)h(v)n(ariable,)e
(the)h(pretty)-150 149 y(printer)c(places)h(the)f(percent-sign)i(\()p
Fl(\045)p Fu(\))e(in)g(front)g(of)g Fl(f)h Fu(in)f(the)g(code)h
(template)-150 232 y Fl(z)d Fu(to)h(indicate)g(that)f(this)g(is)g(a)h
(statically)f(bound)i(object-v)n(ariable)f(\(not)g(a)f(free)-150
315 y(object-v)n(ariable\).)g(Note)g(ho)n(w)g(the)g(free)f(v)n(ariable)
h Fl(f)g Fu(in)f(the)h(code)h(template)e Fl(z)-150 399
y Fu(refers)j(to)g(the)g(function)g Fl(f:int)41 b(->)e(int)h(->)g(int)p
Fu(,)17 b(which)g(w)o(as)h(in)e(scope)-150 482 y(when)27
b(the)f(template)g(w)o(as)g(de\002ned,)g(and)h(not)f(the)g(function)g
Fl(f:bool)41 b(->)-150 565 y(bool)f(->)g(bool)23 b Fu(which)g(w)o(as)g
(in)g(scope)g(when)h Fl(z)e Fu(w)o(as)h(run.)g(V)-8 b(ariables)22
b(in)-150 648 y(MetaML)i(are)g(le)o(xically)g(scoped)i(e)n(v)o(en)f
(across)f(code)h(brack)o(ets.)g(Because)-150 731 y(code)18
b(may)g(be)f(spliced)h(or)f(run)h(in)f(a)g(conte)o(xt)h(f)o(ar)f(remo)o
(v)o(ed)h(from)f(the)g(scope)-150 814 y(where)i(it)f(w)o(as)i
(de\002ned,)f(this)g(le)o(xical)f(scoping)i(becomes)h(important.)-50
888 y(The)k Fl(run)i Fu(operator)f(in)g(MetaML)g(transforms)h(a)e
(piece)i(of)f(code)g(into)-150 963 y(the)21 b(program)i(it)e
(represents.)g(It)g(is)g(useful)h(to)f(think)h(of)f Fl(run)h
Fu(as)g(indicating)-150 1038 y(the)33 b(composition)h(of)f(run-time)g
(compilation)h(with)f(e)o(x)o(ecution.)g(In)g(the)-150
1112 y(e)o(xample)27 b(belo)n(w)-5 b(,)27 b(we)f(\002rst)g(b)o(uild)g
(a)h(generator)g(\()p Fl(power)p 1376 1112 24 4 v 29
w(gen)p Fu(\).)g(Apply)g(it)-150 1187 y(to)h(obtain)g(a)f(piece)i(of)e
(code)i(\()p Fl(power)p 879 1187 V 29 w(code)p Fu(\).)f(Run)g(the)g
(code)g(to)g(obtain)-150 1262 y(a)22 b(function)h(\()p
Fl(power)p 401 1262 V 30 w(fun)p Fu(\).)f(And)h(then)f(apply)h(the)g
(function)g(to)f(obtain)h(an)-150 1337 y(answer)c(\()p
Fl(125)p Fu(\).)p Black Black -150 1455 a Fe(-|)36 b(fun)g(power_gen)i
(m)d(=)26 1529 y(let)i(fun)f(f)f(n)h(x)f(=)309 1604 y(if)h(n)f(=)h(0)f
(then)i(<1>)626 1679 y(else)g(<~x)f(*)f(~\(f)i(\(n-1\))f(x\)>)26
1754 y(in)g(<let)h(fun)f(power)h(x)e(=)h(~\(f)g(m)f(<x>\))i(in)f(power)
g(end>)h(end;)-150 1828 y(val)f(power_gen)i(=)e(fn)71
b(:)35 b(int)h(->)g(<int)h(->)f(int>)-150 1978 y(-|)g(val)g(power_code)
i(=)e(power_gen)i(3;)-150 2052 y(val)e(power_code)i(=)-150
2127 y(<let)e(fun)h(power)f(x)g(=)f(x)h(*)g(x)f(*)h(x)f(*)h(1)f(in)h
(power)h(end>)-150 2202 y(:)f(<int)g(->)g(int>)-150 2351
y(-|)g(val)g(power_fun)i(=)d(run)i(power_code;)-150 2426
y(val)f(power_fun)i(=)e(fn)71 b(:)35 b(int)h(->)g(int)-150
2576 y(-|)g(power_fun)i(5;)-150 2650 y(val)e(it)g(=)g(125)g(:)f(int)-50
2777 y Fu(The)27 b(introduction)h(of)f(staging)h(annotations)g(such)g
(as,)f(run,)g(brack)o(et,)-150 2860 y(and)16 b(escape)g(considerably)h
(complicates)f(the)f(type)g(system)h(for)f(an)o(y)h(staged)-150
2943 y(language.)32 b(Most)f(type)h(systems)f(disqualify)h(bad)f
(programs)h(that)f(ha)o(v)o(e)-150 3026 y(a)k(small)g(class)g(of)g
(errors.)g(This)g(class)g(of)h(errors)f(includes,)h(use)f(of)g(a)-150
3109 y(v)n(ariable)e(in)f(a)h(scope)g(where)g(the)g(v)n(ariable)g(is)f
(not)h(declared,)g(and)g(use)-150 3192 y(of)c(a)g(v)n(alue)g(in)g(a)g
(manner)g(inconsistent)h(with)e(its)g(type)i(\226)f(i.e.)e(using)j(an)
-150 3275 y(inte)o(ger)h(where)g(a)g(\003oat)g(is)g(e)o(xpected,)g(or)g
(applying)i(something)f(that)f(is)-150 3358 y(not)20
b(a)g(function)h(to)f(an)h(ar)o(gument.)f(Once)h(staging)g(annotations)
g(are)f(added)-150 3441 y(to)j(a)f(language)j(the)e(class)g(of)f
(errors)h(becomes)h(measurably)g(lar)o(ger)l(.)e(Ne)n(w)-150
3524 y(problems)e(include)h(tracking)f(the)g(stage)f(at)h(which)g(a)f
(v)n(ariable)h(is)f(declared)-150 3607 y(\(as)e(well)g(as)g(its)g
(scope\),)g(the)h(e)o(x)o(ecution)g(of)f(code)h(with)f(free)g(v)n
(ariables,)h(and)-150 3690 y(tracking)26 b(alpha-renamed)i(v)n
(ariables.)e(Of)f(course)i(all)e(the)g(old)h(problems)-150
3773 y(still)35 b(e)o(xist.)h(W)-6 b(e)36 b(illustrate)g(these)h(three)
g(ne)n(w)g(problems)g(with)f(simple)-150 3856 y(e)o(xamples)20
b(belo)n(w)-5 b(.)p Black -106 3994 a Fo(\017)p Black
-42 4001 a Fm(Corr)o(ect)15 b(use)f(of)h(v)o(ariables.)g
Fu(The)g(staged)h(type)f(system)g(helps)g(the)g(user)-42
4084 y(construct)22 b(well)g(formed)g(object-programs.)h(One)f(of)g
(its)f(most)h(useful)-42 4167 y(features)f(is)g(that)g(it)g(tracks)h
(the)f(le)n(v)o(el)g(at)g(which)h(v)n(ariables)g(are)f(bound.)-42
4250 y(Attempts)16 b(to)f(use)i(v)n(ariables)f(at)g(a)g(le)n(v)o(el)g
(lo)n(wer)g(than)g(the)g(le)n(v)o(el)g(at)g(which)-42
4333 y(the)o(y)j(are)g(bound)i(mak)o(es)e(no)h(sense.)f(F)o(or)f(e)o
(xample:)p Black Black -42 4478 a Fl(-|)40 b(fun)g(id)f(x)h(=)f(x;)-42
4561 y(val)h(id)g(=)f(Fn)79 b(:)39 b('a)79 b(->)40 b('a)-42
4727 y(-|)g(<fn)g(x)f(=>)h(~\(id)g(x\))f(-)h(4>;)-42
4810 y(Error:)h(The)e(term:)i(x)78 b(Variable)42 b(bound)e(in)g(stage)g
(1)742 4893 y(used)h(too)f(early)g(in)g(stage)g(0)-42
5038 y Fu(In)28 b(the)h(abo)o(v)o(e)h(e)o(xample)f Fl(x)f
Fu(is)g(a)h(stage)g(1)f(v)n(ariable,)h(b)o(ut)g(because)g(of)-42
5121 y(the)j(anti-quotation)i(it)e(is)g(used)h(at)f(stage)h(0.)f(This)g
(is)g(semantically)-42 5204 y(meaningless)20 b(and)g(should)g(be)f
(reported)g(as)g(a)g(type)h(error)l(.)p Black -106 5348
a Fo(\017)p Black -42 5355 a Fm(Running)e(code)i(with)f(fr)o(ee)h(v)o
(ariables.)g Fu(In)g(MetaML)h(we)f(use)g Fl(run)g Fu(to)-42
5430 y(mo)o(v)o(e)j(from)f(one)h(stage)f(to)g(the)h(ne)o(xt.)f(Because)
h(it)e(is)h(le)o(gal)g(to)g(use)g(the)p Black Black 2150
66 a(anti-quotation)j(under)g(a)f(lambda-binding,)i(there)f(is)f(the)g
(possibility)2150 141 y(that)16 b Fl(run)g Fu(may)h(be)f(applied)h(to)g
(v)n(ariables)f(that)g(will)g(not)g(be)h(bound)g(until)2150
216 y(some)i(later)g(stage.)f(F)o(or)h(e)o(xample:)p
Black Black 2150 336 a Fe(-|)36 b(val)g(bad)g(=)f(<fn)i(x)e(=>)h
(~\(run)h(<x>\))f(+)g(4>;)2150 465 y Fu(will)28 b(cause)i(an)g(error)f
(because)i(the)e(object-v)n(ariable)h Fl(x)g Fu(will)e(not)i(be)2150
548 y(bound)i(until)e(the)g(whole)h(piece)f(of)g(code)i(is)d(run,)i
(and)g(then)f(\002nally)2150 631 y(applied.)p Black 2085
784 a Fo(\017)p Black 2150 791 a Fm(T)-6 b(racking)24
b(Alpha-r)o(enaming)o(.)e Fu(The)i(third)g(problem)h(is)f(v)o(ery)g
(subtle.)2150 874 y(It)18 b(w)o(as)h(described)h(in)f(W)-6
b(alid)18 b(T)-6 b(aha')l(s)19 b(thesis)g(as)g Fr(the)g(puzzle)p
Fu(.)p Black Black 2150 1024 a Fl(-|)39 b(val)h(puzzle)h(=)2267
1107 y(<fn)f(a)g(=>)f(~\(\(fn)i(x)e(=>)h(<x>\)\(fn)h(y)e(=>)h(<a>\)\))g
(0>;)2249 1256 y Fu(Using)29 b(the)g(\(small)g(step\))f(substitution)i
(semantics)f(for)g(a)f(staged)2150 1339 y(language)c(gi)n(v)o(en)f(in)f
(the)g(thesis,)g(the)h(e)o(xpression)g Fl(\(run)40 b(puzzle\))h(5)2150
1422 y Fu(should)34 b(e)n(v)n(aluate)g(to)f Fl(<5>)p
Fu(,)g(b)o(ut)g(the)h(implementation)g(of)f(MetaML)2150
1505 y(raised)d(an)h(error)l(.)f(The)g(subtlety)h(comes)g(because)h
(bound)f(v)n(ariables)2150 1589 y(in)25 b(object)h(code)g(in)g(MetaML)f
(are)h(generati)n(v)o(e.)g(I.e.)f(the)g(object)h(v)n(ari-)2150
1672 y(able)f Fl(a)f Fu(in)h(the)f(puzzle)i(will)e(be)h(alpha)g
(renamed)g(to)g(some)g(ne)n(w)g(v)n(ari-)2150 1755 y(able)i(name,)g
(say)h Fl(a_97)p Fu(.)f(The)g(generati)n(v)o(e)h(approach)g(is)f
(essential)g(to)2150 1838 y(a)o(v)o(oid)e(inadv)o(ertent)h(name)g
(capture)g(in)g(generated)g(code.)g(This)f(name)2150
1921 y(gets)34 b(stored)h(in)f(the)h(en)m(vironment)g(of)g(the)f
(closure)h(implementing)2150 2004 y Fl(\(fn)40 b(y)f(=>)h(<a>\))p
Fu(,)17 b(this)g(closure)h(is)f(then)g(embedded)i(inside)f(the)f(code)
2150 2087 y(v)n(alue)33 b(created)h(by)f(the)g(template)g
Fl(<x>)p Fu(,)g(creating)g(the)g(object)g(code)2150 2170
y Fl(<fn)40 b(a_97)g(=>)f(\045x)h(0>)24 b Fu(where)g(the)g
Fl(\045x)g Fu(is)f(a)h(cross-stage)g(persistent)2150
2253 y(v)n(alue)29 b(link)o(ed)g(to)f(the)g(closure.)g(This)g(v)n(alue)
h(will)e(only)i(be)f(e)o(x)o(ecuted)2150 2336 y(when)h(the)f(lar)o(ger)
g(enclosing)h(code)g Fl(<fn)40 b(a_97)g(=>)g(\045x)g(0>)28
b Fu(is)g(run.)2150 2419 y(When)g(the)g(entailing)h(function)g
Fl(\(fn)40 b(a_97)g(=>)f(\045x)h(0\))29 b Fu(is)e(applied)2150
2502 y(\(to)h(say)h Fl(5)p Fu(\),)f(the)h(v)n(ariable)g
Fl(a_97)h Fu(becomes)g(bound)g(in)e(the)h(en)m(viron-)2150
2585 y(ment)18 b(to)g Fl(5)p Fu(.)f(Someho)n(w)i(this)f(binding)h
(needs)f(to)g(be)h(propagated)g(inside)2150 2668 y(the)14
b(cross-stage)i(persistent)e(function)i(represented)g(by)f
Fl(\045x)p Fu(.)f(Doing)h(this)2150 2751 y(considerably)25
b(complicates)f(the)f(implementation,)h(and)g(inadv)o(ersely)2150
2834 y(af)n(fects)19 b(its)f(ef)n(\002cienc)o(y)-5 b(.)2141
2984 y(The)20 b(kind)g(of)g(errors)g(described)h(abo)o(v)o(e)f(do)h
(not)f(occur)g(in)g(normal)g(\(un-)2042 3067 y(staged\))32
b(programs.)g(The)o(y)g(complicate)g(the)g(semantics,)f(the)h(type)g
(sys-)2042 3150 y(tems,)21 b(and)h(the)g(implementations)h
(meta-programming)g(systems.)f(There)2042 3233 y(has)h(been)h(much)g
(thought)g(put)f(into)g(de)n(vising)i(type-systems)f(which)f(will)2042
3316 y(disallo)n(w)16 b(such)h(programs)h([18,)e(3,)g(37)q(,)g(35].)g
(The)g(author)h(\002nds)g(all)e(of)i(these)2042 3399
y(systems)f(lacking)h(in)f(some)g(de)o(gree)h(or)f(other)m(,)f(e)n(v)o
(en)i(though)g(he)g(had)f(a)g(hand)2042 3482 y(in)j(de)n(vising)h(some)
f(of)g(them.)2141 3565 y(There)36 b(has)g(been)g(much)g(debate)h(about)
f(the)f(third)h(e)o(xample.)g(Is)f(it)2042 3648 y(a)f(good)h(program?)g
(If)e(so)h(then)g(the)g(implementation)h(must)f(be)g(much)2042
3731 y(more)28 b(complicated)h(than)f(it)f(might)h(otherwise)g(be.)f
(If)h(it)f(is)g(not)h(a)g(good)2042 3814 y(program,)j(this)f(raises)g
(tw)o(o)h(questions.)g(First,)e(ho)n(w)i(do)g(we)g(get)f(a)h(type)2042
3897 y(system)17 b(to)f(disqualify)i(it?)e(And,)h(second,)g(ho)n(w)g
(do)g(we)g(kno)n(w)h(we)e(w)o(on')o(t)h(be)2042 3980
y(disqualifying)g(important)f(programs)h(that)f(real)g(users)g(w)o(ant)
h(to)f(write?)f(The)2042 4063 y(second)i(objection)f(is)f(an)h(easier)g
(one)g(to)f(answer)l(.)h(Had)g(the)f(user)h(performed)2042
4146 y(the)j(e)o(xplicit)f(beta)i(reduction)g(inside)f(the)g(escape,)g
(i.e.)f(written:)p Black Black 2042 4296 a Fl(-|)39 b(val)h(puzzle)h(=)
e(<fn)h(a)g(=>)f(~\(<fn)i(y)e(=>)h(<a>>\))g(0>;)2042
4445 y Fu(None)26 b(of)h(the)f(problems)h(associated)g(with)e(this)h(e)
o(xample)h(w)o(ould)g(occur)l(.)2042 4528 y(So)22 b(the)h(challenge)g
(is)g(to)f(come)h(up)g(with)g(a)f(type)h(system)g(that)g(rejects)f(the)
2042 4611 y(original)e(program)h(b)o(ut)f(not)g(this)g(one.)h(In)f(our)
g(opinion,)h(this)f(is)f(a)h(superior)2042 4694 y(solution)26
b(to)g(complicating)g(the)g(implementation)h(to)f(accommodate)h(the)
2042 4777 y(original)17 b(program)h(\(which)g(we)f(belie)n(v)o(e)h(no)f
(one)h(w)o(ould)g(e)n(v)o(er)g(deliberately)2042 4860
y(write\).)2042 5064 y Fx(4.)91 b(MetaML)22 b(as)g(an)h
Fn(\012)p Fx(mega)44 b(pr)n(ogram.)2042 5181 y Fu(In)22
b(this)h(section)f(we)h(play)g(with)f(types.)h(W)-6 b(e)22
b(e)o(xplore,)h(in)f Fs(\012)p Fu(me)o(ga,)h(se)n(v)o(eral)2042
5264 y(dif)n(ferent)e(formulations)g(for)g(a)f(MetaML)i(type)f(system.)
f(W)-6 b(e)21 b(will)f(discard)2042 5347 y(se)n(v)o(eral)30
b(of)g(our)g(attempts,)g(as)g(our)g(e)o(xploration)h(points)f(out)h
(their)e(de\002-)2042 5430 y(ciencies.)d(This)g(section)h(is)f(meant)h
(to)f(illustrate)g(ho)n(w)h Fs(\012)p Fu(me)o(ga)g(is)f(useful)p
Black Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black Black -150 66 a Fu(for)23
b(e)o(xploring)g(language)i(design)e(issues.)g(Those)g(interested)g(in)
g(the)g(\002nal)-150 149 y(MetaML)c(type)h(system)f(may)g(skip)g(ahead)
h(to)f(Section)g(5.)-50 232 y(W)-6 b(e)26 b(will)f(de)n(v)o(elop)j(a)e
(type)h(system)g(for)g(an)f(abstraction)h(of)g(MetaML)-150
315 y(that)32 b(includes)g(all)g(of)g(MetaML)-7 b(')l(s)32
b(important)g(features.)g(It)f(has)h(a)g(stan-)-150 399
y(dard)44 b(lambda)g(calculus)g(fragment,)g(and)g(a)f(staging)h
(fragment.)f(The)-150 482 y(staging)28 b(fragment)g(includes)g(brack)o
(ets,)g(escape,)g(run,)g(and)g(cross-stage-)-150 565
y(persistence.)-50 648 y(As)19 b(we)h(did)g(in)g(Section)g(2.7)g(with)g
(the)g Fl(Lam)g Fu(GADT)-6 b(,)20 b(we)g(represent)g(the)-150
731 y(lambda)e(fragment)f(with)f(tagged)i(de)f(Bruijn)g(style)g(v)n
(ariables.)g(The)g(staging)-150 814 y(fragment)25 b(is)f(more)g
(problematic.)h(Ho)n(w)g(do)f(we)h(deal)f(with)g(the)g(multiple)-150
897 y(le)n(v)o(els)h(in)h(a)f(staged)h(e)o(xpression?)h(The)e(standard)
h(solution[37)r(,)f(36])g(is)g(to)-150 980 y(use)32 b(a)g(le)n(v)o
(el-inde)o(x)o(ed)h(f)o(amily)f(of)g(e)o(xpressions.)h(In)e
Fs(\012)p Fu(me)o(ga)i(we)e(w)o(ould)-150 1063 y(e)o(xtend)20
b(the)f Fl(Lam)g Fu(GADT)f(as)h(follo)n(ws:)p Black Black
-150 1189 a Fl(data)40 b(Lam::)h(Nat)e(~>)h(Row)g(HasType)h(~>)f(*0)f
(~>)h(*0)79 b(where)-72 1272 y(Var)237 b(::)39 b(Label)i(s)e(->)399
1355 y(Lam)h(n)g(\(RCons)g(\(Has)g(s)g(t\))f(env\))i(t)-72
1438 y(Shift)159 b(::)39 b(Lam)h(n)g(env)f(t)h(->)399
1521 y(Lam)g(n)g(\(RCons)g(\(Has)g(s)g(q\))f(env\))i(t)-72
1604 y(Abstract)h(::)d(Label)i(a)e(->)399 1687 y(Lam)h(n)g(\(RCons)g
(\(Has)g(a)g(s\))f(env\))i(t)e(->)399 1770 y(Lam)h(n)g(env)f(\(s)h(->)g
(t\))-72 1853 y(Apply)159 b(::)39 b(Lam)h(n)g(env)f(\(s)h(->)g(t\))g
(->)399 1936 y(Lam)g(n)g(env)f(s)h(->)399 2019 y(Lam)g(n)g(env)f(t)-72
2102 y(Bracket)81 b(::)39 b(Lam)h(n)g(env)f(t)h(->)g(Lam)g(\(S)f(n\))h
(env)g(t)-72 2185 y(Escape)120 b(::)39 b(Lam)h(\(S)g(n\))f(env)h(t)g
(->)g(Lam)f(n)h(env)g(t)-150 2311 y Fu(Note,)25 b(ho)n(w)g(a)h(natural)
f(number)h(inde)o(x)g(is)e(added)j(to)e Fl(Lam)p Fu(,)g(and)h(that)f
(ho)n(w)-150 2394 y(the)37 b(constructor)g(for)g(brack)o(et)g(lifts)f
(the)h(inde)o(x)g(of)g(a)f(term,)g(and)i(ho)n(w)-150
2477 y(the)27 b(constructor)h(for)f(escape)h(drops)g(the)f(inde)o(x)g
(of)g(a)g(term.)g(It)f(is)h(at)g(this)-150 2560 y(point)i(in)g(the)g
(design)h(e)o(xploration)g(that)f(the)g(automation)h(inherent)f(that)
-150 2643 y(the)c(meta-language)h(be)o(gins)f(to)f(payof)n(f.)i(A)e
(well-typed)h(term)f(b)o(uilt)g(with)-150 2726 y(the)30
b(constructors)i(of)e Fl(Lam)h Fu(is)f(a)g(deri)n(v)n(ation)i(of)e(the)
g(type)h(of)g(that)f(term.)-150 2809 y(By)d(entering)g(simple)g(e)o
(xpressions)i(at)d(the)h Fs(\012)p Fu(me)o(ga)h(prompt)f(we)g(get)g
(the)-150 2892 y Fs(\012)p Fu(me)o(ga)i(type)h(system)f(to)g(check)g
(the)g(well-formedness)h(of)f(the)g(deri)n(v)n(a-)-150
2975 y(tion,)i(and)i(to)e(display)i(the)f(type)g(of)g(the)f(term.)h(F)o
(or)f(e)o(xample,)h(by)g(typ-)-150 3058 y(ing:)e Fl(Bracket)41
b(\(Apply)g(\(Var)f(`f\))g(\(Shift)g(\(Var)g(`x\)\)\))31
b Fu(we)f(get)-150 3141 y(the)19 b(follo)n(wing)g(result:)p
Black Black -111 3267 a Fl(Lam)40 b(#\(1+u\))h({`f:a)f(->)g(b,`x:a;)h
(v})e(b)-150 3476 y Fu(Right)14 b(a)o(w)o(ay)-5 b(,)15
b(an)g(error)f(becomes)i(ob)o(vious)g(in)e(our)h(formulation.)f
(Shouldn')o(t)-150 3559 y(an)23 b(e)o(xpression)h(that)f(is)f(brack)o
(eted)i(ha)o(v)o(e)f(a)g(code)g(type?)h(W)-6 b(e)22 b(need)i(typing)
-150 3642 y(rules)19 b(some)g(thing)h(lik)o(e)f(the)g(follo)n(wing)g
(for)g(escape)h(and)f(brack)o(et.)p Black Black -72 3768
a Fl(Bracket)81 b(::)39 b(Lam)h(n)g(env)f(t)h(->)g(Lam)g(\(S)f(n\))h
(env)g(\(Code)g(t\))-72 3851 y(Escape)120 b(::)39 b(Lam)h(\(S)g(n\))f
(env)h(\(Code)h(t\))e(->)h(Lam)g(n)f(env)h(t)-150 3977
y Fu(But,)c(what)g(then)h(is)f Fl(Code)p Fu(?)h(Some)g(thought)g(leads)
g(to)f(the)h(follo)n(wing)-150 4060 y(de\002nition.)p
Black Black -150 4186 a Fl(data)j(Code)g(t)g(=)f(exists)i(env)f(.)f
(Code)h(\(Lam)g(Z)g(env)g(t\))-150 4311 y Fu(Code)17
b(is)e(just)h(a)g Fl(Lam)g Fu(term)g(at)g(le)n(v)o(el)g(zero)g(\()p
Fl(Z)p Fu(\))g(which)g(can)h(be)f(typed)h(in)f(some)-150
4398 y(en)m(vironment)223 4366 y Fd(1)254 4398 y Fu(.)i(No)n(w)-5
b(,)19 b(let')l(s)f(observ)o(e)i(the)f(type)h(of)e(the)h(same)h(term:)p
Black Black -150 4523 a Fl(Bracket)41 b(\(Apply)f(\(Var)h(`f\))e
(\(Shift)i(\(Var)f(`x\)\)\))-150 4606 y(::)g(Lam)g(#\(1+u\))g({`f:a)h
(->)e(b,`x:a;)i(v})f(\(Code)g(b\))-150 4732 y Fu(Almost,)18
b(b)o(ut)g(the)h(en)m(vironment)h(inde)o(x,)e Fl({`f:a)41
b(->)e(b,`x:a;)i(v})p Fu(,)19 b(does)-150 4815 y(not)29
b(indicate)g(the)h(stage)f(at)f(which)i(a)f(v)n(ariable)g(is)g(bound.)h
(This)f(can)g(be)-150 4898 y(\002x)o(ed)d(by)h(making)g(the)f(en)m
(vironment)i(be)e(a)g(ro)n(w)g(of)g(triples)g(\(rather)g(than)-150
4981 y(pairs\).)17 b(W)-6 b(e)17 b(introduce)i(the)e(kind)h
Fl(HasT)g Fu(to)g(encode)h(triples,)d(and)i(adjust)g(the)-150
5064 y(de\002nition)h(of)g Fl(Var)p Fu(,)g Fl(Shift)p
Fu(,)h(and)f Fl(Abstract)p Fu(.)p Black Black -150 5190
a Fl(kind)40 b(HasT)g(=)g(H3)f(Tag)h(Nat)g(*0)p Black
-150 5280 997 3 v -150 5331 a Fd(1)-113 5355 y Fc(Which)23
b(en)m(vironment)h(actually)g(matters,)f(b)o(ut)f(will)g(discuss)g
(this)g(in)g(more)g(detail)-150 5430 y(later)l(.)p Black
Black Black 2042 149 a Fl(data)40 b(Lam::)g(Nat)g(~>)g(Row)g(HasT)g(~>)
g(*0)f(~>)h(*0)79 b(where)2120 232 y(Var)236 b(::)40
b(Label)g(s)g(->)f(Nat')i(n)e(->)2591 315 y(Lam)h(n)f(\(RCons)i(\(H3)f
(s)f(n)h(t\))f(env\))i(t)2120 399 y(Abstract)g(::)f(Label)g(a)g(->)2591
482 y(Lam)g(n)f(\(RCons)i(\(H3)f(a)f(n)h(s\))f(env\))i(t)e(->)2591
565 y(Lam)h(n)f(env)h(\(s)g(->)g(t\))2120 648 y(Shift)158
b(::)40 b(Lam)g(n)f(env)h(t)g(->)2591 731 y(Lam)g(n)f(\(RCons)i(\(H3)f
(s)f(m)h(q\))f(env\))i(t)2042 884 y Fu(When)25 b(a)g(v)n(ariable)h(is)e
(used,)i(it)e(must)h(be)h(applied)f(to)g(a)g(singleton)h
Fl(\(Nat')2042 967 y(n\))19 b Fu(to)h(indicate)g(at)f(what)g(le)n(v)o
(el)h(it)f(w)o(as)g(de\002ned.)h(Consider)g(again)g(the)g(type)2042
1050 y(of)k(the)g(e)o(xample)g(term)g(\(adjusted)h(to)e(include)i(le)n
(v)o(el)f(information)h(on)f(the)2042 1133 y(v)n(ariables\).)p
Black Black 2042 1286 a Fl(Bracket)41 b(\(Apply)f(\(Var)g(`f)g(#0\))g
(\(Shift)h(\(Var)f(`x)f(#0\)\)\))2042 1369 y(::)g(Lam)h(#1)g
({`f^#0:\(a)h(->)f(b\),)g(`x^#0:a;)h(u})f(\(Code)g(b\))2042
1522 y Fu(W)-6 b(e)41 b(ha)o(v)o(e)i(\(again\))f(introduced)i(some)e
(syntactic)h(sugar)l(.)f(When)g(dis-)2042 1605 y(playing)28
b(a)f(type)h(of)f(kind)h Fl(HasT)p Fu(,)f(we)h(display)f
Fl(\(H3)40 b(`tag)g(#n)g(typ\))28 b Fu(as)2042 1688 y
Fl(\(`tag^#n:typ\))p Fu(.)c(A)d(ne)n(w)g(problem)i(arises)e(if)g(the)g
(tw)o(o)g(v)n(ariables)h(come)2042 1771 y(from)f(tw)o(o)g(dif)n(ferent)
g(stages.)g(Assume)g Fl(`f)h Fu(comes)f(from)g(stage)g(0,)g(and)h
Fl(`x)2042 1854 y Fu(from)14 b(stage)h(1,)f(as)h(it)e(might)i(in)f(the)
h(MetaML)g(term)f Fl(\(fn)40 b(f)f(=>)h(<fn)g(x)f(=>)h(f)f(x>\))p
Fu(.)2042 1937 y(This)19 b(mak)o(es)i Fl(`f)g Fu(a)f(cross)g(stage)g
(persistent)g(v)n(alue.)h(W)-6 b(e)19 b(replace)i Fl(\(Var)40
b(`x)2042 2020 y(#0\))30 b Fu(with)g Fl(\(Var)40 b(`x)g(#1\))p
Fu(.)30 b(Observ)o(e)h(the)f(types)h(of)f Fl(f)g Fu(and)g
Fl(x)p Fu(,)g(and)h(the)2042 2103 y(constructor)20 b
Fl(Apply)p Fu(:)p Black Black 2042 2256 a Fl(Var)40 b(`f)f(#0)h(::)g
(Lam)g(#0)f({`f^#0:a;)j(u})d(a)2042 2339 y(Var)h(`x)f(#1)h(::)g(Lam)g
(#1)f({`x^#1:a;)j(u})d(a)2042 2422 y(Apply)h(::)g(Lam)g(u)f(v)h(\(a)f
(->)h(b\))g(->)f(Lam)h(u)g(v)f(a)h(->)f(Lam)h(u)g(v)f(b)2042
2576 y Fu(As)24 b(we)h(intended,)g(the)g(le)n(v)o(els)g(of)g(the)g(tw)o
(o)g(terms)f(no)n(w)h(dif)n(fer)l(.)g(The)f(term)2042
2659 y Fl(f)j Fu(is)f(at)g(le)n(v)o(el)h(0,)g(and)g(the)g(term)f
Fl(x)h Fu(is)f(at)h(le)n(v)o(el)g(1.)f(The)h(application)g(of)g
Fl(f)2042 2742 y Fu(to)18 b Fl(x)h(\(Apply)40 b(\(Var)g(`f)g(#0\))g
(\(Shift)h(\(Var)f(`x)f(#1\)\)\))20 b Fu(will)d(be)i(ill-)2042
2825 y(typed,)e(because)h Fl(Apply)f Fu(requires)g(that)g(the)f(le)n(v)
o(el)h(of)f(the)h(tw)o(o)g(terms)f(be)h(the)2042 2908
y(same.)i(The)g(problem)g(here)h(is)e(similar)g(to)h(the)g(problem)h
(of)f(constructing)h(a)2042 2991 y(term)f(with)g(tw)o(o)g(dif)n(ferent)
h(v)n(ariables)g(with)f(dif)n(ferent)g(names)h(b)o(ut)f(with)g(the)2042
3074 y(same)g(de)g(Bruijn)g(indices.)g(W)-6 b(e)19 b(solv)o(ed)h(that)f
(problem)g(be)h(introducing)g(the)2042 3157 y Fl(Shift)h
Fu(operator)l(.)g(W)-6 b(e)19 b(can)i(solv)o(e)g(the)f(le)n(v)o(el)g
(problem)h(by)g(similar)f(means.)2042 3240 y(Introduce)27
b(a)g(ne)n(w)g(constructor)h(of)e Fl(Lam)h Fu(terms)g(that)f(raises)h
(the)f(le)n(v)o(el)h(of)2042 3323 y(a)e(term.)g(W)-6
b(e)24 b(call)h(this)g(constructor)h Fl(Cross)p Fu(,)g(because)h(it)d
(used)i(when)g(we)2042 3406 y(w)o(ant)19 b(cross-stage)h(persistence.)p
Black Black 2081 3559 a Fl(Cross)158 b(::)40 b(Lam)g(n)f(env)h(t)f(->)h
(Lam)g(\(S)g(n\))f(env)h(t)2042 3712 y Fu(Using)19 b
Fl(Cross)h Fu(on)f Fl(f)p Fu(,)g(the)g(term)f(is)h(no)n(w)g(well)g
(typed:)p Black Black 2042 3865 a Fl(Apply)40 b(\(Cross)h(\(Shift)f
(\(Var)g(`f)g(#0\)\)\))h(\(Var)f(`x)f(#1\))2042 3948
y(::)g(Lam)h(#1)g({`x^#1:a,)h(`f^#0:\(a)g(->)f(b\);)g(u})g(\(Code)g
(b\))2042 4101 y Fu(The)18 b(term)h(is)f(a)g(second)i(le)n(v)o(el)e
(term.)g(This)h(is)f(indicated)h(in)f(the)h(le)n(v)o(el)f(inde)o(x)2042
4184 y(\()p Fl(#1)p Fu(\).)k(It)h(mentions)h(tw)o(o)f(v)n(ariables)g
Fl(f)g Fu(de\002ned)h(at)f(le)n(v)o(el)g Fl(#0)g Fu(with)f(type)i
Fl(\(a)2042 4267 y(->)39 b(b\))p Fu(,)21 b(and)g Fl(x)f
Fu(de\002ned)h(at)f(le)n(v)o(el)g Fl(#1)h Fu(with)f(type)h
Fl(b)p Fu(.)f(The)g(type)h(of)f(the)g(term)2042 4350
y(is)15 b Fl(\(Code)40 b(b\))p Fu(.)15 b(W)-6 b(e)15
b(ha)o(v)o(e)h(succeeded)h(in)e(describing)h(well-formed)g(object-)2042
4433 y(le)n(v)o(el)j(terms)f(using)i(the)f(type)g(system)h(of)f(the)g
(meta-language!)2141 4516 y(Unfortunately)-5 b(,)19 b(while)f(an)g
(interesting)g(e)o(x)o(ercise,)g(this)g(particular)g(path)2042
4599 y(is)j(hard)i(to)f(e)o(xtend.)h(The)f(problem)h(comes)f(from)h(ha)
o(ving)f(v)n(ariables)h(from)2042 4682 y(all)c(le)n(v)o(els)h(in)g(a)g
(single)h(en)m(vironment.)g(Rhetorically)-5 b(,)20 b(should)h(it)e(be)h
(neces-)2042 4765 y(sary)25 b(for)h(the)f(v)n(ariables)h
Fl(f)g Fu(and)g Fl(x)f Fu(to)h(ha)o(v)o(e)f(dif)n(ferent)h(deBruijn)f
(indices?)2042 4848 y(While)16 b(e)o(x)o(ecuting)j(in)e(the)g(second)i
(stage,)e(the)g(en)m(vironment)i(including)f(the)2042
4932 y(binding)h(for)e Fl(f)h Fu(\(as)g(well)f(as)h(the)g(need)h(for)f
Fl(f)p Fu(\))f(will)g(be)h(long)h(gone.)f(The)g(sin-)2042
5015 y(gle)i(en)m(vironment)i(approach)g(also)f(causes)g(man)o(y)h
(problems)f(when)g(doing)2042 5098 y(proofs.)16 b(It)g(is)g(necessary)h
(to)g(construct)f(lemmas)h(which)g(talk)f(about)h(projec-)2042
5181 y(tions)h(o)o(v)o(er)g(en)m(vironments.)h(A)f(projection)h
(projects)f(only)h(those)f(v)n(ariables)2042 5264 y(de\002ned)26
b(a)g(single)g(stage.)f(The)h(k)o(e)o(y)g(to)g(a)f(simple)h(and)g(ele)o
(gant)g(type)g(sys-)2042 5347 y(tem)19 b(for)h(a)f(staged)h(language)i
(is)d(to)g(break)h(from)g(tradition.)f(Do)h(not)g(use)g(an)2042
5430 y(le)n(v)o(el-inde)o(x)o(ed)g(term,)e(and)i(do)f(not)g(use)h(a)f
(single)g(en)m(vironment.)p Black Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black Black Black -150 3 1993 4
v Black Black 38 800 a
 currentpoint currentpoint translate 0.40 0.40 scale neg exch neg exch
translate
 38 800 a 18 w @beginspecial 77
@llx 383 @lly 560 @urx 607 @ury 4830 @rwi @setspecial
%%BeginDocument: stack.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - pictures.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 09:15:57 04/07/05
%%DocumentData: Clean7Bit
%%BoundingBox: 77 383 560 607
%%HiResBoundingBox: 76.744141 382.988617 559.883362 607.116333
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N13/Times-Roman 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1151 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2005-04-07T09:14:33-07:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2005-04-07T09:14:33-07:00'></rdf:Description>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:ca75d274-2fff-44e6-953a-a1197d3629bf'/>
<rdf:Description rdf:about='uuid:23d898e7-c754-42f0-978c-6283490931d4' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - pictures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
77 383 483 224 rectclip
/N11 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: MNLDDN+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.21)
13 dict dup begin
/FontType 1 def
/FontName /MNLDDN+Symbol def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Symbol) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 1 /Gamma 32 /space 45 /minus 48 /zero/one/two
/three 71 /Gamma 138 /minus
/N14/MNLDDN+Symbol -1 TZ
76.744141 382.988617 483.139221 224.127716 re
W
n
q
n
36.040001 755.959961 539.999977 -720.0 re
eoclip
n
n
36.040001 35.959999 539.999977 720.000023 re
1.0 1.0 1.0 setrgbcolor
f
Q
n
308.320007 419.959991 -4.559998 44.76001 re
303.759979 419.959991 m
h
299.320007 462.440002 m
306.039978 476.0 l
312.759979 462.440002 l
0.003922 0.003922 0.003922 setrgbcolor
f
1 J
0.75 w
8.0 M
n
333.039978 563.959961 -54.0 -80.040009 re
279.040009 563.959961 m
h
400.47998 563.959961 -54.0 -80.040009 re
346.47998 563.959961 m
h
454.47998 563.959961 -54.0 -80.040009 re
400.47998 563.959961 m
h
508.47998 563.959961 -54.0 -80.040009 re
454.47998 563.959961 m
h
270.040009 563.959961 -54.0 -80.040009 re
216.039993 563.959961 m
h
216.039993 563.959961 -54.0 -80.040009 re
162.039993 563.959961 m
h
162.039993 563.959961 -54.0 -80.040009 re
108.040001 563.959961 m
h
S
0.0 sg
285.399597 586.280273 m
/N13 15.960007 Tf
(present)
[7.99756 5.332119 7.103803 6.22612 7.103803 7.99756 4.454436 ] pdfxs
412.359802 588.439636 m
(future)
[5.29222 8.040652 4.414536 8.040652 5.29222 7.063903 ] pdfxs
169.359238 585.080078 m
(past)
[8.010327 7.11657 6.238887 4.467204 ] pdfxs
304.239594 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Gamma <1C60D8A8C9B7C05465AA31B7F7197D4ED4340BBB8EF33BC85414001D
80F19014E90E35517432EBC8A3D28A15168E878098164BC3B44308A9CA09873D
D55054372442DB44EA9DBBA32F4DBEEE59DFB292B6BEE0EAA2785DF09AB747A0
AB6DC1EE726F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 1 /Gamma put
pop
end
%ADOEndSubsetFont
/N14 24.0 Tf
(\001) show
318.759583 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D33B1D14157887705178A7A78C297BD731978DD3B6
EAF1E6D698CE8E726EC0E0BF4BD54174B895149D427991846436963DF981DC35
F07A5E43F5D45854DC326ED37324F7E6C5754B886FE897C8ADBBEFC52F76C68> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(0) show
372.519684 520.760315 m
/N14 24.0 Tf
(\001) show
387.039581 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DC54E0D6CD3D5FF71BFC1591E9A6BDC0E5114E72675
8F3266F02439FDC9C2CEEE92C355C9467AF224B8EB7ED7882BBA92F5EE0FFAE0
245A29FC9A7975F1E6BF3CDD2DA91FF0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 49 /one put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(1) show
422.079681 520.760315 m
/N14 24.0 Tf
(\001) show
436.599579 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DC50461563DED76A882B91B396C3C6302F8A071E453
8B58FA876AC68DC1F4B1EFCEFB47A32B5753B7441252734609EABFC0755843C5
7185DC3899485ED70CB3FF2C1262AA818CA1D4DA073F1D0CE6961F622DA81475
346B8817EFEFF5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(2) show
471.519684 520.760315 m
/N14 24.0 Tf
(\001) show
486.039581 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73D33B7A78F980126C683D4AA418F9D791CD8E68412
F223B75F5B66AABEFF149661CEF61E9134DFE3296E7595F4EE56EFCBCABB1ACD
AC0D65842AA9577EED24B0175FEE1EFDB30E48C330E6510F93A14AC5460C7827
4FC1F6AB15DB20BC3E9EB640874A167432CAEDFC84A74FE78FB3B9AE5BE17CB7
D953E09AE5E015D0E4421734B4C8881D5B85F1A96E39CD80A6B3EBD4B3F260E8
E15E6E8FEDF40AD23E605C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 51 /three put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(3) show
236.799698 520.760315 m
/N14 24.0 Tf
(\001) show
251.319687 520.760315 m
%ADOBeginSubsetFont: MNLDDN+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/MNLDDN+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B79676F46FD783B8A2CE84D6DCBCA08607E78F35D0F30F
2A79> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/MNLDDN+Symbol findfont /Encoding get
dup 138 /minus put
pop
end
%ADOEndSubsetFont
/N14 9.960007 Tf
(\2121)
[5.519796 5.031796 ] pdfxs
187.2397 520.760315 m
/N14 24.0 Tf
(\001) show
201.759598 520.760315 m
/N14 9.960007 Tf
(\2122)
[5.519796 5.031796 ] pdfxs
134.079697 520.760315 m
/N14 24.0 Tf
(\001) show
148.599594 520.760315 m
/N14 9.960007 Tf
(\2123)
[5.519796 5.031796 ] pdfxs
n
375.759979 419.959991 -4.440002 44.76001 re
371.319977 419.959991 m
h
366.759979 462.440002 m
373.47998 476.0 l
380.319977 462.440002 l
0.003922 0.003922 0.003922 setrgbcolor
f
n
245.319992 419.959991 -4.559998 44.76001 re
240.759995 419.959991 m
h
236.319992 462.440002 m
243.039993 476.0 l
249.759995 462.440002 l
f
0.0 sg
371.799683 389.840302 m
/N13 18.0 Tf
(Top of the \223future\224 stack)
[10.997864 9.0 9.0 4.5594 9.0 5.993866 4.4406 5.003998 9.0 7.992004 4.5594 
7.992004 5.993866 9.0 5.003998 9.0 5.880466 7.992004 7.992004 4.5594 7.002136 5.003998 
7.992004 7.992004 9.0 ] pdfxs
83.799683 393.440308 m
(Top of the \223past\224 stack)
[11.039263 8.9586 8.9586 4.5594 8.9586 5.952466 4.4406 5.039998 9.0 7.950604 4.5594 
7.950604 8.9586 8.040605 6.960736 4.962598 8.040605 4.5594 6.960736 5.039998 7.950604 8.040605 
8.9586 ] pdfxs
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%EOF

%%EndDocument
 @endspecial 38 800 a
 currentpoint currentpoint translate 1 0.40 div 1 0.40 div scale neg
exch neg exch translate
 38 800 a -150 894 1993 3 v -150
979 a Fm(Figur)o(e)30 b(2.)37 b Fu(A)30 b(typing)i(judgment)f(contains)
h(a)e(\223sliding)h(band\224)h(of)f(type)-150 1062 y(conte)o(xts.)25
b(The)f(band)i(is)e(\223implemented\224)i(using)f(a)f(single)h(type)g
(conte)o(xt,)-150 1145 y(and)31 b(tw)o(o)g(stacks)g(of)g(type)g(conte)o
(xts.)g(The)g(depth)g(of)g(the)g(stacks)g(is)f(un-)-150
1228 y(bounded,)21 b(since)e(a)f(multistage)h(program)h(can)f(ha)o(v)o
(e)g(an)g(arbitrary)g(number)-150 1311 y(of)g(stages.)p
-150 1364 1993 4 v Black -150 1611 a Fx(5.)91 b(Sliding)23
b(Bands)e(of)i(Contexts)-150 1727 y Fu(The)18 b(k)o(e)o(y)g(to)f
(typing)i(staged)f(terms)f(is)h(to)f(think)h(about)h(the)e(en)m
(vironment)i(as)-150 1810 y(a)i(\223sliding)h(band\224)h(of)e(type)h
(conte)o(xts.)f(The)h(lambda)g(fragment)g(binds)g(and)-150
1893 y(looks)i(up)f(v)n(ariables)g(in)g(the)g(\223present\224)h(stage.)
f(Staging)f(operations)i(slide)-150 1976 y(the)17 b(pointer)l(.)g(The)g
(structure)g(of)g(the)g(en)m(vironment)h(is)f(illustrated)g(in)f
(Figure)-150 2060 y(2.)-50 2143 y(Capturing)33 b(this)g(structure)g(in)
g(the)g(object-le)n(v)o(el)g(type)g(system)g(as)g(a)-150
2226 y(meta-le)n(v)o(el)27 b(GADT)e(is)h(an)h(interesting,)f(though)i
(not)e(too)h(dif)n(\002cult)f(e)o(x)o(er)o(-)-150 2309
y(cise.)j(W)-6 b(e)29 b(start)g(by)h(introducing)h(a)f(ne)n(w)g(GADT)f
(for)g(terms)h Fl(Exp)p Fu(.)f(Lik)o(e)-150 2392 y Fl(Lam)p
Fu(,)e(it)f(has)h(multiple)g(inde)o(x)o(es.)g(W)-6 b(e)26
b(write)g Fl(\(Exp)40 b(past)g(now)g(future)-150 2475
y(t\))21 b Fu(where)h Fl(past)g Fu(and)f Fl(future)i
Fu(are)e(stacks)g(of)h(conte)o(xts,)f Fl(now)h Fu(is)e(the)i(cur)o(-)
-150 2558 y(rent)d(en)m(vironment,)h(and)g Fl(t)e Fu(is)h(the)g(type)g
(of)g(the)g(term.)-50 2641 y(F)o(or)f(mnemonic)h(purposes)h(we)f(w)o
(ould)g(lik)o(e)g(the)f(past)h(stack)g(to)f(\223gro)n(w\224)-150
2724 y(on)23 b(the)g(right,)f(and)i(the)f(future)g(stack)g(to)f
(\223gro)n(w\224)i(on)f(the)g(left.)f(T)-6 b(o)22 b(do)i(this)-150
2807 y(we)f(use)h(meta-le)n(v)o(el)f(pairs)g(\(i.e.)f
Fl(\(a,b\))p Fu(\).)i(Unfortunately)-5 b(,)24 b(the)f(type)h(con-)-150
2890 y(structor)15 b(for)g(pairs)h(only)g(allo)n(ws)f(types)h(of)f
(kind)h Fl(*0)f Fu(as)h(ar)o(guments,)f(and)h(en-)-150
2973 y(vironments)k(\(as)f(we)f(ha)o(v)o(e)i(de\002ned)f(them\))g(ha)o
(v)o(e)g(kind)h Fl(\(Row)40 b(HasType\))p Fu(.)-150 3056
y(F)o(ortunately)16 b(we)f(also)h(de\002ned)g(the)f(type)h(constructor)
h Fl(Rec)e Fu(\(for)h(construct-)-150 3139 y(ing)g(records\))h(which)f
(when)h(applied)f(to)g(a)g Fl(\(Row)40 b(HasType\))18
b Fu(has)e(kind)g Fl(*0)p Fu(.)-150 3222 y(T)-6 b(o)19
b(push)h(a)e(conte)o(xt)i Fl(\(r::Row)41 b(HasType\))20
b Fu(on)g(to)e(a)h(right)g(gro)n(wing)h(stack)-150 3305
y Fl(\(past::*0\))i Fu(we)e(write)f Fl(\(past,Rec)41
b(r\))p Fu(,)20 b(and)h(to)f(push)g(a)g(conte)o(xt)h
Fl(r)f Fu(on)-150 3388 y(to)g(a)f(left)h(gro)n(wing)g(stack)h
Fl(future)g Fu(we)e(write)g Fl(\(Rec)41 b(r,future\))p
Fu(.)21 b(K)n(eep-)-150 3471 y(ing)29 b(these)h(e)o(xplanations)g(in)f
(mind)h(study)f(the)h(GADT)e(for)h(e)o(xpressions)-150
3554 y(belo)n(w:)p Black Black -150 3686 a Fl(data)40
b(Cd)g(n)f(f)h(t)f(=)h(Cd)f(\(forall)i(p)f(.)f(Exp)h(p)f(n)h(f)f(t\))
-150 3852 y(data)h(Exp::)h(*0)e(~>)h(Row)g(HasType)h(~>)e(*0)h(~>)g(*0)
f(~>)h(*0)g(where)-72 3935 y(--)g(The)g(lambda)h(fragment)-72
4018 y(V::)f(Label)h(s)e(->)h(Exp)g(p)f(\(RCons)i(\(Has)f(s)f(t\))h
(env\))g(f)g(t)-72 4101 y(Sh::)80 b(Exp)40 b(p)f(env)h(f)g(t)f(->)164
4184 y(Exp)h(p)f(\(RCons)i(\(Has)f(s)f(q\))h(env\))g(f)g(t)-72
4267 y(Abs::)h(Label)f(x)g(->)164 4350 y(Exp)g(p)f(\(RCons)i(\(Has)f(x)
f(s\))h(n\))g(f)f(t)h(->)164 4433 y(Exp)g(p)f(n)h(f)f(\(s)h(->)f(t\))
-72 4516 y(App::)i(Exp)f(p)f(n)h(f)f(\(t1->t\))i(->)164
4599 y(Exp)f(p)f(n)h(f)f(t1)h(->)164 4682 y(Exp)g(p)f(n)h(f)f(t)-72
4848 y(--)h(the)g(staging)h(fragment)-72 4932 y(Br::)80
b(Exp)40 b(\(p,Rec)g(n\))g(c)f(f)h(t)f(->)164 5015 y(Exp)h(p)f(n)h
(\(Rec)g(c,f\))g(\(Cd)g(c)f(f)h(t\))-72 5098 y(Esc::)h(Exp)f(p)f(b)h
(\(Rec)g(n,f\))g(\(Cd)g(n)f(f)h(t\))f(->)164 5181 y(Exp)h(\(p,Rec)g
(b\))g(n)f(f)h(t)-72 5264 y(Csp::)h(Exp)f(p)f(b)h(\(Rec)g(n,f\))g(t)f
(->)164 5347 y(Exp)h(\(p,Rec)g(b\))g(n)f(f)h(t)-72 5430
y(Run::)h(\(forall)g(x)e(.)h(Exp)f(p)h(n)f(\(Rec)i(x,f\))f(\(Cd)g(x)f
(f)g(t\)\))h(->)p Black Black 2356 66 a(Exp)g(p)f(n)g(f)h(t)2120
232 y(--)g(pairs)g(and)g(constants)2120 315 y(Pair::)h(Exp)f(p)f(n)h(f)
f(s)h(->)2395 399 y(Exp)g(p)f(n)h(f)f(t)h(->)2395 482
y(Exp)g(p)f(n)h(f)f(\(s,t\))2120 565 y(Const::)i(t)f(->)f(Exp)h(past)g
(now)g(future)h(t)2042 690 y Fu(The)16 b(type)h Fl(Cd)g
Fu(is)f(similar)g(to)g(the)h(type)g Fl(Code)g Fu(from)f(Section)h(4.)f
(It)g(is)g(nothing)2042 773 y(more)j(than)h(a)f(restricted)g(form)h(of)
f Fl(Exp)p Fu(,)g(and)h(is)f(the)g(meta-le)n(v)o(el)h(type)f(used)2042
856 y(to)27 b(implement)g(object)h(le)n(v)o(el)f(terms)f(with)h(code)h
(type.)f(In)g(the)g(e)o(xamples)2042 939 y(belo)n(w)21
b(we)g(often)g(contrast)g Fl(Lam)h Fu(terms)f(from)g(Section)f(4)h
(with)g Fl(Exp)g Fu(terms)2042 1022 y(from)31 b(this)f(section)i(and)f
(the)g(distiction)g(between)h Fl(Code)f Fu(\(used)h(in)f
Fl(Lam)2042 1105 y Fu(terms\))18 b(and)i Fl(Cd)f Fu(\(used)h(in)e
Fl(Exp)i Fu(terms\))e(is)h(important.)2141 1188 y(The)24
b Fl(Exp)g Fu(type)g(is)g(ho)n(w)g(we)g(represent)g(object-le)n(v)o(el)
g(MetaML)g(terms)2042 1271 y(in)32 b Fs(\012)p Fu(me)o(ga.)h(The)f
(lambda)h(fragment)g(of)f(the)g(language)i(is)e(completely)2042
1354 y(standard.)e(It)f(basically)h(ignores)g(\(by)g(k)o(eeping)i
(constant\))e(the)g(\002rst)e(and)2042 1437 y(third)34
b(inde)o(x)o(es)h(which)g(are)g(the)f(stacks)h(of)f(conte)o(xts.)h(Its)
f(approach)i(to)2042 1520 y(v)n(ariables)15 b(is)f(the)h(same)g(as)g
(in)f(the)h Fl(Lam)g Fu(object-language,)i(using)e Fl(Sh)g
Fu(to)f(shift)2042 1604 y(v)n(ariables)27 b(into)f(increasing)h(de)f
(Bruijn)g(indices.)h(The)f(staging)h(fragment)2042 1687
y(is)35 b(reminiscent)g(of)h(the)f(le)n(v)o(el)g(inde)o(x)o(ed)i
Fl(Lam)f Fu(terms.)e(But)h(rather)h(than)2042 1770 y(changing)d(the)e
(le)n(v)o(el)g(inde)o(x,)h(these)f(constructors)i(manipulate)f(the)f
(tw)o(o)2042 1853 y(conte)o(xt)20 b(stacks.)f(Let')l(s)f(compare)j(the)
e(brack)o(et)h(constructor)g(from)g(the)f(tw)o(o)2042
1936 y(approaches.)p Black Black 2042 2061 a Fl(Bracket)41
b(::)e(Lam)h(u)g(v)f(a)h(->)2473 2144 y(Lam)g(#\(1+u\))h(v)e(\(Code)i
(a\))2042 2310 y(Br)236 b(::)39 b(Exp)h(\(a,Rec)h(u\))e(v)h(b)f(c)h(->)
2473 2393 y(Exp)g(a)g(u)f(\(Rec)h(v,b\))g(\(Cd)g(v)g(b)f(c\))2042
2519 y Fu(While)23 b(the)g Fl(Lam)h Fu(brack)o(et)h(constructor)f
(increments)g(the)g(le)n(v)o(el)f(inde)o(x,)h(the)2042
2602 y Fl(Exp)16 b Fu(brack)o(et)g(constructor)h(shifts)e(the)h(top)g
(conte)o(xt)g(on)g(the)g(past)g(stack)g(\()p Fl(Rec)2042
2685 y(u)p Fu(\))21 b(into)g(the)g(no)n(w)h(conte)o(xt,)g(and)g(shifts)
e(the)i(current)f(conte)o(xt)h(\()p Fl(v)p Fu(\))f(onto)h(the)2042
2768 y(top)d(of)g(the)g(future)g(stack.)p Black Black
2042 2894 a Fl(Escape)40 b(::)g(Lam)g(#\(1+u\))h(v)e(\(Code)h(a\))g(->)
2434 2977 y(Lam)g(u)f(v)h(a)2042 3143 y(Esc)157 b(::)40
b(Exp)g(a)f(u)h(\(Rec)g(v,b\))g(\(Cd)g(v)g(b)f(c\))h(->)2434
3226 y(Exp)g(\(a,Rec)h(u\))e(v)h(b)f(c)2042 3392 y(Cross)79
b(::)40 b(Lam)g(u)f(v)h(a)f(->)2434 3475 y(Lam)h(#\(1+u\))h(v)e(a)2042
3641 y(Csp)157 b(::)40 b(Exp)g(a)f(u)h(\(Rec)g(v,b\))g(c)g(->)2434
3724 y(Exp)g(\(a,Rec)h(u\))e(v)h(b)f(c)2042 3850 y Fu(A)24
b(similar)g(\(b)o(ut)g(in)m(v)o(erse\))h(relationship)h(holds)f(for)g
(the)f(escape)i(operator)l(.)2042 3933 y(The)17 b(cross-stage)h
(persistence)g(operator)m(,)g(rather)g(than)f(changing)j(the)d(le)n(v)o
(el)2042 4016 y(of)g(a)g(term,)f(cause)h(its)g(ar)o(gument)g(to)g
(reach)g(into)g(the)g(top)g(most)g(past)g(conte)o(xt)2042
4099 y(to)i(compute)h(its)f(type.)g(Lets)g(observ)o(e)i(the)e(type)h
(of)f(our)h(e)o(xample)g(from)f(the)2042 4182 y(pre)n(vious)h(section)f
(in)g(both)h(systems.)p Black Black 2042 4308 a Fl(Apply)40
b(\(Cross)h(\(Shift)f(\(Var)g(`f)g(#0\)\)\))h(\(Var)f(`x)f(#1\))2042
4391 y(::)g(Lam)h(#1)g({`x^#1:a,)h(`f^#0:\(a)g(->)f(b\);)g(u})g(b)2042
4557 y(App)g(\(Csp\(Sh\(V)h(`f\)\)\))f(\(V)g(`x\))2042
4640 y(::)f(Exp)h(\(a,Rec)h({u:b,`f:c)g(->)f(d;)g(v}\))g({`x:c;)g(w})g
(e)f(d)2042 4806 y(App)h(\(Csp)g(\(V)g(`f\)\))g(\(V)f(`x\))2042
4889 y(::)g(Exp)h(\(a,Rec)h({`f:c)f(->)g(d;)g(v}\))g({`x:c;)g(w})g(e)f
(d)2042 5015 y Fu(Notice)24 b(ho)n(w)i(the)e(en)m(vironment)j(of)d(the)
h(tw)o(o)g(stages)g(is)f(no)n(w)h(completely)2042 5098
y(separate.)19 b(Both)g Fl(f)g Fu(and)h Fl(x)f Fu(could)g(li)n(v)o(e)g
(at)g(the)g(same)g(de)g(Bruijn)g(inde)o(x)h(since)2042
5181 y(the)25 b(tw)o(o)g(en)m(vironments)h(are)f(disjoint.)g(The)f
(third)h(term)g(illustrates)f(what)2042 5264 y(happens)e(when)g(we)f
(de)g(Bruijn)f(shift)h(neither)g(v)n(ariable.)g(If)g(we)g(le)n(v)o(el)f
(shift)2042 5347 y(the)c(last)g(e)o(xpression)h(by)g(wrapping)h(the)e
(whole)h(thing)f(inside)h(a)f(brack)o(et)h(we)2042 5430
y(obtain.)p Black Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black Black Black Black -150 66
a Fl(Br\(App)41 b(\(Csp)f(\(V)f(`f\)\))i(\(V)e(`x\)\))-150
149 y(::)h(Exp)g(a)f({`f:c)h(->)g(d;)g(v})203 232 y(\(Rec)g({`x:c;)h
(w},e\))203 315 y(\(Cd)f({`x:c;)h(w})e(e)h(d\))-150 457
y Fu(Notice)23 b(ho)n(w)h(the)f Fl(Br)h Fu(shifts)e(the)i(top)f(conte)o
(xt)h(in)f(the)g(past)h(stack)f(into)g(the)-150 540 y(current)16
b(en)m(vironment,)g(and)g(mak)o(es)g(the)g(type)g(of)f(the)g(resulting)
h(e)o(xpression)-150 623 y(ha)o(v)o(e)j(code)h(type.)-50
706 y(The)27 b(last)f(staging)i(fragment)g(constructor)g(is)e
Fl(Run)p Fu(.)h(The)h(typing)f(rule)-150 789 y(for)f(run)g(is)f
(intimately)g(tied)h(with)f(the)h(declaration)g(for)g(code.)g(As)g(in)f
(the)-150 872 y(le)n(v)o(el)31 b(inde)o(x)o(ed)g(e)o(xample,)g(code)h
(is)e(should)i(be)e(nothing)i(more)f(than)g(an)-150 955
y(e)o(xpression)20 b(at)f(le)n(v)o(el)g(0)g(typed)g(in)g(some)h(en)m
(vironment.)p Black Black -150 1079 a Fl(data)40 b(Cd)g(n)f(f)h(t)f(=)h
(Cd)f(\(forall)i(p)f(.)f(Exp)h(p)f(n)h(f)f(t\))-150 1204
y Fu(A)25 b(term)g(is)g(at)g(le)n(v)o(el)h(0)f(if)g(it)g(has)h(no)g
(embedded)h(escapes)f(or)g(cross-stage)-150 1287 y(persistent)33
b(sub-terms.)g(W)-6 b(e)33 b(capture)g(this)g(by)h(requiring)f(that)g
(the)g(past)-150 1370 y(en)m(vironment)28 b(is)e(uni)n(v)o(ersally)i
(quanti\002able.)e(T)-6 b(o)27 b(better)f(understand)j(this)-150
1453 y(requirement,)21 b(consider)g(a)g(term)f(with)g(an)h(embedded)h
(escape)g(v)o(ersus)f(one)-150 1536 y(without.)p Black
Black -150 1660 a Fl(App)40 b(\(Esc)g(\(V)g(`f\)\))g(\(Const)g(3\))-150
1743 y(::)g(Exp)g(\(a,Rec)g({`f:Cd)h(u)e(b)h(\(Int)g(->)g(c\);)f(v}\))h
(u)g(b)f(c)-150 1910 y(App)h(\(V)g(`f\))g(\(Const)g(3\))-150
1993 y(::)g(Exp)g(a)f({`f:Int)i(->)f(b;)f(u})h(c)f(b)-150
2117 y Fu(Notice)19 b(the)g(rich)g(structure)g(of)g(the)g(past)g(stack)
p Black Black -150 2242 a Fl(\(a,Rec)41 b({`f:Cd)f(u)g(b)f(\(Int)h(->)g
(c\);)g(v}\))-150 2366 y Fu(when)18 b(the)g(escape)g(is)g(present,)g
(and)g(that)f(it)g(is)h(simply)f(a)h(uni)n(v)o(ersally)g(quan-)-150
2449 y(ti\002ed)28 b(v)n(ariable)h(\()p Fl(a)p Fu(\))f(when)h(there)g
(are)f(no)h(escapes.)g(It)f(seems)h(polymor)o(-)-150
2532 y(phism)d(is)g(as)g(useful)g(as)g(counting)h(le)n(v)o(els!)f
(Finally)g(we)f(can)i(e)o(xplain)f(the)-150 2615 y(type)19
b(for)g(the)g(run)g(construct.)p Black Black -150 2740
a Fl(data)40 b(Exp::)h(*0)e(~>)h(Row)g(HasType)h(~>)e(*0)h(~>)g(*0)f
(~>)h(*0)g(where)-72 2823 y(...)-72 2906 y(Run::)h(\(forall)g(x)e(.)h
(Exp)f(p)h(n)f(\(Rec)i(x,f\))f(\(Cd)g(x)f(f)g(t\)\))h(->)164
2989 y(Exp)g(p)f(n)h(f)f(t)-50 3113 y Fu(A)16 b(piece)i(of)f(code)h
(can)f(be)g(run)h(if)e(it)g(has)i(no)f(free)g(v)n(ariables.)g(W)-6
b(e)17 b(use)g(the)-150 3196 y(same)25 b(trick)f(for)h(testing)f(for)h
(the)f(lack)h(of)f(free)h(v)n(ariables,)g(as)f(we)h(did)f(for)-150
3279 y(testing)g(for)g(the)g(lack)g(of)g(escapes:)g(polymorphism.)h(A)f
(term)f(can)i(be)f(run)-150 3362 y(only)17 b(if)e(has)i(code)g(type)f
Fl(\(Cd)40 b(x)g(f)f(t\))p Fu(,)16 b(and)h(the)f(current)h(en)m
(vironment)h(\()p Fl(x)p Fu(\))-150 3445 y(is)h(uni)n(v)o(ersally)g
(quanti\002able.)-50 3528 y(Re\003ect)f(for)h(a)g(minute)h(on)f(what)g
(we)g(ha)o(v)o(e)g(just)g(done.)h(The)f(meta-le)n(v)o(el)-150
3611 y(types)28 b(of)g(the)g(constructors)g(for)g(the)f(object-le)n(v)o
(el)i(terms)e Fl(Exp)h Fu(speci\002es)-150 3694 y(a)k(complete)h(type)g
(system)g(for)f(object-le)n(v)o(el)h(terms)g(for)f(a)g(multi-stage)-150
3778 y(language)c(with)f(all)f(the)h(features)g(of)f(brack)o(et,)i
(escape,)f(run,)g(and)g(cross-)-150 3861 y(stage)k(persistence.)f(The)g
(correspondence)j(between)e(typing)g(rules)g(and)-150
3944 y(the)f(types)h(of)f(the)h(object-le)n(v)o(el)f(constructors)i(is)
d(one-to-)i(one.)g(This)f(is)-150 4027 y(illustrated)19
b(in)f(Figure)h(3.)-150 4176 y Fm(5.1)75 b(An)18 b(Ev)o(aluation)h
(Function.)-150 4292 y Fu(The)c(last)g(step)h(is)f(to)h(sho)n(w)g(that)
f(the)h(e)n(v)n(aluation)g(of)g(a)f(well)g(typed)h(term)g(does)-150
4375 y(not)23 b(go)g(wrong.)h(There)e(are)h(se)n(v)o(eral)g(w)o(ays)h
(to)f(describe)g(what)g(e)n(v)n(aluation)-150 4458 y(means.)j(In)g
(this)g(section)h(we)f(de\002ne)g(an)g(interpreter)g(just)g(as)g(we)g
(did)g(for)-150 4541 y Fl(Lam)21 b Fu(in)f(Section)g(2.7,)h(we)f
(introduce)h(an)g(e)n(v)n(aluation)h(function)f(with)f(type:)-150
4624 y Fl(Exp)40 b(past)g(now)g(future)h(t)e(->)23 b(Rec)40
b(now)g(->)f(t)p Fu(.)23 b(Ev)o(ery)f(well)h(typed)-150
4707 y Fl(Exp)16 b Fu(term)g(with)g(type)g Fl(t)g Fu(under)h(an)f(en)m
(vironment)h(with)f(shape)h Fl(now)f Fu(is)f(gi)n(v)o(en)-150
4790 y(meaning)20 b(as)f(a)g(function)h(from)e(a)h(record)h(with)e
(shape)i Fl(now)g Fu(to)e Fl(t)p Fu(.)p Black Black -150
4932 a Fl(eval)40 b(::)g(Exp)g(past)g(now)g(future)g(t)g(->)g(Rec)f
(now)h(->)g(t)-150 5015 y(eval)g(\(Const)h(n\))e(env)h(=)g(n)-150
5098 y(eval)g(\(V)g(a\))79 b(\(RecCons)41 b(b)e(y)h(x\))f(=)h(y)-150
5181 y(eval)g(\(Sh)g(e\))g(\(RecCons)h(b)e(x)h(y\))f(=)h(eval)g(e)f(y)
-150 5264 y(eval)h(\(App)g(f)g(x\))f(env)h(=)g(\(eval)g(f)g(env\))g
(\(eval)g(x)g(env\))-150 5347 y(eval)g(\(Abs)g(a)g(e\))f(env)h(=)g(\\)f
(v)h(->)f(eval)i(e)e(\(RecCons)i(a)e(v)h(env\))-150 5430
y(eval)g(\(Pair)h(x)e(y\))h(env)g(=)f(\(eval)h(x)g(env,)g(eval)g(y)g
(env\))p Black Black 2042 66 a(eval)g(\(Br)g(e\))g(env)f(=)h(Cd)g(\(bd)
f(\(EnvZ)i(env\))f(e\))2042 149 y(eval)g(\(Run)g(e\))g(env)g(=)f(case)h
(eval)g(e)g(env)g(of)2866 232 y(Cd)f(x)h(->)f(eval)i(x)e(RecNil)2141
372 y Fu(As)27 b(al)o(w)o(ays,)h(once)g(the)f(type)h(system)f(is)g
(right,)g(the)g(e)n(v)n(al)h(function)f(is)2042 455 y(simplicity)18
b(itself.)g(Lets)h(consider)g(the)g(cases)h(one)f(at)g(a)g(time.)p
Black 2085 587 a Fo(\017)p Black 2150 594 a Fw(\(Const)d(n\))p
Fm(.)j Fu(Constants)g(e)n(v)n(aluate)h(to)f(themselv)o(es.)p
Black 2085 687 a Fo(\017)p Black 2150 694 a Fw(\(V)k(a\))p
Fm(.)j Fu(The)h(v)n(alue)g(of)g(e)n(v)o(ery)g(\(unshifted\))g(v)n
(ariable)g(is)g(stored)f(as)h(the)2150 777 y(\002rst)19
b(element)h(of)g(the)g(record)g(storing)g(the)g(en)m(vironment.)h
(There)f(is)g(no)2150 860 y(need)27 b(to)g(check)h(that)e(the)h(label)g
Fl(a)g Fu(and)g Fl(b)g Fu(match,)g(because)h(the)f(type)2150
943 y(system)19 b(ensures)h(that)e(the)o(y)i(do.)p Black
2085 1035 a Fo(\017)p Black 2150 1042 a Fw(\(Sh)29 b(e\))p
Fm(.)k Fu(A)g(shifted)g(e)o(xpression)h(ignores)g(the)f(\002rst)f
(element)i(of)f(the)2150 1125 y(record.)23 b(Simply)g(e)n(v)n(aluate)h
(the)f(unshifted)i(e)o(xpression)f(in)f(the)g(rest)g(of)2150
1208 y(the)c(record.)p Black 2085 1301 a Fo(\017)p Black
2150 1308 a Fw(\(A)n(pp)27 b(f)f(x\))p Fm(.)k Fu(Ev)n(aluate)h(the)f
(function)h(part)f(of)g(the)h(application.)f(This)2150
1391 y(must)j(be)h(a)f(function.)g(Apply)h(it)f(to)g(the)g(result)g(of)
g(e)n(v)n(aluating)i(the)2150 1474 y(ar)o(gument)19 b(part)g(of)g(the)g
(application.)p Black 2085 1567 a Fo(\017)p Black 2150
1574 a Fw(\(Abs)24 b(a)g(e\))p Fm(.)k Fu(The)g(result)f(of)h(an)f
(abstraction)i(must)e(be)h(a)g(function,)g(so)2150 1657
y(we)k(return)g(a)g(meta-le)n(v)o(el)h(lambda)g(abstraction.)f(The)g
(body)i(of)e(the)2150 1740 y(object-le)n(v)o(el)24 b(term)f(is)g(well)g
(typed)h(in)g(an)g(en)m(vironment)h(which)f(maps)2150
1823 y(its)15 b(formal)g(parameter)h(to)g(the)f(\002rst)g(element)h(of)
f(the)h(record.)g(So)f(simply)2150 1906 y(e)n(v)n(aluate)25
b(the)f(body)h(in)f(a)g(ne)n(w)g(record)h(with)e(the)h(meta-le)n(v)o
(el)g(lambda)2150 1989 y(bound)c(v)n(alue)g(as)f(an)g(additional)h
(element)f(at)f(the)h(front.)p Black 2085 2081 a Fo(\017)p
Black 2150 2088 a Fw(\(P)o(air)f(x)f(y\))p Fm(.)i Fu(Ev)n(aluate)g
(each)h(part)f(of)g(a)g(pair)m(,)g(and)h(b)o(uild)f(a)g(pair)g(with)g
(the)2150 2171 y(result.)p Black 2085 2264 a Fo(\017)p
Black 2150 2271 a Fw(\(Br)f(e\))p Fm(.)j Fu(Build)f(an)g(e)o(xpression)
h(that)f(is)g(polymorphic)i(in)e(the)g(past)g(with)2150
2354 y(the)j(function)i Fl(bd)p Fu(,)e(then)h(mak)o(e)h(code)f(out)g
(of)f(it)g(with)h(the)f(constructor)2150 2437 y(for)33
b(code)i Fl(Cd)p Fu(.)f(W)-6 b(e)33 b(discuss)h(b)o(uilding)g(code)h
(with)e Fl(bd)h Fu(in)g(the)g(ne)o(xt)2150 2520 y(section.)p
Black 2085 2613 a Fo(\017)p Black 2150 2620 a Fw(\(Run)14
b(e\))p Fm(.)j Fu(The)g(e)o(xpression)h Fl(e)e Fu(must)h(e)n(v)n
(aluate)h(to)e(code)i(whose)f(underly-)2150 2703 y(ing)g
Fl(Exp)h Fu(is)f(typable)h(in)f(an)o(y)h(en)m(vironment.)g(Thus,)f(e)n
(v)n(aluate)h Fl(e)p Fu(,)f(e)o(xtract)2150 2786 y(the)24
b(code)h Fl(x)p Fu(,)f(and)h(e)n(v)n(aluate)h(that)e(in)g(the)g(empty)h
(record.)g(An)o(y)f(record)2150 2869 y(will)18 b(do,)h
Fl(RecNil)h Fu(is)e(a)h(con)m(v)o(enient)i(one.)2042
3016 y Fm(5.2)75 b(Building)17 b(code.)2042 3132 y Fu(T)-6
b(o)26 b(e)n(v)n(aluate)h(a)f(code)g(template,)g(that)g(is)g(an)g
Fl(Exp)g Fu(whose)h(top-le)n(v)o(el)g(con-)2042 3215
y(structor)i(is)g Fl(Br)p Fu(,)g(we)g(must)g(w)o(alk)g(o)o(v)o(er)h
(the)f(term)g(remo)o(ving)h(embedded)2042 3298 y(escapes)18
b(and)g(cross-stage)g(persistent)f(terms.)g(Inside)h(a)f(brack)o(et)h
(these)g(tw)o(o)2042 3381 y(kinds)k(of)g(subterms)g(are)f(the)h(only)g
(ones)h(that)e(refer)g(to)h(v)n(alues)g(in)g(the)g(cur)o(-)2042
3464 y(rent)29 b(\(or)g(past\))g(en)m(vironments.)h(W)-6
b(e)28 b(must)h(embed)h(these)f(v)n(alues)h(in)f(the)2042
3547 y(code)22 b(produced)h(no)n(w)-5 b(,)22 b(because)g(when)g(the)f
(resulting)h(code)g(is)f(e)n(v)n(aluated,)2042 3630 y(the)f(v)n(alues)i
(in)e(the)h(current)f(en)m(vironment)i(will)e(no)h(longer)g(be)g
(accessible.)2042 3713 y(T)-6 b(o)20 b(understand)i(this,)e(recall)g
(ho)n(w)h(run)g(e)n(v)n(aluates)g(code)g(in)f(the)h(empty)g(en-)2042
3796 y(vironment.)j(If)e(we)h(don')o(t)h(capture)g(the)f(v)n(alues)h
(of)f(v)n(ariables)h(from)f(lo)n(wer)2042 3879 y(le)n(v)o(els)i(when)h
(the)f(code)h(is)e(b)o(uilt,)g(it)h(will)f(be)h(too)g(late)g(when)h
(the)f(code)g(is)2042 3962 y(run.)2141 4045 y(Escapes)e(are)g(remo)o(v)
o(ed)g(by)g(splicing)g(in)f(the)h(code)g(obtained)h(by)f(e)n(v)n(al-)
2042 4128 y(uating)i(the)h(term)f(inside)g(the)g(escape.)h(This)f(is)f
(ho)n(w)i(template)f(holes)h(are)2042 4211 y(spliced)f(in.)g
(Cross-stage)h(persistent)f(term)g(are)g(remo)o(v)o(ed)h(by)g(e)n(v)n
(aluating)2042 4294 y(them)c(in)f(the)h(current)g(en)m(vironment,)h
(and)f(lifting)g(the)f(v)n(alue)i(obtained)g(up)2042
4377 y(to)17 b(the)g(code)h(le)n(v)o(el.)g(If)e(all)h(the)g(escapes)i
(and)f(all)e(the)i(cross-stage)g(persistent)2042 4460
y(terms)g(are)f(remo)o(v)o(ed,)i(the)f(resulting)g(e)o(xpression)h
(will)e(be)i(polymorphic)g(in)2042 4543 y(the)25 b(past)g(stack.)g
(This)g(is)g(captured)h(by)f(the)h(type)f(of)g(the)g(b)o(uild)g
(function:)2042 4626 y Fl(\(bd)40 b(::)f(Env)h(a)g(z)f(->)h(Exp)g(a)f
(n)h(f)f(t)h(->)f(Exp)h(z)g(n)f(f)h(t\))p Fu(.)63 b(Note)2042
4709 y(ho)n(w)20 b(the)f(past)h(inde)o(x)g(\()p Fl(z)p
Fu(\))f(of)g(the)h Fl(Exp)f Fu(in)h(the)f(range)h(of)f
Fl(bd)h Fu(is)f(unrelated)h(to)2042 4792 y(the)f(type)g(of)g(the)g
(past)g(stack)g(\()p Fl(a)p Fu(\))g(of)g(the)g(input)g
Fl(Exp)p Fu(.)2141 4875 y(The)30 b Fl(bd)f Fu(function)h(w)o(alks)g(o)o
(v)o(er)g(an)f(e)o(xpression,)i(cop)o(ying)g(it)d(e)o(xcept)2042
4958 y(when)15 b(it)f(reaches)i(an)f(escape)h(or)f(cross-stage)g
(persistent)g(sub-term.)g(Notice)2042 5041 y(ho)n(w)k(only)h(the)f
(cases)g(for)g Fl(Esc)g Fu(and)h Fl(Csp)f Fu(do)h(an)o(ything)g
(interesting.)p Black Black 2042 5181 a Fl(data)40 b(Env::)g(*0)g(~>)g
(*0)f(~>)h(*0)g(where)2120 5264 y(EnvZ::)h(a)e(->)h(Env)g(\(b,a\))g(c)
2120 5347 y(EnvS::)80 b(Env)40 b(a)f(b)h(->)g(Env)f(\(a,c\))i(\(b,c\))p
Black Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black Black Black Black Black
241 631 a
 currentpoint currentpoint translate 0.85 0.85 scale neg exch neg exch
translate
 241 631 a 19 w @beginspecial 54 @llx 611 @lly
532 @urx 693 @ury 4780 @rwi @setspecial
%%BeginDocument: rules.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - pictures.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 16:11:59 04/14/05
%%DocumentData: Clean7Bit
%%BoundingBox: 54 611 532 693
%%HiResBoundingBox: 54.069733 611.476807 531.976379 693.453491
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_CFF PSVER
userdict /ct_CffDict 6 dict put     
ct_CffDict begin                    
/F0Subr     
{
    systemdict /internaldict known 
   {
      1183615869 systemdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } 
   {
      userdict /internaldict known not 
        { 
          userdict /internaldict 
          {
               count 0 eq 
             {/internaldict errordict /invalidaccess get exec} if 
             dup type /integertype ne 
             {/internaldict errordict /invalidaccess get exec} if 
             dup 1183615869 eq
             {pop 0} 
             {/internaldict errordict /invalidaccess get exec} 
             ifelse 
          } 
          dup 14 get 1 25 dict put 
          bind executeonly put 
       } if 
       1183615869 userdict /internaldict get exec 
       /FlxProc known {save true} {false} ifelse
    } ifelse
    [ 
       systemdict /internaldict known not 
       { 100 dict /begin cvx /mtx matrix /def cvx } if 
       systemdict /currentpacking known {currentpacking true setpacking} if 
       { 
          systemdict /internaldict known { 
          1183615869 systemdict /internaldict get exec 
          dup /$FlxDict known not { 
          dup dup length exch maxlength eq 
          { pop userdict dup /$FlxDict known not
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } if } 
          { 100 dict begin /mtx matrix def 
          dup /$FlxDict currentdict put end } 
          ifelse 
          } if /$FlxDict get begin } if 
          grestore 
          /exdef {exch def} def 
          /dmin exch abs 100 div def 
          /epX exdef /epY exdef 
          /c4y2 exdef /c4x2 exdef /c4y1 exdef /c4x1 exdef /c4y0 exdef /c4x0 exdef 
          /c3y2 exdef /c3x2 exdef /c3y1 exdef /c3x1 exdef /c3y0 exdef /c3x0 exdef 
          /c1y2 exdef /c1x2 exdef /c2x2 c4x2 def /c2y2 c4y2 def 
          /yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def 
          /PickCoords {  
          {c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2} 
          {c3x0 c3y0 c3x1 c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2} 
          ifelse 
          /y5 exdef /x5 exdef /y4 exdef /x4 exdef /y3 exdef /x3 exdef 
          /y2 exdef /x2 exdef /y1 exdef /x1 exdef /y0 exdef /x0 exdef 
          } def 
          mtx currentmatrix pop  
          mtx 0 get abs .00001 lt mtx 3 get abs .00001 lt or 
          {/flipXY -1 def} 
          {mtx 1 get abs .00001 lt mtx 2 get abs .00001 lt or 
          {/flipXY 1 def} 
          {/flipXY 0 def} 
          ifelse } 
          ifelse 
          /erosion 1 def 
          systemdict /internaldict known { 
           1183615869 systemdict /internaldict get exec dup  
          /erosion known 
          {/erosion get /erosion exch def} 
          {pop} 
          ifelse 
          } if 
          yflag 
          {
              flipXY 0 eq c3y2 c4y2 eq or 
             {false PickCoords}
             {
                  /shrink c3y2 c4y2 eq 
                {0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs} ifelse def 
                /yshrink {c4y2 sub shrink mul c4y2 add} def 
                /c1y0 c3y0 yshrink def /c1y1 c3y1 yshrink def 
                /c2y0 c4y0 yshrink def /c2y1 c4y1 yshrink def 
                /c1x0 c3x0 def /c1x1 c3x1 def /c2x0 c4x0 def /c2x1 c4x1 def 
                /dY 0 c3y2 c1y2 sub round 
                dtransform flipXY 1 eq {exch} if pop abs def 
                dY dmin lt PickCoords 
                y2 c1y2 sub abs 0.001 gt {
                   c1x2 c1y2 transform flipXY 1 eq {exch} if  
                   /cx exch def /cy exch def 
                   /dY 0 y2 c1y2 sub round dtransform flipXY 1 eq {exch} 
                   if pop def 
                   dY round dup 0 ne 
                   {/dY exdef } 
                   {pop dY 0 lt {-1}{1} ifelse /dY exdef} 
                   ifelse 
                   /erode PaintType 2 ne erosion 0.5 ge and def  
                   erode {/cy cy 0.5 sub def} if 
                   /ey cy dY add def   
                   /ey ey ceiling ey sub ey floor add def   
                   erode {/ey ey 0.5 add def} if   
                   ey cx flipXY 1 eq {exch} if itransform exch pop  
                   y2 sub /eShift exch def  
                   /y1 y1 eShift add def /y2 y2 eShift add def /y3 y3  
                   eShift add def  
                } if  
             } ifelse  
          } 
          {
              flipXY 0 eq c3x2 c4x2 eq or  
             {false PickCoords }  
             { /shrink c3x2 c4x2 eq  
                {0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs} ifelse def  
                /xshrink {c4x2 sub shrink mul c4x2 add} def  
                /c1x0 c3x0 xshrink def /c1x1 c3x1 xshrink def  
                /c2x0 c4x0 xshrink def /c2x1 c4x1 xshrink def  
                /c1y0 c3y0 def /c1y1 c3y1 def /c2y0 c4y0 def /c2y1 c4y1 def  
                /dX c3x2 c1x2 sub round 0 dtransform  
                flipXY -1 eq {exch} if pop abs def 
                dX dmin lt PickCoords  
                x2 c1x2 sub abs 0.001 gt {  
                   c1x2 c1y2 transform flipXY -1 eq {exch} if  
                   /cy exch def /cx exch def   
                   /dX x2 c1x2 sub round 0 dtransform flipXY -1 eq {exch} if pop def  
                   dX round dup 0 ne  
                   {/dX exdef}  
                   {pop dX 0 lt {-1}{1} ifelse /dX exdef}  
                   ifelse  
                   /erode PaintType 2 ne erosion .5 ge and def 
                   erode {/cx cx .5 sub def} if  
                   /ex cx dX add def  
                   /ex ex ceiling ex sub ex floor add def  
                   erode {/ex ex .5 add def} if  
                   ex cy flipXY -1 eq {exch} if itransform pop  
                   x2 sub /eShift exch def  
                   /x1 x1 eShift add def /x2 x2 eShift add def /x3 x3 eShift add def  
                } if  
             } ifelse  
          } ifelse 
          x2 x5 eq y2 y5 eq or  
          {x5 y5 lineto }  
          {x0 y0 x1 y1 x2 y2 curveto  
          x3 y3 x4 y4 x5 y5 curveto}  
          ifelse  
          epY epX   
       }  
       systemdict /currentpacking known {exch setpacking} if   
       /exec cvx /end cvx 
    ] cvx  
    executeonly 
    exch  
    {pop true exch restore}   
    {   
       systemdict /internaldict known not  
       {1183615869 userdict /internaldict get exec  
       exch /FlxProc exch put true}  
       {1183615869 systemdict /internaldict get exec  
       dup length exch maxlength eq  
       {false}   
       {1183615869 systemdict /internaldict get exec 
       exch /FlxProc exch put true}  
       ifelse}  
       ifelse
    } ifelse  
    {
       systemdict /internaldict known  
       {1183615869 systemdict /internaldict get exec /FlxProc get exec}  
       {1183615869 userdict /internaldict get exec /FlxProc get exec}  
       ifelse   
    } if  
} executeonly def
/F1Subr
{gsave currentpoint newpath moveto} bind def 
/F2Subr
{currentpoint grestore gsave currentpoint newpath moveto} bind  def
/HSSubr 
{
   systemdict /internaldict known not
   {pop 3}
   {1183615869 systemdict /internaldict get exec
    dup /startlock known
    {/startlock get exec}
    {dup /strtlck known
    {/strtlck get exec}
    {pop 3}
    ifelse}
    ifelse}
    ifelse
} bind def
end                                 
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N14/Times-Roman 1 TZ
%%IncludeResource Times-Italic
[/N15/Times-Italic 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1151 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2005-04-14T16:10:57-07:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2005-04-14T16:10:57-07:00'></rdf:Description>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:0bf12e75-4b7e-409c-b02e-6211ecff9ed3'/>
<rdf:Description rdf:about='uuid:df1f61d2-ffa0-4dcf-85a3-a900fe371a21' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - pictures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
54 611 478 82 rectclip
/N12 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: ADKFBA+Symbol Initial
ct_CffDict begin
%ADOt1write: (1.0.21)
13 dict dup begin
/FontType 1 def
/FontName /ADKFBA+Symbol def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997 Adobe Systems Incorporated. All rights reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Symbol) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/UniqueID 42996 def
/FontBBox {-180 -293 1090 1010} def
end
systemdict begin
dup /Private
9 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 673 688 487 500] def
/StdHW [92] def
/StdVW [85] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs [{ct_CffDict/F0Subr get exec} {ct_CffDict/F1Subr get exec}
{ct_CffDict/F2Subr get exec} {ct_CffDict/HSSubr get exec}] def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
end
%ADOEndSubsetFont
[ 1 /tau/Gamma 32 /space 40 /parenleft/parenright 59 /semicolon
/less 62 /greater 71 /Gamma 116 /tau
/N11/ADKFBA+Symbol -1 TZ
%ADOBeginSubsetFont: ADKFGL+EuclidMathOne-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (ADKFGL+EuclidMathOne)
%%Title: (ADKFGL+EuclidMathOne Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /ADKFGL+EuclidMathOne def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-113 -316 1395 927} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 153 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /ADKFGL+EuclidMathOne-Identity-H /Identity-H 0 [/ADKFGL+EuclidMathOne] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N16 (ADKFGL+EuclidMathOne-Identity-H)
/N16 (ADKFGL+EuclidMathOne-Identity-H) /Identity-H [ (ADKFGL+EuclidMathOne) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
54.069733 611.476807 477.906647 81.976685 re
W
n
q
n
35.519001 755.47998 539.999981 -720.0 re
eoclip
n
n
35.519001 35.48 539.999981 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
106.199097 656.720276 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C34D0DEABA8505943A200047BB952AC3AA58E
243E203E61F4EF5668073F17F46F9D70D95496792FA461B14302FD00501B0B88
C5BC866673616658058AFF955DC11AC6884732A305D90F3F683DA2E623D06354
B25E7B10> |-
/parenright <1C60D8A8C9B81F2C34D0DEAB9F181AFD2DF6519D962AC715A35
E17E8EA5F9534CF3413ACC02E55E492481BAF4253E1666EA0D1BEB87F13CF596
4EA98AD936E9BD32BC319EAD0821290D2DD48AAC227777E90E02831771ABBACE
A7368E27DDB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
pop
end
%ADOEndSubsetFont
/N11 [13.157806 0.0 0.0 15.048706 0.0 0.0] Tf
(\(\))
[25.199732 25.199732 ] pdfxs
140.999008 655.88031 m
/N11 [13.157806 0.0 0.0 18.671799 0.0 0.0] Tf
(\(\))
[18.960302 18.960302 ] pdfxs
169.919006 656.720276 m
/N11 [13.157806 0.0 0.0 15.048706 0.0 0.0] Tf
(\(\))
[14.640594 14.640594 ] pdfxs
62.159256 636.080994 m
(\(\)\(\))
[13.79981 15.24059 13.080078 13.79981 ] pdfxs
119.279099 635.360413 m
/N11 [13.157806 0.0 0.0 18.671799 0.0 0.0] Tf
(\(\))
[31.799686 31.799686 ] pdfxs
1 J
1 j
0.659 w
n
61.799004 650.23999 m
263.639008 650.23999 l
S
119.159103 657.080261 m
/N14 11.1474 Tf
(,;:)
[46.440071 42.720184 46.752197 ] pdfxs
q
n
266.039001 644.359985 39.480011 12.599976 re
W
n
266.039001 647.000305 m
(brackets)
[5.525766 3.719804 4.800073 4.920465 5.525766 4.901515 3.120156 4.288489 ] pdfxs
Q
81.599106 636.560303 m
(;  , : ;;)
[4.920461 28.080297 22.799774 54.239906 5.520189 5.639468 27.959908 12.959965 4.920461 ] pdfxs
154.799011 663.080261 m
/N15 5.503601 Tf
(f) show
133.079056 642.440125 m
(ff)
[93.480858 93.480858 ] pdfxs
112.079102 657.080261 m
/N15 11.1474 Tf
(PFe)
[63.600288 25.320118 61.738762 ] pdfxs
68.039063 636.56012 m
(PFeF)
[74.279495 31.679707 61.800072 74.279495 ] pdfxs
212.519012 657.080261 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/tau <1C60D8A8C9B76427AA93ECB1E9D0714A288528602C7E65A898A70D1CC9
52B1B1C14371083AF4BCE23C29FD474BDFD4C683F6BAF19CBDF5302BA15FD501
5C7F8D3677A8AD8676A725263B683729258C14435E00A320D46D7072BFBA40AD
A87082F37575B88FE6DEC9FAB25E5A6C9D5A168A467C2359270F376EB238BFF9
F43C6368C8E027AF13711BCDBEFF3EB30A362E90F7EAC1F5763CB84302C7B914
7010C01DD4F7428748889B4999950BEB2F8E0A56CDD3B3349429B9AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 1 /tau put
pop
end
%ADOEndSubsetFont
/N11 [11.1474 0.0 3.812393 11.1474 0.0 0.0] Tf
(\001) show
247.199112 636.56012 m
(\001) show
123.599106 657.080261 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Gamma <1C60D8A8C9B7C05465AA31B7F7197D4ED4340BBB8EF33BC85414001D
80F19014E90E35517432EBC8A3D28A15168E878098164BC3B44308A9CA09873D
D55054372442DB44EA9DBBA32F4DBEEE59DFB292B6BEE0EAA2785DF09AB747A0
AB6DC1EE726F> |-
/semicolon <1C60D8A8C9B854D088EEB7E01BCFA6DF2B08704BE64B4ADE835C
B4013D95898BBBA94D7E48A762FD1011D7BCE99F1479A5B072CCF299C261B44A
31D521909329C5CDB9BD46B73EA8CC622E238CDB54C4F5B4035808F3E3EF8A78
35EE003FC3768554A3C1230607EC623EF788B2014A8C161064843E4CC2457A8A
E0F46185179A3D910213FCB84429F130DD00097951F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 2 /Gamma put
dup 59 /semicolon put
pop
end
%ADOEndSubsetFont
/N11 11.1474 Tf
(\002;\002)
[13.319993 9.479747 13.319993 ] pdfxs
96.478592 636.56012 m
%ADOBeginSubsetFont: ADKFBA+Symbol AddGlyphs
ct_CffDict begin
%ADOt1write: (1.0.21)
systemdict begin
/ADKFBA+Symbol findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/less <1C60D8A8C9B79676A3B7499F02B739146663B725DA64ACD106571A49A
78D09A1144530645F7C04257E9A31041E> |-
/greater <1C60D8A8C9B79676A3B7499F02B73949D2D08520E41FBE54FFC4FC
26781626B57DAFEAB59B287FE68E933AA99F21> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ADKFBA+Symbol findfont /Encoding get
dup 60 /less put
dup 62 /greater put
pop
end
%ADOEndSubsetFont
(\002;\002<><\002>)
[13.319993 14.760271 40.32011 17.279541 26.879679 9.119642 38.759476 12.718023 ] pdfxs
191.519089 657.080261 m
%ADOBeginSubsetFont: ADKFGL+EuclidMathOne-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2005 Adobe System Incorporated. All rights reserved.
/ADKFGL+EuclidMathOne 1 GetGlyphDirectory
65 <001C60D8A8C9B7D8BE19375C1A4245A638EA86DD157DF1903A779852F059
E0065B3DD078AA1667E1D796B2C6A0CF47C474155A403B77CF40B12FABDABC9A
5FE0DBFC16BD92147FA45413ACACCFE38B389B9A1F7713CE2C5BDEA4A86E1B44
A67B80BCE4706CBF19C360D8C6B73AA49468DCBF2A> |
!
end
end end
%ADOEndSubsetFont
/N16 11.1474 Tf
(\000A) show
158.159378 636.56012 m
(\000A) show
320.039001 655.760254 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\))
[13.199888 13.199888 ] pdfxs
346.07901 655.040283 m
/N11 [12.588196 0.0 0.0 17.772202 0.0 0.0] Tf
(\(\))
[17.759333 17.759333 ] pdfxs
378.359009 655.760254 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\))
[24.95978 24.95978 ] pdfxs
340.439026 635.360413 m
/N11 [12.588196 0.0 0.0 17.772202 0.0 0.0] Tf
(\(\))
[29.399639 29.399639 ] pdfxs
384.359009 636.080261 m
/N11 [12.588196 0.0 0.0 14.324005 0.0 0.0] Tf
(\(\)\(\))
[12.599431 14.279955 14.039521 12.599431 ] pdfxs
0.622 w
n
319.679016 649.640015 m
485.879028 649.640015 l
S
338.639008 656.1203 m
/N14 10.610199 Tf
(; ; , : ;)
[2.999502 27.600311 4.680158 16.199652 32.52026 5.279636 5.399529 33.360588 2.999502 ] pdfxs
q
n
488.279022 643.880005 32.639984 12.0 re
W
n
488.279083 646.400269 m
( escape)
[2.639817 4.681222 4.097739 4.681222 4.681222 5.275391 4.681222 ] pdfxs
Q
352.919006 636.560303 m
(,;  ~:)
[22.319614 4.680158 26.879879 31.799829 15.83997 22.616699 ] pdfxs
358.919006 661.760254 m
/N15 5.238693 Tf
(p) show
364.918884 642.2005 m
(p) show
325.679016 656.1203 m
/N15 10.610199 Tf
(PFeF)
[69.239952 22.440483 41.880577 69.239952 ] pdfxs
346.079254 636.560425 m
(PFe)
[70.799652 30.719629 69.027832 ] pdfxs
470.159088 656.1203 m
/N11 [10.610199 0.0 3.628601 10.610199 0.0 0.0] Tf
(\001) show
458.638947 636.560425 m
(\001) show
351.119019 656.1203 m
/N11 10.610199 Tf
(\002\002<\002;>)
[32.40033 55.680172 8.759736 6.479614 24.960493 31.827372 ] pdfxs
357.11908 636.560425 m
(\002\002;)
[32.40033 12.720533 28.952049 ] pdfxs
410.039581 656.1203 m
/N16 10.610199 Tf
(\000A\000\000)
[6.479513 10.606961 ] pdfxs
431.999512 636.560425 m
(\000A) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%+ font Times-Italic
%%EOF

%%EndDocument
 @endspecial 241 631 a
 currentpoint currentpoint translate 1 0.85 div 1 0.85 div scale neg
exch neg exch translate
 241 631 a -150 485 4185 3 v 594
570 a Fm(Figur)o(e)18 b(3.)38 b Fu(Compare)19 b(the)g(type)h(inference)
f(rules)g(with)g(the)g(type)g(of)g(the)g(constructors)h
Fl(Br)f Fu(and)h Fl(Esc)p Fu(.)p -150 590 4185 4 v Black
-150 822 a Fl(bd)40 b(::)f(Env)h(a)g(z)f(->)h(Exp)g(a)f(n)h(f)f(t)h(->)
f(Exp)h(z)g(n)f(f)h(t)-150 905 y(bd)g(env)g(\(Const)g(n\))g(=)f(Const)i
(n)-150 988 y(bd)f(env)g(\(V)f(z\))h(=)f(V)h(z)-150 1071
y(bd)g(env)g(\(App)g(x)f(y\))h(=)f(App)h(\(bd)g(env)g(x\))g(\(bd)g(env)
g(y\))-150 1154 y(bd)g(env)g(\(Abs)g(a)f(e\))h(=)f(Abs)h(a)g(\(bd)g
(env)g(e\))-150 1237 y(bd)g(env)g(\(Pair)g(x)f(y\))h(=)g(Pair)g(\(bd)g
(env)g(x\))f(\(bd)h(env)g(y\))-150 1320 y(bd)g(env)g(\(Br)g(e\))f(=)h
(Br\(bd)g(\(EnvS)g(env\))h(e\))-150 1403 y(bd)f(env)g(\(Run)g(e\))f(=)h
(Run\(bd)g(env)g(e\))-150 1486 y(bd)g(\(EnvZ)g(env\))g(\(Esc)g(e\))g(=)
-72 1569 y(case)h(eval)f(e)f(env)h(of)7 1652 y(Cd)g(x)f(->)h(x)-150
1735 y(bd)g(\(EnvS)g(r\))g(\(Esc)g(e\))g(=)-72 1818 y(case)h(bd)e(r)h
(e)f(of)7 1901 y(Br)h(x)f(->)h(x)7 1984 y(y)f(->)h(Esc)g(y)-150
2067 y(bd)g(\(EnvZ)g(env\))g(\(Csp)g(e\))g(=)f(Const\(eval)j(e)d(env\))
-150 2150 y(bd)h(\(EnvS)g(r\))g(\(Csp)g(e\))g(=)f(Csp\(bd)i(r)e(e\))-50
2316 y Fu(Not)18 b(all)g(escapes)h(or)f(cross-stage)h(persistent)g(can)
f(be)h(remo)o(v)o(ed.)g(Those)-150 2399 y(embedded)28
b(inside)f(more)f(than)h(the)g(original)f(surrounding)i(brack)o(ets)g
(re-)-150 2482 y(fer)36 b(to)g(v)n(alues)h(a)o(v)n(ailable)f(when)h
(the)f(code)h(being)g(b)o(uilt)f(will)f(be)h(run.)-150
2565 y(F)o(or)e(e)o(xample,)g(when)h(e)n(v)n(aluating)g(a)f(term)g(lik)
o(e)h Fl(<f)k(~x)h(<g)g(~y>>)34 b Fu(we)-150 2648 y(reb)o(uild)28
b(the)g(term)f Fl(\(f)40 b(~x)g(<g)f(~y>\))p Fu(.)29
b(Only)f(the)g(\002rst)e(le)n(v)o(el)i(escape)h Fl(~x)-150
2731 y Fu(should)24 b(be)g(e)n(v)n(aluated)h(and)f(then)g(spliced)g(in)
f(the)g(reb)o(uilding)h(process.)g(In)-150 2814 y(order)33
b(to)g(kno)n(w)g(which)g(escapes)h(\(and)f(cross-stage)h(persistent)f
(terms\))-150 2898 y(to)e(process,)g(brack)o(ets)h(must)f(be)g(counted)
h(as)f Fl(bd)g Fu(cra)o(wls)g(o)o(v)o(er)g(a)g(term.)-150
2981 y(Counting)k(brack)o(ets)f(is)f(the)h(role)g(of)f(the)h
Fl(Env)g Fu(parameter)g(to)g Fl(bd)p Fu(.)f(The)-150
3064 y(number)k(of)f(brack)o(ets)i(inside)e(the)g(original)h(pair)f
(\(that)g(w)o(as)g(remo)o(v)o(ed)-150 3147 y(in)g(the)f
Fl(Br)h Fu(case)g(of)g Fl(eval)p Fu(\))g(can)g(be)g(determined)h(by)f
(the)g(number)g(of)-150 3230 y Fl(EnvS)24 b Fu(constructors)g(wrapped)g
(around)g(the)f(current)h(en)m(vironment.)g(Thus)-150
3313 y Fl(\(EnvS)40 b(\(EnvS)h(\(EnvZ)f(env\)\)\))24
b Fu(means)g(the)f Fl(bd)g Fu(is)g(processing)h(a)f(sub-)-150
3396 y(term)e(inside)g(of)g(tw)o(o)g(additional)g(sets)g(of)g(brack)o
(ets.,)h(while)e Fl(\(EnvZ)41 b(env\))-150 3479 y Fu(means)20
b(zero)f(additional)g(sets)g(of)g(brack)o(ets.)-50 3562
y(The)35 b(only)i(interesting)f(cases)g(inside)g Fl(bd)g
Fu(are)g(the)g Fl(\(Br)k(e\))p Fu(,)c Fl(\(Esc)-150 3645
y(e\))p Fu(,)28 b(and)g Fl(\(Csp)40 b(e\))28 b Fu(cases.)f(F)o(or)g
(the)h Fl(\(Br)40 b(e\))28 b Fu(case)g(simply)g(reb)o(uild)f(the)-150
3728 y(subterm,)e(b)o(ut)g(wrap)f(an)i(e)o(xtra)e Fl(EnvS)i
Fu(term)e(around)i(the)f(en)m(vironment)h(to)-150 3811
y(record)20 b(the)f(f)o(act.)g(F)o(or)f(the)h Fl(\(Esc)40
b(e\))20 b Fu(case,)f(if)f(the)h(en)m(vironment)i(is)d
Fl(\(EnvZ)-150 3894 y(env\))e Fu(then)f(the)g(subterm)h
Fl(e)f Fu(should)h(be)f(e)n(v)n(aluated,)h(and)g(the)f(resulting)g
(code)-150 3977 y(term)29 b(spliced)h(in.)e(If)h(the)g(en)m(vironment)i
(is)e Fl(\(EnvS)40 b(env\))30 b Fu(then)g(at)f(least)-150
4060 y(one)g(e)o(xtra)g(pair)f(of)h(brack)o(ets)h(surrounds)g(this)e
(term.)g(Simply)g(reb)o(uild)h(it)-150 4143 y(\(remembering)e(to)f
(count)h(do)n(wn)g(by)f(one)h(by)f(remo)o(ving)h(the)f
Fl(EnvS)p Fu(\))h(and)-150 4226 y(wrap)f(an)h Fl(Esc)g
Fu(around)g(the)g(result.)e(An)i(optimization)f(is)g(possible)h(here.)
-150 4309 y(Consider)17 b(a)g(subterm)g(inside)f(a)h(brack)o(eted)h
(term)e(lik)o(e)h Fl(~<e>)p Fu(,)f(this)h(could)g(be)-150
4392 y(replaced)h(by)g Fl(e)p Fu(.)f(W)-6 b(e)17 b(recognize)i(this)e
(by)h(comparing)h(the)e(reb)o(uilt)g(subterm.)-150 4475
y(If)g(it)h(is)f(itself)g(a)h(brack)o(eted)h(term,)f(then)g(we)g(can)g
(apply)h(the)f(rule,)g(and)g(don')o(t)-150 4558 y(need)h(to)f(wrap)h
(the)f(e)o(xtra)h(escape)g(around)g(the)g(returned)g(result.)f(The)g
(cases)-150 4641 y(for)e Fl(Csp)h Fu(are)f(almost)g(identical)h(e)o
(xcept)g(we)f(use)h Fl(Const)g Fu(to)f(lift)f(a)h(v)n(alue)h(into)-150
4724 y(a)i(piece)g(of)g(code)h(when)f(the)g(en)m(vironment)i(count)e
(is)g(zero.)-150 4898 y Fm(5.3)75 b(W)-5 b(ell-typed)18
b(MetaML)g(pr)o(ograms)h(do)g(not)f(go)i(wr)o(ong)-150
5015 y Fu(In)31 b(Section)h(2.7)f(we)g(sho)n(wed)i(that)e(a)h
(denotational)g(semantics)g(for)f(the)-150 5098 y(lambda)16
b(calculus)g(w)o(as)f(sound)h(by)g(sho)n(wing)g(that)f(it)g(w)o(as)g
(well-typed,)g(total,)-150 5181 y(and)20 b(compositional.)-50
5264 y(Sho)n(wing)15 b(that)f(well-typed)h(programs)g(do)g(not)g(go)g
(wrong)g(for)f(MetaML)-150 5347 y(is)24 b(more)h(complicated.)f(First,)
f(our)i(e)n(v)n(aluator)g(is)f(not)h(a)f(denotational)h(se-)-150
5430 y(mantics,)g(because)h(it)f(is)g(not)g(compositional.)h(The)f
(problematic)h(case)g(is)p Black Black 2042 822 a(the)j(e)n(v)n
(aluation)h(of)f(a)g Fl(Run)h Fu(term,)e(where)i(the)f
Fl(eval)g Fu(function)h(is)f(called)2042 905 y(twice.)p
Black Black 2042 1031 a Fl(eval)40 b(\(Run)g(e\))g(env)g(=)f(case)h
(eval)g(e)g(env)g(of)2866 1114 y(Cd)f(x)h(->)f(eval)i(x)e(RecNil)2042
1240 y Fu(The)24 b(second)i(call)f(to)f Fl(eval)i Fu(is)e(on)h(a)g
(term)f(that)g(is)h(not)g(a)f(subterm)h(of)g(the)2042
1323 y(original)19 b(term.)g(Note)h(if)f(e)n(v)n(aluating)h
Fl(e)g Fu(from)f(a)h(term)f Fl(\(Run)40 b(e\))20 b Fu(causes)g(an)2042
1406 y(in\002nite)c(sequence)j(of)e Fl(Run)h Fu(subterms,)f(the)h(e)n
(v)n(aluator)g(w)o(ould)g(not)f(be)h(total.)2141 1489
y(Can)31 b(we)e(ar)o(gue)i(the)f(non-compositional)i(e)n(v)n(aluator)f
(is)e(sound?)j(I.e.)2042 1572 y(that)c(e)n(v)o(ery)g(well-typed)h(term)
f(is)f(mapped)j(to)e(a)f(meta-le)n(v)o(el)i(v)n(alue)f(with)2042
1655 y(that)i(type.)h(T)-6 b(o)31 b(sho)n(w)h(this)e(we)h(must)g
(answer)g(the)g(question:)h Fr(What')m(s)f(a)2042 1738
y(well-typed)d(term)g(in)h(MetaML?)f Fu(In)h(MetaML)g(only)g(le)n(v)o
(el)f(0)g(terms)h(can)2042 1821 y(be)24 b(e)n(v)n(aluated)h(i.e.)e(As)g
(discussed)i(in)f(Section)f(4,)h(le)n(v)o(el)f(0)h(terms)g(ha)o(v)o(e)g
(no)2042 1904 y(escapes)30 b(at)f(le)n(v)o(el)g(0,)f(and)i(a)f(term)g
(is)f(at)h(le)n(v)o(el)g(0,)g(if)g(and)g(only)h(if,)e(its)g(is)2042
1987 y(polymorphic)e(in)e(its)f(past.)i(Thus)f(we)g(need)h(ar)o(gue)g
(soundness)h(for)e(terms)2042 2070 y(polymorphic)c(in)f(their)g(past.)
2141 2153 y(Sho)n(wing)i Fr(totality)e Fu(is)h(problematic)g(for)g(tw)o
(o)g(reasons.)g(The)g(\002rst)f(is)g(the)2042 2236 y(possibility)30
b(of)g(e)n(v)n(aluation)h(leading)g(to)f(an)g(in\002nite)g(sequence)i
(of)e Fl(Run)p Fu(s)2042 2319 y(inside)24 b Fl(Run)p
Fu(s.)g(W)-6 b(e)24 b(are)g(currently)g(w)o(orking)h(on)f(a)g(solution)
h(in)f(which)g(the)2042 2402 y(nesting)c(le)n(v)o(el)g(of)g
Fl(Run)g Fu(is)g(encoded)i(as)e(an)g(additional)g(type)h(inde)o(x)f(to)
g Fl(Exp)p Fu(.)2042 2485 y(W)-6 b(e)18 b(hope)i(to)f(report)g(on)g
(this)g(in)g(the)g(\002nal)f(paper)l(.)2141 2568 y(The)33
b(second)h(cause)f(of)g(non-totality)g(is)f(non-e)o(xhausti)n(v)o
(eness.)j(The)2042 2651 y(function)28 b Fl(eval)g Fu(is)e(not)i
(de\002ned)g(on)f(terms)g(b)o(uilt)g(with)g(the)g Fl(Esc)g
Fu(or)h Fl(Csp)2042 2734 y Fu(constructors.)19 b(F)o(ortunately)-5
b(,)19 b(code)g(polymorphic)i(in)d(its)g(past)h(cannot)h(con-)2042
2817 y(tain)28 b(either)h Fl(Esc)g Fu(or)g Fl(Csp)g Fu(at)f(le)n(v)o
(el)h(0.)f(This)g(leads)h(us)g(to)g(the)g(follo)n(wing)2042
2900 y(strate)o(gy)-5 b(,)19 b(\002rst)g(de\002ne)h(a)f(v)o(ersion)i
(of)e Fl(eval)p Fu(,)h(called)g Fl(eval0)p Fu(,)g(that)f(can)h(only)
2042 2983 y(be)f(applied)h(to)e(terms)h(polymorphic)i(in)e(their)f
(past.)p Black Black 2042 3127 a Fl(eval0)40 b(::)g(\(forall)h(p)e(.)h
(Exp)f(p)h(now)g(future)g(t\))g(->)2395 3210 y(Rec)g(now)g(->)f(t)2042
3293 y(eval0)h(exp)g(env)g(=)f(eval)i(exp)e(env)2120
3376 y(where)i(eval::Exp)g(past)f(now)g(future)h(t)e(->)h(Rec)g(now)f
(->)h(t)2356 3459 y(eval)g(\(Const)g(n\))g(env)g(=)f(n)2356
3542 y(...)2356 3625 y(eval)h(\(Run)g(e\))g(env)f(=)2473
3708 y(case)h(eval)h(e)e(env)h(of)2552 3791 y(Cd)f(x)h(->)g(eval0)g(x)f
(RecNil)2356 3957 y(bd::Env)h(a)g(z)f(->)h(Exp)g(a)f(n)h(f)f(t)h(->)f
(Exp)h(z)g(n)f(f)h(t)2356 4040 y(bd)f(env)h(\(Const)h(n\))e(=)h(Const)g
(n)2356 4123 y(...)2042 4267 y Fu(By)22 b(de\002ning)i
Fl(eval)f Fu(and)h Fl(bd)f Fu(as)f(local)h(functions)h(of)f
Fl(eval0)g Fu(It)f(is)h(impos-)2042 4350 y(sible)i(to)h(apply)h
Fl(eval)f Fu(to)g(terms)f(not)i(polymorphic)g(in)f(their)f(past,)h
(since)2042 4433 y(all)f(access)h(to)g Fl(eval)g Fu(is)f(through)i
Fl(eval0)f Fu(which)g(requires)g(polymorphic)2042 4516
y(terms.)18 b(All)g(recursi)n(v)o(e)h(calls)f(to)g Fl(eval)i
Fu(and)f Fl(Bd)g Fu(\(e)o(xcept)g(the)f(second)i(one)f(in)2042
4599 y(the)h Fl(Run)h Fu(case)f(in)h Fl(eval)p Fu(\))f(are)h(applied)g
(to)f(strict)f(subterms)i(of)g(the)f(original)2042 4682
y(term,)25 b(so)h(if)f(the)g(original)h(terms)f(w)o(as)h(polymorphic,)h
(so)f(must)g(all)f(these)2042 4765 y(sub-terms)19 b(be)g(polymorphic.)h
(The)e(problematic)h(second)h(call)e(to)h Fl(eval)g Fu(in)2042
4848 y(the)g Fl(Run)h Fu(case)f(which)h(is)f(applied)h(to)f(the)g
(return)h(result)f(of)g(applying)h Fl(eval)2042 4932
y Fu(to)g(a)g(subterm,)g(can)h(be)g(replaced)g(with)f
Fl(eval0)p Fu(,)g(because)i(e)o(xpressions)f(in-)2042
5015 y(side)e(the)g Fl(Cd)h Fu(constructor)g(must)f(also)g(be)g(le)n(v)
o(el)h(0)f(terms.)f(Thus)i(both)f Fl(eval)2042 5098 y
Fu(and)i Fl(eval0)h Fu(are)f(total,)f(in)g(that)h(the)o(y)g(will)f(ne)n
(v)o(er)i(be)f(called)g(on)g(a)g(term)f(for)2042 5181
y(which)25 b(the)o(y)f(are)h(not)f(de\002ned.)h(While)f(not)g(a)h
(complete)g(proof,)g(we)f(ha)o(v)o(e)2042 5264 y(made)g(subtantial)g
(progress.)g(In)g(the)g(ne)o(xt)g(section)g(we)g(demonstrate)g(that)
2042 5347 y(the)19 b(type)h(system)f(distinguishes)h(the)f(subtle)h
(staging)g(errors)f(discussed)h(in)2042 5430 y(Section)f(3.)p
Black Black eop end
%%Page: 11 11
TeXDict begin 11 10 bop Black Black -150 66 a Fx(6.)91
b(Ev)o(aluating)22 b(the)h(type)f(system.)-150 183 y
Fu(Section)29 b(3)g(introduced)h(three)f(programs)g(that)g(highlight)g
(subtle)h(typing)-150 266 y(issues)21 b(for)f(multi-stage)h(programs.)g
(W)-6 b(e)20 b(no)n(w)h(e)n(v)n(aluate)g(the)g(no)o(v)o(el)g(multi-)
-150 349 y(stage)i(type)h(system)f(discussed)h(in)f(the)g(pre)n(vious)i
(section)e(based)h(on)g(ho)n(w)-150 432 y(it)18 b(performs)i(on)f
(these)g(issues.)p Black -106 568 a Fo(\017)p Black -42
575 a Fm(Corr)o(ect)30 b(use)f(of)h(v)o(ariables.)g Fu(The)g(follo)n
(wing)g(program)g(e)o(xhibits)g(a)-42 658 y(le)n(v)o(el-mismatch)19
b(error)m(,)g(and)g(is)g(incorrect.)p Black Black -42
783 a Fl(<fn)40 b(x)f(=>)h(~\(id)g(x\)>;)-42 908 y Fu(This)19
b(program)g(mak)o(es)h(use)g(of)f(the)g(v)n(ariable)g(x)g(at)g(a)g
(stage)g(prior)g(to)g(the)-42 991 y(stage)i(in)f(which)h(it)f(is)g
(bound.)h(What)f(about)i(the)e Fs(\012)p Fu(me)o(ga)h(encoding)h(of)-42
1074 y(this)d(program?)p Black Black -42 1200 a Fl(Br)40
b(\(Abs)g(`x)f(\(Esc)i(\(App)f(\(Abs)g(`y)g(\(V)f(`y\)\))h(\(V)g
(`x\)\)\)\))-42 1325 y Fu(The)19 b(interpreter)g(gi)n(v)o(es)g(this)g
(term)f(the)h(follo)n(wing)h(type:)p Black Black -42
1451 a Fl(Exp)40 b(a)f({`x:Cd)i({`x:b;)f(u})g(c)g(d;)f(v})193
1534 y(\(Rec)h(u,c\))193 1617 y(\(Cd)g(u)g(c)f(\(b)h(->)f(d\)\)\))58
1742 y Fu(The)33 b(v)n(ariable)g Fl(`x)h Fu(sho)n(ws)g(up)f(in)g(tw)o
(o)g(dif)n(ferent)h(en)m(vironments)-42 1825 y(at)27
b(tw)o(o)g(dif)n(ferent)g(stages.)g(Each)g(en)m(vironment)h(in)f(the)g
(sliding)g(band)-42 1908 y(of)i(type)g(conte)o(xts)g(is)f(a)h(separate)
g(name)h(space,)f(so)g(the)f(tw)o(o)h(occur)o(-)-42 1991
y(rences)c(of)f Fl(`x)g Fu(in)g(the)g Fs(\012)p Fu(me)o(ga)h(encoding)h
(aren')o(t)d(the)i(same)f(v)n(ariable,)-42 2074 y(as)j(the)o(y)g(are)g
(in)f(the)h(MetaML)g(program.)h(So)e(while)h(this)g(is)f(a)h(\223type)
-42 2157 y(correct\224)d(program)i(in)e(the)g Fs(\012)p
Fu(me)o(ga)h(encoding,)g(it)f(isn')o(t)f(an)i(encoding)-42
2240 y(of)19 b Fl(<fn)40 b(x)f(=>)h(~\(id)g(x\)>)p Fu(.)58
2323 y(This)26 b(brings)h(up)g(an)f(important)h(point.)g(The)f
(cross-stage)h(persis-)-42 2406 y(tence)36 b(construct)g(does)g(not)g
(appear)h(in)e(MetaML,)h(so)g(there)f(must)-42 2489 y(be)27
b(some)h(syntactic)f(sugar)h(in)f(the)g(parsing)g(stage)h(which)f
(translates)-42 2572 y(MetaML)d(syntax)g(into)g(the)f
Fl(Exp)h Fu(data-structures.)g(This)f(preprocess-)-42
2655 y(ing)h(step)f(counts)i(brack)o(ets,)f(and)g(assigns)g(to)f(e)n(v)
o(ery)h(v)n(ariable)g(a)g(static)-42 2738 y(le)n(v)o(el)18
b(at)f(its)g(point)h(of)g(de\002nition.)g(At)f(each)h(point)g(of)g
(use,)g(a)g(number)g(of)-42 2821 y(cross-stage)26 b(persistent)f
(annotations)h(\()p Fl(Csp)p Fu(\))f(are)g(inserted.)g(The)g(cor)o(-)
-42 2904 y(rect)19 b(number)i(is)e(the)g(dif)n(ference)h(between)g(the)
g(le)n(v)o(el)f(at)g(which)h(a)f(v)n(ari-)-42 2987 y(able)26
b(is)f(de\002ned,)h(and)h(the)e(le)n(v)o(el)h(at)g(which)g(it)f(is)g
(used.)h(If)f(this)h(num-)-42 3070 y(ber)g(is)f(ne)o(gati)n(v)o(e,)h
(the)f(program)i(is)e(ill-typed.)g(So)g(this)h(kind)g(of)f(error)-42
3153 y(is)h(actually)g(caught)h(before)g(type)g(checking)g(in)f(the)h
(syntactic)f(sugar)-42 3236 y(pre-processing)20 b(phase.)p
Black -106 3389 a Fo(\017)p Black -42 3396 a Fm(Running)31
b(code)i(with)f(fr)o(ee)h(v)o(ariables.)h Fu(The)f(follo)n(wing)g
(program)-42 3479 y(should)e(be)e(rejected)h(because)h(the)f
Fl(run)g Fu(will)e(force)i(the)g(e)n(v)n(aluation)-42
3562 y(of)19 b(the)g(not-yet-bound)i(v)n(ariable)e Fl(x)p
Fu(.)p Black Black -42 3687 a Fl(val)40 b(bad)g(=)f(<fn)h(x)g(=>)f
(~\(run)i(<x>\))f(+)f(4>;)58 3813 y Fu(Ho)n(w)19 b(does)g(this)g
(program)h(hold)f(up)h(in)e(our)i Fs(\012)p Fu(me)o(ga)f(encoding?)p
Black Black -42 3938 a Fl(|-)40 b(Br)f(\(Abs)h(`x)g(\(Esc)g(\(Run)g
(\(Br)g(\(V)g(`x\)\)\)\)\))-42 4021 y(Error:)h(Br)e(\(V)h(`x\))g(isn't)
g(polymorphic)i(enough)-42 4104 y(Expected)f(type:)f(forall)h(v.)546
4187 y(Exp)f(a)g(u)f(\(Rec)h(v,b\))860 4270 y(\(Cd)g(v)g(b)f(c\))76
4353 y(Found)h(type:)g(Exp)g(a)g(u)f(\(Rec)h({`x:c;)h(w},b\))860
4436 y(\(Cd)f({`x:c;)h(w})e(b)h(c\)\))58 4562 y Fu(The)33
b(program)h(is)g(rejected)f(because)i(the)f(term)f Fl(\(Br)40
b(\(V)g(`x\)\))-42 4645 y Fu(isn')o(t)18 b(polymorphic)j(enough.)f(The)
f(term)g(has)g(the)g(type)p Black Black -42 4770 a Fl(Exp)40
b(a)f(u)h(\(Rec)g({`x:b;)g(v},c\))h(\(Cd)f({`x:b;)g(v})g(c)f(b\))-42
4896 y Fu(See)24 b(ho)n(w)h(the)f(v)n(ariable)h Fl(x)f
Fu(sho)n(ws)h(up)f(in)g(the)h(current)f(conte)o(xt)h(of)f(the)-42
4979 y(code)35 b(type.)g(Run)g(can)g(be)g(applied)g(only)g(to)f(code)i
(whose)f(current)-42 5062 y(conte)o(xt)19 b(is)g(completely)h
(polymorphic.)p Black -106 5214 a Fo(\017)p Black -42
5221 a Fm(T)-6 b(racking)15 b(Alpha-r)o(enaming)o(.)e
Fu(Recall)i(the)g(test)g(programs)h(highlight-)-42 5304
y(ing)j(the)g(subtle)g(issues)g(at)g(w)o(ork)h(here.)p
Black Black -42 5430 a Fl(-|)40 b(val)g(puzzle1)g(=)p
Black Black 2424 66 a(<fn)g(a)g(=>)f(~\(\(fn)i(x)e(=>)h(<x>\)\(fn)h(y)e
(=>)h(<a>\)\))g(0>;)2150 149 y(-|)f(val)h(puzzle2)h(=)2424
232 y(<fn)f(a)g(=>)f(~\(<fn)i(y)e(=>)h(<a>>\))g(0>;)2150
362 y Fu(W)-6 b(e)20 b(ar)o(gued)h(that)f Fl(\(run)40
b(puzzle1\))22 b Fu(should)f(cause)g(a)g(type)f(error)m(,)g(b)o(ut)2150
445 y Fl(\(run)40 b(puzzle2\))20 b Fu(shouldn')o(t.)2249
528 y(The)g Fs(\012)p Fu(me)o(ga)g(encoding)h(beha)o(v)o(es)f(in)f(e)o
(xactly)h(this)f(w)o(ay)-5 b(.)19 b(Consider)2150 611
y(the)g(type)g(of)g(the)g Fs(\012)p Fu(me)o(ga)g(translation)h(of)f
Fl(puzzle1)p Fu(.)p Black Black 2150 741 a Fl(Br)39 b(\(Abs)i(`a)2464
824 y(\(App)f(\(Esc)g(\(App)g(\(Abs)g(`x)g(\(Br)g(\(Csp)g(\(V)f
(`x\)\)\)\))3052 907 y(\(Abs)h(`y)g(\(Br)g(\(V)f(`a\)\)\)\)\))2660
990 y(\(Const)h(0\))g(\)\))2150 1073 y(::)f(Exp)h(a)g(u)f(\(Rec)h
(v,b\))2581 1156 y(\(Cd)g(v)g(b)f(\(c)h(->)f(Cd)h({`a:c;)h(v})e(b)h
(c\)\))2150 1286 y Fu(It)34 b(appears)h(polymorphic)h(enough.)g(Note)e
(the)h(current)f(conte)o(xt)h(is)2150 1369 y(typed)d(by)f(the)g(type)h
(v)n(ariable)f Fl(v)g Fu(inside)h(the)f Fl(Cd)g Fu(type.)g(But)g
(further)2150 1452 y(inspection)d(sho)n(ws)f(that)g(this)g(type)g(v)n
(ariable)h Fl(v)f Fu(also)g(appears)h(in)f(the)2150 1535
y(type)d(of)g(the)g(code)h(returned)f Fl(\(c)40 b(->)g(Cd)f({`a:c;)i
(v})f(b)f(c\))p Fu(.)24 b(Thus)2150 1618 y(it)18 b(isn')o(t)g(really)h
(polymorphic)i(at)d(all.)p Black Black 2150 1748 a Fl(-|)39
b(run)h(puzzle1)2150 1831 y(Error:)g(puzzle1)h(isn't)f(polymorphic)i
(enough)2150 1914 y(Expected)f(Type:)2267 1997 y(\(forall)g(v.)f(Exp)g
(a)f(u)h(\(Rec)g(v,b\))3013 2080 y(\(Cd)g(v)f(b)h(c\)\))2150
2163 y(Found)g(Type:)119 b(Exp)40 b(a)f(u)h(\(Rec)g(v,b\))3013
2246 y(\(Cd)g(v)f(b)h(\(c)f(->)h(Cd)g({`a:c;)g(v})3680
2329 y(b)f(c\)\)\))2150 2451 y Fu(The)c(type)h(gi)n(v)o(en)g(to)f
Fl(puzzle1)i Fu(illustrates)e(of)g(the)g(problem.)h(The)2150
2525 y(en)m(vironment)f Fl(v)g Fu(is)e(needed)j(e)n(v)o(en)f(after)f
(the)g(function)h(is)f(applied.)2150 2600 y(But)23 b(if)g(the)h(user)g
(performs)g(the)g(beta-reduction)h(manually)-5 b(,)24
b(then)g(the)2150 2675 y(problem)19 b(does)h(not)f(occur)l(.)p
Black Black 2150 2796 a Fe(-|)36 b(puzzle2)2256 2871
y(Br)f(\(Abs)i(`a)f(\(App)g(\(Esc)h(\(Br)f(\(Abs)g(`y)g(\(Br)g(\(V)g
(`a\)\)\)\)\))2820 2946 y(\(Const)h(0\)\)\))2185 3020
y(::)f(Exp)g(a)g(u)f(\(Rec)i(v,\(Rec)g({`a:b;)g(w},c\)\))2573
3095 y(\(Cd)f(v)g(\(Rec)g({`a:b;)h(w},c\))2785 3170 y(\(d)f(->)g(Cd)f
({`a:b;)i(w})f(c)g(b\)\))2150 3245 y(-|)g(Run)g(puzzle2)2256
3319 y(Run)g(\(Br)g(\(Abs)g(`a)g(\(App)h(\(Esc)f(\(Br)g(\(Abs)h(`y)e
(\(Br)i(\(V)e(`a\)\)\)\)\))2820 3394 y(\(Const)i(0\)\)\)\))2185
3469 y(::)f(Exp)g(a)g(u)f(\(Rec)i({`a:b;)g(v},c\))2573
3544 y(\(d)f(->)g(Cd)g({`a:b;)h(v})f(c)f(b\))2141 3695
y Fu(The)23 b Fs(\012)p Fu(me)o(ga)g(function)g Fl(eval)g
Fu(sho)n(ws)g(that)f(if)g(we)g(disallo)n(w)h Fl(puzzle1)2042
3778 y Fu(we)c(can)g(use)g(a)g(v)o(ery)g(simple)g(implementation,)h
(yet)f(still)f(remain)h(safe.)2042 3985 y Fx(7.)91 b(Related)22
b(w)o(ork.)2042 4101 y Fu(There)36 b(are)g(tw)o(o)g(areas)g(of)g
(related)g(w)o(ork)g(that)g(should)h(be)f(discussed.)2042
4184 y(First,)22 b(type)i(systems)g(for)f(multi-stage)h(languages,)h
(and)f(second,)g(the)g(de-)2042 4267 y(sign)d(of)g(meta-languages)i
(for)e(specifying)h(and)g(reasoning)g(about)g(object-)2042
4350 y(languages.)2141 4433 y Fm(T)-6 b(ype)23 b(Systems.)f
Fu(Of)g(the)g(man)o(y)h(papers)g(on)g(type)g(systems)f(for)h(multi-)
2042 4516 y(stage)33 b(languages)i(only)e(tw)o(o)g(achie)n(v)o(e)h(the)
g(scope)g(of)f(the)g(system)g(pre-)2042 4599 y(sented)26
b(in)f(this)g(paper)h(\(in)f(terms)h(of)f(the)g(features)h
(supported\),)g(and)g(one)2042 4682 y(should)18 b(be)g(discussed)g
(because)h(it)e(uses)h(a)f(similar)m(,)f(b)o(ut)i(weak)o(er)g
(approach.)2042 4765 y(The)o(y)i(are:)g Fr(En)m(vir)m(onment)g
(Classi\002er)o(s)p Fu([35)q(])g(by)g(T)-6 b(aha)21 b(and)f(Nielsen,)g
Fr(Meta-)2042 4848 y(Pr)m(o)o(gr)o(amming)k(thr)m(ough)h(T)-6
b(ypeful)24 b(Code)h(Repr)m(esentation)p Fu([4)r(])e(by)h(Chiyan)2042
4932 y(Chen)c(and)h(Hongwei)g(Xi,)e(and)i Fr(A)f(Modal)h(Analysis)f(of)
g(Sta)o(g)o(ed)h(Computa-)2042 5015 y(tion)e Fu(by)g(Da)o(vies)g(and)g
(Pfenning.)2141 5098 y(Neither)29 b(of)g(the)g(\002rst)f(tw)o(o)h(has)h
(the)f(simplicity)g(of)g(the)g(system)g(pre-)2042 5181
y(sented)20 b(in)f(this)g(paper)m(,)g(and)h(the)g(third)f(co)o(v)o(ers)
h(a)f(much)h(simpler)f(language.)2042 5264 y(The)i(\002rst)f(tw)o(o)i
(emplo)o(y)g(a)f(single)h(type)f(conte)o(xt)h(that)f(records)h(the)f
(type)h(of)2042 5347 y(all)f(v)n(ariables,)g(rather)g(than)h(a)f
(sliding)h(band)g(of)g(type)f(conte)o(xts.)h(The)f(third)2042
5430 y(uses)e(a)g(single)g(stack,)g(rather)g(than)g(a)g(sliding)g(band)
h(\(tw)o(o)f(stacks\).)p Black Black eop end
%%Page: 12 12
TeXDict begin 12 11 bop Black Black -50 66 a Fu(The)33
b(paper)i Fr(En)m(vir)m(onment)f(Classi\002er)o(s)h Fu(emplo)o(ys)g(a)f
(le)n(v)o(el-strati\002ed)-150 149 y(syntax)e(and)g(a)f(complicated)h
(syntactic)g(notion)f(called)h Fr(demotion)p Fu(.)g(De-)-150
232 y(motion)23 b(is)e(a)i(term)e(to)h(term)g(transformation)h
(\(performed)g(under)g(a)f(set)g(of)-150 315 y(v)n(ariables\))29
b(that)f(essentially)g(places)h(additional)g(cross-stage)g(persistent)
-150 399 y(annotations)c(around)f(the)g(v)n(ariables)f(mentioned)i(in)e
(the)h(set.)e(The)i(notion)-150 482 y(of)f(demotion)i(is)e(necessary)i
(to)e(sho)n(w)h(that)f(reduction)i(preserv)o(es)f(typing.)-150
565 y(This)19 b(considerably)h(complicates)g(the)f(type)g(system.)-50
648 y(The)f(paper)h Fr(Meta-Pr)m(o)o(gr)o(amming)g(thr)m(ough)h(T)-6
b(ypeful)19 b(Code)f(Repr)m(esen-)-150 731 y(tation)j
Fu(emplo)o(ys)i(a)e(de)g(Bruijn)g(notation)g(similar)g(to)g(the)g
(notation)h(used)f(in)-150 814 y(this)27 b(paper)m(,)i(b)o(ut)e(relies)
g(an)h(a)g(complicated)h(notion)f(of)g(projection.)g(Pro-)-150
897 y(jection,)k(computes)i(a)e(ne)n(w)h(type)g(conte)o(xt)g(with)f
(only)h(those)g(v)n(ariables)-150 980 y(from)26 b(speci\002ed)g(le)n(v)
o(els)g(from)f(the)h(\223master\224)g(conte)o(xt)g(with)g(information)
-150 1063 y(about)h(all)f(le)n(v)o(els.)g(This)g(considerably)i
(complicates)f(proofs)g(about)g(pro-)-150 1146 y(gram)19
b(properties,)g(lik)o(e)g(subject)g(reduction.)h(Neither)e(system)h
(approaches)-150 1229 y(the)g(simplicity)g(or)g(the)g(compactness)h(of)
f(the)g(system)g(presented)h(here.)-50 1312 y(The)28
b(paper)h Fr(A)f(Modal)i(Analysis)e(of)h(Sta)o(g)o(ed)h(Computation)g
Fu([9])e(pro-)-150 1395 y(vides)i(a)g(type)g(system)g(for)f(se)n(v)o
(eral)h(staged)h(languages)g(based)f(on)g(intu-)-150
1478 y(itionist)21 b(modal)h(logic)g(S4.)f(While)g(similar)g(is)g(some)
h(respects)g(to)f(the)h(type)-150 1561 y(system)j(for)f(MetaML)g
(presented)i(here)e(it)g(has)g(some)h(basic)g(dif)n(ferences.)-150
1644 y(First,)16 b(the)h(languages)h(presented)g(can)g(only)f(b)o(uild)
g(code)h(for)f(closed)h(terms.)-150 1727 y(F)o(or)25
b(e)o(xample:)h Fl(<fn)40 b(x)f(=>)h(~\(f)g(<x>\)>)26
b Fu(could)g(not)g(be)g(typed)g(because)-150 1810 y(the)31
b(ar)o(gument)g(to)g Fl(f)f Fu(is)h(a)f(code)i(term)e(with)h(a)f(free)h
(v)n(ariable)g(bound)h(in)-150 1893 y(the)19 b(present)h(le)n(v)o(el)f
(\(from)g(the)g(perspecti)n(v)o(e)h(of)f(inside)g(the)g(brack)o(ets\).)
h(This)-150 1976 y(se)n(v)o(erely)j(limits)e(the)h(code)h(generators)f
(that)g(can)h(be)f(e)o(xpressed.)h(Second,)-150 2059
y(the)i(type)h(system)f(uses)h(a)f(single)g(stack)g(of)g(en)m
(vironments)i(one)f(for)f(each)-150 2142 y(le)n(v)o(el,)k(as)g(opposed)
i(to)f(a)f(sliding)g(band)i(\(a)e(pair)g(of)g(stacks)h(of)f(en)m
(viron-)-150 2225 y(ments\),)22 b(this)g(simpli\002cation)f(is)h(suf)n
(\002cient)g(because)h(the)f(language)i(lacks)-150 2308
y(the)17 b(escape)g(annotation.)h(Instead)f(it)g(uses)g(a)f(weak)o(er)i
Fr(unbox)g Fu(construct)f(that)-150 2391 y(cannot)27
b(be)g(placed)g(inside)g(of)f(brack)o(ets,)h(also)g(limiting)f(the)g(e)
o(xpressi)n(v)o(e-)-150 2474 y(ness)20 b(of)g(the)f(language.)i
(Finally)-5 b(,)19 b(none)h(of)g(there)g(languages)h(pro)o(vides)f(the)
-150 2557 y(e)o(xplicit)28 b(cross)g(operator)h(that)f(lifts)f(v)n
(alues)i(from)f(pre)n(vious)h(stages)f(into)-150 2640
y(code.)-50 2723 y Fm(Meta-languages.)17 b Fu(There)g(are)g(man)o(y)h
(systems)g(that)f(could)h(be)f(used)h(as)-150 2806 y(meta-languages)31
b(for)e(manipulating)h(object-languages.)h(The)o(y)f(include)-150
2889 y(Inducti)n(v)o(e)18 b(F)o(amilies[7)o(,)e(10)q(],)g(theorem)h
(pro)o(v)o(ers)g(\(Coq[41)q(],)f(Isabelle[22)q(]\),)-150
2972 y(logical)f(frame)n(w)o(orks)g(\(T)-6 b(welf[23],)14
b(LEGO[15]\),)f(proof)i(assistants)g(\(ALF[19)o(],)-150
3055 y(Agda[6)q(]\))k(dependently)h(typed)g(languages)h(\(Epigram[16],)
e(RSP[34)o(]\).)-50 3138 y(These)14 b(systems)h(all)g(choose)g(a)g
(point)g(in)f(the)h(design)h(space)f(where)g(types)-150
3221 y(and)27 b(v)n(alues)f(are)g(indistinguishable.)h(In)f
Fs(\012)p Fu(me)o(ga)h(we)f(choose)h(a)f(point)g(in)-150
3304 y(the)d(design)g(space)h(with)e(a)h(strict)e(phase)j(distinction)f
(between)g(types)h(and)-150 3387 y(v)n(alues.)e(W)-6
b(e)22 b(also)g(ha)o(v)o(e)g(a)g(strong)g(desire)g(to)g(minimize)g
(type)g(annotations)-150 3470 y(and)e(other)f(administrati)n(v)o(e)g(w)
o(ork.)-50 3553 y(Se)n(v)o(eral)29 b(systems)h(choose)h(a)f(point)g(in)
f(the)h(design)g(space)h(closer)e(to)-150 3636 y(ours,)22
b(where)g(the)g(distinction)g(between)h(types)f(and)g(v)n(alues)h(is)f
(preserv)o(ed.)-150 3719 y(W)-6 b(e)18 b(o)n(we)h(much)h(to)e(these)h
(w)o(orks)h(for)e(inspiration,)h(e)o(xamples,)g(and)g(imple-)-150
3802 y(mentation)k(techniques.)h(These)f(include)g(Guarded)h(Recursi)n
(v)o(e)f(Datatype)-150 3885 y(Constructors[44)q(],)d(First-class)f
(phantom)i(types[5)q(],)f(W)-6 b(obbly)21 b(types[13)q(],)-150
3968 y(and)j(Silly)d(T)-6 b(ype)24 b(F)o(amilies[1)o(].)e(There)h(are)g
(only)h(minor)f(syntactic)g(dif)n(fer)o(-)-150 4051 y(ences)28
b(between)g(these)g(systems)g(and)g(our)f(o)n(wn,)h(and)g(we)f(imagine)
h(the)o(y)-150 4134 y(could)d(be)h(used)f(in)g(a)f(similar)g(manner)m
(,)h(e)o(xcept)h(for)e(one)i(v)o(ery)f(important)-150
4218 y(thing.)d(In)g(these)h(systems,)f(type)g(inde)o(x)o(es)h(are)f
(restricted)g(to)g(types)h(classi-)-150 4301 y(\002ed)i(by)h
Fl(*0)p Fu(,)g(because)g(the)g(systems)g(ha)o(v)o(e)g(no)g(w)o(ay)g(of)
f(introducing)i(ne)n(w)-150 4384 y(kinds.)d(W)-6 b(e)23
b(consider)i(the)f(introduction)g(of)g(ne)n(w)g(kinds)g(as)g(an)g
(important)-150 4467 y(contrib)o(ution)i(of)f(our)g(w)o(ork.)g(W)m
(ithout)g(ne)n(w)g(kinds,)h(ro)n(ws,)f(natural)g(num-)-150
4550 y(bers,)h(and)h(other)g(important)g(meta-le)n(v)o(el)f(entities)g
(at)h(the)f(type)h(le)n(v)o(el)f(are)-150 4633 y(not)19
b(possible.)-150 4815 y Fx(8.)91 b(Conclusion.)-150 4932
y Fu(The)16 b(goals)h(of)f(this)g(paper)h(were)f(three)g(fold.)g
(First,)f(to)h(introduce)h(the)f(meta-)-150 5015 y(language)24
b Fs(\012)p Fu(me)o(ga.)g(Second,)f(to)g(illustrate)f(that)h(important)
g(e)o(xplorations)-150 5098 y(in)e(language)h(design)f(can)g(be)g
(assisted)g(with)f(the)h(correct)g(tools.)f(Third,)g(to)-150
5181 y(demonstrate)28 b(that)f(a)g(sound)h(type)g(system)f(for)g(a)g
(multi-stage)g(language)-150 5264 y(can)18 b(also)g(be)f(simple,)h
(concise,)g(and)g(easy)g(to)f(understand.)i(W)-6 b(e)17
b(belie)n(v)o(e)h(the)-150 5347 y(system)j(using)h(a)e(sliding)i(band)f
(of)g(type)h(conte)o(xts)f(can)g(generalize)h(to)f(an)o(y)-150
5430 y(multi-stage)16 b(language)i(and)g(is)e(of)g(general)h(interest)g
(to)f(all)g(who)h(study)g(pro-)p Black Black 2042 66
a(gram)i(generation.)h(As)f(illustrated)f(the)h(type)h(system)f(can)g
(disqualify)h(pro-)2042 149 y(grams)k(with)f(subtle)h(properties,)f
(and)i(can)f(thus)g(simplify)f(the)h(semantics)2042 232
y(of)j(multi-stage)h(languages)h(because)f(the)o(y)g(no-longer)h(need)f
(to)f(address)2042 315 y(programs)20 b(with)e(these)h(subtle)h
(characteristics.)2042 556 y Fx(Refer)n(ences)p Black
2089 664 a Fc([1])p Black 29 w(Lennart)15 b(Augustsson)e(and)h(K)n(ent)
g(Petersson.)i(Silly)e(type)g(f)o(amilies.)k(A)-5 b(v)n(ailable)2195
739 y(from:)21 b Fe(http://www.cs.pdx.edu/)q(~she)q(ard)q(/pap)q(ers)q
(/sil)q(ly.)q(pdf)p Fc(,)2195 814 y(1994.)p Black 2089
905 a([2])p Black 29 w(Arthur)e(I.)e(Baars)h(and)g(S.)f(Doaitse)i
(Swierstra.)28 b(T)-5 b(yping)17 b(dynamic)i(typing.)28
b(In)2195 980 y Fb(Pr)m(oceedings)19 b(of)d(the)i(Se)o(venth)h(A)n(CM)d
(SIGPLAN)g(International)k(Confer)n(ence)2195 1054 y(on)c(Functional)i
(Pr)m(o)o(gr)o(amming)p Fc(,)d(pages)i(157\226166.)f(A)m(CM)g(Press,)f
(Ne)n(w)h(Y)-7 b(ork,)2195 1129 y(September)19 b(2002.)24
b(Also)17 b(appears)i(in)e(A)m(CM)g(SIGPLAN)f(Notices)j(37/9.)p
Black 2089 1220 a([3])p Black 29 w(Cristiano)j(Calcagno,)f(Eugenio)f
(Moggi,)g(and)g(T)n(im)e(Sheard.)33 b(Closed)20 b(types)2195
1295 y(for)e(a)g(safe)h(imperati)n(v)o(e)i(MetaML.)28
b Fb(J)n(ournal)19 b(of)f(Functional)j(Pr)m(o)o(gr)o(amming)p
Fc(,)2195 1370 y(13\(12\):545\226572,)f(May)d(2003.)p
Black 2089 1461 a([4])p Black 29 w(Chiyan)k(Chen)g(and)f(Hongwei)h(Xi.)
32 b(Meta-programming)22 b(through)f(typeful)2195 1536
y(code)28 b(representation.)58 b(In)26 b Fb(Pr)m(oceedings)i(of)f(the)g
(8th)g(A)n(CM)f(SIGPLAN)2195 1611 y(International)g(Confer)n(ence)g(on)
d(Functional)i(Pr)m(o)o(gr)o(amming)e(\(ICFP-03\))p Fc(,)2195
1685 y(A)m(CM)18 b(SIGPLAN)f(Notices,)i(pages)g(275\226286,)f(Ne)n(w)g
(Y)-7 b(ork,)17 b(August)36 b(25\22629)2195 1760 y(2003.)17
b(A)m(CM)h(Press.)p Black 2089 1851 a([5])p Black 29
w(James)g(Chene)o(y)i(and)e(Ralf)i(Hinze.)28 b(First-class)20
b(phantom)f(types.)28 b(T)-5 b(echnical)2195 1926 y(Report)18
b(TR2003-1901,)g(Cornell)g(Uni)n(v)o(ersity)l(,)h(2003.)k(Also)17
b(a)o(v)n(ailable)j(from:)2295 2001 y Fa
(http://www.informatik.uni-bonn.de/~ralf/publications)o(/Phantom)o
(.pdf)p Fc(.)p Black 2089 2092 a([6])p Black 29 w(Catarina)k(Coquand.)
39 b(Agda)22 b(is)f(a)h(system)f(for)h(incrementally)j(de)n(v)o
(eloping)2195 2167 y(proofs)18 b(and)f(programs.)25 b(W)-5
b(eb)16 b(page)i(describing)h(A)m(GD)m(A:)2295 2242 y
Fe(http://www.cs.chalmers.s)q(e/~)q(cata)q(rin)q(a/ag)q(da/)42
b Fc(.)p Black 2089 2333 a([7])p Black 29 w(T)-5 b(.)23
b(Coquand)j(and)f(P)-7 b(.)23 b(Dybjer)l(.)49 b(Inducti)n(v)o(e)27
b(de\002nitions)f(and)f(type)g(theory)2195 2408 y(an)e(introduction)j
(\(preliminary)f(v)o(ersion\).)42 b Fb(Lectur)n(e)23
b(Notes)g(in)g(Computer)2195 2482 y(Science)p Fc(,)c(880:60\22676,)g
(1994.)p Black 2089 2574 a([8])p Black 29 w(Ro)n(w)o(an)26
b(Da)o(vies.)47 b(A)24 b(re\002nement-type)j(check)o(er)f(for)f
(Standard)g(ML.)46 b(In)2195 2648 y Fb(International)26
b(Confer)n(ence)e(on)f(Alg)o(ebr)o(aic)h(Methodolo)o(gy)h(and)e
(Softwar)n(e)2195 2723 y(T)-6 b(ec)o(hnolo)o(gy)p Fc(,)27
b(v)o(olume)d(1349)g(of)g Fb(Lectur)n(e)h(Notes)g(in)f(Computer)h
(Science)p Fc(.)2195 2798 y(Springer)o(-V)-7 b(erlag,)19
b(1997.)p Black 2089 2889 a([9])p Black 29 w(Ro)n(w)o(an)27
b(Da)o(vies)e(and)g(Frank)h(Pfenning.)50 b(A)25 b(modal)g(analysis)i
(of)d(staged)2195 2964 y(computation.)j Fb(J)n(ournal)18
b(of)g(the)g(A)n(CM)p Fc(,)e(38\(3\):555\226604,)j(2001.)p
Black 2056 3055 a([10])p Black 29 w(P)-7 b(.)13 b(Dybjer)i(and)g(A.)e
(Setzer)l(.)20 b(A)13 b(\002nite)i(axiomatization)k(of)14
b(inducti)n(v)o(e-recursi)n(v)o(e)2195 3130 y(de\002nitions.)21
b Fb(Lectur)n(e)16 b(Notes)f(in)g(Computer)h(Science)p
Fc(,)g(1581:129\226146,)h(1999.)p Black 2056 3221 a([11])p
Black 29 w(T)n(im)24 b(Freeman)h(and)g(Frank)g(Pfenning.)49
b(Re\002nement)26 b(types)g(for)e(ml.)47 b(In)2195 3296
y Fb(Pr)m(oceedings)17 b(of)e(the)h(A)n(CM)f(SIGPLAN)f(1991)i(confer)n
(ence)h(on)e(Pr)m(o)o(gr)o(amming)2195 3371 y(langua)o(g)o(e)24
b(design)f(and)e(implementation)p Fc(,)k(pages)e(268\226277.)f(A)m(CM)f
(Press,)2195 3445 y(1991.)p Black 2056 3537 a([12])p
Black 29 w(Ralf)k(Hinze)h(and)e(James)g(Chene)o(y)l(.)48
b(A)23 b(lightweight)28 b(implementation)f(of)2195 3611
y(generics)21 b(and)f(dynamics.)31 b(In)19 b(Manuel)h(Chakra)o(v)n
(arty)l(,)h(editor)m(,)f Fb(Pr)m(oceedings)2195 3686
y(of)f(the)g(A)n(CM)f(SIGPLAN)g(2002)g(Hask)o(ell)i(W)-6
b(orkshop)p Fc(,)19 b(pages)g(90\226104.)g(A)m(CM)2195
3761 y(SIGPLAN,)d(October)i(2002.)p Black 2056 3852 a([13])p
Black 29 w(Simon)24 b(Pe)o(yton)g(Jones,)g(Geof)n(fre)o(y)h(W)-5
b(ashb)o(urn,)23 b(and)h(Stephanie)i(W)-5 b(eirich.)2195
3927 y(W)g(obbly)23 b(types:)g(type)h(inference)h(for)d(generalised)j
(algebraic)h(data)d(types.)2195 4002 y Fa
(http://research.microsoft.com/Users/simonpj/)p Fc(,)11
b(2004.)p Black 2056 4093 a([14])p Black 29 w(A.)19 b(J.)g(Kfoury)i
(and)f(Said)h(Jahama.)34 b(T)-5 b(ype)20 b(reconstruction)j(in)e(the)f
(presence)2195 4168 y(of)26 b(polymorphic)h(recursion)g(and)f(recursi)n
(v)o(e)i(types.)52 b(T)-5 b(echnical)28 b(report,)2195
4242 y(March)18 b(21)f(2000.)p Black 2056 4334 a([15])p
Black 29 w(Zhaohui)32 b(Luo)d(and)i(Robert)h(Pollack.)68
b(LEGO)29 b(proof)i(de)n(v)o(elopment)2195 4408 y(system:)g(User')l(s)e
(manual.)66 b(T)-5 b(echnical)32 b(Report)f(ECS-LFCS-92-211,)2195
4483 y(LFCS,)15 b(Computer)i(Science)g(Dept.,)f(Uni)n(v)o(ersity)i(of)d
(Edinb)o(ur)o(gh,)h(The)f(King')l(s)2195 4558 y(Buildings,)k(Edinb)o
(ur)o(gh)e(EH9)g(3JZ,)f(May)h(1992.)24 b(Updated)19 b(v)o(ersion.)p
Black 2056 4649 a([16])p Black 29 w(Connor)i(McBride.)35
b(Epigram:)21 b(Practical)i(programming)e(with)f(dependent)2195
4724 y(types.)60 b(In)28 b Fb(Notes)h(fr)m(om)f(the)h(5th)g
(International)i(Summer)d(Sc)o(hool)i(on)2195 4799 y(Advanced)19
b(Functional)g(Pr)m(o)o(gr)o(amming)p Fc(,)e(August)h(2004.)24
b(A)-5 b(v)n(ailable)20 b(at:)2295 4873 y Fa
(http://www.dur.ac.uk/CARG/epigram/epigram-afpnotes.p)o(df)25
b Fc(.)p Black 2056 4965 a([17])p Black 29 w(Robin)i(Milner)l(.)52
b(A)25 b(theory)i(of)e(type)h(polymorphism)h(in)e(programming)2195
5039 y(languages.)g Fb(J)n(ournal)18 b(of)f(Computer)h(and)f(System)g
(Science)p Fc(,)i(17\(3\):348\226375,)2195 5114 y(1978.)p
Black 2056 5205 a([18])p Black 29 w(E.)27 b(Moggi,)h(W)-6
b(.)26 b(T)-5 b(aha,)27 b(Z.)g(Benaissa,)i(and)f(T)-5
b(.)26 b(Sheard.)59 b(An)27 b(idealized)2195 5280 y(MetaML:)19
b(Simpler)m(,)g(and)f(more)f(e)o(xpressi)n(v)o(e.)29
b(In)17 b Fb(Eur)m(opean)h(Symposium)h(on)2195 5355 y(Pr)m(o)o(gr)o
(amming)j(\(ESOP\))p Fc(,)d(v)o(olume)i(1576)g(of)g Fb(Lectur)n(e)h
(Notes)f(in)g(Computer)2195 5430 y(Science)p Fc(,)e(pages)f
(193\226207.)g(Springer)o(-V)-7 b(erlag,)19 b(1999.)p
Black Black eop end
%%Page: 13 13
TeXDict begin 13 12 bop Black Black Black -136 66 a Fc([19])p
Black 30 w(Bengt)18 b(Nordstrom.)24 b(The)17 b(ALF)f(proof)i(editor)m
(,)g(March)g(20)f(1996.)p Black -136 158 a([20])p Black
30 w(Emir)23 b(P)o(asalic)k(and)e(Nathan)h(Linger)l(.)49
b(Meta-programming)27 b(with)e(typed)4 232 y(object-language)i
(representations.)46 b(In)23 b Fb(Gener)o(ative)i(Pr)m(o)o(gr)o(amming)
e(and)4 307 y(Component)17 b(Engineering)g(\(GPCE'04\))p
Fc(,)d(pages)i(136)g(\226)e(167,)h(October)i(2004.)4
382 y(LNCS)f(v)o(olume)h(3286.)p Black -136 473 a([21])p
Black 30 w(Emir)c(P)o(asalic,)i(W)-5 b(alid)15 b(T)-5
b(aha,)14 b(and)g(T)n(im)f(Sheard.)19 b(T)-5 b(agless)14
b(staged)h(interpreters)4 548 y(for)k(typed)i(languages.)34
b(In)19 b Fb(Pr)m(oceedings)i(of)f(the)g(Se)o(venth)i(A)n(CM)d(SIGPLAN)
4 623 y(International)24 b(Confer)n(ence)g(on)e(Functional)i(Pr)m(o)o
(gr)o(amming)e(\(ICFP-02\).)p Fc(,)4 697 y(pages)17 b(218\226229,)h
(Pittsb)o(ur)o(gh,)g(P)-6 b(A.,)15 b(October)36 b(4\2266)17
b(2002.)g(A)m(CM)g(Press.)p Black -136 789 a([22])p Black
30 w(La)o(wrence)23 b(C.)e(P)o(aulson.)39 b(Isabelle:)24
b(The)e(ne)o(xt)g(700)g(theorem)h(pro)o(v)o(ers.)39 b(In)4
863 y(P)-7 b(.)20 b(Odifreddi,)k(editor)m(,)f Fb(Lo)o(gic)g(and)f
(Computer)i(Science)p Fc(,)g(pages)e(361\226386.)4 938
y(Academic)c(Press,)f(1990.)p Black -136 1029 a([23])p
Black 30 w(Frank)i(Pfenning)i(and)f(Carsten)h(Sch)6 b(\250)-28
b(urmann.)32 b(System)20 b(description:)i(T)-5 b(welf)4
1104 y(\227)26 b(A)f(meta-logical)30 b(frame)n(w)o(ork)e(for)e(deducti)
n(v)o(e)j(systems.)53 b(In)26 b(Harald)4 1179 y(Ganzinger)m(,)21
b(editor)m(,)f Fb(Pr)m(oceedings)h(of)e(the)g(16th)h(International)i
(Confer)n(ence)4 1254 y(on)e(A)o(utomated)i(Deduction)h(\(CADE-16\))p
Fc(,)c(v)o(olume)j(1632)e(of)h Fb(LN)n(AI)p Fc(,)f(pages)4
1328 y(202\226206,)d(Berlin,)h(July)g(7\22610,)f(1999.)g(Springer)o(-V)
-7 b(erlag.)p Black -136 1420 a([24])p Black 30 w(Franc)-25
b(\270)t(ois)18 b(Pottier)i(and)f(Nadji)h(Gauthier)l(.)30
b(Polymorphic)20 b(typed)g(defunction-)4 1494 y(alization.)32
b(In)18 b Fb(Pr)m(oceedings)i(of)f(the)g(31st)g(A)n(CM)f(Symposium)i
(on)e(Principles)4 1569 y(of)h(Pr)m(o)o(gr)o(amming)h(Langua)o(g)o(es)h
(\(POPL)n('04\))p Fc(,)d(pages)i(89\22698,)f(V)-7 b(enice,)21
b(Italy)l(,)4 1644 y(January)d(2004.)24 b(Superseded)19
b(by)e([25].)p Black -136 1735 a([25])p Black 30 w(Franc)-25
b(\270)t(ois)18 b(Pottier)i(and)f(Nadji)h(Gauthier)l(.)30
b(Polymorphic)20 b(typed)g(defunction-)4 1810 y(alization)g(and)d
(other)h(tales.)26 b(Manuscript.)18 b(Submitted,)h(February)f(2005.)p
Black -136 1901 a([26])p Black 30 w(Franc)-25 b(\270)t(ois)18
b(Pottier)i(and)f(Y)-7 b(ann)19 b(Rgis-Gianas.)31 b(T)-5
b(o)n(w)o(ards)18 b(ef)n(\002cient,)j(typed)e(LR)4 1976
y(parsers.)24 b(Draft)18 b(paper)m(,)g(September)h(2004.)p
Black -136 2067 a([27])p Black 30 w(Didier)24 b(Remy)l(.)44
b(Syntactic)26 b(theories)f(and)f(the)g(algebra)h(of)f(record)g(terms.)
4 2142 y(T)-5 b(echnical)23 b(Report)f(1869,)f(Institut)h(National)h
(de)e(Recherche)j(en)d(Informa-)4 2217 y(tique)d(et)g(en)f
(Automatique,)i(March)f(1993.)p Black -136 2308 a([28])p
Black 30 w(T)n(im)23 b(Sheard.)48 b(Accomplishments)26
b(and)f(research)h(challenges)h(in)d(meta-)4 2383 y(programming.)e(In)
16 b(W)-5 b(alid)16 b(T)-5 b(aha,)15 b(editor)m(,)j Fb(Pr)m(oceedings)f
(of)f(the)h(W)-6 b(orkshop)16 b(on)4 2457 y(Semantics,)j(Applications)h
(and)e(Implementation)k(of)c(Pr)m(o)o(gr)o(am)g(Gener)o(ation)4
2532 y(\(SAIG'01\))p Fc(,)k(v)o(olume)g(2196)h(of)f Fb(LNCS)p
Fc(,)g(pages)h(2\22644,)f(Berlin,)i(September)4 2607
y(2001.)17 b(Springer)h(V)-7 b(erlag.)25 b(In)m(vited)19
b(talk.)p Black -136 2698 a([29])p Black 30 w(T)n(im)f(Sheard.)33
b(Languages)21 b(of)e(the)i(future.)33 b Fb(Onwar)n(d)19
b(T)l(r)o(ac)o(k,)h(OOPSLA)n('04.)4 2773 y(Reprinted)g(in:)g(A)n(CM)f
(SIGPLAN)f(Notices,)j(Dec.)e(2004.)p Fc(,)g(39\(10\):116\226119,)4
2848 y(October)f(2004.)p Black -136 2939 a([30])p Black
30 w(T)n(im)e(Sheard.)24 b(Ome)o(ga)18 b(users)f(guide,)g(March)h
(2005.)25 b(A)-5 b(v)n(ailable)20 b(from:)103 3014 y
Fe(http://www.cs.pdx.edu/~)q(Ome)q(ga/)42 b Fc(.)p Black
-136 3105 a([31])p Black 30 w(T)n(im)18 b(Sheard)j(and)f(Nathan)h
(Linger)l(.)33 b(Programming)20 b(with)g(static)i(in)m(v)n(ariants)4
3180 y(in)17 b(Ome)o(ga,)g(September)h(2004.)25 b(A)-5
b(v)n(ailable)20 b(from:)103 3254 y Fe(http://www.cs.pdx.edu/~)q(she)q
(ard/)42 b Fc(.)p Black -136 3346 a([32])p Black 30 w(T)n(im)17
b(Sheard)i(and)g(Emir)f(P)o(asalic.)31 b(Meta-programming)21
b(with)e(b)o(uilt-in)h(type)4 3421 y(equality)l(.)44
b(In)23 b Fb(Lo)o(gical)h(F)l(r)o(ame)o(works)g(and)f(Meta-Langua)o(g)o
(es)j(workshop)p Fc(,)4 3495 y(July)17 b(2004.)24 b(A)-5
b(v)n(ailable)20 b(at:)103 3570 y Fe(http://cs-www.cs.yale.e)q(du/)q
(home)q(s/c)q(arst)q(en/)q(lfm0)q(4/)p Fc(.)p Black -136
3661 a([33])p Black 30 w(V)l(incent)32 b(Simonet)g(and)f(Franc)-25
b(\270)t(ois)31 b(Pottier)l(.)69 b(Constraint-based)35
b(type)4 3736 y(inference)19 b(for)e(guarded)i(algebraic)h(data)e
(types.)25 b(A)-5 b(v)n(ailable)20 b(from:)103 3811 y
Fe(http://cristal.inria.fr)q(/~s)q(imon)q(et/)q(publ)q(is/)q(inde)q
(x.e)q(n.ht)q(ml)4 3885 y Fc(.)p Black -136 3977 a([34])p
Black 30 w(Aaron)29 b(Stump.)61 b(Imperati)n(v)o(e)32
b(LF)27 b(meta-programming.)64 b(In)29 b Fb(Lo)o(gical)4
4051 y(F)l(r)o(ame)o(works)21 b(and)h(Meta-Langua)o(g)o(es)i(workshop)p
Fc(,)e(July)f(2004.)37 b(A)-5 b(v)n(ailable)4 4126 y(at:)103
4201 y Fe(http://cs-www.cs.yale.e)q(du/)q(home)q(s/c)q(arst)q(en/)q
(lfm0)q(4/)p Fc(.)p Black -136 4292 a([35])p Black 30
w(T)g(aha)23 b(and)g(Nielsen.)45 b(En)m(vironment)25
b(classi\002ers.)45 b(In)23 b Fb(POPL:)f(30th)i(A)n(CM)4
4367 y(SIGA)n(CT)-5 b(-SIGPLAN)30 b(Symposium)i(on)g(Principles)g(of)g
(Pr)m(o)o(gr)o(amming)4 4442 y(Langua)o(g)o(es)p Fc(,)18
b(2003.)p Black -136 4533 a([36])p Black 30 w(W)-5 b(alid)17
b(T)-5 b(aha.)25 b Fb(Multi-Sta)o(g)o(e)d(Pr)m(o)o(gr)o(amming:)c(Its)f
(Theory)h(and)g(Applications)p Fc(.)4 4608 y(PhD)j(thesis,)h(Ore)o(gon)
h(Graduate)h(Institute)g(of)e(Science)h(and)g(T)-5 b(echnology)l(,)4
4682 y(No)o(v)o(ember)18 b(1999.)p Black -136 4774 a([37])p
Black 30 w(W)-5 b(alid)21 b(T)-5 b(aha.)35 b(A)21 b(sound)g(reduction)i
(semantics)f(for)f(untyped)h(CBN)f(mutli-)4 4848 y(stage)e
(computation.)h(Or)m(,)e(the)h(theory)h(of)e(MetaML)h(is)f(non-tri)n
(vial.)32 b(In)18 b Fb(2000)4 4923 y(SIGPLAN)24 b(W)-6
b(orkshop)26 b(on)f(P)-5 b(artial)26 b(Evaluation)h(and)e
(Semantics-Based)4 4998 y(Pr)m(o)o(gr)o(am)16 b(Manipulation)21
b(\(PEPM'00\))p Fc(,)16 b(January)i(2000.)p Black -136
5089 a([38])p Black 30 w(W)-5 b(alid)13 b(T)-5 b(aha.)16
b(T)-5 b(ag)13 b(elimination)j(-)d(or)g(-)g(type)h(specialisation)j(is)
c(a)h(type-inde)o(x)o(ed)4 5164 y(ef)n(fect.)38 b(In)20
b Fb(APPSEM)g(W)-6 b(orkshop)21 b(on)g(Subtyping)i(&)d(Dependent)j(T)-5
b(ypes)21 b(in)4 5239 y(Pr)m(o)o(gr)o(amming)o(.)13 b(P)-5
b(onte)13 b(de)g(Lima)h(P)-5 b(ortugal.)p Fc(,)12 b(July)i(2000.)i(A)-5
b(v)n(ailable)16 b(online)f(at)4 5313 y
(http://www-sop.inria.fr/oasis/DTP00/Proc)q(ee)q(ding)q(s/proc)q(ee)q
(di)q(ngs.html.)p Black -136 5405 a([39])p Black 30 w(W)-5
b(alid)20 b(T)-5 b(aha,)20 b(Henning)h(Makholm,)f(and)g(John)g(Hughes.)
34 b(T)-5 b(ag)19 b(elimination)p Black Black 2195 66
a(and)f(jones-optimality)l(.)27 b Fb(Lectur)n(e)18 b(Notes)g(in)f
(Computer)h(Science)p Fc(,)h(2053:257\226)2195 141 y(??,)f(2001.)p
Black 2056 232 a([40])p Black 29 w(W)-5 b(alid)24 b(T)-5
b(aha)23 b(and)g(T)n(im)f(Sheard.)44 b(MetaML:)24 b(Multi-stage)i
(programming)2195 307 y(with)21 b(e)o(xplicit)j(annotations.)37
b Fb(Theor)n(etical)23 b(Computer)e(Science)p Fc(,)i(248\(1-2\),)2195
382 y(2000.)p Black 2056 473 a([41])p Black 29 w(The)g(Coq)g(De)n(v)o
(elopment)i(T)-5 b(eam.)42 b Fb(The)23 b(Coq)g(Pr)m(oof)g(Assistant)g
(Refer)n(ence)2195 548 y(Manual,)14 b(V)-7 b(er)o(sion)13
b(7.4)p Fc(.)i(INRIA,)e(2003.)j(http://pauillac.inri)q(a.fr/c)q(oq/)q
(doc)q(/mai)q(n.html.)p Black 2056 639 a([42])p Black
29 w(Mitchell)j(W)-5 b(and.)22 b(T)-5 b(ype)16 b(inference)j(for)d
(record)i(concatenation)i(and)d(multiple)2195 714 y(inheritance.)28
b Fb(Information)19 b(and)e(Computation)p Fc(,)i(93\(1\):1\22615,)g
(July)e(1991.)p Black 2056 805 a([43])p Black 29 w(Andre)n(w)25
b(K.)d(Wright)j(and)f(Matthias)h(Felleisen.)48 b(A)23
b(syntactic)j(approach)2195 880 y(to)f(type)g(soundness.)47
b Fb(Information)26 b(and)f(Computation)p Fc(,)h(115\(1\):38\22694,)
2195 955 y(15)17 b(No)o(v)o(ember)h(1994.)p Black 2056
1046 a([44])p Black 29 w(Hongwei)27 b(Xi,)e(Chiyan)i(Chen,)f(and)g
(Gang)g(Chen.)52 b(Guarded)27 b(recursi)n(v)o(e)2195
1121 y(datatype)j(constructors.)57 b(In)26 b Fb(POPL:)g(30th)h(A)n(CM)g
(SIGA)n(CT)-5 b(-SIGPLAN)2195 1196 y(Symposium)18 b(on)f(Principles)i
(of)e(Pr)m(o)o(gr)o(amming)h(Langua)o(g)o(es)p Fc(,)g(2003.)p
Black 2056 1287 a([45])p Black 29 w(Hongwei)i(Xi)e(and)h(Frank)g
(Pfenning.)30 b(Eliminating)21 b(array)e(bound)g(checking)2195
1362 y(through)j(dependent)i(types.)37 b Fb(A)n(CM)21
b(SIGPLAN)f(Notices)p Fc(,)i(33\(5\):249\226257,)2195
1436 y(May)c(1998.)p Black 2056 1528 a([46])p Black 29
w(Hongwei)28 b(Xi)e(and)h(Frank)g(Pfenning.)55 b(Dependent)29
b(types)e(in)g(practical)2195 1602 y(programming.)36
b(In)20 b(A)m(CM,)g(editor)m(,)i Fb(POPL)d('99.)h(Pr)m(oceedings)i(of)e
(the)h(26th)2195 1677 y(A)n(CM)g(SIGPLAN-SIGA)n(CT)f(on)g(Principles)i
(of)f(pr)m(o)o(gr)o(amming)h(langua)o(g)o(es,)2195 1752
y(J)n(anuary)i(20\22622,)e(1999,)h(San)g(Antonio,)g(TX)p
Fc(,)e(A)m(CM)i(SIGPLAN)e(Notices,)2195 1826 y(pages)d(214\226227,)g
(Ne)n(w)f(Y)-7 b(ork,)17 b(NY)-9 b(,)16 b(USA,)g(1999.)h(A)m(CM)g
(Press.)p Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
