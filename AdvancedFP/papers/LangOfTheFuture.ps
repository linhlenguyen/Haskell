%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96dev Copyright 2007 Radical Eye Software
%%Title: SigPlanVersion.dvi
%%CreationDate: Mon Sep 27 11:59:28 2010
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica CMSY10 Times-Bold Times-Roman
%%+ Times-Italic Symbol CMR10 Courier CMMI10 CMSY9 Times-BoldItalic
%%+ MSAM10 CMTT9
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: D:\Programs\MikTex2-7-3164\miktex\bin\dvips.exe
%+ SigPlanVersion
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.09.27:1159
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def
 
@fedspecial end
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
readonly def
/FontBBox{-6 -233 542 698}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D1E
2931CE5F5D18C658602059F07BE66E6EFC9239D7AB2FB8A4CBD41675B8ECF279
650C29E53B14AC0E392A664848C1844B1CECBB2D5CFB72D0916B675C9A9A1E35
F12696A6F628473C604A95376468E06E295AD6F76CEB939D94113532050B9D5A
D2F41A9EFB9424D986612313B89EFE9C8A71313340B248F6853B1EDBF02B7F9E
F447220FE131D7D54CFB8AA1281DBAEA73E665BACB1F164552CC0CEDB63BD4B1
4A9AE8AC6FA02242DBE8DA46B64B6BFC11762F0784F216FC8B9120D688D1705A
438B14F5E5DEAF2A98408B3B64620DE3732A4DAE6D08D5D97E34C75DAE19EABD
BA0796165C1151BCBFB1DF8D29A63A8300DBDB9E3323CB82D0337598B83F4F2B
A97CF5196D4D1CEC1EDB8966E548C0D9C194C932319610FB43EA1B86322FE641
AB48770FF13BD475A7267E142388563D1A400419C585B22A9886074687BEDF74
D905BE8EE440BA2ABF28EAB673399B7F129B9729DD5564C681954621903B84BB
CAF89AC5ADB2932472DF29ADA2BDBDB4D05F65F28F5F4C529613D61858E0074A
082A852710A62A147C966F2B85B51B0BE85F11D2057C66FDD61F6C5755367980
9F4DE680601D4DA41B46F8D2148450000413C27AA39B586B74B977B25F0FD3C0
4BA1EBFAFDBEC531EA13DFBD6700E53818CE04D23886B8AE75DCC36BCD3189B1
0D55FAE27D0D126E82AEF31D7B5DF27E58C30BB0867D6D7AC1DA9EFB8A2DF095
B5B934A68EE122DA0A83B36C952431586B957990206194E89339048AA6EE4C53
703763505ED57C494DD907D0EEA04F6B1D4C8F3BA778F4E7AA832AAB4D75F024
61E91C6D25FD6823CB24FC863AB57684ADC0896B46B1A4FD8DA361AE16AAE5B9
C618D87D441B7A932440D31F43620222756F17A1F610B7719D2EADFE8769E240
D91EA745EB608F4C2FD00A877C2ECC78283E690E6E0C1002C450906BC6B6DCEC
BD7C3C1C0CC3F90008F1E95D879B71F36B4151495D6AE31ABA88B5EDD4955C58
2B6DF6B6BB0FFEC08477083911E81B70FDBCED0692F1E33B8D4E4BC338E57A74
7E1902F00ABBFEAB07E903469D11C9CADC1AE55DDF7DA6C5B2E52E7774D2E059
16753BA5F51F11F9E342ECB21BF1C601FA94A298CC02356CF2932F7527FF6D41
FB26163EB7532988427B07D89980132316DBAE5B75938525073B79B2019460FC
4B2A2F41803CC17FBB7424E4E4852F594C11EB941F566317382E7C15B753B580
4A60EB7C9FD4089A9EB9B28E51897DF0FC22CFA9F10DDDFEF1B9F83286E64A4A
91FB0B00E1C387A13A3AF82B09A8F1A350F99496A8EF4CD1E49ECE6A0543494C
F742C7D2754D171975537ED489C57B32168319E4941E654DC51737470D9C2862
9C12B13953AEAEF557B4D520E8345B367AF6DFBAE9C6E65040B7DB7FEF29B5B5
4B1DEF6D928C46649CE9CBA9CC0A12CACDEEDE6E7F083EBD53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.1: MSAM10 2.1
%%CreationDate: 1993 Sep 17 09:05:00
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /squiggleright put
readonly def
/FontBBox{8 -463 1331 1003}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50EC5FD93D6A04C2783B50EA48059E3E7407537CB8D
4C206846EF0764C05289733920E2399E58AD8F137C229F3CE3E34D2D1EAB2D53
20D44EFAC8EFA4D14A2EFE389D952527F98D0E49BD5BD2C8D58FF9CB9C78D974
75C2AB5467D73D2B5E277A3FDC35909938A9DF0EB91BD9159D3437BE22EE4544
3429AC8E2BFBE34AE54D3BA3AD04BDF3F4F43A2B43992DF88678681B3AB32CFD
A23E2C98D1AF00AB206AC95B78BBE6316F7A0AB6BD3236C28C76288B3C25D1EB
E9ABB3576C5EC15A71D26177F5883E9B48293D59015615E2EEAF2E9BA04151ED
5497B9A1C41CBA44BAFF13EA218F5EAC11952EE336AD1DBE6CE92F002EAA3B3D
3BE4C3792F3405763C4BD93EFC3B4FC34193439561841BA989DD8D9F9AEE7A7B
24AEB4654B35023C9720B8F31AA9452E29753FB7915CB29977E725611E37C0B7
784BCC26FACF8A7A0EB1E54290D27FFE52B2D87FAD080AD15EE1984C37E0EB30
122C3012D3A16B09C28903D138352AB5462674B6CFB63F1371768D094DDF288C
36FB9B58443F872D61F2CD8CED42FE0EFF3D7E9952A172BB1AFECB60BF79F2B6
04265FDE4F78BC9FD619AA733CD0412F1D9A7C13B271BF827DCBDC8ABAE24FF0
74D3C220621D7FF0EFE62D835A221D0A7C139E2E6681FC2BBA58FA3B80D416EC
3854C63BA040A4262B458340DAA18AA6AEA3BBAC61615CB85982B18664D3D3AF
340C65B969071CF2D0CABEB80E04623D0526F862ECA8280EEE236C535F70561A
854181132E677674AD5E14C6636F57541D3C821F0776D2CB9B8526D4B826791A
0B179B387D47B0811BB2C543C33C8D2E85C0963D01F865C6CAF0142A9A2579CD
305FDB83EE4360D6F14FB45F36149F144EDD40F5AD478F2A40A1B0350D02F91A
37C7B0C40EF70EFBAD0C322298C4CF581F1F753F7BEE26B56AB00363E62BA6C3
351EEA00CDE1365BC14698AF4B86193692A9AAB635D6B69B56907F1811021C80
EF24551295EBF4200B50DFAD78089297DA0A3884560E5C026D32A689B70EE227
E06A3F1BB2531E85D1F23E5F91DFFD7E30A94906147DFE3FA8C788274F33B058
E6FF0A3164B000CAAD8EAC5C25EF89B15F5CB1951741A0708953E8C806E7FB7B
6A53147B57BC529C9100D4E207FF508116F90429577F5F7C8E966BE6148C0389
56FDC687BD74BE3DB8B61BDC732603AA0C9CC93CBF48D29D1026BF287A44967D
6B8AC95404C3F61C77C1B892730F2CF825708D99A19086F6B8B6BD2BA84AB231
3A82B074EC6D65ED022C8D3621C9986E8015A00BDEF51970F89FB2B6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 102 /braceleft put
dup 103 /braceright put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BF5AF0BCA28EBD840AD76CC39AD7AA
CF2C057239308AF5B66FC81B645B7631A135923EA24F2893A5409CEC8923BDEE
47AFE90058EB41EEFA1AA8AC6CCF4A5E5882019D673B501A3F807EE207590962
8CCFC7AC8338BBF0828113394C5513192BF1AD3647A222B65E233F4802EE8B6B
94159FFF4EB48393F6EE60B1C8C27BD315CAC569196BFF41EE690D9D3FCB301B
10D0E3030C63B602881B94E930B98708F2E576C8736226AB9697131E81287DAC
BB6CA1121D65587A3AC6BA0BE244046B5AC2A4264D0F7E43DBAB87F1A5BEC44F
3714775D771901B0BE079232C4341017F0518C64654566AF001F6AEDF649CDB5
768146D878A7A6722FEF3434DFE2089EED50B81C0DAE24E198DE4E63FE8412B2
C987623873C621A0D7EC33845D0553D4F36B585B214B640B46FEB19ADF5A5467
A8A4A8C67D39363E5C36BD3E1E773953D7696061014C6DD797D341D6502FAF22
32849E871C18498E62CC0258B4DFD8429099B35698C8DE277450EB0EA0620B5F
472725A2D9A3C229C3779B6CE05FF4E11198A3C07F9A2F050B28DD2495ADC5D4
16B64D2B7E01AB94D8CFFB34D9F17B25DD40BABB5292EF5A3227EF3D9D7DD61C
8ACB2B93E9AC37E5C40E4195ED69965BF6515B6F198700D5C25DF46317CD7FFD
E6F7266B034A09AF851355EEAD1E4BC86C27FAB9370613FCE36EF623694BB509
B5E8C92A45B438CA460820405116C3926134CC0B3DBD2E49F6B07D1C06C984EA
61BED067B7DE2A9BD7694F3BF14C4B5F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB03428973A5FF05466
C3CBB63FB2B8C0FE6AED917EE69D49B24AA2F081695104A3880E570E8CD0C069
09587087E90022F587D65035C8A35965F4743668F85C54E66771389A53A13DFE
E8503C83AFD70300BB4637DB47FDB3C7E6D3D7E35F6D515EA3E71F34B7316F11
B2AA0298916580EB533CD2E76D46A763A562F31B566E251667A249F1931052D9
45B193D9CAC7E59C43949E07D1222B403BB2B132E87F8DA066E990E4A1DF7933
35D4459971DD88572599551500C4E2207361A933326BBF152D59911BCB2E0741
95102D43EEF99212CC19DFF1A976C9F9D358698ADD8B4A671C9A59201E02E225
17729F6BADE38F193D3E0C6EEF3A762130FFAC4CF19F40B9FDD5456E0E06C2B1
5D8C841175C42CA0C465A68020B404AF93FF67A996B0FECF1FE203EEAC8955C6
36987F6CFDFFB596CF2BBF933FC5653C677D95679C3287D454CF112A43AF58B7
E66CDB6E1CBEFF42226B681562140817DFA3C1F62F9B93EAAE93B09B8DBA89E7
0C23424853FDB17BDE23830A213E7155A6CE80765DB1102DAE355C0619EBD2D8
68915460075560A2990999F63D69CE17BFE4CBCD1EC078C2F3A06533A37C7736
CCAC9A3F36D7AE5902C882EB1BDEBA3B7999C27FB8720EA294486F9105B12D4D
BA4206EC414E100DBBF20AE886E89C5F648E95D6A02F1365AA2FBAACC1FAAD44
D39EB12279FBD2CDF05ABF5B031DCCA0B0E05B7177D7206F8E2CC714CDC87E8C
D9CEC051453148643BE4005367C74D9A30594759EA66C55C4F30929F1380894E
ECFD36B253C9EA86DA465A5CD5DC2630C66F1CBA6CAA2A2B18D92E1062754AE9
BFC9FCDC1BC8EE62393ABC3335338773874CD183565733C7EAD2A62EC2D4987C
2F054C944BDA9FD3F28F3B9ED342AAF98AA7E2B7B3658E2EB7B8F897654D7D4D
9F45F24F33D46EF2B6EF5A2D4DA0BB8C228CEDC7C348B6226736E7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176676ABB71BBD0EE56B4CC492C0652750227CEC7F412A029C762C56D6E2
B18C69A7DBAC8CF57D10127EC2A14AA2CA1C58FE0B33A49F450F3EEBBA68082A
505AC0D350F707C29B0E57456A81DC59099996F246A790C8423BBEF2DA4E911F
2E27A395AA4D480B015D7E47BFDD146F1CCA76B648424BE24BC0CB9DD68F804E
A124809A40A24A09C981D1A71187C151558C4FF7C8D7A34D4677A6E8258CD9D5
90648ADC6F9D220CFC1D4B452B4627FBECB1DD38DFCC84F26FE7BB0087F7C6C7
C501CF1627396AC78F9383F376259E83B4F9AD34AD13EC9E74197B1D657CB0F9
A052F94CB7E8701C8DEC8871FB72D6470A408DA6858F009407F681EB8C0B7DE0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 3 /asteriskmath put
dup 15 /bullet put
dup 24 /similar put
dup 33 /arrowright put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57033D79919697C81395D5B94C3AAAB11
52D73937B8F82D3E2E764DA1B3BE273CBB84E4B1919CC1D5586C21F6FC23BF1D
82DE5A8DFA3E8F5C25622AAB9F7A588532D13C663079C8FB84DA6BD4D2DEDB2F
84CE30D0F188EEA269552CD6ED7A1D0D82F06F81ADD206CCD9D4BEC14E68C3BC
8B7C348241D9CE919D7B36C1537BBAF885421D6CDF765BF3F556F2990FC6A11F
C94264CAE41EDD0BB2A1E461EE886E345C6FEB9624E91EA379D19A0E59E5CDD5
90A6CE4BB948F891376A0832CDB4E6D296D4BD24D1105F97F589FAC1F2A26ECF
6E52E93706F4646313CF9B3B17F0D984F097BA622FF688782844F4FD101A1BF3
BC64B901E39C9271C281711E8AB9B4BCEC663F608C9181A90069BEF6A2C68F58
BFE3289C782BF2A980885B2B392ABB9FB49F95890CD4A4BEBC9378E69819A09E
4EBF0E043B76477728B5690ACA97AA19C2A70133CC2C360A54762B96A1B14A8F
D74B20320AD5CD6DD018ADF04C2A6512CAF49037F8C1FA8A648B8453E2D559BB
8BC90D7BAA339BA3C61643BCFD621E1AFF3F98E13A3021BB389CBD8A1D5E6A3B
6CEF4069C6CE5816C8B42A1F71E4A5500EFC08BCBDD663A09F26F999DDDF78D2
7A3AF0531BB55B9D150294ACD42D872F7915BFD924AC4AEB0A1C1EB74CEB8B6D
684052449D45A572C6AC45A145BF163FCCC2B0578B3A0D61ACC9D0FCEFE2A98F
A1FDC0B92514C6F5DEEE68931CC50CF44C6AFC93A2DD2570D8B5AC8A235FAD2D
2E249CA5A90F09B4932524647C4FAAAC58094D4D2E5E1C92D064EFB7DE3DF1FE
65E1E8A3E9C649F66C95D25315F2A1827AB2693B193E17590EFDDAA5F35B9CD7
6193E9537D95D0955A7947665EC6FA4D9BBAE797A325DF6DDF4077518CE12672
098784C48F822DE2610809FEF8824E15854247E82494A3B01865745AA74592A7
D257208D124CCABCD46EB5A83B6452915A3F3ACAD4BCD0B2BEC3FCB22FB51969
39CEE148C7003BFDCABD69567EEB9D8132070B61B302B42D4067B8011A2C9B95
698E60A34631C938B58F6868CC4C3B1AB0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (SigPlanVersion.dvi)
@start /Fa 103[30 31[30 30 1[30 30 30 30 1[30 30 30 30
30 30 30 30 30 30 30 30 30 30 30 30 11[30 4[30 21[30
10[30 30 30 45[{ .85 ExtendFont TeXBase1Encoding ReEncodeFont }29
58.1154 /Courier rf /Fb 157[39 39 97[{}2 74.7198 /CMTT9
rf /Fc 223[77 32[{}1 74.7198 /MSAM10 rf /Fd 139[16 5[29
4[16 29 33[36 70[{ TeXBase1Encoding ReEncodeFont }5 58.1154
/Times-Italic rf /Fe 138[42 6[42 1[21 2[21 42 37 1[33
3[37 9[66 87[{ TeXBase1Encoding ReEncodeFont }9 74.7198
/Times-BoldItalic rf /Ff 152[38 38 102[{}2 74.7198 /CMSY9
rf /Fg 103[34 26[34 34 34 34 34 34 34 34 34 34 34 34
34 34 34 34 34 34 34 1[34 34 34 34 34 34 34 34 34 1[34
1[34 34 34 34 34 34 34 34 1[34 34 34 1[34 34 34 34 34
1[34 34 34 1[34 34 34 34 34 34 2[34 34 34 34 34 4[34
1[34 34 34 34 1[34 34 34 34 34 34 34 34 2[34 1[34 34[{
 .85 ExtendFont TeXBase1Encoding ReEncodeFont }75 66.4176
/Courier rf /Fi 168[77 87[{}1 99.6264 /Symbol rf /Fj
103[38 27[38 1[38 38 38 38 38 38 38 38 38 38 38 38 38
38 38 38 38 38 38 38 38 38 38 38 38 38 1[38 1[38 1[38
38 2[38 38 1[38 38 38 1[38 38 38 38 38 1[38 38 38 38
38 38 38 38 38 38 2[38 38 38 38 38 4[38 1[38 38 38 38
38 38 38 38 38 38 38 38 3[38 36[{
 .85 ExtendFont TeXBase1Encoding ReEncodeFont }71 74.7198
/Courier rf /Fk 162[21 1[21 47[58 1[29 29 40[{}5 74.7198
/CMR10 rf /Fl 196[21 59[{}1 74.7198 /CMMI10 rf /Fm 172[32
2[32 42 2[36 10[42 12[29 1[29 1[29 48[{
 .167 SlantFont TeXBase1Encoding ReEncodeFont }8 58.1154
/Times-Roman rf /Fn 134[29 1[42 29 29 16 23 19 29 29
29 29 45 16 29 1[16 29 29 19 26 29 26 29 26 10[42 1[36
3[32 42 1[52 9[39 39 42 8[29 2[29 29 29 29 29 29 16 15
19 15 7[29 33[32 2[{ TeXBase1Encoding ReEncodeFont }44
58.1154 /Times-Roman rf /Fp 252[29 3[{}1 58.1154 /CMSY10
rf /Fq 134[37 37 54 37 42 25 29 33 42 42 37 42 62 21
42 25 21 42 37 25 33 42 33 42 37 3[25 1[25 3[75 2[50
42 2[46 1[54 71 3[29 1[58 46 50 54 54 1[54 6[25 37 37
37 37 37 37 37 37 37 37 1[19 25 19 2[25 25 37[42 2[{
 TeXBase1Encoding ReEncodeFont }57 74.7198 /Times-Bold
rf /Fr 105[37 27[29 33 33 50 33 37 21 29 29 37 37 37
37 54 21 33 21 21 37 37 21 33 37 33 37 37 8[46 62 46
1[42 37 46 54 46 54 50 62 42 1[33 25 54 54 46 46 54 50
46 46 6[25 37 37 37 37 37 37 37 37 37 37 1[19 25 19 2[25
25 25 36[37 2[{ TeXBase1Encoding ReEncodeFont }67 74.7198
/Times-Italic rf /Fs 133[44 50 50 72 50 55 33 39 44 55
55 50 55 83 28 55 33 28 55 50 33 44 55 44 55 50 9[100
2[66 55 72 78 61 78 72 94 66 78 1[39 78 78 61 66 72 72
1[72 1[50 4[33 50 50 50 50 50 50 50 50 50 50 2[33 6[83
35[55 2[{ TeXBase1Encoding ReEncodeFont }60 99.6264 /Times-Bold
rf /Ft 134[34 34 1[34 37 19 34 22 1[37 37 37 1[15 2[15
37 37 19 37 37 34 1[37 11[49 1[45 2[45 52 5[19 49 52
1[45 4[68 17[19 1[19 5[45 38[{ TeXBase1Encoding ReEncodeFont }31
67.2474 /Helvetica rf /Fu 136[38 1[29 15 26 17 1[29 29
29 44 1[26 1[12 29 1[15 29 29 26 1[29 57[12 35[26 3[{
 TeXBase1Encoding ReEncodeFont }19 52.3035 /Helvetica
rf /Fv 25[50 13[54 35[25 28[75 37 1[33 33 24[33 37 37
54 37 37 21 29 25 37 37 37 37 58 21 37 21 21 37 37 25
33 37 33 37 33 3[25 1[25 46 54 54 71 54 54 46 42 50 1[42
54 54 66 46 54 29 25 54 54 42 46 54 50 50 54 1[33 1[42
1[21 21 37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25
25 25 5[25 16[25 12[42 42 2[{ TeXBase1Encoding ReEncodeFont }85
74.7198 /Times-Roman rf /Fw 147[41 20[57 87[{}2 74.7198
/Symbol rf /Fx 222[75 8[58 8[37 11[37 2[58{}5 74.7198
/CMSY10 rf /Fy 141[30 4[75 3[20 50 2[50 50 2[50 12[55
60 83[{ TeXBase1Encoding ReEncodeFont }9 89.6632 /Helvetica
rf /Fz 138[82 45 75 52 2[82 82 5[82 82 45 75 3[75 20[82
5[82 70[{ TeXBase1Encoding ReEncodeFont }13 134.495 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with hyperref package)/Author ()/Keywords () /DOCINFO pdfmark
end
 0 0 a 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316
a
SDict begin H.S end
 -158 -316 a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158
-316 a
SDict begin [/View [/XYZ H.V]/Dest (page.1) cvn /DEST pdfmark end
 -158 -316 a Black Black Black Black Black 1165
245 a Fz(Langua)o(g)q(es)38 b(of)f(the)g(Future)1718
596 y Fy(Tim)25 b(Sheard)2183 560 y Fx(\003)1739 662
y Fu(w)o(or)q(k)15 b(perf)n(or)q(med)h(at)835 745 y Ft(OGI)j(School)g
(of)g(Science)g(&)f(Engineer)q(ing,)j(Oregon)g(Health)e(&)g(Science)g
(Univ)n(ersity)1665 812 y Fu(author')m(s)c(current)g(af\003iation)1581
895 y Ft(P)m(or)s(tland)20 b(State)e(Univ)n(ersity)1651
1011 y(sheard@cs)o(.pdx.edu)p Black -150 1270 a
SDict begin [/Count -0/Dest (section.1) cvn/Title (Introduction) /OUT
pdfmark end
 -150
1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.2) cvn/Title (How Types Capture Properties)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.3) cvn/Title (What is a proof?)
/OUT pdfmark end
 -150 1270
a -150 1270 a
SDict begin [/Count -0/Dest (section.4) cvn/Title (Generalized Algebraic Datatypes)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.5) cvn/Title (New Kinds) /OUT
pdfmark end
 -150 1270 a -150
1270 a
SDict begin [/Count -0/Dest (section.6) cvn/Title (Equality Qualified Types)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.7) cvn/Title (An Introduction to mega)
/OUT pdfmark end
 -150 1270 a -150 1270
a
SDict begin [/Count -0/Dest (section.8) cvn/Title (Comparing Formal Reasoning Systems)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.9) cvn/Title (Witness Objects)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.10) cvn/Title (Example: Type-Safety \046 Static Scoping)
/OUT pdfmark end
 -150
1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.11) cvn/Title (Staging and Efficient Implementations)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.12) cvn/Title (Example: Proof Carrying Code)
/OUT pdfmark end
 -150 1270
a -150 1270 a
SDict begin [/Count -0/Dest (section.13) cvn/Title (Example: A Language with Temporal Safety Properties)
/OUT pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.14) cvn/Title (Example: Multi-Level Security)
/OUT pdfmark end
 -150 1270 a -150
1270 a
SDict begin [/Count -0/Dest (section.15) cvn/Title (Related Work) /OUT
pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/Count -0/Dest (section.16) cvn/Title (Conclusion) /OUT
pdfmark end
 -150 1270 a -150 1270
a
SDict begin [/Count -0/Dest (section.17) cvn/Title (References) /OUT
pdfmark end
 -150 1270 a -150 1270 a
SDict begin [/PageMode /UseOutlines/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -150 1270 a -150 1270 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -150
1270 a -150 1270 a
SDict begin H.S end
 -150 1270 a -150 1270 a
SDict begin 10 H.A end
 -150 1270
a -150 1270 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -150 1270 a 83 x Fs(Abstract)-150 1355
y
SDict begin H.S end
 -150 1355 a -150 1355 a
SDict begin 10 H.A end
 -150 1355 a -150 1355 a
SDict begin [/View [/XYZ H.V]/Dest (section*.1) cvn /DEST pdfmark end
 -150
1355 a 165 x Fv(This)j(paper)h(e)o(xplores)g(a)f(ne)n(w)h(point)g(in)f
(the)g(design)h(space)g(of)g(formal)f(rea-)-150 1603
y(soning)27 b(systems)g(-)f(part)g(programming)i(language,)h(part)d
(logical)h(frame-)-150 1686 y(w)o(ork.)73 b(The)35 b(system)h(is)f(b)o
(uilt)g(on)g(a)h(programming)h(language)f(where)-150
1769 y(the)23 b(user)f(e)o(xpresses)i(equality)f(constraints)g(between)
g(types)g(and)h(the)e(type)-150 1852 y(check)o(er)k(then)g(enforces)g
(these)f(constraints.)43 b(This)25 b(simple)g(e)o(xtension)h(to)-150
1935 y(the)17 b(type)g(system)g(allo)n(ws)f(the)h(programmer)h(to)f
(describe)g(properties)g(of)g(his)-150 2018 y(program)k(in)f(the)g
(types)g(of)g Fr(witness)g Fv(objects)h(which)f(can)g(be)h(thought)g
(of)f(as)-150 2101 y(concrete)g(e)n(vidence)g(that)e(the)h(program)h
(has)f(the)f(property)i(desired.)k(These)-150 2184 y(techniques)17
b(and)g(tw)o(o)f(other)g(rich)f(typing)i(mechanisms,)g(rank-N)f
(polymor)o(-)-150 2267 y(phism)28 b(and)g(e)o(xtensible)g(kinds,)i
(create)d(a)g(po)n(werful)h(ne)n(w)g(programming)-150
2350 y(idiom)23 b(for)h(writing)f(programs)h(whose)g(types)g(enforce)g
(semantic)g(proper)o(-)-150 2433 y(ties.)-150 2599 y(A)16
b(language)h(with)f(these)g(features)h(is)e Fr(both)i
Fv(a)f(practical)g(programming)i(lan-)-150 2682 y(guage)k
Fr(and)f Fv(a)g(logic.)29 b(This)20 b(marriage)h(between)g(tw)o(o)g
(pre)n(viously)h(separate)-150 2765 y(entities)d(increases)h(the)f
(probability)h(that)f(users)g(will)g(apply)h(formal)f(meth-)-150
2848 y(ods)26 b(to)f(their)g(programming)i(designs.)43
b(This)25 b(kind)h(of)f(synthesis)i(creates)-150 2932
y(the)19 b(foundations)h(for)f(the)g(languages)i(of)e(the)g(future.)
-150 2939 y
SDict begin H.S end
 -150 2939 a -150 2939 a
SDict begin 10 H.A end
 -150 2939 a -150
2939 a
SDict begin [/View [/XYZ H.V]/Dest (section.1) cvn /DEST pdfmark end
 -150 2939 a 166 x Fs(1)99 b(Intr)n(oduction)-150
3272 y Fv(T)-6 b(oday')l(s)20 b(languages)h(ha)o(v)o(e)f(tw)o(o)g
(glaring)g(problems.)26 b(These)20 b(problems)h(are)-150
3355 y(the)e Fr(semantic)g(gap)h Fv(and)g(the)f Fr(tempor)o(al)g(gap)p
Fv(.)p Black -63 3522 a Fx(\017)p Black 42 w Fq(The)24
b(Semantic)g(Gap.)40 b Fv(There)25 b(is)f(a)g(huge)i(semantic)f(gap)g
(between)16 3605 y(what)e(the)g(programmer)i(kno)n(ws)f(about)g(his)f
(program)h(and)g(the)f(w)o(ay)16 3688 y(he)28 b(has)g(to)f(e)o(xpress)i
(this)e(kno)n(wledge)i(to)f(a)f(system)h(for)f(reasoning)16
3771 y(about)18 b(that)f(program.)24 b(Languages)18 b(which)g(can)g
(narro)n(w)f(this)g(gap)h(are)16 3854 y(sorely)h(needed)p
Black -63 3974 a Fx(\017)p Black 42 w Fq(The)40 b(T)-7
b(emporal)41 b(Gap.)88 b Fv(Systems)41 b(are)f(con\002gured)i(with)e
(ne)n(w)16 4057 y(kno)n(wledge)25 b(at)e(man)o(y)h(dif)n(ferent)g
(times)46 b(compile-time,)24 b(link-time,)16 4140 y(run-time.)38
b(W)-6 b(e)23 b(e)o(xpress)i(this)e(kno)n(wledge)j(with)d(an)h(amazing)
h(mish)16 4223 y(mash)33 b(of)f(systems)g(and)h(ad-hoc)g(machinery)h
(\226)e Fr(autoconf)p Fv(,)k Fr(mak)o(e)p Fv(,)16 4306
y Fr(macr)m(os)p Fv(,)24 b Fr(con\002gur)o(ation)i(\002les)p
Fv(,)e Fr(scripting)g(langua)o(g)o(es)p Fv(,)i(and)e
Fr(embed-)p Black -150 4379 801 4 v -16 4428 a Fp(\003)20
4455 y Fv(Supported)c(by)f(NSF)f(CCR-0098126.)p Black
Black Black Black -149 5004 a Fn(Permission)i(to)f(mak)o(e)h(digital)f
(or)h(hard)f(copies)g(of)g(all)g(or)h(part)f(of)h(this)f(w)o(ork)h(for)
g(personal)f(or)-149 5070 y(classroom)d(use)g(is)g(granted)g(without)h
(fee)f(pro)o(vided)h(that)f(copies)g(are)g(not)g(made)g(or)h(distrib)o
(uted)-149 5136 y(for)e(pro\002t)f(or)g(commercial)f(adv)o(antage)g
(and)g(that)g(copies)g(bear)g(this)h(notice)f(and)g(the)h(full)g
(citation)-149 5203 y(on)i(the)g(\002rst)g(page.)k(T)-5
b(o)15 b(cop)o(y)h(otherwise,)f(to)h(republish,)g(to)g(post)f(on)h
(serv)o(ers)f(or)h(to)f(redistrib)o(ute)-149 5269 y(to)g(lists,)f
(requires)h(prior)g(speci\002c)f(permission)h(and/or)g(a)f(fee.)-149
5336 y Fm(OOPSLA)h(2004)21 b Fn(October)15 b(24-28,)g(2004,)f(V)-6
b(ancouv)o(er)n(,)13 b(B.C.,)g(Cananda.)-149 5402 y(Cop)o(yright)j
(2004)f(A)n(CM)28 b(...$5.00)p Black Black Black 2215
1353 a Fr(ded)33 b(interpr)m(eter)o(s)p Fv(.)66 b(Such)32
b(approaches)j(create)e(huge)g(impedance)2215 1436 y(mismatches,)27
b(and)f(are)f(often)g(hard)h(to)f(understand,)j(b)o(ut)d(f)o(ailure)g
(to)2215 1519 y(address)f(the)g(temporal)g(gap)f(often)h(leads)g(to)f
(unacceptable)i(perfor)o(-)2215 1602 y(mance)g(bottlenecks.)39
b(Languages)26 b(which)e(could)h(handle)g(all)e(these)2215
1685 y(issues)c(in)g(a)g(uniform)g(manner)h(are)f(sorely)g(needed.)2049
1847 y(If)24 b(we)h(are)f(e)n(v)o(er)h(to)g(b)o(uild)f(systems)h(that)f
(we)h(can)g(trust)f(on)h(a)g(lar)o(ge)f(scale,)2049 1930
y(we)h(must)g(de)n(v)o(elop)i(programming)f(languages)h(that)e(narro)n
(w)g(these)h(gaps.)2049 2013 y(The)e(programming)h(languages)h(of)d
(the)h(future)g(will)f(ha)o(v)o(e)h(the)g(follo)n(wing)2049
2096 y(properties.)p Black 2136 2198 a Fx(\017)p Black
42 w Fv(The)o(y)16 b(will)f(allo)n(w)h(programmers)h(to)f(describe)g
(and)h(reason)f(about)h(se-)2215 2281 y(mantic)22 b(properties)h(of)f
(programs)i(from)e(within)g(the)g(programming)2215 2364
y(language)g(itself,)f(mainly)g(by)g(using)h(po)n(werful)g(type)f
(systems.)29 b(But,)2215 2447 y(the)22 b(languages)i(will)d(be)h
Fr(designed)i Fv(to)e(interoperate)h(with)e(other)i(e)o(x-)2215
2530 y(ternal)c(reasoning)h(or)f(testing)g(systems)g(as)g(well.)p
Black 2136 2650 a Fx(\017)p Black 42 w Fv(The)29 b(languages)h(will)e
(be)i(within)e(reach)i(of)f(the)g(majority)g(of)g(pro-)2215
2733 y(grammers.)58 b(Using)31 b(the)g(reasoning)g(capability)g(of)g
(the)f(language)2215 2816 y(will)25 b(not)i(be)f(too)g(time)g
(consuming,)k(nor)c(will)f(the)h(learning)h(curv)o(e)2215
2899 y(for)19 b(learning)g(ho)n(w)h(to)f(use)g(such)h(features)f(be)g
(too)g(high.)p Black 2136 3019 a Fx(\017)p Black 42 w
Fv(The)o(y)h(will)g(be)g(practical,)g(supporting)i(all)e(the)g
(capabilities)g(we)g(no)n(w)2215 3102 y(e)o(xpect)26
b(in)f(a)g(programming)h(language.)43 b(But,)26 b(the)o(y)f(may)g(or)o
(ganize)2215 3186 y(these)g(capabilities)f(in)h(ne)n(w)g(w)o(ays)g
(that)f(better)g(control)h(potentially)2215 3269 y(unsafe)17
b(features.)23 b(The)o(y)16 b(will)f(use)i(static)f(analyses)h(to)f
(separate)h(po)n(w-)2215 3352 y(erful)j(b)o(ut)g(risk)o(y)h(features)f
(from)h(the)f(rest)g(of)g(the)h(program,)g(and)g(will)2215
3435 y(clearly)f(mark)f(the)h(boundaries)h(between)f(the)g(tw)o(o.)25
b(The)o(y)19 b(will)g(spell)2215 3518 y(out)27 b(the)h(obligations)f
(required)h(to)f(control)g(the)g(risk,)i(and)f(support)2215
3601 y(and)20 b(track)f(ho)n(w)g(these)g(obligations)h(can)f(be)g(met.)
p Black 2136 3721 a Fx(\017)p Black 42 w Fv(The)o(y)28
b(will)f(be)i(ef)n(\002ciently)f(implementable,)i(b)o(ut)e(perhaps)h
(in)f(ne)n(w)2215 3804 y(and)34 b(no)o(v)o(el)g(w)o(ays.)66
b(Rather)33 b(than)h(relying)f(on)h(a)f(strict)f(compile-)2215
3887 y(time/run-time)18 b(distinction)g(to)g(perform)h(a)f(single)g
(heroic)h(optimiza-)2215 3970 y(tion,)36 b(the)o(y)e(will)e(pro)o(vide)
h(a)g(\003e)o(xible)g(hierarchy)h(of)f Fr(sta)o(g)o(es)h
Fv(from)2215 4053 y(within)f(the)h(programming)h(language.)69
b(Staging)34 b(will)f(deal)h(uni-)2215 4136 y(formly)18
b(with)f(notions)i(of)e(compile-time,)h(link-time,)f(run-time,)h(and)
2215 4219 y(run-time)29 b(code)h(generation.)54 b(This)28
b(will)g(allo)n(w)h(the)f(computation)2215 4302 y(system)19
b(to)g(tak)o(e)g(adv)n(antage)h(of)f(important)g(conte)o(xtual)g
(information)2215 4385 y(no)j(matter)f(when)h(it)f(becomes)i(a)o(v)n
(ailable.)31 b(The)22 b(staging)g(separation)2215 4468
y(will)k(also)i(track)f(semantic)h(properties)f(across)h(stages.)49
b(It)26 b(will)g(be)2215 4551 y(possible)21 b(to)f(kno)n(w)i(that)e(a)g
(stage)h Fr(i)f Fv(program)h(al)o(w)o(ays)g(b)o(uilds)f(a)g(stage)2215
4634 y Fr(i)10 b Fk(+)g Fv(1)20 b(program)f(with)g(some)g(kno)n(wn)i
(property)k Fr(p)p Fv(.)2049 4736 y(In)15 b(this)g(paper)h(we)f(e)o
(xplore)h(a)f(ne)n(w)h(point)f(in)h(the)f(design)h(space)g(of)f
(program-)2049 4819 y(ming)20 b(languages)g(and)g(formal)g(reasoning)g
(systems:)k(the)c(de)n(v)o(elopment)h(of)2049 4902 y(the)g(language)h
Fw(W)p Fv(me)o(ga.)28 b Fw(W)p Fv(me)o(ga)21 b(is)f Fr(both)h
Fv(a)f(practical)h(programming)h(lan-)2049 4985 y(guage)i
Fr(and)f Fv(a)f(logic.)33 b Fw(W)p Fv(me)o(ga)23 b(also)g(addresses)g
(the)g(temporal)f(gap)h(by)g(the)2049 5068 y(use)c(of)g(e)o(xplicit)g
(staging.)2049 5234 y(The)25 b(sometimes)g(irreconcilable)g(goals)g(of)
g(being)g(both)h(a)e(programming)2049 5317 y(language)f(and)e(a)g
(logic,)h(are)f(made)g(possible)h(by)f(embedding)i(the)e
Fw(W)p Fv(me)o(ga)2049 5400 y(logic)27 b(in)f(a)g(type)h(system)g
(based)g(on)g Fr(equality)g(quali\002ed)g Fv(types[)3790
5402 y
SDict begin H.S end
 3790 5402 a Black -2 x Fv(9)p Black 3828 5349
a
SDict begin H.R end
 3828 5349 a 3828 5400 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Hinze:03:Phantom) cvn H.B /ANN pdfmark end
 3828 5400 a Fv(].)45 b(This)p
Black Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.2) cvn /DEST pdfmark end
 -158
-316 a Black Black -150 83 a Fv(is)24 b(done)h(by)g(making)g(a)f(v)o
(ery)g(small)g(\(backw)o(ard)i(compatible\))e(change)i(to)-150
166 y(the)e(notion)g(of)g(Algebraic)g(Datatypes)h(as)f(supported)h(in)f
(languages)h(such)-150 249 y(as)f(O'Caml)f(and)h(Hask)o(ell.)38
b(W)-6 b(e)23 b(call)h(these)g(ne)n(w)g(types)g Fr(Gener)o(alized)h
(Al-)-150 332 y(g)o(ebr)o(aic)20 b(Datatypes)g Fv(\(GADTs\).)i(The)o(y)
e(support)g(the)f(construction,)h(main-)-150 415 y(tenance,)h(and)f
(propagation)h(of)f(semantic)g(properties)h(of)e(programs)i(using)-150
498 y(po)n(werful)c(old)g(ideas)f(about)i(types)f(\(the)f(Curry-Ho)n(w)
o(ard)h(Isomorphism\))h(in)-150 581 y(surprisingly)i(easy)f(to)g
(understand)i(ne)n(w)e(w)o(ays.)-150 747 y(The)28 b(semantic)h(gap)g
(between)g(formal)f(tools)h(and)g(implementation)g(lan-)-150
830 y(guages)23 b(pre)n(v)o(ents)g(the)f(application)h(of)f(formal)g
(methods)h(to)e(softw)o(are)i(de-)-150 913 y(sign)i(on)g(all)f(b)o(ut)g
(the)g(most)h(important)g(applications.)40 b(It)24 b(is)g(necessary)i
(to)-150 996 y(narro)n(w)d(this)g(gap)g(so)h(that)e(these)i(techniques)
g(can)f(be)h(applied)f(to)g(a)g(much)-150 1079 y(broader)17
b(set)f(of)g(applications.)23 b(One)17 b(w)o(ay)f(to)g(reason)h(about)g
(program)g(prop-)-150 1162 y(erties)26 b(is)f(to)h(use)g(Curry-Ho)n(w)o
(ard)h(isomorphism.)45 b(This)26 b(states)g(that)g(pro-)-150
1245 y(grams)i(are)g(proofs)g(of)g(the)f(properties)i(e)o(xpressed)f
(in)g(their)f(types.)50 b(It)27 b(is)-150 1328 y(often)22
b(hard)g(for)g(the)g(programmers)h(to)f(conceptualize)h(ho)n(w)f(the)o
(y)g(can)h(put)-150 1411 y(this)d(abstraction)h(to)f(w)o(ork.)27
b(GADT')l(s)19 b(mak)o(e)i(this)f(isomorphism)h(concrete)-150
1494 y(\226)j(proofs)g(are)g(real)f(objects)h(that)g(programmers)h(can)
f(b)o(uild)g(and)g(manipu-)-150 1577 y(late)18 b(without)g(lea)o(ving)g
(their)g(o)n(wn)g(programming)i(language.)k(Such)18 b(proofs)-150
1660 y(can)26 b(e)o(xpress)h(important)f(semantic)g(properties)g(of)g
(their)f(programs.)44 b(W)-6 b(e)-150 1743 y(belie)n(v)o(e)27
b(that)f(this)g(increases)i(by)e(orders)h(of)g(magnitude)h(the)e
(probability)-150 1826 y(that)18 b(programmers)i(will)e(construct)h
(programs)h(that)e(the)o(y)h(actually)g(reason)-150 1910
y(about,)25 b(and)f(this)f(will)g(mak)o(e)h(measurable)h(dif)n
(ferences)f(in)f(the)h(quality)g(of)-150 1993 y(the)d(code)g(produced.)
29 b(It)20 b(is)g(not)h(that)g(programmers)g(cannot)h(reason)f(about)
-150 2076 y(their)27 b(programs;)k(rather)m(,)e(it)d(is)h(that)f(the)o
(y)i(\002nd)f(the)g(barriers)g(to)f(entry)i(so)-150 2159
y(high)20 b(that)e(the)o(y)i(w)o(ould)f(rather)g(not.)-150
2325 y(Theorem)27 b(pro)o(v)o(ers)f(and)h(logical)g(frame)n(w)o(orks)g
(ha)o(v)o(e)f(man)o(y)h(of)f(the)g(same)-150 2408 y(goals,)17
b(b)o(ut)g(we)g(belie)n(v)o(e)g(there)g(are)g(qualitati)n(v)o(e)g(dif)n
(ferences)g(between)h(them)-150 2491 y(and)32 b(our)h(w)o(ork.)62
b(First,)34 b Fw(W)p Fv(me)o(ga)e(is)f(designed)j(foremost)e(to)g(be)g
(a)g(pro-)-150 2574 y(gramming)f(language.)58 b(It)30
b(supports)h(practical)f(programming)i(features)-150
2657 y(such)d(as)f(input/output)h(and)f(side-ef)n(fects,)j(b)o(ut)c
(uses)i(its)e(type)i(system)f(to)-150 2740 y(cleanly)21
b(separate)f(these)h(potentially)f(dangerous)i(features)e(from)g(the)g
(core)-150 2823 y(language)g(of)f(the)g(logic.)-150 2989
y(Second,)d Fw(W)p Fv(me)o(ga)g(uses)g(a)f(single)g(computational)i
(model)e(for)g(both)h(its)f(logic)-150 3072 y(and)k(its)f(programming.)
24 b(It)18 b(uses)g(a)g(strict)g(functional)h(model)g(with)f(monads)
-150 3155 y([)-125 3156 y
SDict begin H.S end
 -125 3156 a Black -1 x Fv(46)p
Black -50 3104 a
SDict begin H.R end
 -50 3104 a -50 3155 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.wadler94:) cvn H.B /ANN pdfmark end
 -50 3155 a Fv(,)-12
3156 y
SDict begin H.S end
 -12 3156 a Black -1 x Fv(45)p Black 62 3104 a
SDict begin H.R end

62 3104 a 62 3155 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.wadler92) cvn H.B /ANN pdfmark end
 62 3155 a Fv(,)100 3155 y
SDict begin H.S end
 100 3155
a Black Fv(44)p Black 175 3104 a
SDict begin H.R end
 175 3104 a 175 3155
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.wadler:90) cvn H.B /ANN pdfmark end
 175 3155 a Fv(])h(to)h(separate)g(ef)n(fects)g(from)f(pure)h
(computation.)27 b(This)19 b(model)-150 3238 y(suf)n(\002ces)30
b(to)g(describe)h(both)g(programs)g(and)g(properties.)57
b(Contrast)30 b(this)-150 3321 y(with)19 b(logical)g(frame)n(w)o(orks)i
(where)e(programs)i(are)e(purely)h(functional)g(and)-150
3404 y(the)h(logic)f(emplo)o(ys)i(prolog)f(style)g(back)g(chaining)g
(\(Elf\),)f(or)g(higher)h(order)-150 3487 y(pattern)f(matching)i(\(T)-6
b(welf\).)26 b(A)19 b(similar)h(dichotomy)i(arises)e(in)g(LCF)f(style)
-150 3570 y(theorem)k(pro)o(v)o(ers)h(such)f(as)g(Coq.)35
b(In)23 b(such)h(systems,)g(programs)g(must)e(be)-150
3653 y(e)o(xtracted)h(from)f(proofs,)h(which)f(are)g(themselv)o(es)h
(constructed)g(in)f(highly)-150 3736 y(unnatural)29 b(w)o(ays)g(using)f
(tactics)g(and)h(proof)f(combinators.)52 b(W)-6 b(e)27
b(belie)n(v)o(e)-150 3819 y(that)16 b(this)f(tw)o(o)h(model)h(paradigm)
g(is)e(unnatural,)j(and)e(that)g(the)g(single)g(model)-150
3902 y(of)21 b Fw(W)p Fv(me)o(ga)h(is)f(easier)g(to)g(learn)g(and)h
(use)g(by)f(ordinary)h(programmers.)31 b(W)-6 b(e)-150
3985 y(discuss)20 b(this)e(in)h(more)g(detail)g(in)g(Section)965
3986 y
SDict begin H.S end
 965 3986 a Black -1 x Fv(7)p Black 1002 3935 a
SDict begin H.R end

1002 3935 a 1002 3985 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (section.7) cvn H.B /ANN pdfmark end
 1002 3985 a Fv(.)-150 4151 y(Third,)j
Fw(W)p Fv(me)o(ga)g(tries)g(to)f(maintain)i(a)e(strict)h(distinction)g
(between)g(v)n(alues,)-150 4234 y(types,)16 b(and)g(kinds.)22
b(Since)15 b(these)h(classi\002cations)f(usually)g(indicate)h(a)f
(phase)-150 4317 y(distinction)g(between)g(compile-time)g(and)h
(run-time,)f(understood)h(by)g(most)-150 4400 y(programmers,)28
b(we)d(belie)n(v)o(e)h(this)e(mak)o(es)j(it)d(easier)h(for)g
(programmers)i(to)-150 4483 y(use)19 b Fw(W)p Fv(me)o(ga)h(than)f
(systems)g(which)h(do)f(not)g(mak)o(e)h(these)f(distinctions.)-150
4649 y(F)o(ourth,)h Fw(W)p Fv(me)o(ga)h(incorporates)h(staging)f
(annotations.)29 b(In)21 b(Coq)f(and)h(other)-150 4732
y(related)d(systems,)g(proofs)h Fr(corr)m(espond)h Fv(to)d(programs.)24
b(More)19 b(ef)n(\002cient)e(im-)-150 4815 y(plementations)j(can)f
(often)f(be)h(e)o(xtracted)g(from)g(proofs)g(by)g(a)f(form)h(of)f(type)
-150 4898 y(erasure.)54 b(In)30 b Fw(W)p Fv(me)o(ga)f(proofs)h
Fr(ar)m(e)g Fv(programs)g(\(with)f(equality)g(quali\002ed)-150
4981 y(types\),)23 b(and)f(unlik)o(e)h(Coq[)560 4981
y
SDict begin H.S end
 560 4981 a Black Fv(41)p Black 635 4930 a
SDict begin H.R end
 635 4930
a 635 4981 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.COQ74) cvn H.B /ANN pdfmark end
 635 4981 a Fv(],)f(and)h(Isabelle[)1088
4982 y
SDict begin H.S end
 1088 4982 a Black -1 x Fv(27)p Black 1163 4930
a
SDict begin H.R end
 1163 4930 a 1163 4981 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Paulson90lacs) cvn H.B /ANN pdfmark end
 1163 4981 a Fv(])e(where)h(type)h(erasure)f
(is)-150 5064 y(\002x)o(ed)g(and)h(in\003e)o(xible,)f(type)h(erasure)f
(in)g Fw(W)p Fv(me)o(ga)h(is)e(implemented)i(by)g(the)-150
5147 y(use)d(of)g(e)o(xplicit)g(staging.)26 b(The)20
b(conjunction)i(of)e(staging)g(and)h(logical)f(sys-)-150
5230 y(tems)g(pro)o(vides)g(a)g(po)n(werful)g(ne)n(w)h(tool.)k(By)20
b(using)g(staging,)h(e)o(xtraction)f(of)-150 5313 y(ef)n(\002cient)e
(programs)i(from)f(proofs)g(is)g(under)g(the)g(control)g(of)g(the)g
(program-)-150 5396 y(mer)m(,)k(and)h(can)f(be)g(tar)o(geted)g(at)f
Fr(any)h Fv(object-language.)37 b(Staging)22 b(can)i(also)p
Black Black 2049 83 a(be)19 b(used)h(to)f(perform)g(specialization)h
(and)f(partial)g(e)n(v)n(aluation.)2049 249 y(Fifth,)26
b(GADTs)f(allo)n(w)h Fw(W)p Fv(me)o(ga)g(to)g(re\003ect)f
(representations)i(of)e(its)g(types)2049 332 y(into)33
b(the)g(v)n(alue)g(w)o(orld.)66 b(These)33 b(re\003ections)g(e)o
(xactly)g(mirror)f(the)h(type)2049 415 y(w)o(orld,)23
b(b)o(ut)f(are)g(\002rst)f(class)h(v)n(alues.)33 b(Each)22
b(re\003ected)g(v)n(alue)h(has)g(a)f(unique)2049 498
y(\(singleton\))c(type.)23 b(The)18 b(re\003ection)f(mechanism)i
(ensures)f(that)f(only)h(sound)2049 581 y(computations)31
b(can)f(be)g(performed)h(on)f(re\003ected)g(v)n(alues.)56
b(A)30 b(re\003ected)2049 664 y(v)n(alue)c(can)f(be)g(rei\002ed)f(back)
i(into)f(the)f(type)i(w)o(orld,)g(and)f(the)g(system)g(can)2049
747 y(rely)c(on)g(its)g(soundness.)31 b(This)21 b(allo)n(ws)f
(programmers)j(to)d(write)h(programs)2049 830 y(that)28
b(perform)h(type-le)n(v)o(el)f(computations)i(in)e(the)g(v)n(alue)h(w)o
(orld)f(for)g(type)2049 913 y(checking)d(problems)f(that)f(are)h(too)f
(hard)h(for)g(the)f(type)h(check)o(er)h(\(with)d(its)2049
996 y(limited)i(computation)i(mechanism)g(-)e(usually)h(based)h(upon)f
(uni\002cation\))2049 1079 y(to)h(\002gure)h(out.)45
b(This)26 b(allo)n(ws)g(the)g(programmer)i(to)e(construct)h(programs)
2049 1162 y(that)17 b(ef)n(fortlessly)g(slip)f(between)i(static)e(and)i
(dynamic)g(property)g(checking,)2049 1245 y(and)24 b(allo)n(w)e(the)h
(programmer)h(to)f(capture)h(a)e(wide)h(v)n(ariety)h(of)f(properties,)
2049 1328 y(both)f(logical)g(\(semantic\),)g(and)h(physical)f
(\(resource)g(usage\))h(in)e(the)h(types)2049 1411 y(of)d(programs.)
2049 1577 y(While)c(formal)h(reasoning)h(systems)f(are)g(v)o(ery)g
(good)h(at)f(what)g(the)o(y)g(do,)g(the)o(y)2049 1660
y(were)24 b(not)g(designed)h(to)f(be)g(programming)h(languages.)40
b(These)24 b(tools)g(are)2049 1743 y(too)j(e)o(xpressi)n(v)o(e.)46
b(The)o(y)26 b(trade)h(usability)f(for)g(e)o(xpressi)n(v)o(eness.)47
b(There)26 b(is)2049 1826 y(something)c(to)e(be)h(gained)g(by)g(being)h
(selecti)n(v)o(e,)f(gi)n(ving)g(up)g(some)g(e)o(xpres-)2049
1910 y(si)n(v)o(eness)h(in)f(order)h(to)f(maintain)g(the)g(pragmatic)h
(properties)g(of)f(a)g(system.)2049 1993 y(Po)n(werful)k(tools)h(are)f
(v)o(ery)h(useful)f(and)h(ha)o(v)o(e)g(their)f(place)h(in)f(system)h
(de-)2049 2076 y(sign,)19 b(b)o(ut)f(there)h(is)f(a)g(missing)h(point)g
(in)f(the)h(continuum)h(of)e(tools)h(between)2049 2159
y(practical)25 b(and)h(formal,)h(and)f Fw(W)p Fv(me)o(ga)46
b(is)24 b(designed)j(to)e(\002ll)f(this)h(gap.)43 b(By)2049
2242 y(doing)27 b(so)f(wisely)-5 b(,)27 b(much)g(is)f(to)f(be)i
(gained,)h(in)d(terms)h(of)g(ease)g(of)g(use,)i(a)2049
2325 y(more)i(gradual)h(learning)g(curv)o(e,)i(and)e(increased)g
(interoperability)f(with)2049 2408 y(other)19 b(systems.)2049
2440 y
SDict begin H.S end
 2049 2440 a 2049 2440 a
SDict begin 10 H.A end
 2049 2440 a 2049 2440
a
SDict begin [/View [/XYZ H.V]/Dest (section.2) cvn /DEST pdfmark end
 2049 2440 a 166 x Fs(2)99 b(Ho)o(w)25 b(T)-7 b(ypes)25
b(Captur)n(e)h(Pr)n(operties)2049 2743 y Fv(An)j(important)h(role)f(of)
h(type)f(systems)h(in)f(programming)i(languages)g(is)2049
2826 y(to)21 b(guarantee)i(the)f(property)g(that)f(programs)i(do)f(not)
f(use)h(data)g(\(including)2049 2909 y(functions\))e(in)g
(inappropriate)h(w)o(ays.)k(But)20 b(types)g(can)g(also)g(be)g(used)g
(to)g(en-)2049 2992 y(sure)d(much)g(more)h(sophisticated)f(properties.)
23 b(There)17 b(are)g(man)o(y)g(e)o(xamples)2049 3075
y(of)22 b(this)g(in)h(the)f(literature.)33 b(T)-6 b(ypes)23
b(ha)o(v)o(e)f(been)i(used)f(to)f(ensure)h(the)g(safety)2049
3158 y(of)c(lo)n(w)h(le)n(v)o(el)f(code)i(such)f(as)f(Ja)o(v)n(a)h
(Byte)f(Code[)3310 3159 y
SDict begin H.S end
 3310 3159 a Black -1 x Fv(36)p
Black 3386 3107 a
SDict begin H.R end
 3386 3107 a 3386 3158 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.StaAba98) cvn H.B /ANN pdfmark end
 3386 3158 a
Fv(,)3424 3159 y
SDict begin H.S end
 3424 3159 a Black -1 x Fv(5)p Black
3461 3107 a
SDict begin H.R end
 3461 3107 a 3461 3158 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Bertel97) cvn H.B /ANN pdfmark end
 3461 3158 a Fv(])g(or)h(typed)g
(assembly)2049 3241 y(language[)2342 3242 y
SDict begin H.S end
 2342 3242
a Black -1 x Fv(23)p Black 2418 3190 a
SDict begin H.R end
 2418 3190 a 2418
3241 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.tal) cvn H.B /ANN pdfmark end
 2418 3241 a Fv(,)2461 3241 y
SDict begin H.S end
 2461 3241 a Black
Fv(24)p Black 2536 3190 a
SDict begin H.R end
 2536 3190 a 2536 3241 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.morrisett+:wcsss) cvn H.B /ANN pdfmark end
 2536
3241 a Fv(].)38 b(These)24 b(systems)h(use)f(types)h(to)f(model)h(the)f
(shape)h(of)2049 3324 y(the)f(stack)h(or)f(re)o(gister)g(bank)h(to)f
(ensure)h(that)g(lo)n(w)f(le)n(v)o(el)g(code)h(sequences)2049
3407 y(are)d(used)h(properly)f(\(e.g.)32 b(no)23 b(stack)f(under\003o)n
(w\).)33 b(T)-6 b(ypes)22 b(ha)o(v)o(e)g(also)g(been)2049
3490 y(used)c(to)g(model)g(information)g(\003o)n(w[)3009
3491 y
SDict begin H.S end
 3009 3491 a Black -1 x Fv(31)p Black 3083 3440
a
SDict begin H.R end
 3083 3440 a 3083 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.SabMye2003) cvn H.B /ANN pdfmark end
 3083 3490 a Fv(,)3119 3491
y
SDict begin H.S end
 3119 3491 a Black -1 x Fv(43)p Black 3194 3440 a
SDict begin H.R end
 3194
3440 a 3194 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.volpano96:sound) cvn H.B /ANN pdfmark end
 3194 3490 a Fv(,)3230 3491 y
SDict begin H.S end
 3230
3491 a Black -1 x Fv(25)p Black 3305 3440 a
SDict begin H.R end
 3305 3440
a 3305 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.JFP::OrbaekP1997) cvn H.B /ANN pdfmark end
 3305 3490 a Fv(])f(to)g(ensure)h(security)g(prop-)2049
3574 y(erties)k(of)h(systems.)35 b(T)-6 b(ypes)23 b(ha)o(v)o(e)g(been)h
(used)f(to)g(track)g(resource)h(control,)2049 3657 y(such)j(as)g(the)f
(possibility)h(of)f(non-termination)i([)3377 3658 y
SDict begin H.S end
 3377
3658 a Black -1 x Fv(20)p Black 3452 3606 a
SDict begin H.R end
 3452 3606
a 3452 3657 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Launchbury:1996:PUU) cvn H.B /ANN pdfmark end
 3452 3657 a Fv(],)f(or)g(to)f(place)h(upper)2049
3740 y(bounds)k(on)f(the)g(time)f(consumed)i(by)f(a)f(computation[)3576
3740 y
SDict begin H.S end
 3576 3740 a Black Fv(11)p Black 3652 3689 a
SDict begin H.R end
 3652
3689 a 3652 3740 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.POPL00*184) cvn H.B /ANN pdfmark end
 3652 3740 a Fv(,)3700 3740 y
SDict begin H.S end
 3700
3740 a Black Fv(42)p Black 3775 3689 a
SDict begin H.R end
 3775 3689 a 3775
3740 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.VaderwaartCrary2004) cvn H.B /ANN pdfmark end
 3775 3740 a Fv(].)54 b(T)-6 b(ypes)2049 3823 y(ha)o(v)o(e)25
b(been)g(used)g(as)g(a)f(means)h(of)g(remo)o(ving)g(dynamic)h(error)e
(tests)g(\226)h(for)2049 3906 y(e)o(xample,)d(to)f(enforce)h(data)f
(structure)g(in)m(v)n(ariants[)3406 3907 y
SDict begin H.S end
 3406 3907
a Black -1 x Fv(51)p Black 3481 3855 a
SDict begin H.R end
 3481 3855 a 3481
3906 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Xi:1998:EAB) cvn H.B /ANN pdfmark end
 3481 3906 a Fv(])g(\(such)h(as)f(ensuring)2049
3989 y(red-black)31 b(trees)f(are)g(well)f(formed\))i(or)f(to)g(mak)o
(e)h(code)g(more)f(ef)n(\002cient)2049 4072 y(by)e(remo)o(ving)h
(unnecessary)h(run-time)e(array)g(bounds)h(checks[)3793
4073 y
SDict begin H.S end
 3793 4073 a Black -1 x Fv(52)p Black 3869 4021
a
SDict begin H.R end
 3869 4021 a 3869 4072 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Xi:1999:DTP) cvn H.B /ANN pdfmark end
 3869 4072 a Fv(].)50 b(Fi-)2049
4155 y(nally)-5 b(,)28 b(types)e(ha)o(v)o(e)g(been)g(used)h(to)f(track)
g(access)g(control,)i(which)e(allo)n(ws)2049 4238 y(remo)o(ving)21
b(\(or)f(minimizing\))g(stack)h(inspection)g(o)o(v)o(erhead)g(as)f(a)g
(means)h(of)2049 4321 y(managing)f(capabilities[)2727
4322 y
SDict begin H.S end
 2727 4322 a Black -1 x Fv(47)p Black 2802 4270
a
SDict begin H.R end
 2802 4270 a 2802 4321 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.SSP98*52) cvn H.B /ANN pdfmark end
 2802 4321 a Fv(,)2840 4322
y
SDict begin H.S end
 2840 4322 a Black -1 x Fv(6)p Black 2877 4270 a
SDict begin H.R end
 2877
4270 a 2877 4321 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.PPDP`02*76) cvn H.B /ANN pdfmark end
 2877 4321 a Fv(].)2049 4487 y(W)-6
b(e)30 b(ha)o(v)o(e)h(modelled)g(the)g(important)g(ideas)g(in)g(each)g
(of)f(these)h(systems)2049 4570 y(using)e Fw(W)p Fv(me)o(ga.)51
b(While)27 b(the)h(properties)h(of)f(these)g(systems)h(could)g(ha)o(v)o
(e)2049 4653 y(been)j(modelled)f(by)h(a)f(formal)f(system)i(such)f(as)g
(a)g(logical)g(frame)n(w)o(ork)2049 4736 y(\(T)-6 b(welf[)2272
4737 y
SDict begin H.S end
 2272 4737 a Black -1 x Fv(30)p Black 2346 4685
a
SDict begin H.R end
 2346 4685 a 2346 4736 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.CADE99*202) cvn H.B /ANN pdfmark end
 2346 4736 a Fv(]\))20 b(or)h(theorem)g(pro)o
(v)o(er)h(\(Coq[)3152 4736 y
SDict begin H.S end
 3152 4736 a Black Fv(41)p
Black 3227 4685 a
SDict begin H.R end
 3227 4685 a 3227 4736 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.COQ74) cvn H.B /ANN pdfmark end
 3227 4736 a
Fv(])e(or)h(Isabelle[)3612 4737 y
SDict begin H.S end
 3612 4737 a Black -1
x Fv(27)p Black 3687 4685 a
SDict begin H.R end
 3687 4685 a 3687 4736 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Paulson90lacs) cvn H.B /ANN pdfmark end
 3687
4736 a Fv(]\),)f(the)h(prop-)2049 4819 y(erties)c(w)o(ould)h(be)f(a)g
(meta-logical)g(property)h(of)g(the)f(program)h(and)f(e)o(xternal)2049
4902 y(to)j(the)h(implementation.)28 b(In)21 b Fw(W)p
Fv(me)o(ga)g(the)o(y)g(are)f(a)h(property)g(of)f(the)h(imple-)2049
4985 y(mentation,)16 b(which)g(is)f(enforced)i(by)f Fw(W)p
Fv(me)o(ga')l(s)g(type)g(check)o(er)l(.)23 b(Rather)15
b(than)2049 5068 y(model)25 b(an)f(e)o(xisting)h(application)g(in)f(a)g
(formal)g(system,)i(or)e(use)h(a)f(formal)2049 5151 y(system)i(to)g(b)o
(uild)g(a)f(model)i(of)e(an)i(as-yet-)e(unimplemented)j(application)
2049 5234 y(and)22 b(then)f(deri)n(v)o(e)h(or)f(generate)h(an)f
(implementation)h(from)f(this)g(model,)h(in)2049 5317
y Fw(W)p Fv(me)o(ga,)h(we)g(implement)f(and)h(reason)g(in)g(a)f(single)
g(paradigm.)35 b(W)-6 b(e)21 b(illus-)2049 5400 y(trate)d(this)h(with)g
(simple)g(e)o(xamples)g(later)g(in)g(the)g(paper)l(.)p
Black Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.3) cvn /DEST pdfmark end
 -158
-316 a Black Black Black -150 3 2001 4 v Black Black
15 1404 a
 currentpoint currentpoint translate 0.35 0.35 scale neg exch neg exch
translate
 15 1404 a 18 w @beginspecial 62 @llx 157 @lly
633 @urx 620 @ury 5710 @rwi @setspecial
%%BeginDocument: whatIsProof.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - figures.ppt)
%%Version: 1 3
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 11:43:25 11/12/04
%%DocumentData: Clean7Bit
%%BoundingBox: 62 157 633 620
%%HiResBoundingBox: 62.499649 156.817307 632.951019 620.45108
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1147 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:ae1d6359-3d46-4cb1-9007-df72c1db2735' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:ae1d6359-3d46-4cb1-9007-df72c1db2735' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2004-11-12T11:42:35-08:00' xap:CreatorTool='Pscript.dll Version 5.0' xap:ModifyDate='2004-11-12T11:42:35-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:ae1d6359-3d46-4cb1-9007-df72c1db2735' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:9b8706f8-2f1a-43dd-aca2-28f84572bc51'/>
<rdf:Description rdf:about='uuid:ae1d6359-3d46-4cb1-9007-df72c1db2735' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - figures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
62 157 570 464 rectclip
[ 0 -1 1 0 -94.31766 682.95073 ] concat
%ADOBeginSubsetFont: AOHBIF+LucidaSans Initial
ct_T42Dict begin
-0.301 -0.211 1.004 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /AOHBIF+LucidaSans
Type42DictBegin
[<00010000000c000c000c000c4f532f326a9c7b6e000000cc000000566376
7420ce4fa9ea00000124000004c06670676ddfdf4b3d000005e400000403
676c7966130d7a84000019c800001d3268656164bcc9dc4f000009e80000
0036686865610d62050d00000a2000000024686d74785c7c7cf800000a44
000003cc6c6f63610c48151d00000e10000001e86d617870031006e10000
0ff8000000206e616d6558f57d3a000010180000037b70726570b6f52dc9
000013940000063467646972000000000000000000000000000103eb0190
0005000804ce04290000031604ce042900000316006403200802020b0602
030504020204000000030000000000000000000000004226482000400020
f002062b01a40031076c01b020000001000000001e7c062b001905c80025
05c80025043e00190000ffdb0000ffe70000ffdbfe75ffe8062b0000fed8
000002deffee05db001202e4ffe705d500190000ffe702f0001906440000
0503000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff02b3028200000000000000000000fe5002060206025006500000021f
021f026904d2ffffffffffff00c8000000c8000000000000000000000000
0000000000000000000000000094006900940094009d00d200c5ff980094
0094015a00680000007b00ca001900a60000006f00bf00d100c5007b0028
00500207043e007b00c50005000c006e00110068009d00c800df00190094
003a00a500aa00c500de00ee011300ad00b401930275009600e1009d00ad
0149004a006400c0012c007b009400b500c500c600fc021f0347ff85ffe7
0019002b006a04d2ff37007bfde1ff3a004f006700aa00c600f7012801af
ff99001f008700c600c602b300030041005e006f009000f7012801720185
018b021f02e40025003d004c0056009a00bd00d501d503d5ff1cff42ff91
ffa3004a00510056005e00ac00be00d201280128014d018b021f03780567
05c8fe75ffceffe80015005000520062008b00a600c501a001bc0385040c
0612ff63ff73ffa9ffca0002000c00630080009400a600ac00be00c500d0
00d200dd00de00e200f600f7016e0200020c02500275029a002800310033
0043004d00530074007b00b900bd0172017501ed01ed01ff021f02af030a
04af06cc06f0fdedfea6fed8fef7ff0dff46ffa0ffb6fff70006000c0040
004e007b007e00820097009a009d009d00aa00b300c500c500f600f7011c
01270128014101470159016601c801f40205020c0237026902da02f1036c
05300534ffc2fff2000a001d00400044004a005000630066007500770094
009d00ad00ad00b300de00e000ed00f300f70102010f0128014e01500151
0164018b01bc01da0206023802570264028d029302b302e1034803660366
03c004d105b505bc06060753fe38fe8eff66ffe100080021002500250029
00310032004a006300690094009c00a700b200bf00d200e400ee010c010f
012c012e01410146014d01570159015a016f0172018a018b01ab01af01bc
01c801d501e601ff021f0236025002500258027f0282028702e4032e033b
0345037803e803f3040c04260433043d0464046704ec050e050f05d705fa
0800fcbafd97fd97fdcffe0dfe4bfe5aff07ff4eff53ffe400000017005b
00620063007b007c007c008900c600c600e100f300f300f400f900f9010f
011001110117012801280136013f01630178017d017e019301a301a601b0
01b001c201c301c401ca01d501d501e101f301f4020a02250231023e0269
026c028202b502cc02d002d402e402ff030f031003160323032303460347
03490353035f03770378039103a003b603de03f504000426043b043d0456
046b047b0488048804a804ad04e504f305000529056f058b05b005b105ed
061006120637066d068206d306fe0715073b0767080000c800d500c700cc
00000000000000000000000000a6009a00b500a100ad00ac00b900b400ad
007b00940074011b040401d702bf00f701e2023102bd0002000200940094
00020001ff9801d50488007800dd001a007c00c5068e006300b800a00095
00c504a700c100634034343331302f2e2d2c2b2a29282726252423222120
1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004
262348482d2c45234660b0206120b04660b004262348482d2c4523462361
b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c
0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920
b0ed51582320b04d44235920b0042651582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453a
b10200080d2d2c45b04a234445b04923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2c2d2c4b52582145441b2345
8c20b00325455258441b212159592d2c01182f2d2c20b0032545b0492344
45b04a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb1
14008a5279b34940204945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4569b00943608a103a2d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c76462346608a8a46
2320468a608a61b8ff80622320102320b0005058b00161b8ffc08b1bb040
8c5968013a182d2cb0332bb02a2a2df800010000000100c41add928f5f0f
3cf5001b080000000000a3a6934200000000b451fd8ffd97fe50080c076c
000000090001000000007e8b0001000007bcfe5000000819fd97fdb0080c
0001000000000000000000000000000000f3060001000000000002880000
02880000028800e102fd006f050f000f050f00d80559000c0594004a01d5
006f029a007b029a004a03db006e050f0069028800c8029a006f028800c8
03f4000c050f0082050f012e050f00aa050f00d0050f0069050f00f9050f
0089050f00de050f00b1050f009c028800e1028800e1050f0069050f0069
050f00690360002506de005d05850011049a00bf0589006805fe00bf0456
00bf044a00bf05c8006805e100bf024e00be027dff48053900bf044400bf
06e400bf05e900bf06370068046c00bf06370068050f00bf044f0064050f
0012058b00b3053b002406d800020502001004fc001104d6005f029a00c5
03f4000c029a004a050f00690400005604ea0166046b0067050900c50419
006f0509006f0475006f02f1005004fd006f04f700c5025000c5026fff66
04ad00c5025000c5077800c504f700c504ea006f050900c50509006f0346
00c50414009d02fe004504f700b904240012062a000c04e80058042e0010
0496007b029a0019021f00c5029a0088050f006905850011058500110589
0068045600bf05e900bf06370068058b00b3046b0067046b0067046b0067
046b0067046b0067046b00670419006f0475006f0475006f0475006f0475
006f0250007b025000190250ffdb0250000c04f700c504ea006f04ea006f
04ea006f04ea006f04ea006f04f700b904f700b904f700b904f700b9050f
00e40237006f050f00cd050f00f7050f00dd050f01f4050f00d804c900c5
050f00cc06d800630675000004ea01c804ea0159050f0069074100120637
006806bf0078050f0069050f0069050f0069050f0050050300c5050f00cb
05220032061200750680003f050f010c036000480360003e0644004006cf
006704ea006f03600025028800e1050f006905b00074050f00ed050f0069
054d000b0431006f0431004a080000f70288000005850011058500110637
006808000068076d006f040000690800006302fd006f02fd006f028800c8
028800c8050f0069050f0069042e001004fc0011004afd970510fff002a7
006f02a7004a05280050052e0050050f00e4050f020c028800c802fd006f
0819000c05850011045600bf05850011045600bf045600bf024e007a024e
ffda024e000b024e0017063700680637006806370068058b00b3058b00b3
058b00b3025000c504ea012804ea012804ea015904ea012804ea021204ea
01d504ea01fe04ea017004ea01f404ea0128044f00640414009d021f00c5
05feffe104d2006d04fc0011042e0010046c00bf050900c5050f00690360
00d2036000880360009a066900250669006306fd007b029a006f05100062
000000400040004000400040004000400040004000400040004000400040
0040007800780078007800e3010d017d021a021a021a021a021a021a021a
021a021a021a021a021a0286028602fa02fa02fa02fa0338033803380338
035b035b035b035b035b03ae0419041904190419041904190419041904b8
04b804b804b804b804b804b804b804b804b8056005f2065f06f0076e07cb
07cb08310868086808d008f709a80a130a7e0b110b110b650c090c690cd2
0d3d0de90de90e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a
0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a
0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a0e6a
0e6a0e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990e990e990e990e990e990e990e990e990e990e990e99
0e990e990e990e990001000000f3004d0007004a00040002001000130038
000001c70634000200010000000c00960001000000000000007a00000001
0000000000030011007a00010000000000040011008b0001000000000006
0011009c0001000000000007003a00ad000300010409000000f400e70003
000104090001002201db0003000104090002000e01fd0003000104090003
0022020b00030001040900040022022d00030001040900060022024f0003
00010409000700740271a9203139393120426967656c6f77202620486f6c
6d657320496e632e205061742e204465732e203238392c3432302e20416c
6c205269676874732052657365727665642e20a920313939302d31393931
205479706520536f6c7574696f6e732c20496e632e20416c6c2052696768
74732052657365727665642e414f484249462b4c756369646153616e7341
4f484249462b4c756369646153616e73414f484249462b4c756369646153
616e734c7563696461a82069732061207265676973746572656420747261
64656d61726b206f6620426967656c6f77202620486f6c6d657320496e63
2e00a90020003100390039003100200042006900670065006c006f007700
20002600200048006f006c006d0065007300200049006e0063002e002000
5000610074002e0020004400650073002e0020003200380039002c003400
320030002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e002000a9002000310039003900
30002d00310039003900310020005400790070006500200053006f006c00
7500740069006f006e0073002c00200049006e0063002e00200041006c00
6c0020005200690067006800740073002000520065007300650072007600
650064002e0041004f0048004200490046002b004c007500630069006400
6100530061006e00730052006500670075006c006100720041004f004800
4200490046002b004c0075006300690064006100530061006e0073004100
4f0048004200490046002b004c0075006300690064006100530061006e00
730041004f0048004200490046002b004c00750063006900640061005300
61006e0073004c0075006300690064006100ae0020006900730020006100
200072006500670069007300740065007200650064002000740072006100
640065006d00610072006b0020006f006600200042006900670065006c00
6f00770020002600200048006f006c006d0065007300200049006e006300
2e9040363f143f154f144f1580148015060f1e0f1f3f1e3f1fbf1ebf1f06
4018401990189019c018c019061f1a1f1b02d068dfc502c071cfa1cfb801
1ab603090f20010805b80236b25a181fb80235b25a181fb8025cb25a181f
b8025bb25b181fb8025ab25b181fb8023ab25b181fb80259b25b181f4109
023f023c0042001f023e023d002a001f023db25b571fb8023cb269481fb8
023bb269571fbc0239023800ac001f0238b27ee51fb80237400d5a481f00
464600000012110840bb022b0000000901d4b2792b1fbc01ce0079040100
1f01cab257561fb801c8b257521fb80189b2792b1fb80187b279891f4109
018500ce0401001f018001cd002a001f0157b2793b1fb80155b279671fb8
014cb257471f410d012c005b0401001f012b005b0401001f0125005702ab
001f0106400957411ff8795a1ff4ceb80401b21ff25bbb0401001f00f001
cdb3501fee57b80401b21fcc7eb80401b21fc05bb80101b51fb479561fad
b901cd0401b61fa679561fa47eb80401b21f935bb80401b61f927ebb1f91
57b80401b61f9057521f8e5bb8019ab21f8a7eb802abb21f8959b80401b2
1f8757b80401b61f847ecd1f837eb802abb21f8079b80801b21f7f5bb804
01b21f7d7eb8019ab21f7b57b80401b61f6b57521f6a5bb80401b61f6257
521f5e57b80401b21f5857b80401b21f5557b8040140531f551409140990
e10790dc0790b707908f07908607908207906e07906507906307905f0724
08220820081e081c081a08180816081408120810080e080c080a08080806
080408020800081802010802004a0077b9022b000101734bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b9000101ff858d16
763f183f124b5358b90014ffe0402a000001001416000001001606100000
0100060400000100041000000100100200000100020000000100003e1139
46443e113946443e113946443e113946443e11394660443e113946443e11
39466044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b014b5079bc001f01cb0007001f018ab3071f81072b2b2b4b53
79bc009001cb00070090018ab3079081072b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb09353205c58b9022d022b4544b9022c022b45
445958b90391022d455258b9022d03914459594bb09e53205c58b9005a02
2c4544b90079022c45445958b90415005a455258b9005a04154459594bb0
ab53205c58b9005b022d4544b90069022d45445958b90421005b455258b9
005b04214459594bb8040153205c58b1ce5a4544b15a5a45445958b91a40
00ce455258b900ce1a404459594bb8080153205c58b901cd005b4544b15b
5b45445958b9314001cd455258b901cd31404459594bb04653205c58b157
574544b17e5745445958b9013f0057455258b90057013f4459594bb0ab53
205c58b157574544b1595745445958b903120057455258b9005703124459
594bb0ab53205c58b157574544b1775745445958b903120057455258b900
5703124459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542b368c576a945
6523456023456560234560b08b766818b080622020b176c54565234520b0
03266062636820b003266165b0c5236544b076234420b168a94565234520
b003266062636820b003266165b0a9236544b0682344b100a9455458b1a9
406544b26840684523614459b90071011ab167c645652345602345656023
4560b089766818b080622020b90067011a4565234520b003266062636820
b003266165b8011a236544b067234420b171c64565234520b00326606263
6820b003266165b0c6236544b0712344b100c6455458b1c6406544b27140
714523614459000145695342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b011234201012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4358b108004259
5e735e0174737373737300b0024568b802554568b0408b60b0202344b006
4568b80256456860b0222344b0004568b802584568b0408b60b802572344
00>
[7475 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N14/AOHBIF+LucidaSans 1 TZ
%ADOBeginSubsetFont: AOHBKP+LucidaSans,Bold Initial
ct_T42Dict begin
-0.309 -0.203 1.148 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /AOHBKP+LucidaSans,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f326c587c90000000cc000000566376
74200342dfcc00000124000005366670676ddfdf4b3d0000065c00000403
676c7966dfcdf69900001c2000000b1068656164bde4e2d900000a600000
0036686865610e7c063b00000a9800000024686d747890c1709400000abc
000003cc6c6f6361d308d68c00000e88000001e86d617870093108c20000
1070000000206e616d6523a383e9000010900000037970726570c985745b
0000140c00000814676469720000000000000000000000000001042c0258
0005000804ce04290000031604ce042900000316006403200802020b0703
040504020204000000030000000000000000000000004226482000200020
f002062b01a40031076c01a420000001000000000000062b001905c80025
05c80025044a00190000ffdb0000ffe70000ffdbfe75ffe8062b000cfed8
000002deffee05db001202e4ffe705d500190000ffe702f0001906440000
0503000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff02b3028200000000000000000000fe5002060206025006500000021f
021f026904d2ffffffffffff012b0000012b000000000000000000000000
00000000000000000000000000b900b9006f0056ff9100ca006f015a0096
0056009200b900b9001900de0128012800ccffa9005700b900b900cb0207
00de0063007500b9008b0134043e0094005d00c600cd00d101270003003c
008100ee013b00cb010801470017ffa400cbff530031005300b300b80106
01280128012c01a80005006b00b9ffe6003d00b900e900f702e400190031
00c300d8014100190041005c0094021f027503db0612ffa90006005c005d
006000ac0100013a01410175017801c2046f00b300da012e019200040039
00b900ea010c01190125020602b00438ff870003001e001f0025002a002c
002f004a006f009a00ad00b300cc012301340159019701bc0219ff58ffe8
00000025007b00be010d01410159015f01a0ff43ff47ffbcffbcffcaffd6
0018003e0040004a006d009000930094009400b900c100d700eb00f60103
01090109010a01100128014101bc0206021f0269030903b603cf03f4041e
05c8fed100100018001900300040004a0060006c00a500b000b700be00de
00f600fd015201dc025802bf02e404f805b405dd06cb0001002f00400056
005e0065006f007a007b009700a700ad00b400c500d200de00de00e100f5
00fc011b01280128012f01470212025002840347035f038b03ee04cc05bd
0753fdebfe9dff1aff97ffb100010009000a000f001400250045004a0056
005d005f0061006300700078008c009b00b000ba00f700f7010e01550164
018a019501bc01e7021102130250037203e004600534054505590633fdf9
ff00ff3eff5eff60ffe700150019001d00220024003f0049004e00500054
00560059006b0079007b007b008b008b009800a000a000a100a200a400ac
00b100b900b900d200e100e600e600e800f700f7010001000104010f011c
012c01320134013a0142014d015c0163016b01730177017e018b01b001b7
01d201d201d601e101ed01f101fb0207021f022d0239023e02560282028e
029302a002b502d502da036f037803a003a3043e0461048a04b4052a0543
05b10613065d067e06cb0800fc90fd88fe0cfe12fe2efe50fe88feb2fee9
ff28ff88ffe6ffe700000001000300060014002c003e00420048004d0056
006600710078007d0089008e008e008f0094009400940095009a009b00a0
00a100ad00b800c100c900cc00d900de00de00df00f700f700f700fe0100
010001030109010c010f0117011b011c01280128013f0141014101410148
014e014f01530155015901700172017b017c018b0193019501af01b001b7
01b901bc01bc01bc01d101d201d501d601e101e701eb01ee01ee01f40207
02150250026b027b028c02a302bd02c402e402e40310031c032003250328
0353036c0370038a03a503b103c603c803dd03ed03f404250431043d0442
04460458047b049a04a004a605000505051c05340566056c057e058e0591
05c805d505ed05fa06120615062b0646065d06d906f006f00714074b0753
076007d3091c012d0138012c000000000000000000000000000000020001
030801f400c60194025804e6000f0027018b012900ab0056fee400f20460
0326009300aa007a007c00c5068e006300db015506960135001f04cb00b5
0195016f007300004034343331302f2e2d2c2b2a29282726252423222120
1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004
262348482d2c45234660b0206120b04660b004262348482d2c4523462361
b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c
0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920
b0ed51582320b04d44235920b0042651582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453a
b10200080d2d2c45b04a234445b04923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2c2d2c4b52582145441b2345
8c20b00325455258441b212159592d2c01182f2d2c20b0032545b0492344
45b04a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb1
14008a5279b34940204945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4569b00943608a103a2d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c76462346608a8a46
2320468a608a61b8ff80622320102320b0005058b00161b8ffc08b1bb040
8c5968013a182d2cb0332bb02a2a2d0100010000000100c47afe6c8b5f0f
3cf5001b080000000000a3a697a600000000b451ffa9fd88fe5c0935076c
000000090001000000005f010001000007bcfe500000094dfd88fdaa0935
0001000000000000000000000000000000f30600010000000000028e0000
028e000001fa0069039d0063051c0012051c00b50644001905f5004401fa
006302d8006302d8005d03bb0056051c006f01fa005d0269005601fa005d
045d000c051c0050051c0134051c007e051c00b4051c004a051c00e9051c
0051051c00de051c0079051c006d01fa006901fa0069051c006f051c006f
051c006f03fa003e06c1003c05e40017050a00b905b3005d065800b904ce
00b9049800b905f7005d063e00b902a700b90359ffba05ae00b904a700b9
074300b9062600b90696005d04e800b90697005d058500b9049200630585
001605e400ad05970019073b001505560031057e00280528006a02d800ad
045d000c02d8005d051c006f04000056051c016304b40052054d00b90442
0056054d005d04b00056035100410547005d054100b9029a00b902aaff4d
051000b9029a00b907c200b9054100b9051c0056054d00b9054d005d03a3
00b90486009c033e004c054100ad04bf002506e7004a04ba004404aa001f
04ba007b02d8004401fa00a002d80078051c006f05e4001705e4001705b3
005d04ce00b9062600b90696005d05e400ad04b4005204b4005204b40052
04b4005204b4005204b400520442005604b0005604b0005604b0005604b0
0056029a0091029a0022029affed029a0019054100b9051c0056051c0056
051c0056051c0056051c0056054100ad054100ad054100ad054100ad051c
00b302060056051c0093051c00e1051c00bb051c01b0051c00ad054a00b9
051c00a706b9005306d50006051c01d2051c0159051c006f07a900150696
005b06cc007b051c006f051c006f051c006f051c002a054d00b3051c00aa
059b00420674007106a7003f051c00e303d5004003d5003406bf00310710
0052051c005803fa003801fa0069051c006f05ed007b051c00db051c006f
05e40019048e0056048e0044080000e7051c000005e4001705e400170696
005d0879005d07ae005d0400005608000050039d005d039d005d01fa005d
01fa005d051c006f051c006f04aa001f057e00280085fd88051dffe702c5
005602c50044056c0041056c0041051c00b3051c020601fa005d039d005d
094d001905e4001704ce00b905e4001704ce00b904ce00b902a7008502a7
fff402a7001f02a700600696005d0696005d0696005d05e400ad05e400ad
05e400ad029a00b9051c012e051c012e051c0159051c012e051c0212051c
01ed051c01f7051c015d051c01f4051c012e049200630486009c01fa00a0
0658ffe7051e005d057e002804aa001f04e800b9054d00b9051c006f02ea
009402ea002d02ea004c0600ffdb060000190600001902690056051c0057
000000440044004400440044004400440044004400440044004400440044
004400440044004400440044004400440044004400440044004400440044
004400440044004400440044004400440044004400440044004400440044
00440044004400440044004400440044004400ac00ac00ac00ac00ac00ac
00ac00ac00ac00ac00ac00ac00ac00ac00ac0129012901290129018f01da
0250025002840284028402a7031b035b039f03f90455049604f405460588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
058805880588058805880588058805880588058805880588058805880588
05880588058805880001000000f3004f0007004900040002001000130038
000007e80814000200010000000c00960001000000000000006700000001
0000000000030016006700010000000000040016007d0001000000000006
001600930001000000000007003a00a9000300010409000000ce00e30003
000104090001002c01b10003000104090002000e01dd0003000104090003
002c01eb0003000104090004002c02170003000104090006002c02430003
0001040900070074026fa9203139393120426967656c6f77202620486f6c
6d657320496e632e20416c6c205269676874732052657365727665642e20
a920313939302d31393931205479706520536f6c7574696f6e732c20496e
632e20416c6c205269676874732052657365727665642e414f48424b502b
4c756369646153616e732c426f6c64414f48424b502b4c75636964615361
6e732c426f6c64414f48424b502b4c756369646153616e732c426f6c644c
7563696461a8206973206120726567697374657265642074726164656d61
726b206f6620426967656c6f77202620486f6c6d657320496e632e00a900
20003100390039003100200042006900670065006c006f00770020002600
200048006f006c006d0065007300200049006e0063002e00200041006c00
6c0020005200690067006800740073002000520065007300650072007600
650064002e002000a900200031003900390030002d003100390039003100
20005400790070006500200053006f006c007500740069006f006e007300
2c00200049006e0063002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e0041004f004800
42004b0050002b004c0075006300690064006100530061006e0073002c00
42006f006c00640052006500670075006c006100720041004f0048004200
4b0050002b004c0075006300690064006100530061006e0073002c004200
6f006c00640041004f00480042004b0050002b004c007500630069006400
6100530061006e0073002c0042006f006c00640041004f00480042004b00
50002b004c0075006300690064006100530061006e0073002c0042006f00
6c0064004c0075006300690064006100ae00200069007300200061002000
720065006700690073007400650072006500640020007400720061006400
65006d00610072006b0020006f006600200042006900670065006c006f00
770020002600200048006f006c006d0065007300200049006e0063002e00
000040361f141f153f143f154f144f1580148015080f1e0f1f3f1e3f1fbf
1ebf1f064018401990189019c018c019061f1a1f1b022006200702dfb801
40b2041fdfb90140ffcfb20416feb80124b2031ffeb80124b3080316d0b8
0138b3510516d0b80138400d51051600464600000012110840bb026e0000
00090214b281601fb80212b281a71f410f020c007e014d001f0204020b01
85002b00160203020b01440024001601ffb295601fb901fd020bb2fa1c16
b901f8020bb2820f16b901f7020bb2820f16b901f3020bb2530a16b901f2
020bb2530a16b901ee020bb24a0916b901ec020bb24a0916b901eb020bb2
4a0916b901ea020bb24a0916b801a3b2811c1fb801a2b2811f1f411a019d
00810a9e010b0016019b0072029a001f0198020b03fa006f00160197020b
01ea003600160196020b014d002500160193020bb2fa1c16b9018f020bb2
b91516410b018e009504b900a70016018c0069029a001f0181020bb24a09
16b8015eb281121fb8015cb2812e1fb8015bb281601fb90158020bb2fa1c
16b90157020bb26f0d16b90154020bb24a0916410a0133020b029a001f01
32020b029a001f012f020bb2f11b16b90128020bb25d0b16b80114b2817a
1fb9010f020bb2660c16b9010e020bb7660c16f97ede1ff7b9020b01fdb2
3816f5b9020b0185b22b16f4b9020b0185400b2b16f295671fdd81381fda
b9020b01c5b23216d9b8020bb46f0d16cf72bd029a001f00ce020b099d01
0bb216cb69b8027cb26f16bcbe020b100201bc001600bb020b032eb25916
bab9020b01b3401c3016b581121fb366601fad7ede1fab953a1fa069ca24
169c7ede1f9ab8020b4009780e169695601f94694111029a001f008c020b
029a001f008b020b029a001f0079020b3018053400160078020b400f8b10
167469ca24167169a21d166d95b80371b37a166b7fb8029ab21f6a69bc02
9a001f0065020b029ab21f6395b8037140097a165d69dc27165569ba029a
001f021bb295081fb80215b2950c1fb8020db295101fb80208b2951b1fb8
0201b2953a1fb80200b295401fb801feb295601fbd01fb00950371007a00
1601edb369ca2416b8019fb2950c1fb8019ab295131f410b01860069013e
00380016018400690132003600160159b295601f410d012d00950371007a
00160127006901a6004a001601100069010b400b1ff695291ff0667a1fcc
69b804feb3de16b995b80534b21fb869b8029ab21f9169b8029ab21f847f
b8029ab21f7766b80534b21f767fb90697010bb616551409140990b8023c
40510790de0790c80790bd0790af0790a207908d07908007906c07905f07
905c07905a072408220820081e081c081a08180816081408120810080e08
0c080a08080806080408020800081802010802004a0006bf026e0067026e
00020018026e00f7026eb30287690100730173744bb0c063004b6220b0f6
5323b8010a515ab005234201b0124b004b544218b9000101ff858d16763f
183f124b5358b90014ffe0402a0000010014160000010016061000000100
060400000100041000000100100200000100020000000100003e11394644
3e113946443e113946443e113946443e11394660443e113946443e113946
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b
2b2b2b2b2b014b5079bc001f01990007001f0121b3071f7d072b2b2b4b53
79bc00900199000700900121b307907d072b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb06753205c58b900ac026e4544b9026e026e45
445958b903bf00ac455258b900ac03bf4459594bb06f53205c58b9027002
6e4544b9026f026e45445958b9040b0270455258b90270040b4459594bb0
6f53205c58b9006402704544b9007e027045445958b904070064455258b9
006404074459594bb06f53205c58b90072026f4544b90081026f45445958
b904310072455258b9007204314459594bb8029a53205c58b9020b006445
44b1646445445958b91807020b455258b9020b18074459594bb01c53205c
58b169694544b1956945445958b19c69455258b1699c4459594bb0475320
5c58b169694544b1666945445958b901950069455258b900690195445959
4bb04a53205c58b169694544b17f6945445958b901a60069455258b90069
01a6445959002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542b360e0758345652345
6023456560234560b08b766818b080622020b175e04565234520b0032660
62636820b003266165b0e0236544b075234420b160834565234520b00326
6062636820b003266165b083236544b0602344b10083455458b183406544
b26040604523614459b370855ea5456523456023456560234560b0897668
18b080622020b15e854565234520b003266062636820b003266165b08523
6544b05e234420b170a54565234520b003266062636820b003266165b0a5
236544b0702344b100a5455458b1a5406544b27040704523614459014569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b011234201012b2b
2b2b2b2b00737373737300b0024568b8028d4568b0408b60b0202344b006
4568b8028e456860b0222344b0004568b802904568b0408b60b8028f2344
00>
[2833 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N20/AOHBKP+LucidaSans,Bold 1 TZ
62.499649 156.817307 463.633774 570.45137 re
W
n
q
n
576.039978 36.040001 -540.0 719.999977 re
36.040001 36.040001 m
eoclip
n
n
36.040001 36.040001 539.999977 719.999977 re
1.0 1.0 1.0 setrgbcolor
f
Q
0.0 sg
119.319702 225.399689 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 2098 58 <00010002000006d505c8000c00fd4012b003b006bf0b03900390069f0b03
02010000b8025c400a030214030302050b0a0ab8025c400a060514060605
07080909b80235400a060714060607040b0c0cb80236400b030414030304
080707050bb80133400a0504040202010203da06b80133401a0040090a0a
0c0c0008000201040c03050a0b0709060e47474a084109010e0020000601
0b000b010b00800003010eb42001490d0ebc022500210075011d00182b2b
4ef41a194dfd1a18fdfd1a19fd184e456544e61239391139391239391139
39003f3c103c103c1a4d10fde43f3c103c103ced103c103c87052e2b877d
c4872e182b877dc4872e182b877dc4872e182b877dc43130005d5d210133
01013301013301230101017ffe83ca012f0117ca01080146abfe61d1fefb
feef05c8fb6f0491fb7f0481fa380475fb8b>AOHBIF+LucidaSans AddT42Char 
1 3990 75 <000100c50000043d062b00140087402acb12cb13021f4006101608031314
0100107e0607140b0a1647474a0b5b0a03145b0ad400491516d42171b901
1a00182b2b4ef44dedfd3c10ed4e456544e6003f3c3f4ded3f1139393130
4379400e070f0e260f070c65010d081065012b012b2b8100495479401211
120405120410810511051381001213040301103c103c2b002b8181005d33
1133113636333216151123113426262322060711c5c54bc76b8aacc52848
2949a963062bfd476d77af9bfcf402cc7148275a93fd4100>AOHBIF+LucidaSans AddT42Char 
1 2416 68 <00020067ffe7043904560024002f00c440164d08001925117d4012c9140c
09572727030f57140725b80106401a00bf2d7e031d572222030b0b255b18
19bf1f72204a311112cb2ab8023b400906493031c32167d8182b2b4ef44d
edf43c4e10f64de4f43cfd3c003f3c10ed10edf4ed3fed12392fed4b5258
b0001a5910fc1aed01111239313043794036232c151c040e0d262c042a65
000e150b650116171c231a65001b1a240028082a5f002b052d65000c160f
65011b241d65002907275f01002b2b2b2b012b103c103c2b103c2b2b2b81
818125060623222635342421333534262623220735363332161615111416
163332371706232226271127220615141633323602f558ab5273c6011401
2f2e2a594299b5c7b060a1601a2f1f0d190e43513664333f9bd267453e80
8a51529892a0d1834e472860a3513d8391fe1452391e046d2046c8011902
786747623700>AOHBIF+LucidaSans AddT42Char 
1 6162 87 <00010045ffe702ae05160015007b402313080b0acd08100e077b0d080613
57021587007a020b9017011747474a0d7220150115b801d740120b105b0a
b0050105bf9f07010749168cc7182b4e10f45d4dfc5d3cfd3cf65de44e45
6544e65d003f4df4ed10ed3f3cfd3c4b5158b0801a5910fc323130437940
0c0312120310650011041365002b012b8121062322263511233533353715
21152111141633323702a95b4392ac8888c5011cfee45860273819a99c02
7e94c513d894fda672630d00>AOHBIF+LucidaSans AddT42Char 

1 0 3 <> AOHBIF+LucidaSans AddT42Char 
1 4194 76 <000200c50000018a05c800030007004ab2069307b80109401d0202010600
0a6f09010947474a020207035b01056f007f000200490809b8012cb32171
a1182b2b4ef45d3c3c4dfd3c3c4e10456544e65d003f3f3c4d10f6ed3130
3311331103353315c5c5c5c5043efbc20503c5c5>AOHBIF+LucidaSans AddT42Char 
1 5834 86 <0001009dffe703770456002900cd403594099422022b08211e0c09041803
211e0c09040f24185712167d40157a0b1207035728017d40007c0b280b90
2b012b47474a16c906b8023bb51024e0240224bb013c0000001b023bb50f
7200492a2bba013c00210127b1e6182b2b4ef47d4df418ed10fd5ded7de4
184e456544e65d003f4b5258b0001a1bb0501a594dfc1aed10ed3f4b5258
b0001a1bb0501a59fc1aed10ed111217391112173931304379401e252719
1a10110405262619111b650004270665011a1018650105250365002b2b01
2b2b2b81818181005d373516333236353427262727262726353436333217
1715262322061514171617171617161514060623229dc18f54711c1c6573
853d3dbeba5b8629a5625f5e201f515fbf343461bd748726b5605c452b29
292a313749486983ae1908a43152382c23242328514f4f5d59985600>AOHBIF+LucidaSans AddT42Char 
1 5372 83 <000200c5fe75049a04560011001e00c440381c40150d1f40061b25081e12
1003041b15121e18111b7e0607010615570d0b000e1869094a2010200103
10115b000001491f20c32171c6182b2b4ef43c4d10fd3c3c5d4e10f64ded
003f3fed3f3fed0111123939001112173931304379401a161a070c0b2616
0c185f011a07185f01170a155f0019081b5f012b2b012b2b2b8181004954
7940121c1d04051d041b81051c051e81001d1e040301103c103c2b002b81
810049547940100e14130f158104140e12810013120f1001103c103c2b00
2b8113113315363633321215140206232226271111161633323635342623
220607c5c53db579c9dc66d78836b164657845918b7b8152a14ffe7505c9
cc7272fed8ee9bfee8a62074fdfa028e5a2ef4bdb0ce595a>AOHBIF+LucidaSans AddT42Char 
1 5666 85 <000100c50000031d0456000f0071401f1f40060b0e03000201060b7e0609
93087206070106000a1147474ae0090109b801e0400a030e0f5b00491071
d8182b4e10f44dfd3c3cf65d4e456544e6003f3f3f4df4ed10ed3f3c1139
3931300049547940120c0d04050d040b81050c050e81000d0e040301103c
103c2b002b818133113315363633321715262322060711c5c538b3691e21
32285d9d3f043ecc6d7705b8116f6ffd3400>AOHBIF+LucidaSans AddT42Char 
1 5158 82 <0002006fffe7047b0456000f001b007a40214308165708071057000b1369
0c4a1d001d101d201d03196904491c1de42167c6182b2b4ef44ded5d4e10
f64ded003fed3fed313043794032011b0e2602250a250626110f135f011b
01195f001509135f011707195f00120d105f001a03105f00140b165f0118
05165f012b2b2b2b012b2b2b2b2b2b2b2b81052226023534123633321612
1514020627323635342623220615141602759be5867ae9a39be6857ce7a3
93a2a39292a2a2197f0111a89e010f8a7efeeea7a0fef18994dbc9cad9d9
cac9db00>AOHBIF+LucidaSans AddT42Char 
1 3804 73 <000100500000032d06440017007240191c080c87400b7a0d0e5709011502
7b140306000a1947474a14ba0240000b01de400c12175b0500bf0349188c
d8182b4e10f44df43cfd3cf4f44e456544e6003f3f3c4dfd3c3fed4b5258
b0001a59fc1aed3130437940120f110608102507260f0812650011060e65
012b012b2b2b818133112335333534363633321715262322060615152115
2111ea9a9a459d7f647e85502e4c2e010ffef103aa9482869965219c291d
4a749794fc56>AOHBIF+LucidaSans AddT42Char 
1 1076 34 <000200250000033b05ee000300200075402f16081d1a0a07040f20070305
0a1d1f1a170c1183126c0f5814032094026a000a0105ad031fef0cad174a
2211492122b801fdb321bbd9182b2b4ee410f64dfdf63cfd3c003ffde63f
edfced01111239123939111239001112173931304379400e15160d0e0e15
0c63010d160f63012b012b81813335331503353436373736363534262322
07353633321615140606070706061515fac5c5395a3f633a887997acb9a2
c9f21e35543e5c3bc5c5018b366f91674971793d566b4aa738b79c355f50
503a58726a6e>AOHBIF+LucidaSans AddT42Char 
1 0 0 <00020100000005000500000300070056b10504b80120b2000607bb012000
0200010219b50303000a0605b80120b60303024a090704b80120b4010049
0809bc020c002100f9011800182b2b4ef43c4dfd3c4e10f63c4d10fd3c00
3f3c10fd3cfd3c10fd3c3130211121112521112101000400fc400380fc80
0500fb0040048000>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/W 58 def
/h 75 def
/a 68 def
/t 87 def
/space 3 def
/i 76 def
/s 86 def
/p 83 def
/r 85 def
/o 82 def
/f 73 def
/question 34 def
end
AOHBIF+LucidaSans /Encoding get
dup 87 /W put
dup 104 /h put
dup 97 /a put
dup 116 /t put
dup 32 /space put
dup 105 /i put
dup 115 /s put
dup 112 /p put
dup 114 /r put
dup 111 /o put
dup 102 /f put
dup 63 /question put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 44.040009 -44.040009 0.0 0.0 0.0] Tf
(What is a proof?)
[37.627598 27.322519 24.283747 16.444227 13.823905 12.701202 22.433739 13.823905 24.283747 13.823905 27.674646 
17.985788 27.014072 27.014072 16.180132 18.558331 ] pdfys
n
421.0 172.959991 m
412.359985 172.959991 l
413.200012 175.360001 l
414.039978 177.639999 l
414.759979 179.679993 l
415.23999 181.720001 l
415.720001 183.639999 l
416.079987 185.440002 l
416.200012 187.0 l
416.319977 188.440002 l
416.200012 190.119995 l
416.079987 191.679993 l
415.359985 194.559998 l
414.759979 195.759995 l
414.160004 197.080002 l
413.319977 198.159988 l
412.359985 199.360001 l
411.399994 200.319992 l
410.319977 201.159988 l
409.23999 201.87999 l
408.039978 202.479996 l
406.720001 202.959991 l
405.399994 203.199997 l
403.959991 203.440002 l
402.399994 203.559998 l
400.959991 203.440002 l
399.519989 203.199997 l
398.200012 202.959991 l
396.880005 202.479996 l
395.559998 201.87999 l
394.359985 201.039993 l
393.279999 200.199997 l
392.079987 199.23999 l
391.119995 198.039993 l
390.279999 196.600006 l
389.559998 194.919998 l
388.959991 193.0 l
388.47998 190.839996 l
388.119995 188.559998 l
387.880005 185.919998 l
387.880005 179.440002 l
381.639984 179.440002 l
381.639984 182.559998 l
381.519989 185.319992 l
381.279999 187.720001 l
381.039978 190.0 l
380.559998 191.919998 l
379.959991 193.720001 l
379.359985 195.279999 l
378.519989 196.600006 l
377.559998 197.800003 l
376.47998 198.759995 l
375.399994 199.600006 l
374.319977 200.199997 l
373.119995 200.800003 l
371.919983 201.279999 l
370.720001 201.519989 l
369.399994 201.759995 l
368.079987 201.87999 l
365.800018 201.639999 l
363.759979 201.039993 l
361.959991 200.080002 l
360.399994 198.639999 l
359.079987 196.839996 l
358.23999 194.559998 l
357.639984 192.039993 l
357.519989 189.039993 l
357.759979 185.559998 l
358.359985 181.839996 l
359.559998 178.0 l
361.23999 173.919998 l
353.320007 173.919998 l
352.359985 176.679993 l
351.639984 179.199997 l
351.160004 181.360001 l
350.919983 183.159988 l
350.559998 186.400009 l
350.559998 192.279999 l
350.800018 194.800003 l
351.160004 197.080002 l
351.639984 199.23999 l
352.23999 201.159988 l
352.959991 202.959991 l
353.919983 204.519989 l
354.880005 205.839996 l
356.079987 207.039993 l
357.279999 208.119995 l
358.600006 209.080002 l
360.039978 209.800003 l
361.47998 210.279999 l
363.160004 210.759995 l
364.839996 211.0 l
366.519989 211.119995 l
368.559998 211.0 l
372.160004 210.279999 l
373.720001 209.559998 l
375.160004 208.720001 l
376.600006 207.639999 l
378.039978 206.440002 l
379.359985 205.0 l
380.679993 203.319992 l
381.880005 201.400009 l
382.959991 199.119995 l
383.919983 196.600006 l
384.759979 199.839996 l
385.839996 202.479996 l
386.800018 204.87999 l
388.0 206.679993 l
389.319977 208.23999 l
390.880005 209.559998 l
392.440002 210.759995 l
394.23999 211.720001 l
396.160004 212.440002 l
398.200012 212.919998 l
400.23999 213.279999 l
402.279999 213.400009 l
404.319977 213.279999 l
406.23999 213.039993 l
408.160004 212.559998 l
409.959991 211.959991 l
411.759979 211.119995 l
413.559998 210.159988 l
415.23999 209.080002 l
416.800018 207.759995 l
418.359985 206.199997 l
419.679993 204.519989 l
420.759979 202.479996 l
421.600006 200.319992 l
422.319977 197.919998 l
422.800018 195.159988 l
423.160004 192.279999 l
423.279999 189.159988 l
423.039978 185.679993 l
422.679993 181.839996 l
421.959991 177.519989 l
421.0 172.959991 l
f
n
239.919998 233.919998 m
240.639999 227.199997 245.919998 222.039993 252.279999 222.039993 c
256.720001 222.039993 260.800018 224.559998 262.959991 228.639999 c
262.839996 228.519989 l
265.119995 226.23999 268.119995 224.919998 271.23999 224.919998 c
278.079987 224.919998 283.600006 230.919998 283.600006 238.23999 c
283.600006 238.720001 283.600006 239.319992 283.47998 239.800003 c
283.600006 239.800003 l
290.440002 244.0 294.639984 251.800003 294.639984 260.200012 c
294.639984 264.519989 293.559998 268.720001 291.519989 272.320007 c
296.800018 276.160004 300.040009 282.639984 300.040009 289.47998 c
300.040009 298.600006 294.519989 306.639984 286.359985 309.279999 c
286.47998 309.279999 l
288.160004 312.039978 289.0 315.279999 289.0 318.639984 c
289.0 328.359985 281.679993 336.160004 272.679993 336.279999 c
271.359985 346.47998 263.200012 354.039978 253.720001 354.039978 c
249.400009 354.039978 245.319992 352.47998 241.959991 349.720001 c
240.039993 350.559998 238.0 351.039978 235.959991 351.039978 c
229.119995 351.039978 223.119995 346.119995 221.319992 339.039978 c
214.839996 337.839996 210.039993 331.600006 210.039993 324.399994 c
210.039993 320.079987 211.839996 316.0 214.839996 313.119995 c
214.959991 313.119995 l
211.839996 310.600006 210.039993 306.759979 210.039993 302.559998 c
210.039993 297.519989 212.679993 292.839996 216.87999 290.559998 c
217.119995 290.679993 l
214.360001 287.559998 212.800003 283.47998 212.800003 279.279999 c
212.800003 273.160004 215.800003 267.639984 220.720001 264.880005 c
220.839996 264.759979 l
219.159988 261.639984 218.199997 258.040009 218.199997 254.319992 c
218.199997 242.919998 226.839996 233.679993 237.400009 233.679993 c
238.23999 233.679993 239.080002 233.800003 239.919998 233.919998 c
0.8515 0.8515 0.8515 setrgbcolor
eofill
1 J
1 j
0.75 w
n
239.919998 233.919998 m
240.639999 227.199997 245.919998 222.039993 252.279999 222.039993 c
256.720001 222.039993 260.800018 224.559998 262.959991 228.639999 c
262.839996 228.519989 l
265.119995 226.23999 268.119995 224.919998 271.23999 224.919998 c
278.079987 224.919998 283.600006 230.919998 283.600006 238.23999 c
283.600006 238.720001 283.600006 239.319992 283.47998 239.800003 c
283.600006 239.800003 l
290.440002 244.0 294.639984 251.800003 294.639984 260.200012 c
294.639984 264.519989 293.559998 268.720001 291.519989 272.320007 c
296.800018 276.160004 300.040009 282.639984 300.040009 289.47998 c
300.040009 298.600006 294.519989 306.639984 286.359985 309.279999 c
286.47998 309.279999 l
288.160004 312.039978 289.0 315.279999 289.0 318.639984 c
289.0 328.359985 281.679993 336.160004 272.679993 336.279999 c
271.359985 346.47998 263.200012 354.039978 253.720001 354.039978 c
249.400009 354.039978 245.319992 352.47998 241.959991 349.720001 c
240.039993 350.559998 238.0 351.039978 235.959991 351.039978 c
229.119995 351.039978 223.119995 346.119995 221.319992 339.039978 c
214.839996 337.839996 210.039993 331.600006 210.039993 324.399994 c
210.039993 320.079987 211.839996 316.0 214.839996 313.119995 c
214.959991 313.119995 l
211.839996 310.600006 210.039993 306.759979 210.039993 302.559998 c
210.039993 297.519989 212.679993 292.839996 216.87999 290.559998 c
217.119995 290.679993 l
214.360001 287.559998 212.800003 283.47998 212.800003 279.279999 c
212.800003 273.160004 215.800003 267.639984 220.720001 264.880005 c
220.839996 264.759979 l
219.159988 261.639984 218.199997 258.040009 218.199997 254.319992 c
218.199997 242.919998 226.839996 233.679993 237.400009 233.679993 c
238.23999 233.679993 239.080002 233.800003 239.919998 233.919998 c
h
262.959991 228.639999 m
264.040009 230.679993 264.639984 232.959991 264.639984 235.360001 c
264.639984 235.600006 264.639984 235.959991 264.639984 236.319992 c
283.47998 239.800003 m
283.359985 241.0 283.119995 242.080002 282.639984 243.159988 c
287.919983 270.279999 m
289.119995 270.880005 290.320007 271.47998 291.519989 272.320007 c
286.359985 309.279999 m
285.040009 309.639984 283.720001 309.880005 282.399994 310.0 c
272.679993 336.279999 m
272.679993 336.279999 272.679993 336.279999 272.559998 336.279999 c
266.320007 336.279999 260.559998 332.440002 257.800018 326.320007 c
247.479996 345.279999 m
246.039993 347.200012 244.119995 348.639984 241.959991 349.720001 c
223.959991 339.279999 m
223.959991 339.279999 223.839996 339.279999 223.720001 339.279999 c
223.0 339.279999 222.159988 339.160004 221.319992 339.039978 c
214.839996 313.119995 m
215.919998 312.160004 217.0 311.440002 218.199997 310.839996 c
216.87999 290.559998 m
217.839996 290.079987 218.800003 289.720001 219.759995 289.47998 c
223.720001 268.720001 m
222.639999 267.519989 221.679993 266.200012 220.839996 264.759979 c
239.919998 233.919998 m
241.0 234.039993 241.959991 234.279999 242.919998 234.639999 c
0.0039 0.0039 0.0039  setrgbcolor
S
n
300.279999 242.319992 m
300.279999 236.199997 303.639984 231.279999 307.720001 231.279999 c
311.919983 231.279999 315.279999 236.199997 315.279999 242.319992 c
315.279999 248.319992 311.919983 253.23999 307.720001 253.23999 c
303.639984 253.23999 300.279999 248.319992 300.279999 242.319992 c
0.8515 0.8515 0.8515  setrgbcolor
eofill
n
300.279999 242.319992 m
300.279999 236.199997 303.639984 231.279999 307.720001 231.279999 c
311.919983 231.279999 315.279999 236.199997 315.279999 242.319992 c
315.279999 248.319992 311.919983 253.23999 307.720001 253.23999 c
303.639984 253.23999 300.279999 248.319992 300.279999 242.319992 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
n
321.039978 226.479996 m
321.039978 222.400009 323.320007 219.039993 326.079987 219.039993 c
328.839996 219.039993 331.0 222.400009 331.0 226.479996 c
331.0 230.440002 328.839996 233.800003 326.079987 233.800003 c
323.320007 233.800003 321.039978 230.440002 321.039978 226.479996 c
0.8515 0.8515 0.8515  setrgbcolor
eofill
n
321.039978 226.479996 m
321.039978 222.400009 323.320007 219.039993 326.079987 219.039993 c
328.839996 219.039993 331.0 222.400009 331.0 226.479996 c
331.0 230.440002 328.839996 233.800003 326.079987 233.800003 c
323.320007 233.800003 321.039978 230.440002 321.039978 226.479996 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
n
337.47998 214.23999 m
337.47998 212.319992 338.679993 210.639999 340.0 210.639999 c
341.440002 210.639999 342.519989 212.319992 342.519989 214.23999 c
342.519989 216.279999 341.440002 217.959991 340.0 217.959991 c
338.679993 217.959991 337.47998 216.279999 337.47998 214.23999 c
0.8515 0.8515 0.8515  setrgbcolor
eofill
n
337.47998 214.23999 m
337.47998 212.319992 338.679993 210.639999 340.0 210.639999 c
341.440002 210.639999 342.519989 212.319992 342.519989 214.23999 c
342.519989 216.279999 341.440002 217.959991 340.0 217.959991 c
338.679993 217.959991 337.47998 216.279999 337.47998 214.23999 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
244.2397 263.799683 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 1292 36 <000200110000056e05c80007000a00b1401905090a0408060a0a07060801
07050904810a010220020a0404b8025c400a030214030302010a0707b802
3540100001140000010a020102090859400506b801964013070704040303
000801070002040a0c47474a03ba0110000a0110400b002000490b0cd521
7599182b2b4ee41a194d10fdfd184e456544e6123939113939003f3c103c
103c4d10f43c1afd3c3f3c3987052e2b877dc4872e182b877dc42b113939
1112393907103c3c073c3c3130330133012303210313210311024bd00242
e3a1fd8da3e001f9fc05c8fa38019afe660236027e00>AOHBIF+LucidaSans AddT42Char 
1 4590 80 <000100c5000006bf0457002300f740391f400d161f40061f2c080b041f06
1821161905031b230a121a167e0d721f7e06010606071112121a1a1b1b23
23000a2547474a115b121a5b12ba0165001b0165b647235b00492471b901
1a00182b4e10f44ded76f4e418ed10fd4e456544e6003f3c103c103c103c
103c3f3f4d10edf4ed011112391112393900111239391112393931304379
401e1d1e0e1507090825150e1365011e071c6501090a140f1665011d091f
65012b2b01103c2b2b2b8181810049547940122021040521041f81052005
2281002122040301103c103c2b002b818100495479401217180b0c180b16
8105170c19810018190b0a01103c103c2b002b8181331133153636333216
161736363332161511231134262322060711231134262322060711c5c53c
bb7b476a56223cb97774bac65b38469764c65c3a479167043ecc5f852e54
62628390b1fcea02f76c4e5782fd2802f76d4e5684fd2800>AOHBIF+LucidaSans AddT42Char 
1 1648 44 <000100be0000019005c80003002e4011010200080547474a0202035a0100
490405b80185b32168c5182b2b4ef43c4dfd3c4e10456544e6003f3f3130
33113311bed205c8fa38>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/A 36 def
/m 80 def
/I 44 def
end
AOHBIF+LucidaSans /Encoding get
dup 65 /A put
dup 109 /m put
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(Am I  )
[12.497444 16.687902 5.632097 5.261299 5.632097 5.632097 ] pdfys
265.839691 254.799683 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 3262 71 <0002006fffe70444062b0011001e00bf40351f401b041f400a1522081e12
01031b0e0a151211000f0015570a07000a1b7e040b0f005b114a20102001
186907491f20c32167a1182b2b4ef44ded5d4e10f64dfd3c003fed3f3fed
3f0111123900111239121739313043794018161a05091a05185f00160918
5f0019061b5f001708155f012b2b012b2b81810049547940120b140c2513
0d158105140b12810113120d0e01103c103c2b002b2b810049547940121c
1d02031d021b81041c031e81011d1e020101103c103c2b002b8181213506
06232202351012333216161711331103262623220615141633323637037e
3cb579c8ddf8d73f725936c6c6667745908b7b8152a14ecc72730127ef01
0201571e373f0269f9d5033b5a2df2bfb1cc5a59>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/d 71 def
end
AOHBIF+LucidaSans /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(odd or  )
[11.050171 11.32016 11.32016 5.632097 11.050171 7.556338 5.632097 5.632097 ] pdfys
287.439697 259.839691 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 3552 72 <0002006fffe703e604570015001c009940313b080d0b1517167b0d0e0e12
1a57400907158750007c0a007c1257020b179315720b4a1e16720e930549
1d1ed42167e6182b2b4ef44dfde44e10f64de4ed003fedec4b5258b0001a
59fc1aed3f1afd11392f3cfd3c01111239313043794029181c0311102607
2611030e5f000f0e190a175f011b08165f001c0f04125f00180b1a5f011c
061a5f01002b2b2b013c2b2b103c2b2b2b81812506232200353412363332
121107211e02333236370121342623220603e1c68dfdfede80cf8cbce001
fd53105c99763c777bfd6001df7f63717f233c0155e899011486fef2fef3
3c909c57152d01d5a38c9700>AOHBIF+LucidaSans AddT42Char 
1 6564 89 <0001001200000418043e000600ad40149403010800070619001606290026
06b900b60608b8ff7cb40300062003b80155b5060c02010000b80259400a
03021403030204050606b8023a401b030414030304050404020201060600
0a0002010406030847474a05ba013800030138b6000101014907ebb90142
00182b194e10f45d184dfdfd194e456544e612393911393900183f3c3f3c
103c103c87054d2e2b877dc4872e182b877dc4004b5258b0801a591810fd
2b3130015d005d2101330101330101a6fe6cc5013c014db8fe53043efcb3
034dfbc2>AOHBIF+LucidaSans AddT42Char 
1 4944 81 <000100c50000043d0456001400934030cb12cb13021f4006101608031314
107e06010606070a0b0b1414000a1647474a0b5b090a02145b0ad4004915
16d42171b9011a00182b2b4ef44dedfd3c103ced4e456544e6003f3c103c
103c3f3f4d10ed11393931304379400e070f0e260f070c65010d08106501
2b012b2b8100495479401211120405120410810511051381001213040301
103c103c2b002b8181005d33113315363633321615112311342626232206
0711c5c54bc76b8aacc528482949a963043ecc6d77af9bfcf402cc714827
5a93fd41>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/e 72 def
/v 89 def
/n 81 def
end
AOHBIF+LucidaSans /Encoding get
dup 101 /e put
dup 118 /v put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(even?)
[10.062122 9.248496 10.062122 11.214039 7.631948 ] pdfys
n
360.039978 183.039993 m
360.039978 181.360001 361.359985 180.039993 363.039978 180.039993 c
364.720001 180.039993 366.039978 181.360001 366.039978 183.039993 c
366.039978 184.720001 364.720001 186.039993 363.039978 186.039993 c
361.359985 186.039993 360.039978 184.720001 360.039978 183.039993 c
0.8515 0.8515 0.8515 setrgbcolor
eofill
n
360.039978 183.039993 m
360.039978 181.360001 361.359985 180.039993 363.039978 180.039993 c
364.720001 180.039993 366.039978 181.360001 366.039978 183.039993 c
366.039978 184.720001 364.720001 186.039993 363.039978 186.039993 c
361.359985 186.039993 360.039978 184.720001 360.039978 183.039993 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
n
360.039978 195.039993 m
360.039978 193.360001 361.359985 192.039993 363.039978 192.039993 c
364.720001 192.039993 366.039978 193.360001 366.039978 195.039993 c
366.039978 196.720001 364.720001 198.039993 363.039978 198.039993 c
361.359985 198.039993 360.039978 196.720001 360.039978 195.039993 c
0.8515 0.8515 0.8515  setrgbcolor
eofill
n
360.039978 195.039993 m
360.039978 193.360001 361.359985 192.039993 363.039978 192.039993 c
364.720001 192.039993 366.039978 193.360001 366.039978 195.039993 c
366.039978 196.720001 364.720001 198.039993 363.039978 198.039993 c
361.359985 198.039993 360.039978 196.720001 360.039978 195.039993 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
309.039581 457.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 762 22 <000100d0ffdb042f05ed002700c8401446081f0c091f0f0b0c9109090312
911814cc4015b8010340180d180503912601cc4000aa0d260d0fc01baa06
ce234a290bb8014bb515aa004928f3b9011900182b4e10f44de4e44e10f6
4dedf4ed003f4b5258b0001a1bb0501a59fc1aed10ed3f4b5258b0001a1b
b0501a59fc1aed10fd11392fed0111123900111239313043794033192504
1121251d2611190f8f010425068f010820068f030d1e0f8f03101a128f01
0524038f000722098f01200e1c0c8f001e1f103c2b3c2b2b2b012b2b2b2b
2b2b81813735163332363534262323353732363534262322073536363332
1615140606071e021514022122d0d3798db3b7fe4e45edad898792b27f8e
44ebde408273918d48eefee98a0bb854a58380b88501ad74677c53ac2b10
bc9b57837129226aa05caefeef00>AOHBIF+LucidaSans AddT42Char 
1 128 15 <000100c8febf01bf00f7000c00434029070b170b270b370b570b0501c840
008b8009a6070a065e40430e9400a6800aa607490d0eb421789e182b2b4e
f44dfd1aede6761aed18003fed1afc1aed3130015d13353e023535233533
151406c820261a60f775febf4a09324c5c14f7d6abaa>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/three 22 def
/comma 15 def
end
AOHBIF+LucidaSans /Encoding get
dup 51 /three put
dup 44 /comma put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(3 is  odd,  if )
[15.12969 7.622262 6.897635 12.364668 7.622262 7.622262 14.697561 15.057547 15.230347 7.550262 7.622262 
7.622262 6.897635 8.793509 7.622262 ] pdfys
n
282.040009 432.039978 m
282.040009 630.039978 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
273.039581 457.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 538 21 <000100aa0000042205ed001d00834014160818170304040a1b011c000a91
11400ecc500fb80104b311051c1bb80239400c1d000c18170304040f07ce
14b8011eb31d4a1f1bb80187b40faa00491eba0129011900182b4e10f44d
e4ed4e10f64df4ed121739003f3cfd3c3ffc1aed1a10ed11123911121739
31304379400e121308090912078f0108130a8f012b012b81813335362537
36363534262322060607353633321615140607070606072115aa56010671
7b5f98803765735bc5c3d5f665c74c53a8170283adc9ed6570b5627d8d15
2e34ae5deaaf72caaa4146c971ad>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/two 21 def
end
AOHBIF+LucidaSans /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(2)
[15.141691 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( ) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(is)
[6.909635 12.364668 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  ) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(even,)
[13.557764 12.369728 13.341764 14.877653 7.557462 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  ) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(if)
[6.909635 8.80551 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( ) show
n
240.039993 426.039978 m
240.039993 624.039978 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
231.039597 457.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 454 20 <0001012e000002de05d500050035b10102b801cab703aa0404000c0100b8
01cdb70505044a07024906ba018b01bb00182b4e10e410f63c4d10fd3c00
3f3ff4fd3c31302111233525110218ea01b005347c25fa2b>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/one 20 def
end
AOHBIF+LucidaSans /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(1 is  odd,  if )
[15.12969 7.622262 6.897635 12.364668 7.622262 7.622262 14.697561 15.057547 15.230347 7.550262 7.622262 
7.622262 6.897635 8.793509 7.622262 ] pdfys
195.039597 458.799683 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 240 19 <00020082ffdb048e05ed000f001b007240144308169108051091000d13ce
0c4a1d19ce04491cb80124b1e7182b4e10f44ded4e10f64ded003fed3fed
313043794032011b0e2602250a250626110f13e1011b0119e100150913e1
01170719e100120d10e1001a0310e100140b16e101180516e1012b2b2b2b
012b2b2b2b2b2b2b2b810522260235341236333216121514020627321211
10022322021110120288a6ee7271f0a5a6ef7170efa7a29393a2a2929225
d5016bc9c8016bd6d5fe95c9c8fe97d894015a011b011b015afea6fee5fe
e5fea600>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/zero 19 def
end
AOHBIF+LucidaSans /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(0 is  even )
[15.144091 7.629463 6.912035 12.215868 7.629463 7.629463 13.437764 12.369728 13.557764 14.769653 7.629463 
] pdfys
n
204.039993 426.039978 m
204.039993 624.039978 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
363.279602 301.239685 m
%ADOBeginSubsetFont: AOHBKP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBKP+LucidaSans,Bold gcheck setglobal} if
1 136 53 <000200b90000056b05c8000e0017007f401111090c0b0b790a09140a0a09
090c0d8410b8023d40120a178401020e0b0b0a0809060e1947474a0bba01
a3000a012ab213cf06b80247b3000f0d0eb80198b300491819b801c3b321
6092182b2b4ef44dfd3c3c10fded19f418ed194e456544e611123900183f
3c103c3f4ded10fdfd393987052e2b7d10c4011139313033112132161615
1406070121012311113332363534262323b9022aaab267968901e4fe89fe
91aa47bf9076b56b05c855ad6d82e73dfd4d025dfda30328a6695b6b>AOHBKP+LucidaSans,Bold AddT42Char 
1 594 72 <00020056ffe7043704630014001b006d400e3704370847044708040d0c14
1615b80127401e0d0e0e121969400a0714775000990a00991276020b16ce
140c4a1d158f0eb8019d400906491c1da3215ec0182b2b4ef44dfde44e10
f63c4ded003fedec4b5258b0001a59fc1aed3f1afd11392f3cfd3c011112
393130015d2506232224023534123633321211211e023332370121342623
22060437d3bdb3fef3917bebacd3fcfd570a518a7495bbfd53018a655057
70253e85011ba69a010597fef4fe936f804b45019c97828f>AOHBKP+LucidaSans,Bold AddT42Char 
1 2034 84 <0002005dfe75049504630011001e0050402a121e1b0e0f15121e11001006
15760a071b95040b000e0e0100641111104a20187e07491f20bf215e8518
2b2b4ef44ded4e10f63c4d10fd3c3c003f3fed3fed3f0111123939001112
391239393130011106062322023510123332161617372111012626232206
15141633323637036c39b37bcadef8de3c645c3d250104fed73e6e397877
6f69438336fe75025a7474012bf50103015919343b6ffa2b04b64632e79c
9ab75d4c>AOHBKP+LucidaSans,Bold AddT42Char 
1 2700 88 <000100adffe70488044a0014003d401f0100120906000a0e95040b164747
4a13120064141413a30a8b0749157085182b4e10f44dedfd3c10fd3c4e10
456544e6003f4ded3f3f3c11393130213506062322263511211114161633
32363711211103604fc26582bb01282139233d844d0128cf7e6aa7b40308
fd415a4021517602b3fbb600>AOHBKP+LucidaSans,Bold AddT42Char 
1 1184 76 <000200b9000001e105fa000300070040b2066407b8018b40150202010600
0a0947474a0202070364010500490809b80132b3217085182b2b4ef43c3c
4dfd3c3c4e10456544e6003f3f3c4d10f6ed31303311211101352115b901
28fed80128044afbb60503f7f700>AOHBKP+LucidaSans,Bold AddT42Char 
1 2218 85 <000100b9000003760463000f004a401a03770e0e000201060b950609f608
b606070106000a1147474a09b8021c400a030e0f6400491070e4182b4e10
f44dfd3c3cf64e456544e6003f3f3f4df4ed10ed3f3c11392fed31303311
2115363633321711262322060711b9012835b8711b1c3e37589038044acf
6a7e06fef817595afd47>AOHBKP+LucidaSans,Bold AddT42Char 
1 1358 80 <000100b90000071604630023007b402f09041f061821161905031b230a12
1a16950d0d1f9506010606071112121a1a1b1b2323000a2547474a116412
1a6412ba01b8001b01b840094723640049247085182b4e10f44ded76f4e4
18ed10fd4e456544e6003f3c103c103c103c103c3f3f4d10ed3c10ed0111
123911123939001112393911123939313033112115363633321616173636
3332161511211134262322060711211134262322060711b9011c38b68450
765b0d52a97986a7fee44f3143833ffee44d3641813f044acf648431694e
7c6c9daffce902b67b486060fd4702b67a4a6061fd47>AOHBKP+LucidaSans,Bold AddT42Char 
1 1590 81 <000100b90000049404630014003b401e0301109506070106140b0a0c8b16
47474a09a300021464010049157085182b4e10f43c4dfd3c10fd4e456544
e64ded003f3c3f3fed113931303311211536363332161511211134262623
22060711b9012850c26482bbfed82139233d844d044acf7f69a7b4fcf802
bf5a40215176fd4d>AOHBKP+LucidaSans,Bold AddT42Char 
1 2536 87 <0001004cffe702ef05250016005cb10c0bb80156401609100f08b80e0906
14760216cc00c3020b1847474a0eba010700160202b40c11640b06b80125
b50849175ea5182b4e10f44dfc3cfd3cf6e64e456544e6003f4df4ed10ed
3f3cfd3c4b5158b0801a5910fc3231302506232226263511233533352515
33152311141633323702ef6a3d91a0507b7b0128ebeb54512635061f528d
890242b9b922dbb9fde577530e00>AOHBKP+LucidaSans,Bold AddT42Char 
1 2348 86 <0001009cffe703fb046300270048401e157714c317691207017700990369
260b1a8b0f8f0015a9068b2947474a23b8013ab5004928ebc0182b4e10f4
4dfd4e456544e64ded7de41810f4ed003fedf4ed3fedf4ed313037351633
323635342726272726272635343633321715262322061514171617171617
1615140623229cdc9c536325254c649b4a4adfe586b9b2755c5c1e1d4d56
d54241efe4c223d95c46362f201f1e283e4b4a778fba27d03e3f32271e1e
1d21514c4d6b8bd1>AOHBKP+LucidaSans,Bold AddT42Char 

1 0 3 <> AOHBKP+LucidaSans,Bold AddT42Char 
1 798 73 <000100410000037b06440016005140190b77400ac30d0d6908011402b813
0306000a1847474a13a90ab80218400c1116640500ec0349179ee1182b4e
10f44df43cfd3cf4f44e456544e6003f3f3c4dfd3c3fed4b5258b0001a59
fc1aed31303311233533353436333217152623220606151521152111d897
97d3c2838b7e642f43270116feea0391b94fe6c526c83525576b5ab9fc6f
>AOHBKP+LucidaSans,Bold AddT42Char 
1 1718 82 <00020056ffe704c50463000f001b002c4018166908071069000b137e0c4a
1d197e04491c1db1215ea5182b2b4ef44ded4e10f64ded003fed3fed3130
05222602353412243332161215140206273236353426232206151416028d
b2ff86840100b3b4ff8586ffb37e7f7f7e7d7f7f198b010ea5a4010d8d8d
fef3a4a5fef28bb9dda8a7dedea7a8dd>AOHBKP+LucidaSans,Bold AddT42Char 
1 344 68 <00020052ffe7047004630024002f007240151e2d1c110f0b2627cc0b0a0a
040f6914072d760424b8014a400e1c692121040b12a9070c25641819b801
25400a1e8f3147474a1f1f011fb80102b72a8b0749305ee1182b4e10f44d
edfd5d4e456544e64de4f43cfd3c10e4003f3c10fded10ed3fed12392f3c
fd3c1112391112393130250e022322263534242133353426232207353633
32161615111416333237170623222627273523220615141633323602d340
5e663993b1010901294f7056aab1c9c77ac073371b1018075e495277200d
46918e563a346b763e361bb785a2d964654662cc4c428b8afe1a592804a6
1c37589fdf674d3f5133>AOHBKP+LucidaSans,Bold AddT42Char 
1 1288 79 <000100b9000001e1062b0003002c40100100000a0547474a020364010049
0405b80132b3217085182b2b4ef43c4dfd3c4e456544e6003f3f31303311
2111b90128062bf9d500>AOHBKP+LucidaSans,Bold AddT42Char 
1 948 74 <0002005dfe5d04950463001d002a006640161f1e07032815162269110716
0628950a0a2b01774000b80178401d0e03761c0f151e06641818174a2c01
e500a9257e0e492b2cbf215e85182b2b4ef44dedf4e44e10f63c4d10fd3c
3c003fed4b5258b0001a59fd1aed103c10ed3f3fed113911173931301337
163332363535060623222602353412333216161737211110060423220111
2626232206151416333236c118b7a59b9c30b77e80c268fade3b625a401f
010a81fef7acc001cd406d336f856b644882feabd75482a7966984800101
9ef7014d18333d6ffcbafeb4e675033c01954831ccae95ab5600>AOHBKP+LucidaSans,Bold AddT42Char 
1 1854 83 <000200b9fe7504f104630011001e004f402b1e121003041b15121e18111b
950607010615760c0b000e187e094a2003101164000001491f20bf2170a5
182b2b4ef43c4d10fd3c3c4e10f64ded003f3fed3f3fed01111239390011
121739313013112115363633321215100223222626271111161633323635
342623220607b9012839b47acbdef8df3b655c3d3f6e3979767168418338
fe7505d5cf7474fed4f4fefefea619343bfe0602aa4632eb989db45b4e00
>AOHBKP+LucidaSans,Bold AddT42Char 
1 0 0 <0002010000000500050000030007005fb10504b8011fb2000607bb011f00
0200010253400b0303000a0947474a020605b8011fb2030302b80101b200
0704b8011fb301004908ba0194016c00182b4e10f43c4dfd3c10fd3c10fd
3c4e10456544e6003f3c4d10fd3cfd3c10fd3c3130211121112521112101
000400fc400380fc800500fb00400480>AOHBKP+LucidaSans,Bold AddT42Char 
AOHBKP+LucidaSans,Bold /CharStrings get begin
/R 53 def
/e 72 def
/q 84 def
/u 88 def
/i 76 def
/r 85 def
/m 80 def
/n 81 def
/t 87 def
/s 86 def
/space 3 def
/f 73 def
/o 82 def
/a 68 def
/l 79 def
/g 74 def
/p 83 def
end
AOHBKP+LucidaSans,Bold /Encoding get
dup 82 /R put
dup 101 /e put
dup 113 /q put
dup 117 /u put
dup 105 /i put
dup 114 /r put
dup 109 /m put
dup 110 /n put
dup 116 /t put
dup 115 /s put
dup 32 /space put
dup 102 /f put
dup 111 /o put
dup 97 /a put
dup 108 /l put
dup 103 /g put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N20 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(Requirements for a legal proof)
[12.481244 10.560574 11.863699 11.755758 5.779745 8.119833 10.560574 17.524822 10.560574 11.525359 7.435778 
9.952244 5.754604 7.687679 11.525537 8.119833 5.754604 10.681154 5.754604 5.779745 10.560574 11.885466 
10.681154 5.779745 5.754604 11.863699 8.119833 11.525537 11.525537 7.399679 ] pdfys
398.679596 301.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 7380 135 <000101f401b6031c02de000b0030b9000601d9b5000d47474a09b80131b3
03490c0dbc01310021013701bc00182b2b4ef44dfd4e456544e6002f4ded
313001222635343633321615140602883d57583c3c585701b6573d3d5757
3d3d5700>AOHBIF+LucidaSans AddT42Char 
1 1524 40 <000100bf0000042505c8000b004d40230605590808070700030459020102
0a09590b0008078d039b0a4a0d04095a0100490c0db8016ab32168e9182b
2b4ef43c4dfd3c4e10f64df4e4003f3cfd3c3f3cfd3c12392f3c10fd3c31
30331121152111211521112115bf033bfd970205fdfb029405c89dfe259b
fde89d00>AOHBIF+LucidaSans AddT42Char 
1 4512 79 <000100c50000018a062b0003003640180100000a6f05010547474a02035b
016f007f000200490405b8012cb32171a1182b2b4ef45d3c4dfd3c4e4565
44e65d003f3f313033113311c5c5062bf9d5>AOHBIF+LucidaSans AddT42Char 
1 6778 90 <0001000c0000061c043e000c01194013000b019609019a04950cba04b50c
0402010000b80259400a030214030302050b0a0ab8023a400a0605140606
0507080909b8025a400a060714060607040b0c0cb8025b40090304140303
040b0403bbfffc000300060155b7000c08070705050bb80155401f040c04
02020106090a0a0c0c000a000201040c03050a0b0709060e47474a084109
019700800006015c000b015c004000030197b78000010101490debb90142
00182b194e10f45d7d1a184dfd1afdfd1afd18194e456544e61239391139
3912393911393900183f3c103c103c3f3c103c4b5158b0401a594d10ed3c
103c103c4b5258b0801a1bb0401a5910fd3c383887052e2b877dc4872e18
2b877dc4872e182b877dc4872e182b877dc4015d5d3130005d2101331301
33130133012303010143fec9c1ee0101c5e10111a9fe9ec6e6fefc043efc
b70349fcb70349fbc20349fcb700>AOHBIF+LucidaSans AddT42Char 
1 7122 92 <00010010fe750422043e000700d2400e0801080207030704040646070104
b8fff0400d04040301050102050003020101b80259400c04031404010004
0305060707b8025940230005140000050f04010404010605050303020601
0a07000e0506070304020947474a06bc01380004013800000154400a0002
0102490809e421ebb9014200182b2b194ef45d184de4fdfd194e456544e6
11123939113900183f3c3f3f3c103c103c12392f5d87054d2e2b877dc487
082e182b87057dc4870810c408c431300038015d00b00146b00246b04061
5258b1010246b040614859015e5d01130133010133010104b0fe5cd50137
014cbafdaffe75018b043efcce0332fa3700>AOHBIF+LucidaSans AddT42Char 
1 3044 70 <0001006fffe703b704560016008f4032e90fe913f90ff9130425080c7d09
0f0b01080b7a500a0e57400907167d50007c0a007c1457020b0c72004a18
116906491718b80169b32167c7182b2b4ef44ded4e10f64de4003fedec4b
5258b0001a59fc1aed3f1aed4b5258b0001a591afc5e5d5eed3130437940
1a0f13030804251303115f000f08115f001205145f0010070e5f012b2b01
2b2b2b818101712506232226023534002132171526232206151416333237
03b7bf8b91f27b010a0116809ca769a6a8bd97878f213a9d0100a1f00141
23a531f7a9b7e245>AOHBIF+LucidaSans AddT42Char 
1 4304 78 <000100c500000485062b000a009db2050606b8025a400c03041403060703
0408070606b80259400b0908140906050908060409b8024a402603030705
020100050406000a0a0808070a060408030a05cb0c47474a0703090a5b40
20070107b8016cb62000490b71d8182b4e10f41a194ded5d1a18fd3c3c19
4e10456544e6184de4121739003f3c103c103c3f3c3f3c191112392f18e5
123987082e2b87057dc487082e182b057d10c43130331133110133010123
0111c5c501ccd4fe490212fcfe01062bfc04020ffe05fdbd022dfdd3>AOHBIF+LucidaSans AddT42Char 
1 2752 69 <000200c5ffe7049a062b0011001e00c040362040150d1f40061b22081e12
1003041b1510180301001b7e0607000a15570c0b1869094a201020010311
7a129300491f20c32171c6182b2b4ef44dfde43c5d4e10f64ded003fed3f
3fed3f011112390011121739313043794018161a070b160b185f011a0718
5f01170a155f0019081b5f012b2b012b2b81810049547940121c1d04051d
041b81051c051e81001d1e040301103c103c2b002b81810049547940120d
14130f1581040e0d140e12810013120f1001103c103c2b00103c2b811711
3311363633321215100223222626270713161633323635342623220607c5
c53db579c9dcf9d73f7259361818657845918b7b8152a14f0c0637fd4772
72fed8eefefffea81e383e87010f5a2ef4bdb0ce595a>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/bullet 135 def
/E 40 def
/l 79 def
/w 90 def
/y 92 def
/c 70 def
/k 78 def
/b 69 def
end
AOHBIF+LucidaSans /Encoding get
dup 149 /bullet put
dup 69 /E put
dup 108 /l put
dup 119 /w put
dup 121 /y put
dup 99 /c put
dup 107 /k put
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 20.039993 -20.039993 0.0 0.0 0.0] Tf
(\225Even is always stacked above odd)
[18.953901 10.799702 10.328721 11.276641 12.519029 6.352562 5.759523 10.204255 6.232322 11.136264 5.759523 
15.250357 11.154299 10.31064 10.204255 6.352562 10.204255 7.558943 11.136264 10.196217 11.777497 11.236562 
12.593088 6.232322 11.136264 12.472849 12.378673 10.20848 11.236562 6.232322 12.378673 12.591084 12.67926 
] pdfys
434.679443 301.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 1884 50 <00020068ffdb05d005ed000f001b006f4017430816770803107700091379
0c4a1d197904491c76a9182b4e10f44ded4e10f64ded003fed3fed313043
794032011b0e2602250a250626110f136e011b01196e001509136e011707
196e00120d106e001a03106e00140b166e011805166e012b2b2b2b012b2b
2b2b2b2b2b2b810522240235341224333204121514020427321211100223
2202111012031cd2fec9aba3013ed3d3013ea3a1fec5d8e0f5f7dedef7f5
25bc0169e4dc0169c4c4fe97dcdbfe99c79d014e0120011f014bfeb5fee1
fee0feb2>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/O 50 def
end
AOHBIF+LucidaSans /Encoding get
dup 79 /O put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\225Odd i)
[18.953901 15.602994 12.597095 12.597095 6.352562 5.783571 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( alway)
[6.352562 11.154299 5.759523 15.130116 11.154299 10.452924 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( )
[6.352562 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(s) show
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(tacked below eve)
[7.679183 11.054099 10.252328 11.695333 11.276641 12.597095 6.352562 12.472847 11.276641 5.639283 12.354624 
15.130116 6.352562 11.276641 10.32872 11.154397 ] pdfys
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(n) show
470.679291 301.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
1 1718 49 <000100bf0000052a05c8000900794012057802770796029907b602b90706
08020303b8025c40140708140707080308090402020907080207090403b8
0237b60606054a0b0809b80237b40100490a0bb80211b32168c5182b2b4e
f43c4dfd3c4e10f63c4d10fd3c113939003f3c3f3c123939872e2b877dc4
3130015d4358b44702480702005d5933113301113311230111bfce02e9b4
cdfd1605c8fb890477fa380477fb8900>AOHBIF+LucidaSans AddT42Char 
1 6354 88 <000100b9ffe70431043e0014008e401a1f400e041608017d11110900140a
131212090908060e7e040b16b80109b5141101934014b801a9b3c00a5b07
b80109b61516d42171a1182b2bf6ed1afd1afd3c10e6003fed3f3c103c10
3c3f3c11392ffd31304379400e050d0c260d050a65000b060e65002b012b
2b810049547940120f10020310020e81040f031181011011020101103c10
3c2b002b8181213506062322263511331114161633323637113311036c4c
c66b89adc528482a48a963c5cc6e77af9c030cfd347148285a9302c0fbc2
>AOHBIF+LucidaSans AddT42Char 
AOHBIF+LucidaSans /CharStrings get begin
/N 49 def
/u 88 def
end
AOHBIF+LucidaSans /Encoding get
dup 78 /N put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\225Numeral decreases by one in each stack)
[18.953901 14.765436 12.368729 18.489014 11.23055 8.156209 11.036064 5.759523 6.352562 12.472849 11.158406 
10.196217 8.156209 11.158406 11.154301 10.084015 11.276642 10.204255 6.352562 12.591084 10.31064 6.352562 
12.372661 12.368729 11.23055 6.352562 5.639283 12.486965 6.232322 11.158406 11.036064 10.196217 12.486965 
6.352562 10.204255 7.558943 11.036064 10.196217 11.771485 ] pdfys
506.679138 301.239685 m
%ADOBeginSubsetFont: AOHBIF+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal AOHBIF+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(\225Every stack ends with 0)
[18.953901 10.799701 10.32872 11.276641 8.276447 10.310639 6.352562 10.204254 7.558943 11.036062 10.196216 
11.869679 6.232322 11.158404 12.486963 12.591084 10.204254 6.470798 15.130116 5.759523 7.558943 12.486963 
6.352562 18.953901 ] pdfys
n
396.039978 193.479996 m
397.720001 193.479996 399.039978 191.559998 399.039978 189.039993 c
399.039978 186.519989 397.720001 184.479996 396.039978 184.479996 c
396.039978 180.039993 l
399.399994 180.039993 402.039978 184.119995 402.039978 189.039993 c
402.039978 193.959991 399.399994 198.039993 396.039978 198.039993 c
0.8515 0.8515 0.8515 setrgbcolor
eofill
n
396.039978 193.479996 m
397.720001 193.479996 399.039978 191.559998 399.039978 189.039993 c
399.039978 186.519989 397.720001 184.479996 396.039978 184.479996 c
396.039978 180.039993 l
399.399994 180.039993 402.039978 184.119995 402.039978 189.039993 c
402.039978 193.959991 399.399994 198.039993 396.039978 198.039993 c
h
0.0039 0.0039 0.0039  setrgbcolor
S
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial 15 1404 a
 currentpoint currentpoint translate 1 0.35 div 1 0.35 div scale neg
exch neg exch translate
 15 1404 a -150 1485 a Fq(Figur)o(e)23
b(1.)177 1485 y
SDict begin H.S end
 177 1485 a Black Black 177 1485 a
SDict begin H.R end
 177
1485 a 177 1485 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 177 1485 a Fq(Pr)o(oofs)g(ar)o(e)h(logical)g(ar)o
(guments)g(which)e(use)h(well-f)n(ormed)-150 1568 y(r)o(easoning)o(.)p
-150 1620 2001 4 v Black -150 1885 a Fv(W)-6 b(e)21 b(ha)o(v)o(e)h
(coined)h(a)e(ne)n(w)h(slogan)g(for)g(the)g(process)g(of)g(designing)h
(reliable)-150 1968 y(systems)15 b(in)g(this)g(w)o(ay:)22
b Fr(Mostly)15 b(types)h(\226)f(just)g(a)g(little)f(theor)m(em)h(pr)m
(o)o(ving)o(.)23 b Fv(W)-6 b(e)-150 2051 y(ar)o(gue)18
b(that)f(man)o(y)h(properties)g(that)f(can)h(be)f(modeled)i(in)e(a)g
(theorem)h(pro)o(v)o(er)-150 2134 y(or)h(logical)f(frame)n(w)o(ork,)i
(can)f(also)g(be)g(modelled)g(more)g(straightforw)o(ardly)-150
2217 y(in)j(a)h(programming)h(language)g(whose)f(type)g(system)f(has)h
(been)g(strength-)-150 2300 y(ened)17 b(in)f(just)g(a)g(fe)n(w)g
(simple)h(w)o(ays.)22 b(This)16 b(allo)n(ws)g(properties)h(of)f
(systems)h(to)-150 2383 y(be)j(modelled)h(in)f(a)f(more)i(light-weight)
e(manner)m(,)i(yet)f(still)f(be)h(completely)-150 2467
y(formal.)j(Generalizing)18 b(the)g(notion)h(of)e(algebraic)i
(datatypes,)f(adding)h(type)-150 2550 y(checking)26 b(for)e(rank-N)h
(polymorphism,)i(e)o(xtensible)e(kinds,)h(and)f(staging)-150
2633 y(support)h(mak)o(es)h(this)e(light-weight)h(formality)f
(possible.)43 b(Programmers)-150 2716 y(already)21 b(f)o(amiliar)f
(with)h(the)f(use)h(of)g(a)f(theorem)h(pro)o(v)o(er)h(or)e(logical)h
(frame-)-150 2799 y(w)o(ork)k(will)e(\002nd)h(that)f(man)o(y)i(of)f
(the)g(po)n(werful)h(ideas)f(behind)h(these)g(tools)-150
2882 y(ha)o(v)o(e)j(been)h(mo)o(v)o(ed)g(to)e(a)h(practical)g
(programming)i(language)f(and)g(ha)o(v)o(e)-150 2965
y(become)22 b(more)f(widely)g(applicable.)29 b(Thus,)21
b(we)f(can)h(sa)o(v)o(e)g(the)g(po)n(wer)g(and)-150 3048
y(frustration)e(of)g(using)g(a)g(theorem)h(pro)o(v)o(er)f(for)g(when)h
(we)e(really)h(need)h(it.)-150 3074 y
SDict begin H.S end
 -150 3074 a -150
3074 a
SDict begin 10 H.A end
 -150 3074 a -150 3074 a
SDict begin [/View [/XYZ H.V]/Dest (section.3) cvn /DEST pdfmark end
 -150 3074 a 167 x Fs(3)99
b(What)25 b(is)g(a)f(pr)n(oof?)-150 3407 y Fv(What)i(is)g(a)g(proof?)46
b(Consider)27 b(the)f(question)i(ask)o(ed)f(in)f(Figure)1606
3407 y
SDict begin H.S end
 1606 3407 a Black Fv(1)p Black 1644 3357 a
SDict begin H.R end
 1644
3357 a 1644 3407 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.1) cvn H.B /ANN pdfmark end
 1644 3407 a Fv(.)45 b(Ho)n(w)-150
3490 y(can)23 b(we)f(tell)f(if)h(the)g(inte)o(ger)g(3)h(is)f(odd)h(or)f
(e)n(v)o(en?)34 b(Gi)n(v)o(en)23 b(the)f(\223f)o(act\224)h(that)f(0)
-150 3574 y(is)j(e)n(v)o(en,)i(we)e(can)h(reason)f(that)g(1)h(is)e
(odd,)k(and)d(then)h(that)f(2)g(is)g(e)n(v)o(en,)i(and)-150
3657 y(\002nally)21 b(that)g(3)g(is)g(odd.)31 b(Such)21
b(ar)o(guments)h(follo)n(w)g(strict)e(rules)h(about)h(ho)n(w)-150
3740 y(the)o(y)29 b(are)f(constructed.)53 b(The)29 b(notion)g(that)f
(we)h(can)g(\223construct\224)g(proofs)-150 3823 y(leads)20
b(us)f(to)h(a)f(po)n(werful)h(analogy)h(\226)f(proofs)g(are)f(just)g
(data)h(structures)g(that)-150 3906 y(are)f(constructed)h(in)f
(precise,)g(well-formed)g(w)o(ays.)-150 4072 y(W)-6 b(e)29
b(illustrate)g(this)h(in)f(Figure)718 4072 y
SDict begin H.S end
 718 4072
a Black Fv(2)p Black 755 4021 a
SDict begin H.R end
 755 4021 a 755 4072 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.2) cvn H.B /ANN pdfmark end

755 4072 a Fv(.)55 b(Here)30 b(each)g(step)g(is)f(a)h(\223le)o(go\224)g
(block)-150 4155 y(with)d(dif)n(ferent)g(shape)h(\223snaps\224.)50
b(Odd)27 b(steps)h(ha)o(v)o(e)f(triangular)h(teeth)f(on)-150
4238 y(the)c(bottom,)h(and)f(square)h(teeth)f(on)g(top.)35
b(Ev)o(en)23 b(steps)g(ha)o(v)o(e)g(square)h(teeth)-150
4321 y(on)i(the)f(bottom,)i(and)f(triangular)g(teeth)f(on)h(top.)43
b(Lik)o(e)25 b(a)g(jigsa)o(w)g(puzzle,)-150 4404 y(this)d(pre)n(v)o
(ents)g(steps)g(from)g(being)h(\223snapped\224)h(together)e(in)g(bad)g
(w)o(ays.)33 b(In)-150 4487 y(addition)c(to)f(the)h(protection)g(pro)o
(vided)g(by)g(the)f(puzzle)i(piece)e(protocol,)-150 4570
y(the)22 b(in)m(v)n(ariant)h(that)f(the)h(numeral)f(being)h(tested)g
(decreases)g(by)g(one)g(as)f(we)-150 4653 y(ascend)d(the)f(stack)g
(must)g(also)g(be)h(ensured.)k(The)18 b(top)g(of)g(the)g(proof)h(stack)
f(is)-150 4736 y(a)j(f)o(act.)31 b(Notice)21 b(ho)n(w)h(it)f(has)h(no)g
(teeth)f(on)h(top.)31 b(It)20 b(is)h(from)h(simple)f(\223f)o(acts\224)
-150 4819 y(\(lik)o(e)e(0)g(is)f(e)n(v)o(en\))i(that)f(proofs)g(get)g
(started.)-150 4985 y(W)-6 b(e)18 b(capture)g(this)g(puzzle)h(lik)o(e)f
(beha)o(vior)h(by)f(using)h(types.)k(W)-6 b(e)18 b(pro)o(vide)g(an)-150
5068 y(abstract)26 b(interf)o(ace)g(to)g(the)g(creation)h(of)f
(well-formed)g(odd/e)n(v)o(en)h(proofs.)-150 5151 y(Let)18
b Fj(Z)g Fv(be)h(the)g(f)o(act)f(that)h(0)f(is)g(e)n(v)o(en.)24
b(And)19 b(let)f Fj(E)h Fv(construct)g(a)f(proof)h(that)g
Fj(m+1)-150 5234 y Fv(is)i(e)n(v)o(en)g(when)h(snapped)h(underneath)f
(a)f(proof)h(that)f Fj(m)g Fv(is)f(odd,)i(and)g(\002nally)-150
5317 y Fj(O)j Fv(creates)h(odd)g(proofs)g(by)g(snapping)i(them)d(onto)h
(e)n(v)o(en)h(proofs.)43 b(This)25 b(is)-150 5400 y(captured)20
b(by)f(the)g(interf)o(ace)h(belo)n(w:)p Black Black Black
2049 3 2001 4 v Black Black 2381 1661 a
 currentpoint currentpoint translate 0.35 0.35 scale neg exch neg exch
translate
 2381 1661 a 19
w @beginspecial 35 @llx 168 @lly 491 @urx 719 @ury 4560
@rwi @setspecial
%%BeginDocument: lego.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - figures.ppt)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 12:01:45 11/12/04
%%DocumentData: Clean7Bit
%%BoundingBox: 35 168 491 719
%%HiResBoundingBox: 35.227081 168.180878 490.906372 719.314148
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1192 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:af9e1222-0c72-4b7a-b6f3-bd2c430fc09c' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:af9e1222-0c72-4b7a-b6f3-bd2c430fc09c' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2004-11-12T12:01:12-08:00' xap:CreatorTool='Pscript.dll Version 5.0' xap:ModifyDate='2004-11-12T12:01:34-08:00' xap:MetadataDate='2004-11-12T12:01:34-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:af9e1222-0c72-4b7a-b6f3-bd2c430fc09c' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:dfb96502-859f-42e8-b986-b6f0c16def74'/>
<rdf:Description rdf:about='uuid:af9e1222-0c72-4b7a-b6f3-bd2c430fc09c' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - figures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
35 168 456 551 rectclip
[ 0 -1 1 0 -132.9538 754.54123 ] concat
%ADOBeginSubsetFont: BPHOFP+LucidaSans Initial
ct_T42Dict begin
-0.301 -0.211 1.004 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /BPHOFP+LucidaSans
Type42DictBegin
[<00010000000c000c000c000c4f532f326a9c7b6e000000cc000000566376
7420ce4fa9ea00000124000004c06670676ddfdf4b3d000005e400000403
676c7966253886b1000019c800000aac68656164bcc9dc4f000009e80000
0036686865610d62050d00000a2000000024686d74785c7c7cf800000a44
000003cc6c6f6361eacceddf00000e10000001e86d617870031006e10000
0ff8000000206e616d65aa0b9852000010180000037b70726570b6f52dc9
000013940000063467646972000000000000000000000000000103eb0190
0005000804ce04290000031604ce042900000316006403200802020b0602
030504020204000000030000000000000000000000004226482000400020
f002062b01a40031076c01b020000001000000000100062b001905c80025
05c80025043e00190000ffdb0000ffe70000ffdbfe75ffe8062b0000fed8
000002deffee05db001202e4ffe705d500190000ffe702f0001906440000
0503000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff02b3028200000000000000000000fe5002060206025006500000021f
021f026904d2ffffffffffff00c8000000c8000000000000000000000000
0000000000000000000000000094006900940094009d00d200c5ff980094
0094015a00680000007b00ca001900a60000006f00bf00d100c5007b0028
00500207043e007b00c50005000c006e00110068009d00c800df00190094
003a00a500aa00c500de00ee011300ad00b401930275009600e1009d00ad
0149004a006400c0012c007b009400b500c500c600fc021f0347ff85ffe7
0019002b006a04d2ff37007bfde1ff3a004f006700aa00c600f7012801af
ff99001f008700c600c602b300030041005e006f009000f7012801720185
018b021f02e40025003d004c0056009a00bd00d501d503d5ff1cff42ff91
ffa3004a00510056005e00ac00be00d201280128014d018b021f03780567
05c8fe75ffceffe80015005000520062008b00a600c501a001bc0385040c
0612ff63ff73ffa9ffca0002000c00630080009400a600ac00be00c500d0
00d200dd00de00e200f600f7016e0200020c02500275029a002800310033
0043004d00530074007b00b900bd0172017501ed01ed01ff021f02af030a
04af06cc06f0fdedfea6fed8fef7ff0dff46ffa0ffb6fff70006000c0040
004e007b007e00820097009a009d009d00aa00b300c500c500f600f7011c
01270128014101470159016601c801f40205020c0237026902da02f1036c
05300534ffc2fff2000a001d00400044004a005000630066007500770094
009d00ad00ad00b300de00e000ed00f300f70102010f0128014e01500151
0164018b01bc01da0206023802570264028d029302b302e1034803660366
03c004d105b505bc06060753fe38fe8eff66ffe100080021002500250029
00310032004a006300690094009c00a700b200bf00d200e400ee010c010f
012c012e01410146014d01570159015a016f0172018a018b01ab01af01bc
01c801d501e601ff021f0236025002500258027f0282028702e4032e033b
0345037803e803f3040c04260433043d0464046704ec050e050f05d705fa
0800fcbafd97fd97fdcffe0dfe4bfe5aff07ff4eff53ffe400000017005b
00620063007b007c007c008900c600c600e100f300f300f400f900f9010f
011001110117012801280136013f01630178017d017e019301a301a601b0
01b001c201c301c401ca01d501d501e101f301f4020a02250231023e0269
026c028202b502cc02d002d402e402ff030f031003160323032303460347
03490353035f03770378039103a003b603de03f504000426043b043d0456
046b047b0488048804a804ad04e504f305000529056f058b05b005b105ed
061006120637066d068206d306fe0715073b0767080000c800d500c700cc
00000000000000000000000000a6009a00b500a100ad00ac00b900b400ad
007b00940074011b040401d702bf00f701e2023102bd0002000200940094
00020001ff9801d50488007800dd001a007c00c5068e006300b800a00095
00c504a700c100634034343331302f2e2d2c2b2a29282726252423222120
1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004
262348482d2c45234660b0206120b04660b004262348482d2c4523462361
b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c
0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920
b0ed51582320b04d44235920b0042651582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453a
b10200080d2d2c45b04a234445b04923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2c2d2c4b52582145441b2345
8c20b00325455258441b212159592d2c01182f2d2c20b0032545b0492344
45b04a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb1
14008a5279b34940204945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4569b00943608a103a2d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c76462346608a8a46
2320468a608a61b8ff80622320102320b0005058b00161b8ffc08b1bb040
8c5968013a182d2cb0332bb02a2a2d0000010000000100c46102c1ff5f0f
3cf5001b080000000000a3a6934200000000b451fd8ffd97fe50080c076c
0000000900010000000000000001000007bcfe5000000819fd97fdb0080c
0001000000000000000000000000000000f3060001000000000002880000
02880000028800e102fd006f050f000f050f00d80559000c0594004a01d5
006f029a007b029a004a03db006e050f0069028800c8029a006f028800c8
03f4000c050f0082050f012e050f00aa050f00d0050f0069050f00f9050f
0089050f00de050f00b1050f009c028800e1028800e1050f0069050f0069
050f00690360002506de005d05850011049a00bf0589006805fe00bf0456
00bf044a00bf05c8006805e100bf024e00be027dff48053900bf044400bf
06e400bf05e900bf06370068046c00bf06370068050f00bf044f0064050f
0012058b00b3053b002406d800020502001004fc001104d6005f029a00c5
03f4000c029a004a050f00690400005604ea0166046b0067050900c50419
006f0509006f0475006f02f1005004fd006f04f700c5025000c5026fff66
04ad00c5025000c5077800c504f700c504ea006f050900c50509006f0346
00c50414009d02fe004504f700b904240012062a000c04e80058042e0010
0496007b029a0019021f00c5029a0088050f006905850011058500110589
0068045600bf05e900bf06370068058b00b3046b0067046b0067046b0067
046b0067046b0067046b00670419006f0475006f0475006f0475006f0475
006f0250007b025000190250ffdb0250000c04f700c504ea006f04ea006f
04ea006f04ea006f04ea006f04f700b904f700b904f700b904f700b9050f
00e40237006f050f00cd050f00f7050f00dd050f01f4050f00d804c900c5
050f00cc06d800630675000004ea01c804ea0159050f0069074100120637
006806bf0078050f0069050f0069050f0069050f0050050300c5050f00cb
05220032061200750680003f050f010c036000480360003e0644004006cf
006704ea006f03600025028800e1050f006905b00074050f00ed050f0069
054d000b0431006f0431004a080000f70288000005850011058500110637
006808000068076d006f040000690800006302fd006f02fd006f028800c8
028800c8050f0069050f0069042e001004fc0011004afd970510fff002a7
006f02a7004a05280050052e0050050f00e4050f020c028800c802fd006f
0819000c05850011045600bf05850011045600bf045600bf024e007a024e
ffda024e000b024e0017063700680637006806370068058b00b3058b00b3
058b00b3025000c504ea012804ea012804ea015904ea012804ea021204ea
01d504ea01fe04ea017004ea01f404ea0128044f00640414009d021f00c5
05feffe104d2006d04fc0011042e0010046c00bf050900c5050f00690360
00d2036000880360009a066900250669006306fd007b029a006f05100062
000000400040004000400040004000400040004000400040004000400040
0040004000400040004000ab00d5014501e201e201e201e201e201e201e2
01e201e201e2020e020e020e020e020e020e020e020e020e020e020e020e
020e020e020e020e020e020e020e020e020e020e020e020e020e020e020e
020e020e020e020e020e020e020e020e020e020e020e020e029f031d031d
031d031d0354035403540354035403bf042a042a042a042a04ce04ce04ce
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390539
053905390539053905390539053905390539053905390539053905390556
055605560556055605560556055605560556055605560556055605560556
055605560556055605560556055605560556055605560556055605560556
055605560556055605560556055605560556055605560556055605560556
055605560556055605560556055605560556055605560556055605560556
05560556055605560001000000f3004d0007004a00040002001000130038
000001c70634000200010000000c00960001000000000000007a00000001
0000000000030011007a00010000000000040011008b0001000000000006
0011009c0001000000000007003a00ad000300010409000000f400e70003
000104090001002201db0003000104090002000e01fd0003000104090003
0022020b00030001040900040022022d00030001040900060022024f0003
00010409000700740271a9203139393120426967656c6f77202620486f6c
6d657320496e632e205061742e204465732e203238392c3432302e20416c
6c205269676874732052657365727665642e20a920313939302d31393931
205479706520536f6c7574696f6e732c20496e632e20416c6c2052696768
74732052657365727665642e4250484f46502b4c756369646153616e7342
50484f46502b4c756369646153616e734250484f46502b4c756369646153
616e734c7563696461a82069732061207265676973746572656420747261
64656d61726b206f6620426967656c6f77202620486f6c6d657320496e63
2e00a90020003100390039003100200042006900670065006c006f007700
20002600200048006f006c006d0065007300200049006e0063002e002000
5000610074002e0020004400650073002e0020003200380039002c003400
320030002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e002000a9002000310039003900
30002d00310039003900310020005400790070006500200053006f006c00
7500740069006f006e0073002c00200049006e0063002e00200041006c00
6c0020005200690067006800740073002000520065007300650072007600
650064002e004200500048004f00460050002b004c007500630069006400
6100530061006e00730052006500670075006c0061007200420050004800
4f00460050002b004c0075006300690064006100530061006e0073004200
500048004f00460050002b004c0075006300690064006100530061006e00
73004200500048004f00460050002b004c00750063006900640061005300
61006e0073004c0075006300690064006100ae0020006900730020006100
200072006500670069007300740065007200650064002000740072006100
640065006d00610072006b0020006f006600200042006900670065006c00
6f00770020002600200048006f006c006d0065007300200049006e006300
2e1040363f143f154f144f1580148015060f1e0f1f3f1e3f1fbf1ebf1f06
4018401990189019c018c019061f1a1f1b02d068dfc502c071cfa1cfb801
1ab603090f20010805b80236b25a181fb80235b25a181fb8025cb25a181f
b8025bb25b181fb8025ab25b181fb8023ab25b181fb80259b25b181f4109
023f023c0042001f023e023d002a001f023db25b571fb8023cb269481fb8
023bb269571fbc0239023800ac001f0238b27ee51fb80237400d5a481f00
464600000012110840bb022b0000000901d4b2792b1fbc01ce0079040100
1f01cab257561fb801c8b257521fb80189b2792b1fb80187b279891f4109
018500ce0401001f018001cd002a001f0157b2793b1fb80155b279671fb8
014cb257471f410d012c005b0401001f012b005b0401001f0125005702ab
001f0106400957411ff8795a1ff4ceb80401b21ff25bbb0401001f00f001
cdb3501fee57b80401b21fcc7eb80401b21fc05bb80101b51fb479561fad
b901cd0401b61fa679561fa47eb80401b21f935bb80401b61f927ebb1f91
57b80401b61f9057521f8e5bb8019ab21f8a7eb802abb21f8959b80401b2
1f8757b80401b61f847ecd1f837eb802abb21f8079b80801b21f7f5bb804
01b21f7d7eb8019ab21f7b57b80401b61f6b57521f6a5bb80401b61f6257
521f5e57b80401b21f5857b80401b21f5557b8040140531f551409140990
e10790dc0790b707908f07908607908207906e07906507906307905f0724
08220820081e081c081a08180816081408120810080e080c080a08080806
080408020800081802010802004a0077b9022b000101734bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b9000101ff858d16
763f183f124b5358b90014ffe0402a000001001416000001001606100000
0100060400000100041000000100100200000100020000000100003e1139
46443e113946443e113946443e113946443e11394660443e113946443e11
39466044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b014b5079bc001f01cb0007001f018ab3071f81072b2b2b4b53
79bc009001cb00070090018ab3079081072b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb09353205c58b9022d022b4544b9022c022b45
445958b90391022d455258b9022d03914459594bb09e53205c58b9005a02
2c4544b90079022c45445958b90415005a455258b9005a04154459594bb0
ab53205c58b9005b022d4544b90069022d45445958b90421005b455258b9
005b04214459594bb8040153205c58b1ce5a4544b15a5a45445958b91a40
00ce455258b900ce1a404459594bb8080153205c58b901cd005b4544b15b
5b45445958b9314001cd455258b901cd31404459594bb04653205c58b157
574544b17e5745445958b9013f0057455258b90057013f4459594bb0ab53
205c58b157574544b1595745445958b903120057455258b9005703124459
594bb0ab53205c58b157574544b1775745445958b903120057455258b900
5703124459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542b368c576a945
6523456023456560234560b08b766818b080622020b176c54565234520b0
03266062636820b003266165b0c5236544b076234420b168a94565234520
b003266062636820b003266165b0a9236544b0682344b100a9455458b1a9
406544b26840684523614459b90071011ab167c645652345602345656023
4560b089766818b080622020b90067011a4565234520b003266062636820
b003266165b8011a236544b067234420b171c64565234520b00326606263
6820b003266165b0c6236544b0712344b100c6455458b1c6406544b27140
714523614459000145695342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b011234201012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4358b108004259
5e735e0174737373737300b0024568b802554568b0408b60b0202344b006
4568b80256456860b0222344b0004568b802584568b0408b60b802572344
00>
[2733 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N15/BPHOFP+LucidaSans 1 TZ
35.227081 168.180878 551.13327 455.679291 re
W
n
q
n
576.039978 36.040001 -540.0 719.999977 re
36.040001 36.040001 m
eoclip
n
n
36.040001 36.040001 539.999977 719.999977 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 J
1 j
0.75 w
n
360.039978 300.040009 m
360.039978 288.399994 365.200012 279.040009 371.559998 279.040009 c
462.519989 279.040009 l
468.879974 279.040009 474.039978 269.679993 474.039978 258.040009 c
474.039978 269.679993 479.200012 279.040009 485.559998 279.040009 c
486.519989 279.040009 l
492.879974 279.040009 498.039978 288.399994 498.039978 300.040009 c
240.039993 474.039978 m
240.039993 488.919983 244.959991 501.039978 251.080002 501.039978 c
328.0 501.039978 l
334.119995 501.039978 339.039978 513.159973 339.039978 528.039978 c
339.039978 513.159973 343.959991 501.039978 350.079987 501.039978 c
361.0 501.039978 l
367.119995 501.039978 372.039978 488.919983 372.039978 474.039978 c
88.959999 312.039978 m
88.959999 298.839996 94.720001 288.040009 101.919998 288.040009 c
204.759995 288.040009 l
211.959991 288.040009 217.720001 277.23999 217.720001 264.040009 c
217.720001 277.23999 223.600006 288.040009 230.800003 288.040009 c
231.87999 288.040009 l
239.080002 288.040009 244.959991 298.839996 244.959991 312.039978 c
459.759979 178.0 m
459.759979 214.0 l
432.039978 214.0 l
432.039978 250.0 l
459.759979 250.0 l
459.759979 286.0 l
432.039978 286.0 l
432.039978 322.0 l
459.759979 322.0 l
459.759979 358.0 l
432.039978 358.0 l
432.039978 394.0 l
459.759979 394.0 l
459.759979 430.0 l
432.039978 430.0 l
432.039978 466.0 l
459.759979 466.0 l
459.759979 502.0 l
432.039978 502.0 l
432.039978 538.0 l
459.759979 538.0 l
459.759979 574.0 l
432.039978 574.0 l
432.039978 610.0 l
524.320007 178.0 m
552.039978 214.0 l
524.320007 250.0 l
552.039978 286.0 l
524.320007 322.0 l
552.039978 358.0 l
524.320007 394.0 l
552.039978 430.0 l
524.320007 466.0 l
552.039978 502.0 l
524.320007 538.0 l
552.039978 574.0 l
524.320007 610.0 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
510.519592 311.319702 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
1 650 22 <000100d0ffdb042f05ed002700c8401446081f0c091f0f0b0c9109090312
911814cc4015b8010340180d180503912601cc4000aa0d260d0fc01baa06
ce234a290bb8014bb515aa004928f3b9011900182b4e10f44de4e44e10f6
4dedf4ed003f4b5258b0001a1bb0501a59fc1aed10ed3f4b5258b0001a1b
b0501a59fc1aed10fd11392fed0111123900111239313043794033192504
1121251d2611190f8f010425068f010820068f030d1e0f8f03101a128f01
0524038f000722098f01200e1c0c8f001e1f103c2b3c2b2b2b012b2b2b2b
2b2b81813735163332363534262323353732363534262322073536363332
1615140606071e021514022122d0d3798db3b7fe4e45edad898792b27f8e
44ebde408273918d48eefee98a0bb854a58380b88501ad74677c53ac2b10
bc9b57837129226aa05caefeef00>BPHOFP+LucidaSans AddT42Char 

1 0 3 <> BPHOFP+LucidaSans AddT42Char 
1 1594 76 <000200c50000018a05c800030007004ab2069307b80109401d0202010600
0a6f09010947474a020207035b01056f007f000200490809b8012cb32171
a1182b2b4ef45d3c3c4dfd3c3c4e10456544e65d003f3f3c4d10f6ed3130
3311331103353315c5c5c5c5043efbc20503c5c5>BPHOFP+LucidaSans AddT42Char 
1 2132 86 <0001009dffe703770456002900cd403594099422022b08211e0c09041803
211e0c09040f24185712167d40157a0b1207035728017d40007c0b280b90
2b012b47474a16c906b8023bb51024e0240224bb013c0000001b023bb50f
7200492a2bba013c00210127b1e6182b2b4ef47d4df418ed10fd5ded7de4
184e456544e65d003f4b5258b0001a1bb0501a594dfc1aed10ed3f4b5258
b0001a1bb0501a59fc1aed10ed111217391112173931304379401e252719
1a10110405262619111b650004270665011a1018650105250365002b2b01
2b2b2b81818181005d373516333236353427262727262726353436333217
1715262322061514171617171617161514060623229dc18f54711c1c6573
853d3dbeba5b8629a5625f5e201f515fbf343461bd748726b5605c452b29
292a313749486983ae1908a43152382c23242328514f4f5d59985600>BPHOFP+LucidaSans AddT42Char 
1 1918 82 <0002006fffe7047b0456000f001b007a40214308165708071057000b1369
0c4a1d001d101d201d03196904491c1de42167c6182b2b4ef44ded5d4e10
f64ded003fed3fed313043794032011b0e2602250a250626110f135f011b
01195f001509135f011707195f00120d105f001a03105f00140b165f0118
05165f012b2b2b2b012b2b2b2b2b2b2b2b81052226023534123633321612
1514020627323635342623220615141602759be5867ae9a39be6857ce7a3
93a2a39292a2a2197f0111a89e010f8a7efeeea7a0fef18994dbc9cad9d9
cac9db00>BPHOFP+LucidaSans AddT42Char 
1 1052 71 <0002006fffe70444062b0011001e00bf40351f401b041f400a1522081e12
01031b0e0a151211000f0015570a07000a1b7e040b0f005b114a20102001
186907491f20c32167a1182b2b4ef44ded5d4e10f64dfd3c003fed3f3fed
3f0111123900111239121739313043794018161a05091a05185f00160918
5f0019061b5f001708155f012b2b012b2b81810049547940120b140c2513
0d158105140b12810113120d0e01103c103c2b002b2b810049547940121c
1d02031d021b81041c031e81011d1e020101103c103c2b002b8181213506
06232202351012333216161711331103262623220615141633323637037e
3cb579c8ddf8d73f725936c6c6667745908b7b8152a14ecc72730127ef01
0201571e373f0269f9d5033b5a2df2bfb1cc5a59>BPHOFP+LucidaSans AddT42Char 
1 0 0 <00020100000005000500000300070056b10504b80120b2000607bb012000
0200010219b50303000a0605b80120b60303024a090704b80120b4010049
0809bc020c002100f9011800182b2b4ef43c4dfd3c4e10f63c4d10fd3c00
3f3c10fd3cfd3c10fd3c3130211121112521112101000400fc400380fc80
0500fb0040048000>BPHOFP+LucidaSans AddT42Char 
BPHOFP+LucidaSans /CharStrings get begin
/three 22 def
/space 3 def
/i 76 def
/s 86 def
/o 82 def
/d 71 def
end
BPHOFP+LucidaSans /Encoding get
dup 51 /three put
dup 32 /space put
dup 105 /i put
dup 115 /s put
dup 111 /o put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 39.960007 -39.960007 0.0 0.0 0.0] Tf
(3 is odd)
[25.294834 12.583177 11.58846 20.419344 12.583177 24.57534 25.174715 25.174715 ] pdfys
484.479584 181.2397 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
1 2674 178 <00010069021f0397029a00030020400a016200024a0500490405b801a6b3
21565c182b2b4ee410e6002f4dfd31301335211569032e021f7b7b00>BPHOFP+LucidaSans AddT42Char 
1 342 20 <0001012e000002de05d500050035b10102b801cab703aa0404000c0100b8
01cdb70505044a07024906ba018b01bb00182b4e10e410f63c4d10fd3c00
3f3ff4fd3c31302111233525110218ea01b005347c25fa2b>BPHOFP+LucidaSans AddT42Char 
1 964 32 <00020069015904a70347000300070030400b055540048b800155000702b8
01af400b05053f0001004908565c182b4e10f45d3c4d10fd3c002fed1afc
1afd3130133521150135211569043efbc2043e01599494015a949400>BPHOFP+LucidaSans AddT42Char 
1 426 21 <000100aa0000042205ed001d00834014160818170304040a1b011c000a91
11400ecc500fb80104b311051c1bb80239400c1d000c18170304040f07ce
14b8011eb31d4a1f1bb80187b40faa00491eba0129011900182b4e10f44d
e4ed4e10f64df4ed121739003f3cfd3c3ffc1aed1a10ed11123911121739
31304379400e121308090912078f0108130a8f012b012b81813335362537
36363534262322060607353633321615140607070606072115aa56010671
7b5f98803765735bc5c3d5f665c74c53a8170283adc9ed6570b5627d8d15
2e34ae5deaaf72caaa4146c971ad>BPHOFP+LucidaSans AddT42Char 
BPHOFP+LucidaSans /CharStrings get begin
/endash 178 def
/one 20 def
/equal 32 def
/two 21 def
end
BPHOFP+LucidaSans /Encoding get
dup 150 /endash put
dup 49 /one put
dup 61 /equal put
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(3 \2261 = 2)
[11.368868 5.632097 14.76 11.394068 5.632097 11.514668 5.632097 11.368868 ] pdfys
n
459.759979 179.440002 m
524.320007 179.440002 l
524.320007 610.0 m
432.039978 610.0 l
300.040009 180.039993 m
329.919983 216.039993 l
300.040009 252.039993 l
329.919983 288.040009 l
300.040009 324.039978 l
329.919983 360.039978 l
300.040009 396.039978 l
329.919983 432.039978 l
300.040009 468.039978 l
329.919983 504.039978 l
300.040009 540.039978 l
329.919983 576.039978 l
300.040009 612.039978 l
420.039978 180.039993 m
420.039978 216.039993 l
390.039978 216.039993 l
390.039978 252.039993 l
420.039978 252.039993 l
420.039978 288.040009 l
390.039978 288.040009 l
390.039978 324.039978 l
420.039978 324.039978 l
420.039978 360.039978 l
390.039978 360.039978 l
390.039978 396.039978 l
420.039978 396.039978 l
420.039978 432.039978 l
390.039978 432.039978 l
390.039978 468.039978 l
420.039978 468.039978 l
420.039978 504.039978 l
390.039978 504.039978 l
390.039978 540.039978 l
420.039978 540.039978 l
420.039978 576.039978 l
390.039978 576.039978 l
390.039978 612.039978 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
374.679596 313.239685 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 39.960007 -39.960007 0.0 0.0 0.0] Tf
(2) show
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
1 1342 72 <0002006fffe703e604570015001c009940313b080d0b1517167b0d0e0e12
1a57400907158750007c0a007c1257020b179315720b4a1e16720e930549
1d1ed42167e6182b2b4ef44dfde44e10f64de4ed003fedec4b5258b0001a
59fc1aed3f1afd11392f3cfd3c01111239313043794029181c0311102607
2611030e5f000f0e190a175f011b08165f001c0f04125f00180b1a5f011c
061a5f01002b2b2b013c2b2b103c2b2b2b81812506232200353412363332
121107211e02333236370121342623220603e1c68dfdfede80cf8cbce001
fd53105c99763c777bfd6001df7f63717f233c0155e899011486fef2fef3
3c909c57152d01d5a38c9700>BPHOFP+LucidaSans AddT42Char 
1 2460 89 <0001001200000418043e000600ad40149403010800070619001606290026
06b900b60608b8ff7cb40300062003b80155b5060c02010000b80259400a
03021403030204050606b8023a401b030414030304050404020201060600
0a0002010406030847474a05ba013800030138b6000101014907ebb90142
00182b194e10f45d184dfdfd194e456544e612393911393900183f3c3f3c
103c103c87054d2e2b877dc4872e182b877dc4004b5258b0801a591810fd
2b3130015d005d2101330101330101a6fe6cc5013c014db8fe53043efcb3
034dfbc2>BPHOFP+LucidaSans AddT42Char 
1 1704 81 <000100c50000043d0456001400934030cb12cb13021f4006101608031314
107e06010606070a0b0b1414000a1647474a0b5b090a02145b0ad4004915
16d42171b9011a00182b2b4ef44dedfd3c103ced4e456544e6003f3c103c
103c3f3f4d10ed11393931304379400e070f0e260f070c65010d08106501
2b012b2b8100495479401211120405120410810511051381001213040301
103c103c2b002b8181005d33113315363633321615112311342626232206
0711c5c54bc76b8aacc528482949a963043ecc6d77af9bfcf402cc714827
5a93fd41>BPHOFP+LucidaSans AddT42Char 
BPHOFP+LucidaSans /CharStrings get begin
/e 72 def
/v 89 def
/n 81 def
end
BPHOFP+LucidaSans /Encoding get
dup 101 /e put
dup 118 /v put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( is even)
[12.583177 11.56848 20.399364 12.583177 22.277977 20.719479 22.277977 24.835234 ] pdfys
345.279602 535.239563 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(2 \2261 = 1)
[11.368868 5.632097 14.76 11.394068 5.632097 11.514668 5.632097 11.368868 ] pdfys
n
300.040009 179.440002 m
420.039978 179.440002 l
390.039978 613.0 m
300.040009 613.0 l
204.519989 181.0 m
204.519989 217.0 l
175.959991 217.0 l
175.959991 253.0 l
204.519989 253.0 l
204.519989 289.0 l
175.959991 289.0 l
175.959991 325.0 l
204.519989 325.0 l
204.519989 361.0 l
175.959991 361.0 l
175.959991 397.0 l
204.519989 397.0 l
204.519989 433.0 l
175.959991 433.0 l
175.959991 469.0 l
204.519989 469.0 l
204.519989 505.0 l
175.959991 505.0 l
175.959991 541.0 l
204.519989 541.0 l
204.519989 577.0 l
175.959991 577.0 l
175.959991 613.0 l
271.359985 181.0 m
300.040009 217.0 l
271.359985 253.0 l
300.040009 289.0 l
271.359985 325.0 l
300.040009 361.0 l
271.359985 397.0 l
300.040009 433.0 l
271.359985 469.0 l
300.040009 505.0 l
271.359985 541.0 l
300.040009 577.0 l
271.359985 613.0 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
257.679688 314.319702 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 39.960007 -39.960007 0.0 0.0 0.0] Tf
(1 is odd)
[25.294834 12.583177 11.58846 20.419344 12.583177 24.57534 25.174715 25.174715 ] pdfys
225.279587 181.2397 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
1 128 19 <00020082ffdb048e05ed000f001b007240144308169108051091000d13ce
0c4a1d19ce04491cb80124b1e7182b4e10f44ded4e10f64ded003fed3fed
313043794032011b0e2602250a250626110f13e1011b0119e100150913e1
01170719e100120d10e1001a0310e100140b16e101180516e1012b2b2b2b
012b2b2b2b2b2b2b2b810522260235341236333216121514020627321211
10022322021110120288a6ee7271f0a5a6ef7170efa7a29393a2a2929225
d5016bc9c8016bd6d5fe95c9c8fe97d894015a011b011b015afea6fee5fe
e5fea600>BPHOFP+LucidaSans AddT42Char 
BPHOFP+LucidaSans /CharStrings get begin
/zero 19 def
end
BPHOFP+LucidaSans /Encoding get
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(1 \2261 = 0)
[11.368868 5.632097 14.76 11.394068 5.632097 11.514668 5.632097 11.368868 ] pdfys
n
204.039993 180.039993 m
270.279999 180.039993 l
270.279999 612.039978 m
175.959991 611.799988 l
54.039997 180.039993 m
54.039997 611.799988 l
156.039993 178.23999 m
156.039993 214.360001 l
127.479996 214.360001 l
127.479996 250.479996 l
156.039993 250.479996 l
156.039993 286.720001 l
127.479996 286.720001 l
127.479996 322.839996 l
156.039993 322.839996 l
156.039993 358.959991 l
127.479996 358.959991 l
127.479996 395.079987 l
156.039993 395.079987 l
156.039993 431.200012 l
127.479996 431.200012 l
127.479996 467.319977 l
156.039993 467.319977 l
156.039993 503.440002 l
127.479996 503.440002 l
127.479996 539.559998 l
156.039993 539.559998 l
156.039993 575.679993 l
127.479996 575.679993 l
127.479996 611.799988 l
0.0039 0.0039 0.0039 setrgbcolor
S
0.0 sg
99.639694 312.039703 m
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 39.960007 -39.960007 0.0 0.0 0.0] Tf
(0) show
%ADOBeginSubsetFont: BPHOFP+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BPHOFP+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( is even)
[12.583177 11.56848 20.399364 12.583177 22.277977 20.719479 22.277977 24.835234 ] pdfys
n
156.039993 181.0 m
54.039997 180.039993 l
127.479996 611.799988 m
54.039997 611.799988 l
0.0039 0.0039 0.0039 setrgbcolor
S
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2381 1661 a
 currentpoint currentpoint translate 1 0.35 div 1 0.35 div scale neg
exch neg exch translate
 2381 1661 a 2135 1742 a Fq(Figur)o(e)e(2.)2443
1742 y
SDict begin H.S end
 2443 1742 a Black Black 2443 1742 a
SDict begin H.R end
 2443 1742
a 2443 1742 a
SDict begin [/View [/XYZ H.V]/Dest (figure.2) cvn /DEST pdfmark end
 2443 1742 a Fq(Pr)o(oofs)h(ar)o(e)g(data)g(that)f(\002t)g
(together)h(in)f(pr)o(ecise)h(ways.)p 2049 1794 2001
4 v Black Black Black 2049 2033 a Fj(Z::)38 b(Even)h(0)2049
2116 y(E::)f(Odd)h(m)f(->)g(Even)h(\(m+1\))2049 2199
y(O::)f(Even)h(m)f(->)g(Odd)h(\(m+1\))2049 2360 y Fv(So)34
b(to)h(construct)g(a)f(proof)h(that)g(3)f(is)g(odd)i(we)e(simply)h
(snap)g(together)2049 2443 y(the)21 b(right)g(pieces)g
Fj(O\(E)39 b(\(O)f(Z\)\))g(::)77 b(Odd)38 b(\(1+1+1+0\))p
Fv(.)30 b(Note)21 b(ho)n(w)h(the)2049 2526 y(types)k(of)g(the)f
(functions)i(that)e(comprise)h(the)g(interf)o(ace)g(to)f(the)h(odd/e)n
(v)o(en)2049 2609 y(proof)32 b(abstraction)h(pre)n(v)o(ent)g(us)f(from)
g(constructing)h(proofs)f(of)g(in)m(v)n(alid)2049 2692
y(f)o(acts.)61 b(It)31 b(is)h(this)f(property)h(of)g(well)f(de\002ned)h
(proof)h(abstractions)f(that)2049 2775 y(mak)o(e)22 b(them)g(so)g(v)n
(aluable.)32 b(Ho)n(w)21 b(will)g(we)g(go)h(about)h(designing)f(such)h
(ab-)2049 2858 y(stractions?)j(W)-6 b(e)20 b(can)g(b)o(uild)g(them)g
(by)g(generalizing)h(the)f(well)f(understood)2049 2942
y(abstraction)h(of)e(algebraic)i(datatypes.)2049 2936
y
SDict begin H.S end
 2049 2936 a 2049 2936 a
SDict begin 10 H.A end
 2049 2936 a 2049 2936 a
SDict begin [/View [/XYZ H.V]/Dest (section.4) cvn /DEST pdfmark end
 2049
2936 a 166 x Fs(4)99 b(Generalized)26 b(Algebraic)f(Datatypes)2049
3269 y Fv(Algebraic)16 b(data)h(types)f(are)g(an)h(abstraction)f(a)o(v)
n(ailable)g(in)g(man)o(y)h(functional)2049 3352 y(languages)30
b(\(such)f(as)g(Hask)o(ell,)i(ML,)d(or)g(O'Caml\))g(that)h(allo)n(w)f
(users)h(to)2049 3435 y(de\002ne)f(inducti)n(v)o(ely)h(formed)f
(structured)g(data.)50 b(The)o(y)28 b(generalize)g(other)2049
3518 y(forms)17 b(of)g(structuring)g(data)g(such)h(as)e(enumerations,)j
(records,)e(and)h(tagged)2049 3601 y(v)n(ariants.)24
b(F)o(or)18 b(e)o(xample,)h(in)g(Hask)o(ell)g(we)g(might)g(write:)p
Black Black 2049 3763 a Fj(--)38 b(An)h(enumeration)g(type)2049
3846 y(data)g(Color)f(=)g(Red)h(|)f(Blue)h(|)f(Green)2049
3929 y(--)g(A)h(record)f(structure)2049 4012 y(data)h(Address)f(=)h
(MakeAddress)g(Number)g(Street)f(Town)2049 4095 y(--)g(A)h(tagged)f
(Variant)2049 4178 y(data)h(Person)f(=)g(Teacher)h([Class])77
b(|)39 b(Student)f(Major)2049 4339 y Fv(Each)45 b(de\002nition)g
(introduces)h(a)f(ne)n(w)g(structured)g(datatype)h(\()p
Fj(Color)p Fv(,)2049 4422 y Fj(Address)p Fv(,)25 b Fj(Person)p
Fv(\),)g(and)g(a)f(set)h(of)f(constructors.)40 b(Some)25
b(are)f(constants)2049 4505 y(\()p Fj(Red)p Fv(,)18 b
Fj(Blue)p Fv(,)g Fj(Green)p Fv(\),)g(others)g(are)g(constructor)h
(functions)g(\()p Fj(MakeAdress)p Fv(,)2049 4588 y Fj(Teacher)p
Fv(,)30 b Fj(Student)p Fv(\).)55 b(T)-6 b(ypes)30 b(are)g(used)g(to)g
(pre)n(v)o(ent)g(the)g(construction)2049 4671 y(of)23
b(ill-formed)g(data.)36 b(This)23 b(is)g(done)h(by)g(gi)n(ving)g(each)g
(constructor)g(a)f(type)2049 4755 y(which)17 b(ensures)g(that)e(it)h
(can)h(only)f(be)h(\223snapped\224)h(together)f(in)f(well)f(formed)2049
4838 y(w)o(ays.)24 b(F)o(or)18 b(e)o(xample:)p Black
Black 2049 4985 a Fj(Red)38 b(::)h(Color)2049 5068 y(Blue)g(::)f(Color)
2049 5151 y(Green)h(::)f(Color)2049 5234 y(MakeAddress)h(::)g(Number)f
(->)h(Sreet)f(->)h(Town)f(->)g(Address)2049 5317 y(Teacher)h(::)f
([Class])h(->)f(Person)2049 5400 y(Student)h(::)f(Major)h(->)f(Person)p
Black Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.4) cvn /DEST pdfmark end
 -158
-316 a Black Black Black -150 3 2001 4 v Black Black
33 1483 a
 currentpoint currentpoint translate 0.35 0.35 scale neg exch neg exch
translate
 33 1483 a 19 w @beginspecial 73 @llx 117 @lly
631 @urx 607 @ury 5580 @rwi @setspecial
%%BeginDocument: tree.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - tree.ppt)
%%Version: 1 3
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 11:05:56 11/12/04
%%DocumentData: Clean7Bit
%%BoundingBox: 73 117 631 607
%%HiResBoundingBox: 73.499435 116.999115 631.495193 607.495407
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N14/Helvetica 1 TZ
%%IncludeResource Helvetica-Bold
[/N16/Helvetica-Bold 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1147 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:09f81e2d-1b4d-460f-8b97-effecafff7c0' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:09f81e2d-1b4d-460f-8b97-effecafff7c0' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2004-11-12T11:05:10-08:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2004-11-12T11:05:10-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:09f81e2d-1b4d-460f-8b97-effecafff7c0' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f6280cee-49b6-4e12-be22-a6e87c8ee22b'/>
<rdf:Description rdf:about='uuid:09f81e2d-1b4d-460f-8b97-effecafff7c0' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - tree.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
73 117 558 490 rectclip
[ 0 -1 1 0 -43.49968 680.99484 ] concat
73.499435 116.999115 490.496292 557.995758 re
W
n
q
n
575.519043 35.519001 -540.0 719.999981 re
35.519001 35.519001 m
eoclip
n
n
35.519001 35.519001 539.999981 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
0.0 sg
118.559097 121.559097 m
/N14 [0.0 44.040009 -44.040009 0.0 0.0 0.0] Tf
(Fork \(Fork \(Node 5\) Tip\) Tip)
[26.894901 24.473022 14.651783 22.006792 12.238713 14.651783 26.894901 24.473022 14.651783 22.006792 12.238713 
14.651783 31.78368 24.473022 24.473022 24.473022 12.238713 24.473022 14.651783 12.238713 26.894901 9.763675 
24.473022 14.651783 12.238713 26.894901 9.763675 24.473022 ] pdfys
n
149.519012 415.439026 m
176.999008 377.519012 l
221.519012 392.279022 l
221.519012 438.479034 l
176.999008 453.239014 l
0.8515 0.8515 0.8515 setrgbcolor
eofill
1 J
1 j
0.75 w
n
149.519012 415.439026 m
176.999008 377.519012 l
221.519012 392.279022 l
221.519012 438.479034 l
176.999008 453.239014 l
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
199.799011 397.439087 m
/N14 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(Fork)
[10.999664 10.009796 5.995666 9.001801 ] pdfys
n
269.519012 349.439026 m
296.999023 311.519012 l
341.519012 326.279022 l
341.519012 372.479004 l
296.999023 387.239014 l
0.8515 0.8515 0.8515 setrgbcolor
eofill
n
269.519012 349.439026 m
296.999023 311.519012 l
341.519012 326.279022 l
341.519012 372.479004 l
296.999023 387.239014 l
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
319.799011 331.439087 m
(Fork)
[10.999664 10.009796 5.995666 9.001801 ] pdfys
n
401.519012 221.519012 72.0 72.0 re
0.6914 0.6914 0.6914 setrgbcolor
f
0 j
8.0 M
n
401.519012 221.519012 72.0 72.0 re
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
444.239014 236.039093 m
(Node)
[12.951002 9.962996 9.962996 9.962996 ] pdfys
n
401.519012 395.159027 m
473.519012 353.519012 l
473.519012 436.799011 l
0.5742 0.5742 0.5742 setrgbcolor
eofill
1 j
10.0 M
n
401.519012 395.159027 m
473.519012 353.519012 l
473.519012 436.799011 l
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
454.919037 382.679016 m
(Tip)
[11.159863 3.960002 10.169995 ] pdfys
n
275.519012 503.159027 m
347.519012 461.519012 l
347.519012 544.799011 l
0.5742 0.5742 0.5742 setrgbcolor
eofill
n
275.519012 503.159027 m
347.519012 461.519012 l
347.519012 544.799011 l
h
0.0039 0.0039 0.0039  setrgbcolor
S
0.0 sg
328.919006 490.679077 m
(Tip)
[11.159863 3.960002 10.169995 ] pdfys
550.559021 251.759094 m
/N16 [0.0 20.039993 -20.039993 0.0 0.0 0.0] Tf
(5) show
n
221.759018 415.559021 m
266.878998 353.639008 l
266.999023 353.519012 266.999023 353.279022 266.759003 353.159027 c
266.639008 353.039032 266.399017 353.039032 266.279022 353.159027 c
221.159012 415.199005 l
221.039017 415.319031 221.159012 415.559021 221.279007 415.679016 c
221.519012 415.799011 221.639008 415.799011 221.759018 415.559021 c
h
268.439026 356.039032 m
269.519012 349.439026 l
263.519012 352.439026 l
0.0039 0.0039 0.0039 setrgbcolor
f
n
221.159012 415.559021 m
272.519012 499.07901 l
272.639008 499.199036 272.878998 499.319031 273.119019 499.199036 c
273.239014 499.07901 273.359009 498.83902 273.239014 498.719025 c
221.879013 415.199005 l
221.759018 414.959015 221.519012 414.959015 221.279007 415.07901 c
221.159012 415.199005 221.039017 415.439026 221.159012 415.559021 c
h
269.759003 499.559021 m
275.519012 503.159027 l
274.919006 496.439026 l
f
n
341.879028 349.559021 m
399.119019 261.959015 l
399.239014 261.719025 399.119019 261.479004 398.999023 261.359009 c
398.759033 261.239014 398.639008 261.359009 398.519012 261.479004 c
341.159027 349.199005 l
341.039001 349.319031 341.159027 349.559021 341.279022 349.679016 c
341.519012 349.799011 341.759003 349.799011 341.879028 349.559021 c
h
400.799011 264.239014 m
401.519012 257.519012 l
395.759033 260.878998 l
f
n
341.279022 349.679016 m
397.319031 392.399017 l
397.439026 392.519012 397.679016 392.519012 397.799011 392.279022 c
397.919006 392.159027 397.919006 391.919006 397.799011 391.799011 c
341.759003 349.07901 l
341.519012 348.959015 341.399017 348.959015 341.159027 349.199005 c
341.039001 349.319031 341.159027 349.559021 341.279022 349.679016 c
h
394.919006 393.83902 m
401.519012 395.159027 l
398.519012 389.159027 l
f
n
473.519012 257.878998 m
522.479004 257.878998 l
522.719055 257.878998 522.83905 257.759003 522.83905 257.519012 c
522.83905 257.279022 522.719055 257.159027 522.479004 257.159027 c
473.519012 257.159027 l
473.279022 257.159027 473.159027 257.279022 473.159027 257.519012 c
473.159027 257.759003 473.279022 257.878998 473.519012 257.878998 c
h
521.519043 260.519012 m
527.519043 257.519012 l
521.519043 254.519012 l
f
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica
%%+ font Helvetica-Bold
%%EOF

%%EndDocument
 @endspecial 33 1483 a
 currentpoint currentpoint translate 1 0.35 div 1 0.35 div scale neg
exch neg exch translate
 33 1483 a -150 1564 a Fq(Figur)o(e)23
b(3.)180 1564 y
SDict begin H.S end
 180 1564 a Black Black 180 1564 a
SDict begin H.R end
 180
1564 a 180 1564 a
SDict begin [/View [/XYZ H.V]/Dest (figure.3) cvn /DEST pdfmark end
 180 1564 a Fq(Constructor)h(functions)f(pr)o(o)o
(vide)h(an)g(abstract)h(interface)-150 1647 y(to)h(heap)f(data.)45
b(Ev)o(ery)27 b(shape)e(r)o(epr)o(esents)g(an)h(inter)o(nal)f(node)g
(in)g(the)-150 1730 y(tr)o(ee)19 b(constructed)f(by)h(a)g(differ)o(ent)
e(constructor)-7 b(.)p -150 1782 2001 4 v Black -150
2127 a Fv(T)h(w)o(o)16 b(v)n(aluable)h(e)o(xtensions)f(to)g(this)g
(mechanism)h(are)e(the)h(ability)g(to)f(param-)-150 2210
y(eterize)23 b(a)g Fj(data)g Fv(de\002nition)g(to)g(construct)h
(polymorphic)h(data)e(structures,)-150 2293 y(and)d(the)f(ability)f(to)
h(construct)h(recursi)n(v)o(e)f(data)g(structures.)24
b(F)o(or)18 b(e)o(xample:)p Black Black -150 2440 a Fj(Data)39
b(Tree)f(a)-36 2523 y(=)h(Fork)f(\(Tree)h(a\))f(\(Tree)h(a\))-36
2606 y(|)g(Node)f(a)-36 2689 y(|)h(Tip)-150 2837 y Fv(De\002nes)16
b(the)g(polymorphic)i Fj(Tree)e Fv(type)g(constructor)l(.)23
b(Example)17 b(tree)e(types)-150 2920 y(include)23 b
Fj(\(Tree)38 b(Int\))22 b Fv(and)h Fj(\(Tree)38 b(Bool\))p
Fv(.)32 b(In)22 b(f)o(act)g(the)g(type)g(construc-)-150
3003 y(tor)30 b Fj(Tree)h Fv(can)g(be)g(applied)h(to)e(an)o(y)h(type)h
(whatsoe)n(v)o(er)l(.)59 b(Note)30 b(ho)n(w)i(the)-150
3086 y(constructor)27 b(functions)h(\()p Fj(Fork)p Fv(,)e
Fj(Node)p Fv(\))g(and)h(constants)g(\()p Fj(Tip)p Fv(\))g(are)f(gi)n(v)
o(en)-150 3169 y(polymorphic)c(types.)28 b(This)20 b(enables)h(the)g
(same)f(constructor)i(functions)f(to)-150 3252 y(construct)f(trees)e
(of)h(man)o(y)h(dif)n(ferent)f(types.)p Black Black -150
3463 a Fj(Fork)39 b(::)f(Tree)g(a)h(->)f(Tree)g(a)h(->)f(Tree)h(a)-150
3546 y(Node)g(::)f(a)g(->)g(Tree)h(a)-150 3629 y(Tip)f(::)h(Tree)f(a)
-150 3841 y Fv(V)-8 b(alues)16 b(of)g(the)h(ne)n(w)f(datatype)i(are)e
(constructed)h(solely)g(by)g(the)f(application)-150 3924
y(of)g(these)h(constructors.)24 b(F)o(or)15 b(e)o(xample,)j(the)e(tree)
h(illustrated)f(in)g(Figure)1748 3925 y
SDict begin H.S end
 1748 3925 a Black
-1 x Fv(3)p Black 1785 3873 a
SDict begin H.R end
 1785 3873 a 1785 3924 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.3) cvn H.B /ANN pdfmark end

1785 3924 a 16 w Fv(is)-150 4007 y(constructed)26 b(by)f(the)f(follo)n
(wing)h(e)o(xpression)h Fj(\(Fork)39 b(\(Fork)f(\(Node)h(5\))-150
4090 y(Tip\))g(Tip\))p Fv(.)30 b(Constructors)22 b(abstract)f(a)o(w)o
(ay)h(from)f(e)o(xplicit)h(heap)g(alloca-)-150 4173 y(tion)17
b(and)g(the)f(use)h(of)g(pointers.)23 b(These)16 b(mechanisms)i(are)e
(hidden)i(from)f(the)-150 4256 y(programmer)24 b(and)f(are)g(b)o(uilt)f
(into)h(the)g(constructor)h(function)f(implemen-)-150
4339 y(tations)c(that)g(are)g(automatically)g(generated)h(by)g(the)f
(compiler)l(.)-150 4505 y(Data)28 b(stored)h(in)f(algebraic)h
(datatypes)g(is)f(accessed)h(by)g(the)f(use)h(of)f(pat-)-150
4588 y(tern)21 b(matching,)g(which)h(allo)n(ws)e(abstract,)h(high-le)n
(v)o(el)h(\(yet)e(still)g(ef)n(\002cient\))-150 4671
y(inspection)i(of)g(the)f(v)n(alues)i(stored)f(inside)f(the)h
(structure.)31 b(P)o(attern)21 b(match-)-150 4755 y(ing,)29
b(lik)o(e)e(constructor)h(functions,)h(abstract)e(pointers)g(and)h
(heap)g(alloca-)-150 4838 y(tion,)19 b(and)h(gi)n(v)o(e)f(a)h
(declarati)n(v)o(e)f(feel)g(to)g(data)h(access.)k(W)-6
b(e)19 b(illustrate)g(this)f(be)-150 4921 y(de\002ning)i(the)f
Fj(sum)p 342 4921 23 4 v 27 w(of)g Fv(function)h(which)g(adds)g(up)f
(all)g(the)g(v)n(alues)h(stored)g(in)-150 5004 y(tree)f(whose)g
(\223slots\224)g(are)g(\002lled)g(with)f(inte)o(gers.)p
Black Black -150 5151 a Fj(sum_of)39 b(::)f(Tree)h(Int)f(->)g(Int)-150
5234 y(sum_of)h(Tip)f(=)g(0)-150 5317 y(sum_of)h(\(Node)f(x\))h(=)f(x)
-150 5400 y(sum_of)h(\(Fork)f(m)h(n\))f(=)g(sum_of)h(m)f(+)g(sum_of)h
(n)p Black Black 2049 83 a Fq(An)24 b(annoying)f(r)o(estriction.)39
b Fv(When)24 b(we)h(de\002ne)f(a)g(parameterized)i(alge-)2049
166 y(braic)16 b(datatype,)g(the)g(formation)g(rules)f(enforce)i(the)e
(follo)n(wing)h(restriction.)2049 249 y(The)j(range)g(of)g(e)n(v)o(ery)
g(constructor)h(function,)f(and)h(the)f(type)g(of)g(e)n(v)o(ery)g(con-)
2049 332 y(structor)25 b(constant)g(must)g(be)f(a)h(polymorphic)h
(instance)f(of)g(the)f(ne)n(w)h(type)2049 415 y(constructor)19
b(being)f(de\002ned.)24 b(Notice)18 b(ho)n(w)g(the)g(constructors)h
(for)e Fj(Tree)h Fv(all)2049 498 y(ha)o(v)o(e)h(range)h(\()p
Fj(Tree)38 b Fr(a)p Fv(\))19 b(with)g(a)f(polymorphic)j(type)e(v)n
(ariable)h Fr(a)p Fv(.)2049 664 y Fj(Fork)39 b(::)76
b(Tree)38 b(a)h(->)f(Tree)h(a)f(->)g(Tree)h(a)p 3154
677 229 3 v 2049 747 a(Node)g(::)76 b(a)38 b(->)g(Tree)h(a)p
2582 760 V 2049 830 a(Tip)f(::)77 b(Tree)38 b(a)p 2354
843 V 2049 996 a Fv(By)25 b(generalizing)i(algebraic)f(datatypes)g(so)g
(the)o(y)f(are)g(no)h(longer)g(subject)2049 1079 y(to)21
b(this)g(restriction)g(we)g(can)h(construct)g(proof-lik)o(e)g(objects,)
g(and)g(the)f(type)2049 1162 y(system)26 b(of)f(the)g(language)i(will)d
(enforce)i(that)f(only)h(well-formed)f(proofs)2049 1245
y(are)d(e)n(v)o(er)f(constructed.)32 b(W)-6 b(e)21 b(can)h(encode)h
(the)f(odd/e)n(v)o(en)h(abstraction)f(as)g(a)2049 1328
y(three)h(constructors)g(\()p Fj(Z)p Fv(,)p Fj(E)p Fv(,)f(and)h
Fj(O)p Fv(\))f(from)g(tw)o(o)h(dif)n(ferent)g(types)g(\()p
Fj(Even)f Fv(and)2049 1411 y Fj(Odd)p Fv(\))d(which)g(ha)o(v)o(e)g
(non-polymorphic)j(ranges.)2049 1577 y Fj(Z::)77 b(Even)38
b(0)p 2240 1590 V 2049 1660 a(E::)77 b(Odd)38 b(m)g(->)g(Even)h
(\(m+1\))p 2582 1681 382 3 v 2049 1826 a(O::)77 b(Even)38
b(m)g(->)h(Odd)f(\(m+1\))p 2621 1847 343 3 v 2049 2076
a Fv(The)26 b(only)h(complication)h(with)e(this)g(approach)i(is)e
Fr(what)g(to)g(mak)o(e)h(of)g(the)2049 2159 y(type)15
b(par)o(ameter)o(s)h(to)f Fj(Even)f Fr(and)i Fj(Odd)p
Fv(.)22 b(These)15 b(appear)g(to)g(be)g(inte)o(gers)g(rather)2049
2242 y(than)k(types.)2049 2324 y
SDict begin H.S end
 2049 2324 a 2049 2324
a
SDict begin 10 H.A end
 2049 2324 a 2049 2324 a
SDict begin [/View [/XYZ H.V]/Dest (section.5) cvn /DEST pdfmark end
 2049 2324 a 167 x Fs(5)99 b(New)25
b(Kinds)2049 2658 y Fv(Kinds)18 b(are)h(similar)e(to)h(types)h(in)f
(that,)g(while)f(types)i(classify)f(v)n(alues,)h(kinds)2049
2741 y(classify)j(types.)34 b(W)-6 b(e)22 b(indicate)g(this)g(by)h(the)
f Fr(classi\002es)h Fv(relation)f(\()p Fj(::)p Fv(\).)33
b(F)o(or)2049 2824 y(e)o(xample:)25 b Fj(5)38 b(::)77
b(Int)38 b(::)76 b(*0)39 b Fv(.)24 b(W)-6 b(e)19 b(say)h
Fj(5)f Fv(is)g(classi\002ed)g(by)h Fj(Int)p Fv(,)f(and)2049
2907 y Fj(Int)j Fv(is)g(classi\002ed)g(by)h Fj(*0)f Fv(\(star)o
(-zero\).)32 b(The)22 b(kind)h Fj(*0)f Fv(classi\002es)g(all)f(types)
2049 2990 y(that)f(classify)f(v)n(alues)i(\(things)f(we)f(actually)h
(can)h(compute\).)26 b(A)20 b Fj(kind)f Fv(dec-)2049
3073 y(laration)24 b(introduces)h(ne)n(w)g(types)f(and)h(their)f
(associated)h(kinds)g(\(just)f(as)g(a)2049 3156 y Fj(data)18
b Fv(declaration)h(introduces)g(ne)n(w)g(v)n(alues)f(\(the)g
(constructors\))h(and)g(their)2049 3239 y(associated)31
b(types\).)57 b(T)-6 b(ypes)30 b(introduced)i(by)e(a)g
Fj(kind)h Fv(declaration)g(ha)o(v)o(e)2049 3322 y(kinds)26
b(other)f(than)g Fj(*0)p Fv(.)41 b(F)o(or)24 b(e)o(xample,)j(the)e
Fj(Nat)g Fv(declaration)h(introduces)2049 3405 y(tw)o(o)c(ne)n(w)g
(type)h(constructors)f Fj(Z)g Fv(and)h Fj(S)f Fv(which)g(encode)h(the)f
(natural)g(num-)2049 3488 y(bers)d(at)g(the)g(type)g(le)n(v)o(el.)p
Black Black 2049 3674 a Fj(kind)39 b(Nat)f(=)g(Z)g(|)h(S)f(Nat)2049
3860 y Fv(The)22 b(type)g Fj(Z)g Fv(has)g(kind)g Fj(Nat)p
Fv(,)h(and)f Fj(S)g Fv(has)g(kind)g Fj(Nat)39 b(\230>)f(Nat)p
Fv(.)32 b(The)22 b(type)g Fj(S)2049 3943 y Fv(is)d(a)g(type)g
(constructor)m(,)h(so)f(it)g(has)g(a)g(higher)o(-order)h(kind.)k(W)-6
b(e)19 b(indicate)g(this)2049 4026 y(using)h(the)f(classi\002es)f
(relation)h(as)g(follo)n(ws:)p Black Black 2049 4173
a Fj(Z)38 b(::)h(Nat)2049 4256 y(S)f(::)h(Nat)f(\230>)g(Nat)2049
4339 y(Nat)g(::)h(*1)2049 4487 y Fv(The)18 b(classi\002cation)g
Fj(Nat::*1)h Fv(indicates)f(that)g Fj(Nat)g Fv(is)g(at)g(the)g(same)g
(\223le)n(v)o(el\224)2049 4570 y(as)d Fj(*0)g Fv(\227)g(the)o(y)g(are)g
(both)h(classi\002ed)f(by)h Fj(*1)p Fv(.)21 b(There)15
b(is)g(an)h(in\002nite)e(hierarchy)2049 4653 y(of)20
b(classi\002cations.)27 b Fj(*0)20 b Fv(is)g(classi\002ed)g(by)h
Fj(*1)p Fv(,)f Fj(*1)g Fv(is)g(classi\002ed)g(by)h Fj(*2)p
Fv(,)f(etc.)2049 4736 y(W)-6 b(e)25 b(call)g(this)h(hierarchy)g(the)g
Fr(str)o(ata)p Fv(.)43 b(In)26 b(f)o(act)f(this)h(in\002nite)f
(hierarchy)h(is)2049 4819 y(why)17 b(we)g(chose)h(the)f(name)h
Fw(W)p Fv(me)o(ga.)23 b(The)17 b(\002rst)f(fe)n(w)g(strata)h(are:)22
b(v)n(alues)c(and)2049 4902 y(e)o(xpressions)k(that)f(are)g
(classi\002ed)g(by)g(types,)h(types)f(that)g(are)g(classi\002ed)f(by)
2049 4985 y(kinds,)26 b(and)e(kinds)h(that)f(are)g(classi\002ed)g(by)g
(sorts,)h(etc.)38 b(W)-6 b(e)23 b(illustrate)h(the)2049
5068 y(relationship)c(between)f(the)g(v)n(alues,)h(types,)f(and)g
(kinds)h(in)f(Figure)3817 5068 y
SDict begin H.S end
 3817 5068 a Black Fv(4)p
Black 3855 5017 a
SDict begin H.R end
 3855 5017 a 3855 5068 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.4) cvn H.B /ANN pdfmark end
 3855 5068 a
Fv(.)2049 5234 y(From)j(this)f(discussion)j(we)d(see)i(that)e(the)i
(inte)o(ger)f(ar)o(guments)g(to)g(the)g(type)2049 5317
y(constructors)29 b Fj(Even)f Fv(and)g Fj(Odd)g Fv(are)g(really)g(the)g
(natural)g(numbers)h(imple-)2049 5400 y(mented)20 b(at)e(the)h(type)h
(le)n(v)o(el)f(by)g(the)g(kind)g(declaration)h(for)f
Fj(Nat)p Fv(.)p Black Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.5) cvn /DEST pdfmark end
 -158
-316 a Black Black Black -150 3 2001 4 v Black Black
-73 1363 a
 currentpoint currentpoint translate 0.35 0.35 scale neg exch neg exch
translate
 -73 1363 a 19 w @beginspecial 53 @llx 62 @lly
684 @urx 511 @ury 6310 @rwi @setspecial
%%BeginDocument: kinds.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - figures.ppt)
%%Version: 1 3
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 16:15:34 11/15/04
%%DocumentData: Clean7Bit
%%BoundingBox: 53 62 684 511
%%HiResBoundingBox: 53.408798 62.499649 684.087128 511.360779
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1147 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:845dcfe9-823c-4997-a75f-561414518393' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:845dcfe9-823c-4997-a75f-561414518393' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2004-11-15T16:15:05-08:00' xap:CreatorTool='Pscript.dll Version 5.0' xap:ModifyDate='2004-11-15T16:15:05-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:845dcfe9-823c-4997-a75f-561414518393' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:46e05924-b4bf-4a36-88f1-101a0a274ec8'/>
<rdf:Description rdf:about='uuid:845dcfe9-823c-4997-a75f-561414518393' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - figures.ppt</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
53 62 631 449 rectclip
[ 0 -1 1 0 -9.09085 564.76958 ] concat
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold Initial
ct_T42Dict begin
-0.309 -0.203 1.148 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /HLAJBP+LucidaSans,Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f326c587c90000000cc000000566376
74200342dfcc00000124000005366670676ddfdf4b3d0000065c00000403
676c79664561734300001c20000003e468656164bde4e2d900000a600000
0036686865610e7c063b00000a9800000024686d747890c1709400000abc
000003cc6c6f6361cda0ce4100000e88000001e86d617870093108c20000
1070000000206e616d6536986fd9000010900000037970726570c985745b
0000140c00000814676469720000000000000000000000000001042c0258
0005000804ce04290000031604ce042900000316006403200802020b0703
040504020204000000030000000000000000000000004226482000200020
f002062b01a40031076c01a42000000100000000b0c8062b001905c80025
05c80025044a00190000ffdb0000ffe70000ffdbfe75ffe8062b000cfed8
000002deffee05db001202e4ffe705d500190000ffe702f0001906440000
0503000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff02b3028200000000000000000000fe5002060206025006500000021f
021f026904d2ffffffffffff012b0000012b000000000000000000000000
00000000000000000000000000b900b9006f0056ff9100ca006f015a0096
0056009200b900b9001900de0128012800ccffa9005700b900b900cb0207
00de0063007500b9008b0134043e0094005d00c600cd00d101270003003c
008100ee013b00cb010801470017ffa400cbff530031005300b300b80106
01280128012c01a80005006b00b9ffe6003d00b900e900f702e400190031
00c300d8014100190041005c0094021f027503db0612ffa90006005c005d
006000ac0100013a01410175017801c2046f00b300da012e019200040039
00b900ea010c01190125020602b00438ff870003001e001f0025002a002c
002f004a006f009a00ad00b300cc012301340159019701bc0219ff58ffe8
00000025007b00be010d01410159015f01a0ff43ff47ffbcffbcffcaffd6
0018003e0040004a006d009000930094009400b900c100d700eb00f60103
01090109010a01100128014101bc0206021f0269030903b603cf03f4041e
05c8fed100100018001900300040004a0060006c00a500b000b700be00de
00f600fd015201dc025802bf02e404f805b405dd06cb0001002f00400056
005e0065006f007a007b009700a700ad00b400c500d200de00de00e100f5
00fc011b01280128012f01470212025002840347035f038b03ee04cc05bd
0753fdebfe9dff1aff97ffb100010009000a000f001400250045004a0056
005d005f0061006300700078008c009b00b000ba00f700f7010e01550164
018a019501bc01e7021102130250037203e004600534054505590633fdf9
ff00ff3eff5eff60ffe700150019001d00220024003f0049004e00500054
00560059006b0079007b007b008b008b009800a000a000a100a200a400ac
00b100b900b900d200e100e600e600e800f700f7010001000104010f011c
012c01320134013a0142014d015c0163016b01730177017e018b01b001b7
01d201d201d601e101ed01f101fb0207021f022d0239023e02560282028e
029302a002b502d502da036f037803a003a3043e0461048a04b4052a0543
05b10613065d067e06cb0800fc90fd88fe0cfe12fe2efe50fe88feb2fee9
ff28ff88ffe6ffe700000001000300060014002c003e00420048004d0056
006600710078007d0089008e008e008f0094009400940095009a009b00a0
00a100ad00b800c100c900cc00d900de00de00df00f700f700f700fe0100
010001030109010c010f0117011b011c01280128013f0141014101410148
014e014f01530155015901700172017b017c018b0193019501af01b001b7
01b901bc01bc01bc01d101d201d501d601e101e701eb01ee01ee01f40207
02150250026b027b028c02a302bd02c402e402e40310031c032003250328
0353036c0370038a03a503b103c603c803dd03ed03f404250431043d0442
04460458047b049a04a004a605000505051c05340566056c057e058e0591
05c805d505ed05fa06120615062b0646065d06d906f006f00714074b0753
076007d3091c012d0138012c000000000000000000000000000000020001
030801f400c60194025804e6000f0027018b012900ab0056fee400f20460
0326009300aa007a007c00c5068e006300db015506960135001f04cb00b5
0195016f007389c94034343331302f2e2d2c2b2a29282726252423222120
1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004
262348482d2c45234660b0206120b04660b004262348482d2c4523462361
b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c
0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920
b0ed51582320b04d44235920b0042651582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453a
b10200080d2d2c45b04a234445b04923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2c2d2c4b52582145441b2345
8c20b00325455258441b212159592d2c01182f2d2c20b0032545b0492344
45b04a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb1
14008a5279b34940204945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4569b00943608a103a2d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c76462346608a8a46
2320468a608a61b8ff80622320102320b0005058b00161b8ffc08b1bb040
8c5968013a182d2cb0332bb02a2a2dca00010000000100c4c213aec75f0f
3cf5001b080000000000a3a697a600000000b451ffa9fd88fe5c0935076c
0000000900010000000001000001000007bcfe500000094dfd88fdaa0935
0001000000000000000000000000000000f30600010000000000028e0000
028e000001fa0069039d0063051c0012051c00b50644001905f5004401fa
006302d8006302d8005d03bb0056051c006f01fa005d0269005601fa005d
045d000c051c0050051c0134051c007e051c00b4051c004a051c00e9051c
0051051c00de051c0079051c006d01fa006901fa0069051c006f051c006f
051c006f03fa003e06c1003c05e40017050a00b905b3005d065800b904ce
00b9049800b905f7005d063e00b902a700b90359ffba05ae00b904a700b9
074300b9062600b90696005d04e800b90697005d058500b9049200630585
001605e400ad05970019073b001505560031057e00280528006a02d800ad
045d000c02d8005d051c006f04000056051c016304b40052054d00b90442
0056054d005d04b00056035100410547005d054100b9029a00b902aaff4d
051000b9029a00b907c200b9054100b9051c0056054d00b9054d005d03a3
00b90486009c033e004c054100ad04bf002506e7004a04ba004404aa001f
04ba007b02d8004401fa00a002d80078051c006f05e4001705e4001705b3
005d04ce00b9062600b90696005d05e400ad04b4005204b4005204b40052
04b4005204b4005204b400520442005604b0005604b0005604b0005604b0
0056029a0091029a0022029affed029a0019054100b9051c0056051c0056
051c0056051c0056051c0056054100ad054100ad054100ad054100ad051c
00b302060056051c0093051c00e1051c00bb051c01b0051c00ad054a00b9
051c00a706b9005306d50006051c01d2051c0159051c006f07a900150696
005b06cc007b051c006f051c006f051c006f051c002a054d00b3051c00aa
059b00420674007106a7003f051c00e303d5004003d5003406bf00310710
0052051c005803fa003801fa0069051c006f05ed007b051c00db051c006f
05e40019048e0056048e0044080000e7051c000005e4001705e400170696
005d0879005d07ae005d0400005608000050039d005d039d005d01fa005d
01fa005d051c006f051c006f04aa001f057e00280085fd88051dffe702c5
005602c50044056c0041056c0041051c00b3051c020601fa005d039d005d
094d001905e4001704ce00b905e4001704ce00b904ce00b902a7008502a7
fff402a7001f02a700600696005d0696005d0696005d05e400ad05e400ad
05e400ad029a00b9051c012e051c012e051c0159051c012e051c0212051c
01ed051c01f7051c015d051c01f4051c012e049200630486009c01fa00a0
0658ffe7051e005d057e002804aa001f04e800b9054d00b9051c006f02ea
009402ea002d02ea004c0600ffdb060000190600001902690056051c0057
0000004400440044004400440044004400440044004400440044004400b3
00b300b300b300b300b300ff00ff00ff00ff00ff015c015c015c015c015c
015c015c015c015c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c019c019c019c019c019c019c019c
019c019c019c019c019c019c019c019c01f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f201f201f201f201f201f201f201f201f201f201f201f2
01f201f201f201f20001000000f3004f0007004900040002001000130038
000007e80814000200010000000c00960001000000000000006700000001
0000000000030016006700010000000000040016007d0001000000000006
001600930001000000000007003a00a9000300010409000000ce00e30003
000104090001002c01b10003000104090002000e01dd0003000104090003
002c01eb0003000104090004002c02170003000104090006002c02430003
0001040900070074026fa9203139393120426967656c6f77202620486f6c
6d657320496e632e20416c6c205269676874732052657365727665642e20
a920313939302d31393931205479706520536f6c7574696f6e732c20496e
632e20416c6c205269676874732052657365727665642e484c414a42502b
4c756369646153616e732c426f6c64484c414a42502b4c75636964615361
6e732c426f6c64484c414a42502b4c756369646153616e732c426f6c644c
7563696461a8206973206120726567697374657265642074726164656d61
726b206f6620426967656c6f77202620486f6c6d657320496e632e00a900
20003100390039003100200042006900670065006c006f00770020002600
200048006f006c006d0065007300200049006e0063002e00200041006c00
6c0020005200690067006800740073002000520065007300650072007600
650064002e002000a900200031003900390030002d003100390039003100
20005400790070006500200053006f006c007500740069006f006e007300
2c00200049006e0063002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064002e0048004c004100
4a00420050002b004c0075006300690064006100530061006e0073002c00
42006f006c00640052006500670075006c006100720048004c0041004a00
420050002b004c0075006300690064006100530061006e0073002c004200
6f006c00640048004c0041004a00420050002b004c007500630069006400
6100530061006e0073002c0042006f006c00640048004c0041004a004200
50002b004c0075006300690064006100530061006e0073002c0042006f00
6c0064004c0075006300690064006100ae00200069007300200061002000
720065006700690073007400650072006500640020007400720061006400
65006d00610072006b0020006f006600200042006900670065006c006f00
770020002600200048006f006c006d0065007300200049006e0063002ec0
13c040361f141f153f143f154f144f1580148015080f1e0f1f3f1e3f1fbf
1ebf1f064018401990189019c018c019061f1a1f1b022006200702dfb801
40b2041fdfb90140ffcfb20416feb80124b2031ffeb80124b3080316d0b8
0138b3510516d0b80138400d51051600464600000012110840bb026e0000
00090214b281601fb80212b281a71f410f020c007e014d001f0204020b01
85002b00160203020b01440024001601ffb295601fb901fd020bb2fa1c16
b901f8020bb2820f16b901f7020bb2820f16b901f3020bb2530a16b901f2
020bb2530a16b901ee020bb24a0916b901ec020bb24a0916b901eb020bb2
4a0916b901ea020bb24a0916b801a3b2811c1fb801a2b2811f1f411a019d
00810a9e010b0016019b0072029a001f0198020b03fa006f00160197020b
01ea003600160196020b014d002500160193020bb2fa1c16b9018f020bb2
b91516410b018e009504b900a70016018c0069029a001f0181020bb24a09
16b8015eb281121fb8015cb2812e1fb8015bb281601fb90158020bb2fa1c
16b90157020bb26f0d16b90154020bb24a0916410a0133020b029a001f01
32020b029a001f012f020bb2f11b16b90128020bb25d0b16b80114b2817a
1fb9010f020bb2660c16b9010e020bb7660c16f97ede1ff7b9020b01fdb2
3816f5b9020b0185b22b16f4b9020b0185400b2b16f295671fdd81381fda
b9020b01c5b23216d9b8020bb46f0d16cf72bd029a001f00ce020b099d01
0bb216cb69b8027cb26f16bcbe020b100201bc001600bb020b032eb25916
bab9020b01b3401c3016b581121fb366601fad7ede1fab953a1fa069ca24
169c7ede1f9ab8020b4009780e169695601f94694111029a001f008c020b
029a001f008b020b029a001f0079020b3018053400160078020b400f8b10
167469ca24167169a21d166d95b80371b37a166b7fb8029ab21f6a69bc02
9a001f0065020b029ab21f6395b8037140097a165d69dc27165569ba029a
001f021bb295081fb80215b2950c1fb8020db295101fb80208b2951b1fb8
0201b2953a1fb80200b295401fb801feb295601fbd01fb00950371007a00
1601edb369ca2416b8019fb2950c1fb8019ab295131f410b01860069013e
00380016018400690132003600160159b295601f410d012d00950371007a
00160127006901a6004a001601100069010b400b1ff695291ff0667a1fcc
69b804feb3de16b995b80534b21fb869b8029ab21f9169b8029ab21f847f
b8029ab21f7766b80534b21f767fb90697010bb616551409140990b8023c
40510790de0790c80790bd0790af0790a207908d07908007906c07905f07
905c07905a072408220820081e081c081a08180816081408120810080e08
0c080a08080806080408020800081802010802004a0006bf026e0067026e
00020018026e00f7026eb30287690100730173744bb0c063004b6220b0f6
5323b8010a515ab005234201b0124b004b544218b9000101ff858d16763f
183f124b5358b90014ffe0402a0000010014160000010016061000000100
060400000100041000000100100200000100020000000100003e11394644
3e113946443e113946443e113946443e11394660443e113946443e113946
6044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b
2b2b2b2b2b014b5079bc001f01990007001f0121b3071f7d072b2b2b4b53
79bc00900199000700900121b307907d072b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb06753205c58b900ac026e4544b9026e026e45
445958b903bf00ac455258b900ac03bf4459594bb06f53205c58b9027002
6e4544b9026f026e45445958b9040b0270455258b90270040b4459594bb0
6f53205c58b9006402704544b9007e027045445958b904070064455258b9
006404074459594bb06f53205c58b90072026f4544b90081026f45445958
b904310072455258b9007204314459594bb8029a53205c58b9020b006445
44b1646445445958b91807020b455258b9020b18074459594bb01c53205c
58b169694544b1956945445958b19c69455258b1699c4459594bb0475320
5c58b169694544b1666945445958b901950069455258b900690195445959
4bb04a53205c58b169694544b17f6945445958b901a60069455258b90069
01a6445959002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542b360e0758345652345
6023456560234560b08b766818b080622020b175e04565234520b0032660
62636820b003266165b0e0236544b075234420b160834565234520b00326
6062636820b003266165b083236544b0602344b10083455458b183406544
b26040604523614459b370855ea5456523456023456560234560b0897668
18b080622020b15e854565234520b003266062636820b003266165b08523
6544b05e234420b170a54565234520b003266062636820b003266165b0a5
236544b0702344b100a5455458b1a5406544b27040704523614459014569
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b011234201012b2b
2b2b2b2b00737373737300b0024568b8028d4568b0408b60b0202344b006
4568b8028e456860b0222344b0004568b802904568b0408b60b8028f2344
00>
[997 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N14/HLAJBP+LucidaSans,Bold 1 TZ
%ADOBeginSubsetFont: HLAJCL+LucidaSans Initial
ct_T42Dict begin
-0.301 -0.211 1.004 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /HLAJCL+LucidaSans
Type42DictBegin
[<00010000000c000c000c000c4f532f326a9c7b6e000000cc000000566376
7420ce4fa9ea00000124000004c06670676ddfdf4b3d000005e400000403
676c79660b7831d6000019c80000141468656164bcc9dc4f000009e80000
0036686865610d62050d00000a2000000024686d74785c7c7cf800000a44
000003cc6c6f63616b9071b800000e10000001e86d617870031006e10000
0ff8000000206e616d657601733e000010180000037b70726570b6f52dc9
000013940000063467646972000000000000000000000000000103eb0190
0005000804ce04290000031604ce042900000316006403200802020b0602
030504020204000000030000000000000000000000004226482000400020
f002062b01a40031076c01b02000000100000000b0c8062b001905c80025
05c80025043e00190000ffdb0000ffe70000ffdbfe75ffe8062b0000fed8
000002deffee05db001202e4ffe705d500190000ffe702f0001906440000
0503000000000000ffffffffffffffffffffffffffffffffffffffffffff
ffff02b3028200000000000000000000fe5002060206025006500000021f
021f026904d2ffffffffffff00c8000000c8000000000000000000000000
0000000000000000000000000094006900940094009d00d200c5ff980094
0094015a00680000007b00ca001900a60000006f00bf00d100c5007b0028
00500207043e007b00c50005000c006e00110068009d00c800df00190094
003a00a500aa00c500de00ee011300ad00b401930275009600e1009d00ad
0149004a006400c0012c007b009400b500c500c600fc021f0347ff85ffe7
0019002b006a04d2ff37007bfde1ff3a004f006700aa00c600f7012801af
ff99001f008700c600c602b300030041005e006f009000f7012801720185
018b021f02e40025003d004c0056009a00bd00d501d503d5ff1cff42ff91
ffa3004a00510056005e00ac00be00d201280128014d018b021f03780567
05c8fe75ffceffe80015005000520062008b00a600c501a001bc0385040c
0612ff63ff73ffa9ffca0002000c00630080009400a600ac00be00c500d0
00d200dd00de00e200f600f7016e0200020c02500275029a002800310033
0043004d00530074007b00b900bd0172017501ed01ed01ff021f02af030a
04af06cc06f0fdedfea6fed8fef7ff0dff46ffa0ffb6fff70006000c0040
004e007b007e00820097009a009d009d00aa00b300c500c500f600f7011c
01270128014101470159016601c801f40205020c0237026902da02f1036c
05300534ffc2fff2000a001d00400044004a005000630066007500770094
009d00ad00ad00b300de00e000ed00f300f70102010f0128014e01500151
0164018b01bc01da0206023802570264028d029302b302e1034803660366
03c004d105b505bc06060753fe38fe8eff66ffe100080021002500250029
00310032004a006300690094009c00a700b200bf00d200e400ee010c010f
012c012e01410146014d01570159015a016f0172018a018b01ab01af01bc
01c801d501e601ff021f0236025002500258027f0282028702e4032e033b
0345037803e803f3040c04260433043d0464046704ec050e050f05d705fa
0800fcbafd97fd97fdcffe0dfe4bfe5aff07ff4eff53ffe400000017005b
00620063007b007c007c008900c600c600e100f300f300f400f900f9010f
011001110117012801280136013f01630178017d017e019301a301a601b0
01b001c201c301c401ca01d501d501e101f301f4020a02250231023e0269
026c028202b502cc02d002d402e402ff030f031003160323032303460347
03490353035f03770378039103a003b603de03f504000426043b043d0456
046b047b0488048804a804ad04e504f305000529056f058b05b005b105ed
061006120637066d068206d306fe0715073b0767080000c800d500c700cc
00000000000000000000000000a6009a00b500a100ad00ac00b900b400ad
007b00940074011b040401d702bf00f701e2023102bd0002000200940094
00020001ff9801d50488007800dd001a007c00c5068e006300b800a00095
00c504a700c100634034343331302f2e2d2c2b2a29282726252423222120
1f1e1d1c1b1a191817161514131211100f0e0d0c0b0a0908070605040302
01002c4523466020b02660b004262348482d2c452346236120b02661b004
262348482d2c45234660b0206120b04660b004262348482d2c4523462361
b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c
0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920
b0ed51582320b04d44235920b0042651582320b00d44235921212d2c2020
4518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d
2c00b10a0b4323430b2d2c00b0462370b101463e01b0462370b10246453a
b10200080d2d2c45b04a234445b04923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360
442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810
0062602b0c642364615c58b00361592d2c45b0112bb0472344b0477ae418
2d2cb801a65458b00943b801005458b9004aff80b14980444459592d2c8a
03458a8a87b0112bb0472344b0477ae4182d2c2d2c4b52582145441b2345
8c20b00325455258441b212159592d2c01182f2d2c20b0032545b0492344
45b04a23444565234520b00325606a20b009234223688a6a606120b01a8a
b000527921b21a4a40b9ffe0004a45208a54582321b03f1b235961441cb1
14008a5279b34940204945208a54582321b03f1b235961442d2cb1101143
23430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d43234365
0b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b21
21592d2c0120b003252349b04060b0206320b000525823b002253823b002
256538008a63381b212121212159012d2c4569b00943608a103a2d2c01b0
05251023208af500b0016023edec2d2c01b005251023208af500b0016123
edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001
610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a
2a2d2c352d2c76b04b23701020b04b4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c76462346608a8a46
2320468a608a61b8ff80622320102320b0005058b00161b8ffc08b1bb040
8c5968013a182d2cb0332bb02a2a2d2300010000000100c495a919d95f0f
3cf5001b080000000000a3a6934200000000b451fd8ffd97fe50080c076c
0000000900010000000010160001000007bcfe5000000819fd97fdb0080c
0001000000000000000000000000000000f3060001000000000002880000
02880000028800e102fd006f050f000f050f00d80559000c0594004a01d5
006f029a007b029a004a03db006e050f0069028800c8029a006f028800c8
03f4000c050f0082050f012e050f00aa050f00d0050f0069050f00f9050f
0089050f00de050f00b1050f009c028800e1028800e1050f0069050f0069
050f00690360002506de005d05850011049a00bf0589006805fe00bf0456
00bf044a00bf05c8006805e100bf024e00be027dff48053900bf044400bf
06e400bf05e900bf06370068046c00bf06370068050f00bf044f0064050f
0012058b00b3053b002406d800020502001004fc001104d6005f029a00c5
03f4000c029a004a050f00690400005604ea0166046b0067050900c50419
006f0509006f0475006f02f1005004fd006f04f700c5025000c5026fff66
04ad00c5025000c5077800c504f700c504ea006f050900c50509006f0346
00c50414009d02fe004504f700b904240012062a000c04e80058042e0010
0496007b029a0019021f00c5029a0088050f006905850011058500110589
0068045600bf05e900bf06370068058b00b3046b0067046b0067046b0067
046b0067046b0067046b00670419006f0475006f0475006f0475006f0475
006f0250007b025000190250ffdb0250000c04f700c504ea006f04ea006f
04ea006f04ea006f04ea006f04f700b904f700b904f700b904f700b9050f
00e40237006f050f00cd050f00f7050f00dd050f01f4050f00d804c900c5
050f00cc06d800630675000004ea01c804ea0159050f0069074100120637
006806bf0078050f0069050f0069050f0069050f0050050300c5050f00cb
05220032061200750680003f050f010c036000480360003e0644004006cf
006704ea006f03600025028800e1050f006905b00074050f00ed050f0069
054d000b0431006f0431004a080000f70288000005850011058500110637
006808000068076d006f040000690800006302fd006f02fd006f028800c8
028800c8050f0069050f0069042e001004fc0011004afd970510fff002a7
006f02a7004a05280050052e0050050f00e4050f020c028800c802fd006f
0819000c05850011045600bf05850011045600bf045600bf024e007a024e
ffda024e000b024e0017063700680637006806370068058b00b3058b00b3
058b00b3025000c504ea012804ea012804ea015904ea012804ea021204ea
01d504ea01fe04ea017004ea01f404ea0128044f00640414009d021f00c5
05feffe104d2006d04fc0011042e0010046c00bf050900c5050f00690360
00d2036000880360009a066900250669006306fd007b029a006f05100062
000000400040004000400040004000400040004000400040004000400040
004000400040004000400040006a00da00da00da01440144014401440144
014401440144014401440144014401440144014401440144014401440144
0167016701670167016701ba01ba01ba01ba01ba02540254025402540254
02540254029b02d102d1030a030a030a030a03b203b2041f04b0052e052e
052e052e0565056505cd05f405f4065f06ca075d075d07b1085508b5091e
0989098909890a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a
0a0a0a0a0a0a0a0a0001000000f3004d0007004a00040002001000130038
000001c70634000200010000000c00960001000000000000007a00000001
0000000000030011007a00010000000000040011008b0001000000000006
0011009c0001000000000007003a00ad000300010409000000f400e70003
000104090001002201db0003000104090002000e01fd0003000104090003
0022020b00030001040900040022022d00030001040900060022024f0003
00010409000700740271a9203139393120426967656c6f77202620486f6c
6d657320496e632e205061742e204465732e203238392c3432302e20416c
6c205269676874732052657365727665642e20a920313939302d31393931
205479706520536f6c7574696f6e732c20496e632e20416c6c2052696768
74732052657365727665642e484c414a434c2b4c756369646153616e7348
4c414a434c2b4c756369646153616e73484c414a434c2b4c756369646153
616e734c7563696461a82069732061207265676973746572656420747261
64656d61726b206f6620426967656c6f77202620486f6c6d657320496e63
2e00a90020003100390039003100200042006900670065006c006f007700
20002600200048006f006c006d0065007300200049006e0063002e002000
5000610074002e0020004400650073002e0020003200380039002c003400
320030002e00200041006c006c0020005200690067006800740073002000
520065007300650072007600650064002e002000a9002000310039003900
30002d00310039003900310020005400790070006500200053006f006c00
7500740069006f006e0073002c00200049006e0063002e00200041006c00
6c0020005200690067006800740073002000520065007300650072007600
650064002e0048004c0041004a0043004c002b004c007500630069006400
6100530061006e00730052006500670075006c006100720048004c004100
4a0043004c002b004c0075006300690064006100530061006e0073004800
4c0041004a0043004c002b004c0075006300690064006100530061006e00
730048004c0041004a0043004c002b004c00750063006900640061005300
61006e0073004c0075006300690064006100ae0020006900730020006100
200072006500670069007300740065007200650064002000740072006100
640065006d00610072006b0020006f006600200042006900670065006c00
6f00770020002600200048006f006c006d0065007300200049006e006300
2e0040363f143f154f144f1580148015060f1e0f1f3f1e3f1fbf1ebf1f06
4018401990189019c018c019061f1a1f1b02d068dfc502c071cfa1cfb801
1ab603090f20010805b80236b25a181fb80235b25a181fb8025cb25a181f
b8025bb25b181fb8025ab25b181fb8023ab25b181fb80259b25b181f4109
023f023c0042001f023e023d002a001f023db25b571fb8023cb269481fb8
023bb269571fbc0239023800ac001f0238b27ee51fb80237400d5a481f00
464600000012110840bb022b0000000901d4b2792b1fbc01ce0079040100
1f01cab257561fb801c8b257521fb80189b2792b1fb80187b279891f4109
018500ce0401001f018001cd002a001f0157b2793b1fb80155b279671fb8
014cb257471f410d012c005b0401001f012b005b0401001f0125005702ab
001f0106400957411ff8795a1ff4ceb80401b21ff25bbb0401001f00f001
cdb3501fee57b80401b21fcc7eb80401b21fc05bb80101b51fb479561fad
b901cd0401b61fa679561fa47eb80401b21f935bb80401b61f927ebb1f91
57b80401b61f9057521f8e5bb8019ab21f8a7eb802abb21f8959b80401b2
1f8757b80401b61f847ecd1f837eb802abb21f8079b80801b21f7f5bb804
01b21f7d7eb8019ab21f7b57b80401b61f6b57521f6a5bb80401b61f6257
521f5e57b80401b21f5857b80401b21f5557b8040140531f551409140990
e10790dc0790b707908f07908607908207906e07906507906307905f0724
08220820081e081c081a08180816081408120810080e080c080a08080806
080408020800081802010802004a0077b9022b000101734bb0c063004b62
20b0f65323b8010a515ab005234201b0124b004b5442b9000101ff858d16
763f183f124b5358b90014ffe0402a000001001416000001001606100000
0100060400000100041000000100100200000100020000000100003e1139
46443e113946443e113946443e113946443e11394660443e113946443e11
39466044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b014b5079bc001f01cb0007001f018ab3071f81072b2b2b4b53
79bc009001cb00070090018ab3079081072b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb09353205c58b9022d022b4544b9022c022b45
445958b90391022d455258b9022d03914459594bb09e53205c58b9005a02
2c4544b90079022c45445958b90415005a455258b9005a04154459594bb0
ab53205c58b9005b022d4544b90069022d45445958b90421005b455258b9
005b04214459594bb8040153205c58b1ce5a4544b15a5a45445958b91a40
00ce455258b900ce1a404459594bb8080153205c58b901cd005b4544b15b
5b45445958b9314001cd455258b901cd31404459594bb04653205c58b157
574544b17e5745445958b9013f0057455258b90057013f4459594bb0ab53
205c58b157574544b1595745445958b903120057455258b9005703124459
594bb0ab53205c58b157574544b1775745445958b903120057455258b900
5703124459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b6542b368c576a945
6523456023456560234560b08b766818b080622020b176c54565234520b0
03266062636820b003266165b0c5236544b076234420b168a94565234520
b003266062636820b003266165b0a9236544b0682344b100a9455458b1a9
406544b26840684523614459b90071011ab167c645652345602345656023
4560b089766818b080622020b90067011a4565234520b003266062636820
b003266165b8011a236544b067234420b171c64565234520b00326606263
6820b003266165b0c6236544b0712344b100c6455458b1c6406544b27140
714523614459000145695342014b5058b108004259435c58b108004259b3
020b0a124358601b2159421610703eb0124358b93b21187e1bba040001a8
000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b
59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b011234201012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4358b108004259
5e735e0174737373737300b0024568b802554568b0408b60b0202344b006
4568b80256456860b0222344b0004568b802584568b0408b60b802572344
00>
[5141 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N15/HLAJCL+LucidaSans 1 TZ
53.408798 62.499649 448.86113 630.678329 re
W
n
q
n
576.039978 36.040001 -540.0 719.999977 re
36.040001 36.040001 m
eoclip
n
n
36.040001 36.040001 539.999977 719.999977 re
1.0 1.0 1.0 setrgbcolor
f
Q
483.279694 163.2397 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
1 510 24 <000100e9ffdb047305c800180066b900100110b30b0b160fb8012d40090c
0403911601f04000b80108400b0b160d0ec206ac134a1a0fba0148001001
f7b50c0bc2004919ba012c016e00182b4e10f44df43cfde44e10f64dede4
003f4b5258b0001a1bb0501a59fc1aed10ed3fed12392fed313037351633
323635342623220711211521032000151400212226e9bd7f8b88e1e83636
0352fd860f015a014dfedafede467106d749a7718faf0902e7eafec1fee4
d5c6fef30d00>HLAJBP+LucidaSans,Bold AddT42Char 
1 0 0 <0002010000000500050000030007005fb10504b8011fb2000607bb011f00
0200010253400b0303000a0947474a020605b8011fb2030302b80101b200
0704b8011fb301004908ba0194016c00182b4e10f43c4dfd3c10fd3c10fd
3c4e10456544e6003f3c4d10fd3cfd3c10fd3c3130211121112521112101
000400fc400380fc800500fb00400480>HLAJBP+LucidaSans,Bold AddT42Char 
HLAJBP+LucidaSans,Bold /CharStrings get begin
/five 24 def
end
HLAJBP+LucidaSans,Bold /Encoding get
dup 53 /five put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(5) show
399.039703 151.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 648 44 <000100be0000019005c80003002e4011010200080547474a0202035a0100
490405b80185b32168c5182b2b4ef43c4dfd3c4e10456544e6003f3f3130
33113311bed205c8fa38>HLAJCL+LucidaSans AddT42Char 
1 3048 81 <000100c50000043d0456001400934030cb12cb13021f4006101608031314
107e06010606070a0b0b1414000a1647474a0b5b090a02145b0ad4004915
16d42171b9011a00182b2b4ef44dedfd3c103ced4e456544e6003f3c103c
103c3f3f4d10ed11393931304379400e070f0e260f070c65010d08106501
2b012b2b8100495479401211120405120410810511051381001213040301
103c103c2b002b8181005d33113315363633321615112311342626232206
0711c5c54bc76b8aacc528482949a963043ecc6d77af9bfcf402cc714827
5a93fd41>HLAJCL+LucidaSans AddT42Char 
1 4266 87 <00010045ffe702ae05160015007b402313080b0acd08100e077b0d080613
57021587007a020b9017011747474a0d7220150115b801d740120b105b0a
b0050105bf9f07010749168cc7182b4e10f45d4dfc5d3cfd3cf65de44e45
6544e65d003f4df4ed10ed3f3cfd3c4b5158b0801a5910fc323130437940
0c0312120310650011041365002b012b8121062322263511233533353715
21152111141633323702a95b4392ac8888c5011cfee45860273819a99c02
7e94c513d894fda672630d00>HLAJCL+LucidaSans AddT42Char 
1 0 0 <00020100000005000500000300070056b10504b80120b2000607bb012000
0200010219b50303000a0605b80120b60303024a090704b80120b4010049
0809bc020c002100f9011800182b2b4ef43c4dfd3c4e10f63c4d10fd3c00
3f3c10fd3cfd3c10fd3c3130211121112521112101000400fc400380fc80
0500fb0040048000>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/I 44 def
/n 81 def
/t 87 def
end
HLAJCL+LucidaSans /Encoding get
dup 73 /I put
dup 110 /n put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(Int)
[6.928665 14.920853 8.99263 ] pdfys
303.279694 151.2397 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
1 136 13 <0005005602e0036405c80006000b00100017001e006840421b011413021e
93181a931911a803a8140f1e0c1a0a0700081c0d8a098a800acd4019f780
1c0c6e170a6e14110f1e0c070003081720ae04cd17ae021f20fe21586718
2b2b8df4fee4121739ec10ec002f1aed1afe1aecec1217397de6e6313001
10e410e4015d012517053635340717070336070327371627253705061514
033303262322070221010142fedd0207d6af7c384b7daed61c22fedd4301
002107d8371b1a1a1a049d8ecd240d072b51c97f010a0b0bfef67fc93345
24cd8e242b070181fee00d0d>HLAJBP+LucidaSans,Bold AddT42Char 
1 358 19 <00020050ffdb04cb05ed000f001b00304016169108051091000d13ac0c4a
1d19ac3f040104491ce8b9014400182b4e10f45d4ded4e10f64ded003fed
3fed31300522240235341224333204121514020427321211100223220211
1012028eb2fefe8a890104b1af01048a84fefeb7857e8182857f8225c601
72d1d00173c6c4fe8dd2cbfe91cfb90126013e011e011efedbfec2fee2fe
e100>HLAJBP+LucidaSans,Bold AddT42Char 
HLAJBP+LucidaSans,Bold /CharStrings get begin
/asterisk 13 def
/zero 19 def
end
HLAJBP+LucidaSans,Bold /Encoding get
dup 42 /asterisk put
dup 48 /zero put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(*0)
[11.152882 15.304982 ] pdfys
159.039703 289.239685 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(*) show
159.039703 300.399689 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 128 20 <0001012e000002de05d500050035b10102b801cab703aa0404000c0100b8
01cdb70505044a07024906ba018b01bb00182b4e10e410f63c4d10fd3c00
3f3ff4fd3c31302111233525110218ea01b005347c25fa2b>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/one 20 def
end
HLAJCL+LucidaSans /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(1) show
n
408.039978 174.400009 m
451.119995 171.759995 l
451.23999 171.759995 451.47998 171.519989 451.47998 171.279999 c
451.359985 171.160004 451.23999 170.919998 451.0 170.919998 c
408.039978 173.679993 l
407.800018 173.679993 407.679993 173.800003 407.679993 174.039993 c
407.679993 174.279999 407.800018 174.400009 408.039978 174.400009 c
h
450.279999 174.400009 m
456.039978 171.039993 l
449.919983 168.400009 l
0.0039 0.0039 0.0039 setrgbcolor
f
n
312.039978 177.400009 m
367.119995 174.639999 l
367.23999 174.639999 367.47998 174.519989 367.359985 174.279999 c
367.359985 174.039993 367.23999 173.919998 367.0 173.919998 c
312.039978 176.679993 l
311.800018 176.679993 311.679993 176.800003 311.679993 177.039993 c
311.679993 177.279999 311.800018 177.400009 312.039978 177.400009 c
h
366.160004 177.279999 m
372.039978 174.039993 l
365.919983 171.279999 l
f
n
168.279999 306.279999 m
273.160004 181.119995 l
273.279999 181.0 273.279999 180.759995 273.040009 180.639999 c
272.919983 180.400009 272.679993 180.519989 272.559998 180.639999 c
167.800003 305.800018 l
167.559998 305.919983 167.679993 306.160004 167.800003 306.279999 c
167.919998 306.399994 168.160004 306.399994 168.279999 306.279999 c
h
274.47998 183.519989 m
276.040009 177.039993 l
269.919983 179.679993 l
f
0.0 sg
483.039581 247.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 1334 62 <000100c5fed80250062b0007004840180304550201100605550700120f09
010947474a0702c10504b8023db70000010101490878b9011c00182b4e10
f45d3c4dfd3cf43c4e456544e65d003f3c4dfd3c3f3cfd3c313013112115
23113315c5018bdedefed8075394f9d59400>HLAJCL+LucidaSans AddT42Char 
1 436 24 <000100f9ffdb041c05c800170085b2220810b80125b30b0b160fb8023940
200c0403911601cc4000aa0b160d0eaa06ce2f1301134a190f10f00c0baa
004918ba01d3011900182b4e10f44df43cfd3c4e10f65d4dede4003f4b52
58b0001a1bb0501a59fc1aed10ed3fed12392fed31304379401811150408
0415068f01081106e1010514038f00071209e1012b2b012b2b8181173516
333236353426232207112115211120001514002122f99385a099dfec3538
02edfdc001380125fef7fee67206b03bbd8598b60702d0acfe7afee3d1c0
fef3>HLAJCL+LucidaSans AddT42Char 
1 1442 64 <0001004afed801d5062b0007004e40190506550007100403550102120009
30099009030947474a0100b8023d40110405c1020f073f079f0703074908
6d9e182b4e10f45d3c4df43cfd3c4e456544e65d003f3c4dfd3c3f3cfd3c
3130011121353311233501d5fe75dede062bf8ad94062b94>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/bracketleft 62 def
/five 24 def
/bracketright 64 def
end
HLAJCL+LucidaSans /Encoding get
dup 91 /bracketleft put
dup 53 /five put
dup 93 /bracketright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
([5])
[7.768726 15.136891 7.768726 ] pdfys
399.039581 235.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if

1 0 3 <> HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/space 3 def
end
HLAJCL+LucidaSans /Encoding get
dup 32 /space put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
([ Int])
[7.795127 7.430263 7.077465 14.889653 16.55983 7.795127 ] pdfys
303.279572 253.2397 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(*0)
[11.152882 15.304982 ] pdfys
n
408.039978 270.399994 m
451.119995 267.759979 l
451.23999 267.759979 451.47998 267.519989 451.47998 267.279999 c
451.359985 267.160004 451.23999 266.919983 451.0 266.919983 c
408.039978 269.679993 l
407.800018 269.679993 407.679993 269.800018 407.679993 270.040009 c
407.679993 270.279999 407.800018 270.399994 408.039978 270.399994 c
h
450.279999 270.399994 m
456.039978 267.040009 l
449.919983 264.399994 l
0.0039 0.0039 0.0039 setrgbcolor
f
n
312.039978 270.399994 m
367.0 270.399994 l
367.23999 270.399994 367.359985 270.279999 367.359985 270.040009 c
367.359985 269.800018 367.23999 269.679993 367.0 269.679993 c
312.039978 269.679993 l
311.800018 269.679993 311.679993 269.800018 311.679993 270.040009 c
311.679993 270.279999 311.800018 270.399994 312.039978 270.399994 c
h
366.039978 273.040009 m
372.039978 270.040009 l
366.039978 267.040009 l
f
n
168.160004 306.399994 m
271.359985 271.959991 l
271.600006 271.959991 271.720001 271.720001 271.600006 271.47998 c
271.600006 271.359985 271.359985 271.23999 271.119995 271.23999 c
167.919998 305.679993 l
167.679993 305.800018 167.559998 305.919983 167.679993 306.160004 c
167.800003 306.399994 167.919998 306.399994 168.160004 306.399994 c
h
271.23999 274.720001 m
276.040009 270.040009 l
269.440002 269.079987 l
f
0.0 sg
399.039581 367.239685 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
([ ])
[7.795127 7.550262 7.795127 ] pdfys
303.279572 325.239685 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if

1 0 3 <> HLAJBP+LucidaSans,Bold AddT42Char 
1 824 97 <0001006f018504ad0313001c005640300806065517151417171506081715
04120f62196a4003b5800a6a00621206081715041c0e6a0f4a1e1c6a0049
1d5759182b4e10f44ded4e10f64ded111739002fe4ed1afd1aede4121739
870e2e2b0e7d10c431301334363332161f02163332363535331406232226
2f0226232206156fa46c3d5f59786226202c40ad9b72395c6d7b5d211b28
4601a3bfb1242e3f3410595010bbb71e393f310e4f68>HLAJBP+LucidaSans,Bold AddT42Char 
1 696 33 <0001006f003104ad046f00050058402a0403040503550201140202010405
040305550001140000010302050002fc0104fc200007030500048e01b802
4bb30002d80610f63cf4ed123939003f1a19fd3ced12391239872e182b08
7d10c487042e182b087d10c41301013501016f043efbc202a0fd60046ffd
e3fddfd3014e014d>HLAJBP+LucidaSans,Bold AddT42Char 
HLAJBP+LucidaSans,Bold /CharStrings get begin
/space 3 def
/asciitilde 97 def
/greater 33 def
end
HLAJBP+LucidaSans,Bold /Encoding get
dup 32 /space put
dup 126 /asciitilde put
dup 62 /greater put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(*0 ~> *0)
[11.203282 15.355382 7.732806 15.355382 15.355382 7.732806 11.032883 15.355382 ] pdfys
n
312.039978 378.399994 m
367.0 381.160004 l
367.23999 381.160004 367.359985 381.039978 367.359985 380.800018 c
367.47998 380.559998 367.23999 380.440002 367.119995 380.440002 c
312.039978 377.679993 l
311.800018 377.679993 311.679993 377.800018 311.679993 378.039978 c
311.679993 378.279999 311.800018 378.399994 312.039978 378.399994 c
h
365.919983 383.679993 m
372.039978 381.039978 l
366.160004 377.800018 l
0.0039 0.0039 0.0039 setrgbcolor
f
n
167.800003 306.399994 m
271.720001 375.519989 l
271.839996 375.639984 272.079987 375.639984 272.200012 375.519989 c
272.320007 375.279999 272.200012 375.039978 272.079987 374.919983 c
168.279999 305.679993 l
168.039993 305.559998 167.800003 305.679993 167.679993 305.800018 c
167.559998 306.039978 167.679993 306.279999 167.800003 306.399994 c
h
269.320007 377.200012 m
276.040009 378.039978 l
272.679993 372.160004 l
f
0.0 sg
399.039581 583.239563 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 884 54 <00010064ffdb03e905ed002b00b2401c0620162216242624360c490e6624
760d7520860a860d960a0c2b0817b8fffb402701050b291a211404178e16
b01a771403018e00b0047729090d200a23041016178d0779264a2d1db801
2b400d100110af00492c2de32176a9182b2b4ef44de43c10ed4e10f64ded
7df4183c121739003fedfced3fedfced111239111239383831304379401e
27281b1c1113050612261b131d820005280782011c111a82010627048200
2b2b012b2b2b81818181015d373516163332363534272627272627263534
363633321715262623220615141616171716171615140421222664b2a446
7f9326279b66cc46466fbb8eabbea57b3d807b3a62566ace4545fef9ff00
4f941cd052228b61493e3d583b7460607569b86839c0411b864630634731
3c7561627fadfe15>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/S 54 def
end
HLAJCL+LucidaSans /Encoding get
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(S) show
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 4458 88 <000100b9ffe70431043e0014008e401a1f400e041608017d11110900140a
131212090908060e7e040b16b80109b5141101934014b801a9b3c00a5b07
b80109b61516d42171a1182b2bf6ed1afd1afd3c10e6003fed3f3c103c10
3c3f3c11392ffd31304379400e050d0c260d050a65000b060e65002b012b
2b810049547940120f10020310020e81040f031181011011020101103c10
3c2b002b8181213506062322263511331114161633323637113311036c4c
c66b89adc528482a48a963c5cc6e77af9c030cfd347148285a9302c0fbc2
>HLAJCL+LucidaSans AddT42Char 
1 1892 70 <0001006fffe703b704560016008f4032e90fe913f90ff9130425080c7d09
0f0b01080b7a500a0e57400907167d50007c0a007c1457020b0c72004a18
116906491718b80169b32167c7182b2b4ef44ded4e10f64de4003fedec4b
5258b0001a59fc1aed3f1aed4b5258b0001a591afc5e5d5eed3130437940
1a0f13030804251303115f000f08115f001205145f0010070e5f012b2b01
2b2b2b818101712506232226023534002132171526232206151416333237
03b7bf8b91f27b010a0116809ca769a6a8bd97878f213a9d0100a1f00141
23a531f7a9b7e245>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/u 88 def
/c 70 def
end
HLAJCL+LucidaSans /Encoding get
dup 117 /u put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ucc)
[14.769651 12.278242 12.278242 ] pdfys
303.039581 553.239563 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 718 49 <000100bf0000052a05c8000900794012057802770796029907b602b90706
08020303b8025c40140708140707080308090402020907080207090403b8
0237b60606054a0b0809b80237b40100490a0bb80211b32168c5182b2b4e
f43c4dfd3c4e10f63c4d10fd3c113939003f3c3f3c123939872e2b877dc4
3130015d4358b44702480702005d5933113301113311230111bfce02e9b4
cdfd1605c8fb890477fa380477fb8900>HLAJCL+LucidaSans AddT42Char 
1 1556 68 <00020067ffe7043904560024002f00c440164d08001925117d4012c9140c
09572727030f57140725b80106401a00bf2d7e031d572222030b0b255b18
19bf1f72204a311112cb2ab8023b400906493031c32167d8182b2b4ef44d
edf43c4e10f64de4f43cfd3c003f3c10ed10edf4ed3fed12392fed4b5258
b0001a5910fc1aed01111239313043794036232c151c040e0d262c042a65
000e150b650116171c231a65001b1a240028082a5f002b052d65000c160f
65011b241d65002907275f01002b2b2b2b012b103c103c2b103c2b2b2b81
818125060623222635342421333534262623220735363332161615111416
163332371706232226271127220615141633323602f558ab5273c6011401
2f2e2a594299b5c7b060a1601a2f1f0d190e43513664333f9bd267453e80
8a51529892a0d1834e472860a3513d8391fe1452391e046d2046c8011902
786747623700>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/N 49 def
/a 68 def
end
HLAJCL+LucidaSans /Encoding get
dup 78 /N put
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Nat )
[17.702362 13.435246 8.94223 7.550262 ] pdfys
303.039581 600.879578 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 20.039993 -20.039993 0.0 0.0 0.0] Tf
(~>)
[12.727551 12.727551 ] pdfys
303.039581 633.999573 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(Nat)
[17.642363 13.432848 8.882231 ] pdfys
n
312.160004 626.799988 m
367.23999 616.359985 l
367.359985 616.23999 367.47998 616.119995 367.47998 615.880005 c
367.47998 615.640015 367.23999 615.519958 367.0 615.640015 c
311.919983 626.079956 l
311.800018 626.079956 311.679993 626.320007 311.679993 626.440002 c
311.679993 626.679993 311.919983 626.799988 312.160004 626.799988 c
h
366.759979 619.119995 m
372.039978 615.039978 l
365.559998 613.23999 l
0.0039 0.0039 0.0039 setrgbcolor
f
0.0 sg
399.039581 457.239685 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 1192 61 <0001005f0000047605c800090063b6080b0602060707b8025c4026010214
0101020107060203590504020807590900080100020704060505094a0b04
9b00490a76b9011b00182b4e10f44de44e10f63c12391139391239003f3c
4dfd3c3f3cfd3c39113987052e2b877dc401111239313033350121352115
0121155f031bfd1603e6fce5031ba804839d9dfb7da8>HLAJCL+LucidaSans AddT42Char 
1 2400 72 <0002006fffe703e604570015001c009940313b080d0b1517167b0d0e0e12
1a57400907158750007c0a007c1257020b179315720b4a1e16720e930549
1d1ed42167e6182b2b4ef44dfde44e10f64de4ed003fedec4b5258b0001a
59fc1aed3f1afd11392f3cfd3c01111239313043794029181c0311102607
2611030e5f000f0e190a175f011b08165f001c0f04125f00180b1a5f011c
061a5f01002b2b2b013c2b2b103c2b2b2b81812506232200353412363332
121107211e02333236370121342623220603e1c68dfdfede80cf8cbce001
fd53105c99763c777bfd6001df7f63717f233c0155e899011486fef2fef3
3c909c57152d01d5a38c9700>HLAJCL+LucidaSans AddT42Char 
1 3770 85 <000100c50000031d0456000f0071401f1f40060b0e03000201060b7e0609
93087206070106000a1147474ae0090109b801e0400a030e0f5b00491071
d8182b4e10f44dfd3c3cf65d4e456544e6003f3f3f4df4ed10ed3f3c1139
3931300049547940120c0d04050d040b81050c050e81000d0e040301103c
103c2b002b818133113315363633321715262322060711c5c538b3691e21
32285d9d3f043ecc6d7705b8116f6ffd3400>HLAJCL+LucidaSans AddT42Char 
1 3262 82 <0002006fffe7047b0456000f001b007a40214308165708071057000b1369
0c4a1d001d101d201d03196904491c1de42167c6182b2b4ef44ded5d4e10
f64ded003fed3fed313043794032011b0e2602250a250626110f135f011b
01195f001509135f011707195f00120d105f001a03105f00140b165f0118
05165f012b2b2b2b012b2b2b2b2b2b2b2b81052226023534123633321612
1514020627323635342623220615141602759be5867ae9a39be6857ce7a3
93a2a39292a2a2197f0111a89e010f8a7efeeea7a0fef18994dbc9cad9d9
cac9db00>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/Z 61 def
/e 72 def
/r 85 def
/o 82 def
end
HLAJCL+LucidaSans /Encoding get
dup 90 /Z put
dup 101 /e put
dup 114 /r put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Zero)
[14.388094 13.557764 9.835118 14.627962 ] pdfys
303.039581 463.239685 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Nat)
[17.644762 13.435247 8.88463 ] pdfys
n
312.039978 489.399994 m
367.0 489.399994 l
367.23999 489.399994 367.359985 489.279999 367.359985 489.039978 c
367.359985 488.800018 367.23999 488.679993 367.0 488.679993 c
312.039978 488.679993 l
311.800018 488.679993 311.679993 488.800018 311.679993 489.039978 c
311.679993 489.279999 311.800018 489.399994 312.039978 489.399994 c
h
366.039978 492.039978 m
372.039978 489.039978 l
366.039978 486.039978 l
0.0039 0.0039 0.0039 setrgbcolor
f
n
167.679993 306.279999 m
273.160004 484.959991 l
273.279999 485.079987 273.519989 485.200012 273.639984 485.079987 c
273.880005 484.959991 273.880005 484.720001 273.759979 484.47998 c
168.400009 305.800018 l
168.279999 305.679993 168.039993 305.559998 167.800003 305.679993 c
167.679993 305.800018 167.559998 306.039978 167.679993 306.279999 c
h
270.399994 485.440002 m
276.040009 489.039978 l
275.559998 482.319977 l
f
n
167.679993 306.160004 m
274.119995 621.76001 l
274.119995 622.0 274.359985 622.119995 274.600006 622.0 c
274.720001 622.0 274.839996 621.76001 274.839996 621.519958 c
168.400009 305.919983 l
168.279999 305.679993 168.160004 305.559998 167.919998 305.679993 c
167.679993 305.800018 167.559998 305.919983 167.679993 306.160004 c
h
271.23999 621.640015 m
276.040009 626.440002 l
277.0 619.719971 l
f
0.0 sg
87.039703 289.239685 m
%ADOBeginSubsetFont: HLAJBP+LucidaSans,Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJBP+LucidaSans,Bold gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N14 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(*) show
87.039703 300.399689 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 212 21 <000100aa0000042205ed001d00834014160818170304040a1b011c000a91
11400ecc500fb80104b311051c1bb80239400c1d000c18170304040f07ce
14b8011eb31d4a1f1bb80187b40faa00491eba0129011900182b4e10f44d
e4ed4e10f64df4ed121739003f3cfd3c3ffc1aed1a10ed11123911121739
31304379400e121308090912078f0108130a8f012b012b81813335362537
36363534262322060607353633321615140607070606072115aa56010671
7b5f98803765735bc5c3d5f665c74c53a8170283adc9ed6570b5627d8d15
2e34ae5deaaf72caaa4146c971ad>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/two 21 def
end
HLAJCL+LucidaSans /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 24.0 -24.0 0.0 0.0 0.0] Tf
(2) show
n
96.040001 306.399994 m
127.0 306.399994 l
127.239998 306.399994 127.360001 306.279999 127.360001 306.039978 c
127.360001 305.800018 127.239998 305.679993 127.0 305.679993 c
96.040001 305.679993 l
95.800003 305.679993 95.68 305.800018 95.68 306.039978 c
95.68 306.279999 95.800003 306.399994 96.040001 306.399994 c
h
126.040001 309.039978 m
132.039993 306.039978 l
126.040001 303.039978 l
0.0039 0.0039 0.0039 setrgbcolor
f
0.0 sg
463.479584 79.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 4668 89 <0001001200000418043e000600ad40149403010800070619001606290026
06b900b60608b8ff7cb40300062003b80155b5060c02010000b80259400a
03021403030204050606b8023a401b030414030304050404020201060600
0a0002010406030847474a05ba013800030138b6000101014907ebb90142
00182b194e10f45d184dfdfd194e456544e612393911393900183f3c3f3c
103c103c87054d2e2b877dc4872e182b877dc4004b5258b0801a591810fd
2b3130015d005d2101330101330101a6fe6cc5013c014db8fe53043efcb3
034dfbc2>HLAJCL+LucidaSans AddT42Char 
1 2970 79 <000100c50000018a062b0003003640180100000a6f05010547474a02035b
016f007f000200490405b8012cb32171a1182b2b4ef45d3c4dfd3c4e4565
44e65d003f3f313033113311c5c5062bf9d5>HLAJCL+LucidaSans AddT42Char 
1 3938 86 <0001009dffe703770456002900cd403594099422022b08211e0c09041803
211e0c09040f24185712167d40157a0b1207035728017d40007c0b280b90
2b012b47474a16c906b8023bb51024e0240224bb013c0000001b023bb50f
7200492a2bba013c00210127b1e6182b2b4ef47d4df418ed10fd5ded7de4
184e456544e65d003f4b5258b0001a1bb0501a594dfc1aed10ed3f4b5258
b0001a1bb0501a59fc1aed10ed111217391112173931304379401e252719
1a10110405262619111b650004270665011a1018650105250365002b2b01
2b2b2b81818181005d373516333236353427262727262726353436333217
1715262322061514171617171617161514060623229dc18f54711c1c6573
853d3dbeba5b8629a5625f5e201f515fbf343461bd748726b5605c452b29
292a313749486983ae1908a43152382c23242328514f4f5d59985600>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/v 89 def
/l 79 def
/s 86 def
end
HLAJCL+LucidaSans /Encoding get
dup 118 /v put
dup 108 /l put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N15 [0.0 15.960007 -15.960007 0.0 0.0 0.0] Tf
(values)
[8.321633 8.86422 4.666729 9.726064 8.998362 8.19378 ] pdfys
397.480194 79.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 4882 92 <00010010fe750422043e000700d2400e0801080207030704040646070104
b8fff0400d04040301050102050003020101b80259400c04031404010004
0305060707b8025940230005140000050f04010404010605050303020601
0a07000e0506070304020947474a06bc01380004013800000154400a0002
0102490809e421ebb9014200182b2b194ef45d184de4fdfd194e456544e6
11123939113900183f3c3f3f3c103c103c12392f5d87054d2e2b877dc487
082e182b87057dc4870810c408c431300038015d00b00146b00246b04061
5258b1010246b040614859015e5d01130133010133010104b0fe5cd50137
014cbafdaffe75018b043efcce0332fa3700>HLAJCL+LucidaSans AddT42Char 
1 3476 83 <000200c5fe75049a04560011001e00c440381c40150d1f40061b25081e12
1003041b15121e18111b7e0607010615570d0b000e1869094a2010200103
10115b000001491f20c32171c6182b2b4ef43c4d10fd3c3c5d4e10f64ded
003f3fed3f3fed0111123939001112173931304379401a161a070c0b2616
0c185f011a07185f01170a155f0019081b5f012b2b012b2b2b8181004954
7940121c1d04051d041b81051c051e81001d1e040301103c103c2b002b81
810049547940100e14130f158104140e12810013120f1001103c103c2b00
2b8113113315363633321215140206232226271111161633323635342623
220607c5c53db579c9dc66d78836b164657845918b7b8152a14ffe7505c9
cc7272fed8ee9bfee8a62074fdfa028e5a2ef4bdb0ce595a>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/y 92 def
/p 83 def
end
HLAJCL+LucidaSans /Encoding get
dup 121 /y put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(types)
[6.24025 8.272122 9.954222 8.998361 8.410836 ] pdfys
301.480774 79.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
1 2762 78 <000100c500000485062b000a009db2050606b8025a400c03041403060703
0408070606b80259400b0908140906050908060409b8024a402603030705
020100050406000a0a0808070a060408030a05cb0c47474a0703090a5b40
20070107b8016cb62000490b71d8182b4e10f41a194ded5d1a18fd3c3c19
4e10456544e6184de4121739003f3c103c103c3f3c3f3c191112392f18e5
123987082e2b87057dc487082e182b057d10c43130331133110133010123
0111c5c501ccd4fe490212fcfe01062bfc04020ffe05fdbd022dfdd3>HLAJCL+LucidaSans AddT42Char 
1 2652 76 <000200c50000018a05c800030007004ab2069307b80109401d0202010600
0a6f09010947474a020207035b01056f007f000200490809b8012cb32171
a1182b2b4ef45d3c3c4dfd3c3c4e10456544e65d003f3f3c4d10f6ed3130
3311331103353315c5c5c5c5043efbc20503c5c5>HLAJCL+LucidaSans AddT42Char 
1 2110 71 <0002006fffe70444062b0011001e00bf40351f401b041f400a1522081e12
01031b0e0a151211000f0015570a07000a1b7e040b0f005b114a20102001
186907491f20c32167a1182b2b4ef44ded5d4e10f64dfd3c003fed3f3fed
3f0111123900111239121739313043794018161a05091a05185f00160918
5f0019061b5f001708155f012b2b012b2b81810049547940120b140c2513
0d158105140b12810113120d0e01103c103c2b002b2b810049547940121c
1d02031d021b81041c031e81011d1e020101103c103c2b002b8181213506
06232202351012333216161711331103262623220615141633323637037e
3cb579c8ddf8d73f725936c6c6667745908b7b8152a14ecc72730127ef01
0201571e373f0269f9d5033b5a2df2bfb1cc5a59>HLAJCL+LucidaSans AddT42Char 
HLAJCL+LucidaSans /CharStrings get begin
/k 78 def
/i 76 def
/d 71 def
end
HLAJCL+LucidaSans /Encoding get
dup 107 /k put
dup 105 /i put
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(kinds)
[9.472259 4.559797 9.96706 10.073921 8.291136 ] pdfys
151.480728 79.2397 m
%ADOBeginSubsetFont: HLAJCL+LucidaSans AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HLAJCL+LucidaSans gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(sorts)
[8.128344 9.788247 6.516416 6.118954 8.128344 ] pdfys
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF

%%EndDocument
 @endspecial -73 1363 a
 currentpoint currentpoint translate 1 0.35 div 1 0.35 div scale neg
exch neg exch translate
 -73 1363 a -150 1444 a Fq(Figur)o(e)25
b(4.)188 1444 y
SDict begin H.S end
 188 1444 a Black Black 188 1444 a
SDict begin H.R end
 188
1444 a 188 1444 a
SDict begin [/View [/XYZ H.V]/Dest (figure.4) cvn /DEST pdfmark end
 188 1444 a Fq(The)g(classi\002cation)h(hierar)o(ch)o
(y)-5 b(.)44 b(An)26 b(arr)o(o)o(w)h(fr)o(om)f Fr(a)h
Fq(to)f Fj(b)-150 1527 y Fq(means)g Fr(b)p Fq(::)p Fr(a)p
Fq(.)44 b(Note)26 b(ho)o(w)g(only)g(v)o(alues)g(ar)o(e)g(classi\002ed)f
(by)h(types)f(that)-150 1610 y(ar)o(e)e(classi\002ed)f(by)h
Fj(*0)p Fq(,)g(and)f(ho)o(w)h(type)g(constructors)g(\(lik)o(e)f
Fj([])h Fq(and)f Fj(S)p Fq(\))-150 1693 y(ha)n(v)o(e)e(higher)e(order)h
(kinds.)p -150 1746 2001 4 v Black -100 1992 a Fj(Z::Even)39
b(0)595 b(Z::Even)39 b(Z)-100 2075 y(E::Odd)g(m)f(->)g(Even)h(\(m+1\))
100 b(E::Odd)39 b(m)f(->)g(Even)h(\(S)f(m\))-100 2241
y(O::Even)h(m)f(->)g(Odd)h(\(m+1\))100 b(O::Even)39 b(m)f(->)g(Odd)h
(\(S)f(m\))-100 2407 y(O\(E\(O)g(Z\)\)::Odd)h(3)329 b(O\(E\(O)38
b(Z\)\)::Odd\(S\(S\(S)i(Z\)\)\))-150 2574 y Fv(In)24
b(the)f(rest)h(of)f(this)g(paper)i(when)f(we)f(use)h(Arabic)g(numerals)
g(at)g(the)f(type)-150 2657 y(le)n(v)o(el,)j(we)e(are)h(using)g(them)g
(simply)g(as)g(a)g(notational)g(con)m(v)o(enience.)42
b(F)o(or)-150 2740 y(e)o(xample)20 b(we)f(may)g(write:)j
Fj(\(Odd)39 b(3\))19 b Fv(instead)g(of)g Fj(\(Odd)39
b(\(S\(S\(S)f(Z\)\)\)\))p Fv(.)-150 2779 y
SDict begin H.S end
 -150 2779
a -150 2779 a
SDict begin 10 H.A end
 -150 2779 a -150 2779 a
SDict begin [/View [/XYZ H.V]/Dest (section.6) cvn /DEST pdfmark end
 -150 2779 a 167
x Fs(6)99 b(Equality)26 b(Quali\002ed)f(T)-7 b(ypes)-150
3113 y Fv(Remo)o(ving)19 b(the)f(range)h(restriction)f(from)g
(algebraic)h(datatypes)g(can)f(be)h(e)o(x-)-150 3196
y(plained)h(in)f(terms)g(of)h Fr(equality)g(quali\002ed)g(types)p
Fv(.)25 b(W)-6 b(e)19 b(pro)o(vide)h(tw)o(o)g(dif)n(fer)o(-)-150
3279 y(ent)25 b(w)o(ays)h(to)e(introduce)i(a)f(ne)n(w)h(type)f(using)h
(a)f Fj(data)g Fv(declaration.)42 b(Both)-150 3362 y(support)25
b(the)f(de\002nition)g(of)g(algebraic)g(datatypes)h(without)f(the)g
(range)g(re-)-150 3445 y(striction.)e(The)c(\002rst)e(is)h(by)h(the)g
(use)g(of)f Fr(e)o(xplicit)g Fv(constructor)h(function)g(dec-)-150
3528 y(laration,)25 b(and)f(the)g(second)h(is)f(by)g(the)g(use)g(of)g
Fr(equality)g(r)m(estrictions)p Fv(.)38 b(W)-6 b(e)-150
3611 y(illustrate)18 b(both)i(forms)f(belo)n(w)g(for)g(the)g(Ev)o
(en/Odd)g(proofs.)p Black Black -150 3758 a Fj(--)38
b(explicit)h(constructor)h(function)f(declaration)-150
3841 y(data)g(Even::Nat)g(\230>)f(*0)g(where)-74 3924
y(Z)g(::)h(Even)f(Z)-74 4007 y(E)g(::)h(Odd)f(m)g(->)h(Even)f(\(S)h
(m\))-150 4173 y(data)g(Odd::Nat)f(\230>)h(*0)f(where)-74
4256 y(O)g(::)h(Even)f(m)g(->)h(Odd)f(\(S)h(m\))-150
4422 y(--)f(equivalent)h(declaration)h(using)e(equality)h(restrictions)
-150 4505 y(data)g(Even)f(n)-74 4588 y(=)g(Z)h(where)f(n=Z)-74
4671 y(|)g(exists)h(m)f(.)h(E)f(\(Odd)g(m\))h(where)f(n=S)h(m)-150
4838 y(data)g(Odd)f(n)g(=)-74 4921 y(exists)h(m)f(.)g(O)h(\(Even)f(m\))
h(where)f(n=S)h(m)-150 5068 y Fv(The)25 b(e)o(xplicit)f(declaration)i
(form)f(follo)n(ws)g(from)f(our)i(earlier)e(discussion.)-150
5151 y(Just)j(list)f(the)h(full)g(types)g(for)g(each)h(constructor)l(.)
48 b(W)-6 b(e)26 b(are)h(free)g(to)g(mak)o(e)-150 5234
y(the)18 b(range)g(type)g(of)g(each)g(constructor)h(be)f(an)o(y)g
(instance)g(of)g(the)g(type)g(being)-150 5317 y(de\002ned.)47
b(This)27 b(form)f(can)h(be)g(easily)g(translated)g(into)g(the)g
(second)h(form)-150 5400 y(that)23 b(e)o(xplains)h(the)f(range)g
(restriction)g(in)g(terms)g(of)g(the)g(well)f(studied)i(and)p
Black Black 2049 83 a(understood)d(idea)e(of)g(quali\002ed)g(types.)
2049 249 y(In)g(the)g(equality)g(quali\002ed)g(syntax)h(we)f(use)g(the)
g(original)g(syntax)h(for)f Fj(data)2049 332 y Fv(declaration,)29
b(b)o(ut)d(no)n(w)i(allo)n(w)e(e)n(v)o(ery)i(constructor)f(to)g(be)g
(follo)n(wed)g(by)g(a)2049 415 y(where)20 b(clauses)f(which)h(lists)f
(a)g(set)g(of)g(type)h(equalities)f(that)h(must)f(hold)h(for)2049
498 y(that)f(constructor)l(.)2049 664 y(Constructor)d(functions)g(\()p
Fj(Z)p Fv(,)e Fj(E)p Fv(,)h(and)h Fj(O)p Fv(\))f(construct)g(elements)h
(of)f Fj(data)g Fv(types)2049 747 y Fj(Even)25 b Fv(and)h
Fj(Odd)p Fv(.)41 b(The)25 b(type)g(of)g(a)g(constructor)h(function)f
(is)g(described)h(in)2049 830 y(the)k Fj(data)g Fv(declaration.)56
b(F)o(or)30 b(e)o(xample,)j(the)d(clause)g(in)g(the)f
Fj(Even)h Fv(dec-)2049 913 y(laration:)67 b Fj(exists)39
b(m.E)f(\(Odd)h(m\))f(where)h(n=S)f(m)61 b Fv(introduces)21
b(the)g Fj(E)2049 996 y Fv(constructor)16 b(function.)23
b(W)m(ithout)14 b(the)i Fj(where)f Fv(quali\002cation,)h(the)f
(construc-)2049 1079 y(tor)20 b(function)g Fj(E)g Fv(w)o(ould)h(ha)o(v)
o(e)f(type)g Fj(\(E::Odd)39 b(m)f(->)g(Even)h(n\))p Fv(.)26
b Fr(Equality)2049 1162 y(Quali\002cation)19 b Fv(\(indicated)g(by)g
(the)f Fj(where)g Fv(in)g(the)g(clauses)h(for)f Fj(Z)p
Fv(,)g Fj(E)p Fv(,)f(and)i Fj(O)p Fv(\))2049 1245 y(and)27
b Fr(e)o(xistential)e(quanti\002cation)j Fv(\(indicated)e(by)g
Fj(exists)h Fv(in)e(the)h(clauses)2049 1328 y(for)20
b Fj(E)p Fv(,)f(and)i Fj(O)p Fv(\))e(help)i(encode)g(semantic)f
(properties.)27 b(The)20 b Fj(where)g Fr(quali\002es)2049
1411 y Fj(E)p Fv(')l(s)f(type,)f(in)h(ef)n(fect)g(saying)h
Fj(\(E::)76 b(Odd)39 b(m)f(->)g(Even)h(n\))19 b Fr(pr)m(o)o(vided)h
Fj(n=S)2049 1494 y(m)p Fv(.)60 b(W)-6 b(e)31 b(capture)h(this)f
(formally)g(by)h(writing)f Fj(E::\(forall)39 b(n)f(m.\(n=S)2049
1577 y(m\)=>)h(Odd)f(m)g(->)g(Even)h(n)p Fv(.)24 b(The)19
b(equations)i(behind)f(the)g Fr(fat)f(arr)m(ow)g Fv(\()p
Fj(=>)p Fv(\))2049 1660 y(are)j(equality)g(quali\002cations.)32
b(Since)22 b Fj(n)f Fv(is)h(a)f(uni)n(v)o(ersally)i(quanti\002ed)f
(type)2049 1743 y(v)n(ariable,)e(there)g(is)f(only)h(one)g(w)o(ay)g(to)
g Fr(solve)g Fv(the)g(quali\002cation)g Fj(n=S)38 b(m)19
b Fv(\(by)2049 1826 y(making)g Fj(n)f Fv(equal)h(to)f
Fj(S)38 b(m)p Fv(\).)23 b(Because)c(of)f(this)g(unique)h(solution,)g
Fj(E)f Fv(also)g(has)2049 1910 y(the)23 b(type)h Fj(\(forall)39
b(m.Odd)g(m)f(->)g(Even)h(\(S)f(m\)\))p Fv(.)f(This)23
b(type)h(guaran-)2049 1993 y(tees)17 b(that)h Fj(Cons)g
Fv(can)g(only)g(be)f(applied)i(in)e(conte)o(xts)h(where)g
Fj(n=S)39 b(m)p Fv(.)22 b(This)17 b(is)2049 2076 y(the)i(same)h(type)g
(we)f(w)o(ould)i(ha)o(v)o(e)e(written)g(using)h(the)g(e)o(xplicit)f
(constructor)2049 2159 y(declaration)h(method.)2049 2325
y(The)d(e)o(xistential)f(quanti\002cation)i(of)f(the)g(type)g(v)n
(ariable)g Fj(m)g Fv(names)h(the)f(inter)o(-)2049 2408
y(mediate)k(predecessor)h(of)f(the)g(sub-proof)h(of)f
Fj(E)p Fv(,)f(which)h(if)f(not)h(introduced)2049 2491
y(in)16 b(this)h(w)o(ay)g(w)o(ould)g(appear)h(as)e(an)h(unbound)i(type)
e(v)n(ariable.)23 b(Ev)o(ery)16 b(decla-)2049 2574 y(ration)k(in)g(the)
g Fr(e)o(xplicit)g(form)g Fv(can)g(be)h(translated)f(into)g(one)h(in)f
(the)g Fr(equality)2049 2657 y(quali\002ed)27 b(form)p
Fv(.)45 b(So)26 b(the)g(\002rst)g(can)g(be)h(de\002ned)g(as)f(a)g
(shorthand)i(for)e(the)2049 2740 y(second.)54 b(The)29
b(\002rst)f(form)g(is)h(more)g(concise)g(and)h(sometimes)f(easier)g(to)
2049 2823 y(use,)20 b(b)o(ut)g(the)g(second)h(form)f(can)g(be)h(e)o
(xplained)g(semantically)f(in)g(terms)g(of)2049 2906
y(the)k(well)f(kno)n(wn)i(and)f(well)g(studied)g(idea)g(of)g
(quali\002ed)g(types.)38 b(Equality)2049 2989 y(quali\002ed)17
b(types)h(are)f(a)g(relati)n(v)o(ely)g(ne)n(w)g(feature)h(in)e(the)i(w)
o(orld)f(of)g(program-)2049 3072 y(ming)25 b(languages,)j(and)d(were)g
(only)g(recently)h(introduced)g(by)f(Hinze)g(and)2049
3155 y(Chene)o(y[)2300 3157 y
SDict begin H.S end
 2300 3157 a Black -2 x
Fv(9)p Black 2338 3104 a
SDict begin H.R end
 2338 3104 a 2338 3155 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Hinze:03:Phantom) cvn H.B /ANN pdfmark end
 2338
3155 a Fv(].)e Fw(W)p Fv(me)o(ga)d(is)e(based)i(upon)g(this)f(w)o(ork.)
2049 3187 y
SDict begin H.S end
 2049 3187 a 2049 3187 a
SDict begin 10 H.A end
 2049 3187 a 2049
3187 a
SDict begin [/View [/XYZ H.V]/Dest (section.7) cvn /DEST pdfmark end
 2049 3187 a 167 x Fs(7)99 b(An)26 b(Intr)n(oduction)g(to)f
Fi(W)p Fs(mega)2049 3490 y Fv(In)32 b(this)f(section)h(we)f(introduce)i
Fw(W)p Fv(me)o(ga.)61 b(W)-6 b(e)31 b(use)h(a)g(simple)f(applica-)2049
3574 y(tion)20 b(which)h(has)g(a)f(semantic)h(in)m(v)n(ariant)g
(captured)g(by)g(the)f(type)h(system)g(of)2049 3657 y
Fw(W)p Fv(me)o(ga.)38 b(The)24 b(e)o(xample)g(is)g(sequences)h(of)f
(elements)g(with)g(the)f(semantic)2049 3740 y(property)f(that)e(the)h
(length)g(of)g(the)f(sequence)j(is)d(encoded)i(in)f(its)f(type.)28
b(F)o(or)2049 3823 y(e)o(xample)d(the)f(sequence)i Fk([)p
Fr(a)2796 3836 y Fn(1)2830 3823 y Fl(;)8 b Fr(a)2896
3836 y Fn(2)2929 3823 y Fl(;)g Fr(a)2995 3836 y Fn(3)3029
3823 y Fk(])23 b Fv(has)i(type)g Fk(\()p Fr(S)q(eq)20
b(a)g Fv(3)p Fk(\))p Fv(,)25 b(and)g(the)f(type)2049
3906 y(of)18 b(the)13 b Fr(C)r(ons)18 b Fv(operator)h(that)e(adds)i(an)
f(element)g(to)f(the)h(front)g(of)g(a)f(sequence)2049
3989 y(w)o(ould)22 b(be)g Fr(a)d Fx(!)e Fr(S)q(eq)i(a)f(n)h
Fx(!)f Fr(S)q(eq)g(a)h Fk(\()p Fr(n)11 b Fk(+)g Fv(1)p
Fk(\))p Fv(.)32 b(A)21 b(map)h(function)g(with)f(type)2049
4072 y Fk(\()p Fr(a)34 b Fx(!)f Fr(b)p Fk(\))h Fx(!)g
Fr(S)q(eq)17 b(a)g(n)g Fx(!)g Fr(S)q(eq)g(b)g(n)j Fv(encodes)g(a)g
(proof)g(that)f(map)g(does)i(not)2049 4155 y(alter)d(the)h(length)h(of)
f(the)g(sequence)h(it)f(is)f(applied)i(to.)2049 4321
y(The)26 b(type)g(of)g(the)g(append)i(operator)e(w)o(ould)h(be)f
Fr(S)q(eq)21 b(a)g(n)g Fx(!)f Fr(S)q(eq)h(a)g(m)f Fx(!)2049
4404 y Fr(S)q(eq)e(a)g Fk(\()p Fr(n)11 b Fk(+)g Fr(m)p
Fk(\))p Fv(.)29 b(In)21 b(order)h(to)e(type)i(such)f(functions)h(it)e
(is)g(necessary)j(to)d(do)2049 4487 y(arithmetic)h(at)h(the)f(type)h
(le)n(v)o(el.)31 b(In)22 b(Figure)3203 4488 y
SDict begin H.S end
 3203 4488
a Black -1 x Fv(5)p Black 3240 4436 a
SDict begin H.R end
 3240 4436 a 3240
4487 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.5) cvn H.B /ANN pdfmark end
 3240 4487 a 22 w Fv(is)f(an)g Fw(W)p Fv(me)o(ga)h(program)h
(that)2049 4570 y(captures)g(this)f(speci\002cation.)35
b(The)22 b(code)h(introduces)h(a)e(ne)n(w)h(type)g(\()p
Fj(Seq)p Fv(\),)2049 4653 y(tw)o(o)d(ne)n(w)h(functions)g(\()p
Fj(map)g Fv(and)g Fj(app)p Fv(\),)f(and)h(a)f(ne)n(w)h(type)g(function)
g(\()p Fj(plus)p Fv(\).)2049 4736 y(Equality)c(quali\002ed)g(types)g
(can)g(encode)h(po)n(werful)f(static)g(in)m(v)n(ariants)g(about)2049
4819 y(data.)23 b(F)o(or)18 b(e)o(xample)h(the)f(type)h(of)f
Fj(map)h Fv(pro)o(vides)g(a)f(proof)h(that)f Fj(map)h
Fv(returns)2049 4902 y(a)g(list)f(of)h(the)g(same)g(length)h(as)e(its)h
(input)g(list.)2049 5068 y Fq(T)-6 b(racking)28 b(equality)g
(constraints.)51 b Fv(When)28 b(type-checking)j(an)d(e)o(xpres-)2049
5151 y(sion,)16 b(the)f Fw(W)p Fv(me)o(ga)g(type)h(check)o(er)g(k)o
(eeps)g(tw)o(o)f(sets)g(of)g(equality)g(constraints:)2049
5234 y Fr(obligations)20 b Fv(and)g Fr(assumptions)p
Fv(.)2049 5400 y Fr(Obligations.)j Fv(The)16 b(\002rst)f(set)h(of)g
(constraints)g(is)g(a)g(set)g(of)g Fr(obligations)p Fv(.)23
b(Obli-)p Black Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.6) cvn /DEST pdfmark end
 -158
-316 a Black Black Black Black Black -150 41 a Fg(data)33
b(Seq)h(a)g(n)-82 116 y(=)f(Nil)h(where)f(n)h(=)g(Z)-82
190 y(|)f(exists)h(m)f(.)h(Cons)f(a)h(\(Seq)g(a)f(m\))h(where)f(n)h(=)g
(S)f(m)-150 340 y(--)h(equivalently)e(in)i(explicit)e(constructor)h
(format)-150 415 y(--)h(data)f(Seq::)g(*0)h(\230>)f(Nat)h(\230>)g(*0)f
(where)-150 489 y(--)101 b(Nil::Seq)33 b(a)h(Z)-150 564
y(--)101 b(Cons::)33 b(a)h(->)g(Seq)f(a)h(m)g(->)f(Seq)h(a)g(\(S)f(m\))
-150 713 y(map::\(a)g(->)h(b\))f(->)h(Seq)f(a)h(n)g(->)f(Seq)h(b)g(n)
-150 788 y(map)f(f)h(Nil)g(=)f(Nil)-150 863 y(map)g(f)h(\(Cons)f(x)h
(xs\))g(=)f(Cons)h(\(f)f(x\))h(\(map)f(f)h(xs\))-150
1012 y({plus)f(Z)h(y})g(=)f(y)-150 1087 y({plus)g(\(S)h(x\))f(y})h(=)g
(S{plus)f(x)h(y})-150 1237 y(app::Seq)f(a)h(n)f(->)h(Seq)f(a)h(m)g(->)g
(Seq)f(a)h({plus)f(n)h(m})-150 1311 y(app)f(Nil)h(ys)g(=)f(ys)-150
1386 y(app)g(\(Cons)h(x)f(xs\))h(ys)g(=)f(Cons)h(x)f(\(app)h(p)g(xs)f
(ys\))-150 1542 y Fq(Figur)o(e)20 b(5.)166 1542 y
SDict begin H.S end
 166
1542 a Black Black 166 1542 a
SDict begin H.R end
 166 1542 a 166 1542 a
SDict begin [/View [/XYZ H.V]/Dest (figure.5) cvn /DEST pdfmark end
 166
1542 a Fq(An)g Fw(W)p Fq(mega)i(encoding)e(of)g(lists)h(whose)f(types)h
(r)o(ecord)f(their)-150 1625 y(lengths.)p -150 1643 2001
4 v Black -150 1913 a Fv(gations)30 b(are)f(generated)i(by)f(the)g
(type-check)o(er)h(when)f(\(a\))f(the)h(program)-150
1996 y(constructs)23 b(data-v)n(alues)h(with)e(constructors)i(that)e
(contain)h(equality)g(con-)-150 2079 y(straints;)h(or)f(\(b\))g(an)g(e)
o(xplicit)g(type)g(signature)g(in)g(a)g(de\002nition)g(is)f(encoun-)
-150 2162 y(tered;)j(or)f(\(c\))e(when)i(type)g(functions)g(are)f(used)
h(\(see)g Fq(T)-6 b(ype)23 b(functions)f(in)-150 2245
y Fw(W)p Fq(mega)e Fv(belo)n(w\).)-150 2411 y(W)-6 b(e)26
b(will)g(e)o(xplain)i(ho)n(w)f(these)h(are)f(used)g(by)h(considering)g
(the)f(functions)-150 2494 y(and)h(types)g(de\002ned)g(in)g(Figure)725
2495 y
SDict begin H.S end
 725 2495 a Black -1 x Fv(5)p Black 763 2443 a
SDict begin H.R end

763 2443 a 763 2494 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.5) cvn H.B /ANN pdfmark end
 763 2494 a Fv(.)48 b(There)28 b(we)f(pro)o(vide)h
(the)g(declaration)-150 2577 y(for)22 b Fj(Seq)g Fv(in)g(both)g
(formats.)33 b(The)21 b(e)o(xplicit)h(format)g(is)g(more)g(direct)g
(for)g(the)-150 2660 y(programmer)m(,)e(b)o(ut)e(the)h(equality)g
(quali\002ed)g(format)g(is)g(easier)f(to)h(use)g(when)-150
2743 y(e)o(xplaining)h(the)f(typing)h(rules.)-150 2909
y(Consider)33 b(type-checking)h(the)e(e)o(xpression)i
Fj(Nil)p Fv(.)63 b(Using)32 b(the)g(equality)-150 2992
y(quali\002ed)f(form,)j(the)c(constructor)i Fj(Nil)f
Fv(is)f(assigned)i(the)f(type)g Fj(forall)-150 3075 y(a)38
b(n.n=Z)h(=>)f(Seq)h(a)f(n)p Fv(,)21 b(thus)h Fj(Nil::Seq)39
b(a)f(n)21 b Fv(b)o(ut)g(also)h(generates)g(the)-150
3158 y(obligation)e Fj(n=Z)p Fv(.)g(Since)f Fj(Nil)h
Fv(is)f(polymorphic)i(in)f Fj(a)f Fv(and)i Fj(n)p Fv(,)e(the)h(type)g
(v)n(ari-)-150 3241 y(able)e Fj(n)g Fv(can)g(be)g(instantiated)g(to)g
Fj(Z)p Fv(.)f(Instantiating)i Fj(n)e Fv(to)h Fj(Z)g Fv(mak)o(es)g(the)g
(equal-)-150 3324 y(ity)i(constraint)h(obligation)h(Z=Z,)d(which)i(can)
g(be)g(tri)n(vially)g(dischar)o(ged)g(by)-150 3407 y(the)h(type)h
(check)o(er)l(.)34 b(After)22 b(dischar)o(ging)h(this)f(constraint)h
(the)f(type)g(of)h Fj(Nil)-150 3490 y Fv(is)c(e)o(xactly)g(the)g(type)g
(pro)o(vide)h(in)f(the)g(e)o(xplicit)g(form.)-150 3657
y Fr(Assumptions.)29 b Fv(The)21 b(second)h(set)f(of)g(constraints)g
(is)f(a)h(set)g(of)g Fr(assumptions)-150 3740 y Fv(or)16
b Fr(facts)p Fv(.)22 b(Whene)n(v)o(er)m(,)17 b(a)f(constructor)h(based)
g(pattern)f(appears)h(in)f(a)g(binding)-150 3823 y(position,)j(and)h
(the)f(constructor)h(w)o(as)f(de\002ned)h(using)g(a)f
Fj(where)g Fv(clause,)h(the)-150 3906 y(type)k(equalities)g(in)g(the)g
Fj(where)g Fv(clause)g(are)g(added)h(to)f(the)g(current)g(set)g(of)-150
3989 y(assumptions)e(in)e(the)h(scope)g(of)g(the)f(pattern.)28
b(These)21 b(assumptions)h(can)e(be)-150 4072 y(used)i(to)f(dischar)o
(ge)h(obligations.)31 b(The)22 b(equality)f(quali\002ed)h(form)f(is)g
(espe-)-150 4155 y(cially)e(helpful)g(in)g(e)o(xplaining)h(the)f(type)g
(checking)i(of)e(pattern)g(matching.)-150 4321 y(F)o(or)j(e)o(xample,)i
(consider)f(type)g(checking)h(the)e(de\002nition)h(of)f
Fj(map)p Fv(.)34 b(Recall)-150 4404 y Fj(map::\(a->b\)->Seq)40
b(a)e(n->Seq)h(b)f(n)p Fv(.)26 b(In)19 b(the)h(\002rst)f(equation,)i
(the)f(pat-)-150 4487 y(tern)c Fj(Nil)g Fv(of)g(type)g
Fj(Seq)39 b(a)f(n)16 b Fv(introduces)h(the)f(assumption)h
Fj(n=Z)f Fv(because)h(of)-150 4570 y Fj(Nil)p Fv(')l(s)j(quali\002ed)h
(type)f Fj(forall)39 b(a)f(n.n=Z)h(=>)f(Seq)h(a)f(n)p
Fv(.)26 b(On)21 b(the)f(right-)-150 4653 y(hand-side,)27
b(the)e(use)g(of)f(the)h Fj(Nil)g Fv(constructor)g(generates)h(the)e
(obligation)-150 4736 y(that)29 b Fj(n=Z)p Fv(.)g(The)h(assumption)g
(generated)h(by)e(the)h(pattern)f(on)h(the)f(left)g(is)-150
4819 y(used)20 b(to)e(dischar)o(ge)i(obligations)g(incurred)f(on)h(the)
f(right.)-150 4985 y(No)n(w)-5 b(,)25 b(consider)g(the)f(second)h
(equation)g Fj(map)39 b(f)f(\(Cons)h(x)f(xs\))g(=)h(Cons)-150
5068 y(\(f)f(x\))h(\(map)f(f)g(xs\))p Fv(.)45 b(W)-6
b(e)25 b(kno)n(w)i Fj(map)p Fv(')l(s)f(type,)i(so)e(the)g(second)i
(pattern)-150 5151 y Fj(\(Cons)39 b(x)f(xs\))23 b Fv(must)g(ha)o(v)o(e)
g(type)h Fj(\(Seq)38 b(a)g(n\))p Fv(.)e(This)22 b(implies)h
Fj(x::a)g Fv(and)-150 5234 y Fj(xs::Seq)39 b(a)f(m)30
b Fv(pro)o(vided)h Fj(n)38 b(=)g(S)h(m)p Fv(.)56 b(This)29
b(equation)i(is)f(added)h(to)f(the)-150 5317 y(list)23
b(of)i(assumptions)g(when)g(typing)g(the)f(right-hand-side)i(of)e(the)h
(second)-150 5400 y(equation:)f Fj(Cons)39 b Fv(\()p
Fj(f)20 b(x)p Fv(\))h(\()p Fj(map)g(f)g(xs)p Fv(\).)i(This)17
b(right-hand-side)j(should)f(ha)o(v)o(e)p Black Black
2049 83 a(type)k(\()p Fj(Seq)44 b(b)21 b(n)p Fv(\))h(\(the)h(range)g
(of)g Fj(map)p Fv(')l(s)g(type\).)35 b(Since)22 b Fj(xs::Seq)39
b(a)f(m)23 b Fv(we)2049 166 y(can)c(compute)h Fj(\(map)39
b(f)f(xs\)::Seq)h(b)f(m)p Fv(,)19 b(Since)f Fj(x::a)i
Fv(we)e(can)i(compute)2049 249 y Fj(\(f)38 b(x\)::b)p
Fv(,)17 b(thus)f(it)g(appears)h Fj(\(Cons)38 b(\(f)h(x\))f(\(map)g(f)h
(xs\)\)::)76 b(Seq)39 b(b)2049 332 y(\(S)f(m\))p Fv(.)27
b(But)20 b(gi)n(v)o(en)h(the)f(equality)g(constraint)h
Fj(n=S)38 b(m)20 b Fv(the)h(right)f(hand)h(side)2049
415 y(has)e(type)h Fj(Seq)38 b(b)g(n)19 b Fv(as)g(e)o(xpected.)2049
581 y Fq(T)-6 b(ype)21 b(functions)e(in)h Fw(W)p Fq(mega.)30
b Fv(The)21 b(append)i(function)e(should)h(ha)o(v)o(e)f(type)2049
664 y Fj(Seq)38 b(a)h(n)f(->)g(Seq)h(a)f(m)g(->)g(Seq)h(a)f(\(n+m\))p
Fv(.)59 b(In)31 b(order)g(to)g(type)g(such)2049 747 y(functions)f(it)e
(is)g(necessary)i(to)f(do)g(arithmetic)f(at)h(the)f(type)i(le)n(v)o
(el.)52 b(This)2049 830 y(means)20 b(de\002ning)f(functions)h(o)o(v)o
(er)f(types.)24 b(In)19 b Fw(W)p Fv(me)o(ga)g(we)g(do)h(this)e(by)i
(writ-)2049 913 y(ing)d(equations)h(o)o(v)o(er)g(types.)k(W)-6
b(e)17 b(surround)h(type-function)h(application)e(by)2049
996 y(braces)22 b(\(e.g.)30 b Ff(f)p Fj(plus)39 b(x)f(x)g(y)p
Ff(g)22 b Fv(to)f(distinguish)h(it)f(from)g(type-constructor)2049
1079 y(application)c(\(e.g.)22 b Fj(List)39 b(Int)p Fv(\).)22
b(W)-6 b(e)16 b(also)g(de\002ne)h(the)f(type-function)i
Fj(plus)2049 1162 y Fv(and)28 b(the)f(v)n(alue-function)i
Fj(append)f Fv(of)f(static)f(sequences.)50 b(The)27 b
Fj(app)g Fv(can)2049 1245 y(be)22 b(typed)g(using)g(reasoning)h
(similar)e(to)g(the)g(reasoning)i(used)f(when)g(type-)2049
1328 y(checking)k(the)f Fj(map)g Fv(function.)41 b(An)25
b(additional)h(complication)f(is)g(the)f(use)2049 1411
y(of)i(the)g(type)h(function)g Fj(plus)g Fv(to)f(re)n(write)f(type-le)n
(v)o(el)i(terms)f(into)g(normal)2049 1494 y(form)17 b(when)g(dischar)o
(ging)h(obligations.)23 b(T)-6 b(o)17 b(ensure)h(that)e(type-checking)j
(is)2049 1577 y(tractable)f(we)h(require)g(type-functions)h(to)e(be)h
(e)o(xhausti)n(v)o(e,)g(and)g(con\003uent.)2049 1743
y Fq(An)h(obser)o(v)o(ation)i(about)e(the)g(type)h(parameters)h(of)e
Fw(W)p Fq(mega)i(type)f(con-)2049 1826 y(structors.)h
Fv(The)14 b(second)i(parameter)f(of)f(the)h(type)g(constructor)g
Fj(Seq)g Fv(plays)g(a)2049 1910 y(qualitati)n(v)o(ely)k(dif)n(ferent)g
(role)g(than)g(type)h(parameters)f(in)g(other)g(data)g(struc-)2049
1993 y(tures.)k(Consider)d(the)f(declaration)g(for)g(a)g(binary)g(tree)
g(datatype:)2049 2076 y Fj(data)39 b(Tree)f(a)g(=)g(Fork)h(\(Tree)g
(a\))f(\(Tree)h(a\))f(|)g(Node)h(a)f(|)g(Tip)p Fv(.)2049
2159 y(In)17 b(this)f(declaration)i(the)f(type)g(parameter)g
Fj(a)g Fv(is)g(used)g(to)g(indicate)g(that)g(there)2049
2242 y(are)j(sub)h(components)h(of)e Fj(Tree)p Fv(s)g(that)g(are)g(of)g
(type)h Fj(a)p Fv(.)26 b(In)20 b(f)o(act,)h Fj(Tree)f
Fv(s)g(are)2049 2325 y(polymorphic.)48 b(An)o(y)28 b(type)f(of)g(v)n
(alue)g(can)h(be)f(placed)g(in)g(the)g(\223sub)g(com-)2049
2408 y(ponent\224)f(of)e(type)h Fj(a)p Fv(.)40 b(The)24
b(type)h(of)g(the)f(v)n(alue)i(placed)f(there)g(is)f(re\003ected)2049
2491 y(in)h(the)h Fj(Tree)p Fv(')l(s)g(type.)43 b(Contrast)25
b(this)h(with)f(the)g Fj(n)h Fv(in)f Fj(\(Seq)39 b(a)f(n\))p
Fv(.)43 b(Here)2049 2574 y(there)21 b(are)g(no)h(sub)g(components)h(of)
e(type)h Fj(n)p Fv(.)29 b(Instead,)22 b(the)f(parameter)h
Fj(n)f Fv(is)2049 2657 y(used)j(to)f(stand)h(for)f(an)h(abstract)f
(property)h(\(the)g(statically)f(kno)n(wn)h(length)2049
2740 y(of)e(the)f(list\).)31 b(The)21 b Fj(where)h Fv(quali\002cations)
h(restrict)d(the)i(le)o(gal)f(instances)i(of)2049 2823
y Fj(n)p Fv(.)47 b(T)-6 b(ype)27 b(parameters)h(used)g(in)e(this)h(w)o
(ay)h(are)f(sometimes)g(called)g(inde)o(x)2049 2906 y(types[)2231
2907 y
SDict begin H.S end
 2231 2907 a Black -1 x Fv(50)p Black 2306 2855
a
SDict begin H.R end
 2306 2855 a 2306 2906 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.XiThesis) cvn H.B /ANN pdfmark end
 2306 2906 a Fv(,)2344 2907
y
SDict begin H.S end
 2344 2907 a Black -1 x Fv(52)p Black 2418 2855 a
SDict begin H.R end
 2418
2855 a 2418 2906 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Xi:1999:DTP) cvn H.B /ANN pdfmark end
 2418 2906 a Fv(],)19 b(and)g(will)f(play)i(an)f
(important)g(role)g(in)g(what)g(follo)n(ws.)2049 3088
y
SDict begin H.S end
 2049 3088 a 2049 3088 a
SDict begin 10 H.A end
 2049 3088 a 2049 3088 a
SDict begin [/View [/XYZ H.V]/Dest (section.8) cvn /DEST pdfmark end
 2049
3088 a 166 x Fs(8)99 b(Comparing)25 b(F)n(ormal)f(Reasoning)h(Systems)
2049 3421 y Fw(W)p Fv(me)o(ga)19 b(uses)h(a)f(single)g(computational)h
(model)g(\(strict)e(functional)i(re)n(writ-)2049 3504
y(ing\))k(for)g(both)h(its)f(logic)g(and)h(its)f(programming.)40
b(W)-6 b(e)24 b(claim)g(that)g(this)g(is)2049 3587 y(easier)e(for)g
(programmers)g(to)g(learn)g(and)h(to)e(use)h(than)h(the)f(dual)g
(computa-)2049 3670 y(tional)h(model)h(found)h(in)e(some)h(other)g
(systems.)36 b(T)-6 b(o)24 b(illustrate)e(this)h(point)2049
3753 y(we)g(compare)h Fw(W)p Fv(me)o(ga)f(to)g(tw)o(o)g(other)g
(systems)h(with)e(similar)h(goals:)31 b(Coq)2049 3836
y(and)20 b(T)-6 b(welf.)2049 4002 y(In)16 b(Figure)2338
4003 y
SDict begin H.S end
 2338 4003 a Black -1 x Fv(6)p Black 2376 3951
a
SDict begin H.R end
 2376 3951 a 2376 4002 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.6) cvn H.B /ANN pdfmark end
 2376 4002 a 16 w Fv(we)g(see)g(a)g(similar)g
(encoding)i(of)e(natural)h(numbers)g(at)f(the)g(type)2049
4085 y(le)n(v)o(el,)21 b(and)h(an)g(encoding)h(of)e(sequences)i(with)e
(encoded)i(lengths.)30 b(In)21 b(Coq)2049 4168 y(the)26
b(de\002nition)g(of)f Fj(plus)h Fv(is)g(de\002ned)g(by)g(structural)g
(induction)h(o)o(v)o(er)f Fj(nat)2049 4252 y Fv(types,)17
b(b)o(ut)g(the)g(de\002nition)f(of)h(append)h(is)f(gi)n(v)o(en)g(by)g
(a)g(series)g(of)f(commands)2049 4335 y(\()p Fj(Introduction)p
Fv(,)24 b Fj(EApply)p Fv(,)g Fj(Simpl)f Fv(etc.\))34
b(that)22 b(guide)i(the)e(Coq)h(theorem)2049 4418 y(pro)o(v)o(er)e(to)g
(construct)g(a)g(proof)g(object)g(with)f(the)h(gi)n(v)o(en)g(type.)29
b(The)20 b(append)2049 4501 y(function)27 b(is)g(then)g(e)o(xtracted)g
(\(not)g(sho)n(wn\))g(from)g(this)f(proof)h(object.)47
b(In)2049 4584 y(the)25 b(T)-6 b(welf)23 b(encoding)k(the)d(plus)h
(function)g(and)h(the)e(append)i(function)g(are)2049
4667 y(encoded)21 b(as)e(logic)g(programs.)2049 4833
y(The)26 b(big)h(adv)n(antage)h(of)e(the)h Fw(W)p Fv(me)o(ga)g
(approach)g(is)f(that)h(the)f(program)h Fr(is)2049 4916
y Fv(the)18 b(logic.)24 b(There)18 b(is)g(no)h(translation)g(between)g
(programming)h(notation)f(to)2049 4999 y(some)26 b(e)o(xternal)g
(reasoning)g(tool.)43 b(Second,)28 b(there)d(is)g(no)h(need)h(to)e
(switch)2049 5082 y(gears)j(when)h(reasoning)g(about)g(the)f(system.)51
b(Rather)28 b(than)g(thinking)h(in)2049 5165 y(terms)h(of)f(our)h
(implementation)h(programming)g(language,)j(in)c(Coq)g(we)2049
5248 y(must)c(think)h(in)f(terms)g(of)h(proof)f(tactics,)i(and)f(in)f
(T)-6 b(welf)26 b(\(gi)n(v)o(en)h(that)f(the)2049 5331
y(v)n(ast)20 b(majority)g(of)g(programs)h(are)g(not)f(written)f(in)h
(Prolog\))g(we)g(must)g(think)2049 5414 y(in)f(terms)g(of)f(logic)i
(programs.)p Black Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.7) cvn /DEST pdfmark end
 -158
-316 a Black Black Black -150 3 2001 4 v -150 85 a Fq(Coq)19
b(encoding)p Black Black -150 160 a Fg(Inductive)33 b(nat)g(:)h(Set)f
(:=)h(Z)g(:)g(nat)f(|)h(S)g(:)f(nat)h(->)f(nat.)-150
309 y(Definition)g(plus)g(:)h(nat->nat->nat)e(:=)-150
384 y(Fix)h(plus)-82 458 y({plus)g([n:nat])g(:)h(nat->nat)f(:=)19
533 y([m:nat]Cases)g(n)g(of)324 608 y(Z)h(=>)g(m)256
683 y(|)g(\(S)g(p\))f(=>)h(\(S)g(\(plus)f(p)h(m\)\))256
757 y(end}.)-150 832 y(Inductive)67 b(Seq)33 b([A:Set])g(:)h(nat)f(->)h
(Set)f(:=)-116 907 y(Nil)g(:)h(\(Seq)f(A)h(Z\))-150 981
y(|Cons)f(:)h(\(n:nat;)f(x:A;)g(xs)h(:)g(\(Seq)f(A)h(n\)\)\(Seq)f(A)h
(\(S)f(n\)\).)-150 1131 y(Definition)g(app)g([A:Set])g(:)h(\(m,n:nat\))
-82 1206 y(\(Seq)f(A)h(m\))f(->)h(\(Seq)f(A)h(n\))g(->)f(\(Seq)h(A)g
(\(plus)f(m)h(n\)\).)-150 1280 y(Intros.)67 b(Induction)33
b(H.)g(EApply)g(H0.)h(Simpl.)-150 1355 y(Apply)f(\(Cons)g(A)h(\(plus)f
(n0)h(n\))g(x)f(HrecH\).)g(Defined.)p -150 1410 V -150
1521 a Fq(T)-6 b(welf)19 b(encoding)p Black Black -150
1596 a Fg(elem)33 b(:)h(type.)-150 1671 y(e1)g(:)f(elem.)-150
1820 y(nat)g(:)h(type.)-150 1895 y(z)g(:)f(nat.)-150
1970 y(s)h(:)f(nat)h(->)g(nat.)-150 2119 y(plus)f(:)h(nat)g(->)f(nat)h
(->)f(nat)h(->)f(type.)-150 2194 y(base)g(:)h(plus)f(z)h(Y)g(Y.)-150
2269 y(step)f(:)h(plus)f(\(s)h(X\))g(Y)f(\(s)h(Z\))87
2343 y(<-)g(plus)f(X)h(Y)g(Z.)-150 2493 y(seq)f(:)h(nat)g(->)f(type.)
-150 2567 y(nil)67 b(:)34 b(\(seq)f(z\).)-150 2642 y(cons)g(:)h(elem)f
(->)h(\(seq)f(A\))h(->)g(\(seq)f(\(s)h(A\)\).)-150 2792
y(app)f(:)h(\(plus)f(A)h(B)g(C\))g(->)f(\(seq)h(A\))f(->)155
2866 y(\(seq)g(B\))h(->)f(\(seq)h(C\))f(->)h(type.)-150
2941 y(app_1)f(:)h(app)f(base)h(nil)f(X)h(X.)-150 3016
y(app_2)f(:)h(app)f(\(step)h(P\))f(\(cons)h(X)f(XS\))h(YS)f(\(cons)h(X)
f(ZS\))189 3091 y(<-)g(app)h(P)g(XS)f(YS)h(ZS.)p -150
3115 V -127 3227 a Fq(Figur)o(e)18 b(6.)181 3227 y
SDict begin H.S end
 181
3227 a Black Black 181 3227 a
SDict begin H.R end
 181 3227 a 181 3227 a
SDict begin [/View [/XYZ H.V]/Dest (figure.6) cvn /DEST pdfmark end
 181
3227 a Fq(Coq)h(and)f(T)-6 b(welf)19 b(pr)o(ograms)g(f)n(or)h
(comparison)f(to)g Fw(W)p Fq(mega.)p Black -150 3403
a
SDict begin H.S end
 -150 3403 a -150 3403 a
SDict begin 10 H.A end
 -150 3403 a -150 3403 a
SDict begin [/View [/XYZ H.V]/Dest (section.9) cvn /DEST pdfmark end
 -150
3403 a 83 x Fs(9)99 b(W)n(itness)25 b(Objects)-150 3653
y Fv(GADT')l(s)17 b(can)h(model)h(relations)f(between)g(types,)g(other)
h(than)f(equality)-5 b(,)18 b(by)-150 3736 y(de\002ning)24
b(witness)f(types.)37 b(A)24 b(witness)f(is)g(a)g(v)n(alue)h(with)f(a)h
(parameterized)-150 3819 y(type)e(whose)f(e)o(xistence)h(witnesses)g(a)
f(relationship)h(between)f(its)g(type)h(pa-)-150 3902
y(rameters.)g(The)17 b(v)o(ery)f(e)o(xistence)h(of)g(the)f(witness)g
(\(i.e.)22 b(a)16 b(non)h(bottom)g(v)n(alue)-150 3985
y(with)25 b(the)h(gi)n(v)o(en)h(type\))f(implies)f(that)h(the)g
(property)h(must)e(be)h(true.)44 b(W)m(it-)-150 4068
y(nesses)20 b(to)e(untrue)i(properties)g(cannot)g(be)f(constructed)h
(since)f(such)h(v)n(alues)-150 4151 y(w)o(ould)g(be)f(ill-typed.)-150
4317 y(The)g(simplest)g(witness)f(is)h(the)g Fj(Equal)g
Fv(type)h(constructor)l(.)p Black Black -150 4465 a Fj(data)39
b(Equal)f(a)g(b)h(=)f(Eq)g(where)h(a=b)-150 4612 y Fv(A)18
b(v)n(alue)i(of)e(type)h Fj(Equal)39 b(a)f(b)18 b Fv(is)g(a)h(dynamic)h
(witness)e(to)h(the)f(static)g(prop-)-150 4695 y(erty)28
b(that)f Fj(a)h Fv(=)f Fj(b)p Fv(.)50 b(W)-6 b(e)27 b(will)g(see)g
(some)i(uses)f(for)f(this)h(type)g(later)f(in)h(the)-150
4778 y(paper)l(.)41 b(A)24 b(v)n(alue)i(of)e(type)h Fj(Sum)39
b(n)f(m)g(p)25 b Fv(can)g(only)g(be)g(constructed)h(if)e(the)-150
4861 y Fj(Nat)18 b Fv(kinded)h(parameters)f Fj(n)p Fv(,)g
Fj(m)p Fv(,)f(and)h Fj(p)g Fv(are)g(in)f(the)h(follo)n(wing)g
(relationship:)-150 4944 y Fj(n)38 b(+)g(m)19 b Fv(=)g
Fj(p)p Fv(.)p Black Black -150 5151 a Fj(data)39 b(Sum)f(w)g(x)g(y)-74
5234 y(=)g(Base)h(where)g(w=Z)f(,)g(x=y)-74 5317 y(|)g(exists)h(m)f(n)h
(.)f(Step)g(\(Sum)h(m)f(x)g(n\))345 5400 y(where)h(w=S)f(m,)h(y=S)f(n)p
Black Black 2049 83 a Fv(This)21 b(witness)g(allo)n(ws)g(us)g(to)g
(de\002ne)h(an)f(alternati)n(v)o(e)g(append)i(function)f(for)2049
166 y(static-length)d(lists.)p Black Black 2049 313 a
Fj(data)39 b(Ans)f(a)g(n)g(m)h(=)f(exists)h(p)f(.)g(Ans)g(\(Sum)h(n)f
(m)g(p\))h(\(Seq)f(a)g(p\))2049 479 y(append)h(::)f(Seq)g(a)h(n)f(->)g
(Seq)h(a)f(m)g(->)g(Ans)h(a)f(n)g(m)2049 562 y(append)h(Nil)f(ys)g(=)h
(Ans)f(SumBase)h(ys)2049 645 y(append)g(\(Cons)f(x)h(xs\))f(ys)g(=)h
(Ans)f(\(SumStep)h(p\))f(\(Cons)h(x)f(zs\))2163 729 y(where)h(\(Ans)f
(p)h(zs\))f(=)g(append)h(xs)f(ys)2049 876 y Fv(If)24
b(we)h(can')o(t)g(statically)f(determine)h(the)g(length)g(of)g
(appending)i(tw)o(o)e(lists,)2049 959 y(we)c(can)h(dynamically)g
(compute)g(both)g(the)f(ne)n(w)h(list)e(and)i(a)f(witness)g(to)g(its)
2049 1042 y(length.)2049 1195 y
SDict begin H.S end
 2049 1195 a 2049 1195
a
SDict begin 10 H.A end
 2049 1195 a 2049 1195 a
SDict begin [/View [/XYZ H.V]/Dest (section.10) cvn /DEST pdfmark end
 2049 1195 a 166 x Fs(10)99
b(Example:)32 b(T)-7 b(ype-Safety)26 b(&)f(Static)g(Scoping)2049
1498 y Fv(W)-6 b(e)25 b(no)n(w)h(turn)g(to)g(a)f(richer)h(e)o(xample:)
38 b(modelling)26 b(a)g(simple)f(imperati)n(v)o(e)2049
1581 y Fr(While)19 b(langua)o(g)o(e)h Fv(with)e(semantic)h(properties)g
(of)g(static)f(scoping)h(and)g(type)2049 1664 y(safety[)2252
1665 y
SDict begin H.S end
 2252 1665 a Black -1 x Fv(26)p Black 2327 1613
a
SDict begin H.R end
 2327 1613 a 2327 1664 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.SheardPasalic2002) cvn H.B /ANN pdfmark end
 2327 1664 a Fv(,)2363 1665
y
SDict begin H.S end
 2363 1665 a Black -1 x Fv(28)p Black 2438 1613 a
SDict begin H.R end
 2438
1613 a 2438 1664 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.PST00TR) cvn H.B /ANN pdfmark end
 2438 1664 a Fv(].)j(Ev)o(ery)c(while-program)h
(represented)g(as)e(an)h Fw(W)p Fv(me)o(ga)h(data)2049
1747 y(structure)c(is)f(a)g(proof)h(that)g(e)n(v)o(ery)g(v)n(ariable)g
(in)g(that)f(program)h(refers)g(to)f(some)2049 1830 y(binding)i(site)e
(\(static)h(scoping\),)h(and)g(that)f(the)g(program)g(is)g(also)g(well)
f(typed.)2049 1913 y(The)22 b(po)n(wer)g(of)g Fw(W)p
Fv(me)o(ga)h(is)e(that)h(modelling)g(these)h(static)e(semantic)h(prop-)
2049 1996 y(erties)17 b(requires)g(approximately)h(the)f(same)g(amount)
h(of)f(time)g(and)g(intellec-)2049 2079 y(tual)h(ef)n(fort)h(one)g
(uses)g(to)f(model)h(conte)o(xt)g(free)f(syntactic)h(properties)g
(using)2049 2162 y(other)26 b(means.)44 b(In)26 b(addition)g(an)o(y)g
Fw(W)p Fv(me)o(ga)g(program)h(that)e(manipulates)i(a)2049
2245 y(while-program)18 b(data)g(structure,)g(is)f(guaranteed)j(to)d
(maintain)h(these)g(prop-)2049 2328 y(erties.)j Fw(W)p
Fv(me)o(ga)16 b(programs)g(that)e(do)i(not)f(maintain)g(the)g(scoping)h
(and)g(typing)2049 2411 y(are)j(statically)f(determined)i(to)f(be)g
(ill-typed)g(and)h(are)f(thus)g(rejected.)2049 2577 y(In)f(Figure)2343
2578 y
SDict begin H.S end
 2343 2578 a Black -1 x Fv(7)p Black 2380 2527
a
SDict begin H.R end
 2380 2527 a 2380 2577 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.7) cvn H.B /ANN pdfmark end
 2380 2577 a 18 w Fv(we)h(introduce)g(data)g
(structures)f(to)h(represent)g(the)f(While)g(lan-)2049
2660 y(guage.)45 b(The)26 b Fj(data)f Fv(declarations)i(introduce)g
(three)f(ne)n(w)g(parameterized)2049 2743 y(types)j Fj(V)p
Fv(,)f Fj(Exp)h Fv(and)g Fj(Com)g Fv(for)f(v)n(ariables,)j(e)o
(xpressions,)h(and)e(commands.)2049 2826 y(These)17 b(are)h
Fr(type)f(constructor)o(s)p Fv(,)i(and)f(an)g(actual)f(element)h(of)f
(the)h(ne)n(w)f(types)2049 2909 y(will)31 b(ha)o(v)o(e)i(types)f(lik)o
(e)g Fj(\(V)39 b(\(Int,Bool\))g(Bool\))p Fv(,)c Fj(\(Exp)k
(\(Int,Bool\))2049 2992 y(Int\))p Fv(,)27 b(or)e Fj(\(Com)38
b(\(Int,Bool\)\))p Fv(.)43 b(W)-6 b(e)25 b(interpret)g
Fj(\(Exp)39 b(s)f(t\))25 b Fv(as)g(an)h(e)o(x-)2049 3075
y(pression)i(with)e(type)h Fj(t)g Fv(in)g(store)g Fj(s)p
Fv(.)47 b(The)26 b(type)i(of)e(a)h(store)g(captures)h(the)2049
3158 y(types)19 b(of)g(the)g(v)n(ariables)h(currently)f(in)g(scope.)24
b(A)19 b(similar)f(interpretation)h(is)2049 3241 y(gi)n(v)o(en)f(to)e
(v)n(ariables)i Fj(\(V)38 b(s)g(t\))p Fv(.)22 b(Commands)c(don')o(t)f
(ha)o(v)o(e)g(result)g(types,)g(b)o(ut)2049 3324 y(are)25
b(interpreted)h(in)f(the)g(store)h Fj(\(Com)38 b(s\))p
Fv(.)k(The)26 b(declarations)g(also)f(intro-)2049 3407
y(duce)c Fr(constructor)g(functions)f Fj(Z)p Fv(,)g Fj(S)p
Fv(,)f Fj(IntC)p Fv(,)h Fj(BoolC)p Fv(,)f(etc.)26 b(whose)20
b(types)h(are)2049 3490 y(gi)n(v)o(en)e(as)f(comments)h(in)f(Figure)
2925 3491 y
SDict begin H.S end
 2925 3491 a Black -1 x Fv(7)p Black 2962
3441 a
SDict begin H.R end
 2962 3441 a 2962 3490 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.7) cvn H.B /ANN pdfmark end
 2962 3490 a Fv(.)k(Readers)d(f)o
(amiliar)f(with)g(type)g(systems)2049 3574 y(will)f(notice)i(that)f
(the)h(types)f(of)h(the)f(constructor)h(functions)h(look)e(a)h(lot)f
(lik)o(e)2049 3657 y(typing)23 b(judgments.)36 b(W)-6
b(e)22 b(ha)o(v)o(e)h(used)h(the)e(equality)i(constrained)g(types)f(to)
2049 3740 y(encode)g(and)e(reason)h(about)g(these)g(inference)g(rules)f
Fr(in)g(the)g(pr)m(o)o(gr)o(amming)2049 3823 y(langua)o(g)o(e)p
Fv(.)2049 3989 y Fq(Manipulating)c(while-pr)o(ograms.)22
b Fv(In)d(Figure)3345 3990 y
SDict begin H.S end
 3345 3990 a Black -1 x Fv(8)p
Black 3382 3938 a
SDict begin H.R end
 3382 3938 a 3382 3989 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.8) cvn H.B /ANN pdfmark end
 3382 3989 a
19 w Fv(a)g(small)f(interpreter)h(for)2049 4072 y(the)29
b(While-language)i(is)e(gi)n(v)o(en.)55 b(Expressions)31
b(are)e(interpreted)h(by)g(the)2049 4155 y(function)21
b Fj(eval::Exp)39 b(s)f(t)g(->)g(s)h(->)f(t)p Fv(.)26
b(The)20 b(function)g Fj(eval)p Fv(,)g(gi)n(v)o(en)h(a)2049
4238 y(term)26 b(of)g(type)g Fj(\(Exp)39 b(s)f(t\))26
b Fv(producers)h(a)f(function)h(from)f Fj(s)g Fv(to)g
Fj(t)p Fv(.)45 b Fj(eval)2049 4321 y Fv(gi)n(v)o(es)18
b(meaning)h(to)e(the)h(term.)k(Gi)n(v)o(en)c Fj(store::s)p
Fv(,)g(a)g(data)g(structure)f(which)2049 4404 y(stores)27
b(v)n(alues)h(for)f(the)g(e)o(xpression')l(s)i(v)n(ariables,)g(then)f
(we)f(can)g(produce)2049 4487 y(the)20 b(v)n(alue)g(of)g(the)f(e)o
(xpression)i(by)f(applying)h Fj(eval)f Fv(to)g(the)f(e)o(xpression)i
(and)2049 4570 y Fj(store)p Fv(.)54 b(The)29 b(type)h(of)f(the)g(store)
h(models)f(the)h(types)f(of)g(the)h(reachable)2049 4653
y(v)n(ariables)23 b(in)f(the)g(object-program.)35 b(V)-8
b(ariables)22 b(are)g(inte)o(gers)g(\(using)h(a)f(de)2049
4736 y(Bruijn-lik)o(e)g(notation\),)g(and)h(stores)f(are)f(nested)i
(pairs.)32 b(The)21 b(nested)i(pairs)2049 4819 y(ha)o(v)o(e)17
b(the)f(follo)n(wing)h(shape)g Fj(\(0,\(1,\(2,)40 b(...\)\)\))23
b Fv(where)16 b(the)h Fj(0)p Fv(,)f Fj(1)p Fv(,)h(and)g
Fj(2)2049 4902 y Fv(indicate)k(the)g(inde)o(x)h(of)f(the)g(v)n(ariable)
g(that)g(\223reaches\224)h(to)f(the)g(correspond-)2049
4985 y(ing)h(location)f(in)h(the)f(nested)h(pair)l(.)30
b(Because)23 b(of)e(the)g(natural)h(number)o(-lik)o(e)2049
5068 y(de\002nition)15 b(of)f(the)h(type)g Fj(\(V)38
b(s)h(t\))14 b Fv(we)h(see)f(that)h Fj(\(Var)38 b(Z\))15
b Fv(models)g(the)g(v)n(ari-)2049 5151 y(able)21 b(with)f(inde)o(x)h
(0,)g Fj(\(Var)39 b(\(S)f(Z\)\))21 b Fv(models)g(the)f(v)n(ariable)i
(with)e(inde)o(x)h(1,)2049 5234 y(and)e Fj(\(Var)38 b(\(S)h(\(S)f
(Z\)\)\))18 b Fv(models)h(the)f(v)n(ariable)h(with)f(inde)o(x)h(2,)f
(etc.)23 b(Thus)2049 5317 y(if)17 b(the)g(type)h(of)f(the)h(store)f(is)
g Fj(\(Int,\(Bool,a\)\))h Fv(then)g(v)n(ariable)g(with)f(inde)o(x)2049
5400 y(0)i(has)g(type)h Fj(Int)f Fv(and)g(the)g(v)n(ariable)h(with)e
(inde)o(x)i(1)f(has)g(type)g Fj(Bool)p Fv(.)p Black Black
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.8) cvn /DEST pdfmark end
 -158
-316 a Black Black Black Black Black -150 41 a Fg(data)33
b(V)h(s)g(t)-82 116 y(=)f(exists)h(m)f(.)h(Z)g(where)f(s)h(=)g(\(t,m\))
575 b(--)33 b(x0)678 b(V)33 b(\(t,m\))h(t)-82 190 y(|)f(exists)h(m)f(x)
h(.)g(S)g(\(V)f(m)h(t\))g(where)f(s)h(=)f(\(x,m\))237
b(--)33 b(xn)678 b(V)33 b(m)h(t)g(->)f(V)h(\(x,m\))f(t)-150
340 y(data)g(Exp)h(s)g(t)-82 415 y(=)f(IntC)h(Int)f(where)h(t)f(=)h
(Int)779 b(--)33 b(5)712 b(Int)33 b(->)h(Exp)f(s)h(Int)-82
489 y(|)f(BoolC)h(Bool)f(where)g(t)h(=)g(Bool)677 b(--)33
b(True)610 b(Bool)33 b(->)h(Exp)f(s)h(Bool)-82 564 y(|)f(Plus)h(\(Exp)f
(s)h(Int\))f(\(Exp)h(s)f(Int\))h(where)f(t)h(=)g(Int)101
b(--)33 b(x)h(+)g(3)576 b(Exp)33 b(s)h(Int)f(->)h(Exp)f(s)h(Int)g(->)f
(Exp)h(s)g(Int)-82 639 y(|)f(Lteq)h(\(Exp)f(s)h(Int\))f(\(Exp)h(s)f
(Int\))h(where)f(t)h(=)g(Bool)67 b(--)33 b(x)h(<=)g(3)542
b(Exp)33 b(s)h(Int)f(->)h(Exp)f(s)h(Int)g(->)f(Exp)h(s)g(Bool)-82
713 y(|)f(Var)h(\(V)g(s)f(t\))1152 b(--)33 b(x)712 b(V)33
b(s)h(t)g(->)f(Exp)h(s)g(t)-150 863 y(data)f(Com)h(s)-82
938 y(=)f(exists)h(t)f(.)h(Set)g(\(V)f(s)h(t\))g(\(Exp)f(s)h(t\))406
b(--)34 b(x)f(:=)h(e)576 b(V)33 b(s)h(t)g(->)f(Exp)h(s)g(t)f(->)h(Com)g
(s)-82 1012 y(|)f(Seq)h(\(Com)f(s\))h(\(Com)f(s\))847
b(--)34 b({)f(s1;)h(s2;)f(})407 b(Com)33 b(s)h(->)f(Com)h(s)g(->)f(Com)
h(s)-82 1087 y(|)f(If)h(\(Exp)f(s)h(Bool\))f(\(Com)h(s\))f(\(Com)h(s\))
440 b(--)34 b(if)f(e)h(then)f(x)h(else)f(y)170 b(Exp)33
b(s)h(Bool)f(->)h(Com)f(s)h(->)g(Com)f(s)h(->)g(Com)f(s)-82
1162 y(|)g(While)h(\(Exp)f(s)h(Bool\))f(\(Com)g(s\))610
b(--)34 b(while)f(e)g(do)h(s)373 b(Exp)33 b(s)h(Bool)f(->)h(Com)f(s)h
(->)g(Com)f(s)-82 1237 y(|)g(exists)h(t)f(.)h(Declare)f(\(Exp)g(s)h
(t\))g(\(Com)f(\(t,s\)\))135 b(--)34 b({)f(int)h(x)f(=)h(5;)g(s)g(})237
b(Exp)33 b(s)h(t)g(->)f(Com)h(\(t,s\))f(->)h(Com)f(s)-150
1392 y Fq(Figur)o(e)24 b(7.)182 1392 y
SDict begin H.S end
 182 1392 a Black
Black 182 1392 a
SDict begin H.R end
 182 1392 a 182 1392 a
SDict begin [/View [/XYZ H.V]/Dest (figure.7) cvn /DEST pdfmark end
 182 1392 a Fq(T)-6
b(yped,)26 b(statically)e(scoped,)i(abstract)f(syntax)g(f)n(or)g(the)g
Fe(While)f(language)p Fq(.)41 b(The)24 b(left)g(hand)g(column)g
(illustrates)g(the)g Fw(W)p Fq(mega)i(code)f(that)-150
1475 y(intr)o(oduces)16 b(data)h(structur)o(es)g(that)f(r)o(epr)o
(esent)h(the)f(new)h(object-language,)h(and)e(the)h(middle)f(column)h
(\(f)n(ollo)o(wing)g(the)g(comment)g(tok)o(en)g Fj(--)p
Fq(\))g(suggests)-150 1558 y(a)j(concr)o(ete)g(syntax)g(that)f(the)g
(abstract)h(syntax)g(r)o(epr)o(esents.)25 b(The)19 b(right)h(hand)e
(column)h(gi)o(v)o(es)i(the)e(type)h(of)g(the)f(constructor)h(function)
e(as)i(described)-150 1641 y(in)e(the)g(text)h(belo)o(w)-5
b(.)p -150 1676 4200 4 v Black -150 1835 a Fv(Under)37
b(this)f(interpretation)g(it)g(is)g(easy)h(to)f(understand)i(the)e
(functions)-150 1918 y Fj(update)p Fv(,)46 b Fj(eval)p
Fv(,)h(and)41 b Fj(exec)p Fv(.)89 b(Consider:)68 b Fj(\(update)39
b(\(S)f(Z\))g(False)-150 2001 y(\(12,\(True,0\)\))p Fv(.)43
b(This)24 b(should)i(return)f(a)g(ne)n(w)h(nested)f(pair)g(where)h(the)
-150 2084 y(location)18 b(of)g(the)g(inde)o(x)g(\(\(S)f(Z\))f(which)i
(is)g(1\))f(has)h(been)h(replaced)f(by)g Fj(False)-150
2167 y Fv(gi)n(ving)i Fj(\(12,\(False,0\)\))p Fv(.)k(This)19
b(proceeds)h(by)-150 2250 y Fj(\(update)39 b(\(S)f(Z\))g(False)h
(\(12,\(True,0\)\))84 b Fx(\000)-12 b(!)83 b Fj(\(12,update)39
b(Z)-150 2333 y(False)g(\(True,0\)\))45 b Fx(\000)-12
b(!)44 b Fj(\(12,\(False,0\)\))p Fv(.)101 b(Note)44 b(ho)n(w)i(pattern)
-150 2416 y(matching)20 b(chooses)g(the)f(correct)g(clause)h(to)e(e)o
(x)o(ecute.)-150 2582 y(In)34 b(a)g(similar)g(f)o(ashion)h(the)f
Fj(eval)h Fv(function)g(when)g(applied)g(to)f(a)g(v)n(ari-)-150
2674 y(able)29 b Fj(\(Var)39 b Fr(i)p Fj(\))29 b Fv(\223e)o
(xtracts\224)g(the)h Fr(i)749 2646 y Fd(t)t(h)830 2674
y Fv(v)n(alue)g(from)g(a)f(nested)h(pair)l(.)53 b Fj(\(eval)-150
2757 y(\(Var)39 b(\(S)f(Z\)\))g(\(12,\(True,0\)\))27
b Fx(\000)-12 b(!)26 b Fj(\(eval)38 b(\(Var)h(Z\))f(\(True,0\)\))-150
2840 y Fx(\000)-12 b(!)24 b Fj(True)p Fv(.)41 b(The)24
b(e)o(x)o(ecution)i(function)g(for)e(commands)j Fj(\(exec::Com)39
b(s)-150 2923 y(->)f(s)h(->)f(s\))23 b Fv(is)f(a)h(store)f(transformer)
m(,)i(transforming)f(the)g(store)g(accord-)-150 3006
y(ing)c(to)g(the)g(assignments)h(e)o(x)o(ecuted)g(in)f(the)g(command.)
-150 3163 y(Since)29 b(the)g(properties)g(of)g(the)g(object-programs)h
(are)f(captured)h(in)f(their)-150 3238 y(types,)19 b(respecting)i
(these)e(types)h(ensures)g(that)f(the)g(meta-programs)i(main-)-150
3313 y(tain)h(the)h(properties)f(of)h(the)f(object)h(programs.)34
b(F)o(or)22 b(e)o(xample)h(gi)n(v)o(en)g(that)-150 3387
y(the)30 b(meta-le)n(v)o(el)h(v)n(ariables)g Fj(x)f Fv(and)h
Fj(sum)f Fv(are)g(de\002ned)h(by)g Fj(sum)38 b(=)h(Z)30
b Fv(\(the)-150 3462 y(v)n(ariable)e(with)e(inde)o(x)i(0\))f(and)g
Fj(x)38 b(=)h(S)f(Z)27 b Fv(\(the)g(v)n(ariable)g(with)g(inde)o(x)g
(1\))g(,)-150 3537 y(observ)o(e:)p Black Black -150 3616
a Fg(prog::Com)33 b(\(Int,\(Int,a\)\))-150 3691 y(prog)g(=)h(Seq)g
(\(Set)f(sum)g(\(Int)h(0\)\))223 3765 y(\(Seq)f(\(Set)g(x)h(\(Int)f
(1\)\))392 3840 y(\(While)g(\(Lteq)g(\(Var)h(x\))f(\(Int)h(5\)\))460
3915 y(\(Seq)f(\(Set)g(sum)h(\(Plus)f(\(Var)h(sum\)\(Var)e(x\)\)\))629
3990 y(\(Set)h(x)h(\(Plus)f(\(Var)h(x\)\(Int)f(1\)\)\)\)\)\))-150
4064 y(--)h({)f(sum)h(=)g(0;)-150 4139 y(--)101 b(x)34
b(=)g(1;)-150 4214 y(--)101 b(while)34 b(\(x)f(<=)h(5\))-150
4288 y(--)135 b({)34 b(sum)f(=)h(sum)g(+)f(x;)-150 4363
y(--)203 b(x)34 b(=)f(x)h(+)g(1;)g(})f(})-150 4442 y
Fv(The)19 b(term)f Fj(prog)h Fv(has)g(a)f(meta-le)n(v)o(el)h(type)g
(that)f(states)h(that)f(it)g(is)g(well-typed)-150 4517
y(at)25 b(the)g(object-le)n(v)o(el,)i(only)f(if)f(the)g(object-le)n(v)o
(el)h(store)f(has)g(an)h Fj(Int)f Fv(at)g(in-)-150 4592
y(de)o(x)o(es)g(0)f(and)g(1.)38 b(If)24 b(one)g(tries)g(to)f(create)i
(an)f(ill-typed)g(object-le)n(v)o(el)g(term)-150 4666
y(a)c(static)f(type)h(checking)h(error)f(occurs.)26 b(F)o(or)19
b(e)o(xample)h(consider)h(the)e(com-)-150 4741 y(mand)29
b Fj(\(if)39 b(x)f(then)g(x)h(:=)f(0)g(else)h(x)f(:=)g(1\))29
b Fv(where)f(the)h(v)n(ariable)g Fj(x)-150 4816 y Fv(needs)20
b(to)f(be)g(typed)h(as)e(both)i(an)f Fj(Int)g Fv(and)h(a)f
Fj(Bool)p Fv(.)p Black Black -150 4955 a Fg(badIf)33
b(=)h(If)g(\(Var)f(x\))h(\(Set)f(x)h(\(IntC)f(0\)\))g(\(Set)h(x)g
(\(IntC)f(1\)\))-150 5104 y(In)h(the)f(expression:)g(Set)g(x)h(\(IntC)f
(0\))-150 5179 y(the)g(result)h(type:)f(Com)g(\(a,\(Int,b\)\))-150
5254 y(was)g(not)h(what)f(was)h(expected:)f(Com)g(\(a,\(Bool,c\)\))-48
5329 y(Int)101 b(does)33 b(not)h(unify)f(with)135 b(Bool)p
Black Black 2049 1835 a Fq(P)o(ossible)28 b(Enhancements.)53
b Fv(Enhancing)30 b(object-languages)i(with)c(type)2049
1918 y(safety)d(can)g(be)g(accomplished)h(in)f(tw)o(o)f(dimensions:)36
b(a)25 b(richer)f(language)2049 2001 y Fr(or)h Fv(a)f(richer)h(type)g
(system.)41 b(W)-6 b(e)24 b(ha)o(v)o(e)h(done)h(both.)40
b(W)-6 b(e)25 b(ha)o(v)o(e)f(also)h(mod-)2049 2084 y(elled)g(se)n(v)o
(eral)g(dif)n(ferent)g(styles)g(of)g(language)h(semantics)f(other)g
(than)h(the)2049 2167 y(big-step)19 b(style)g(gi)n(v)o(en)g(for)g(the)g
(While-language.)24 b(One)19 b(of)g(our)g(most)g(inter)o(-)2049
2250 y(esting)24 b(semantics)g(consisted)h(of)f(a)g(typed)g(small)g
(step)g(semantics.)38 b(Since)2049 2333 y(this)18 b(small)g(step)g
(semantics)h(is)f(typed,)h(it)e(amounts)i(to)g(a)f(machine)h(check)o
(ed)2049 2416 y(subject)g(reduction)h(proof[)2766 2418
y
SDict begin H.S end
 2766 2418 a Black -2 x Fv(49)p Black 2842 2365 a
SDict begin H.R end
 2842
2365 a 2842 2416 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Wright:94) cvn H.B /ANN pdfmark end
 2842 2416 a Fv(].)2049 2440 y
SDict begin H.S end
 2049
2440 a 2049 2440 a
SDict begin 10 H.A end
 2049 2440 a 2049 2440 a
SDict begin [/View [/XYZ H.V]/Dest (section.11) cvn /DEST pdfmark end
 2049 2440
a 166 x Fs(11)99 b(Staging)25 b(and)h(Ef\002cient)g(Implementations)
2049 2743 y Fv(Staged)20 b(programs)h(proceed)f(in)g(stages.)26
b(Each)20 b(stage)g(\223writes\224)f(a)h(program)2049
2826 y(that)f(is)f(e)o(x)o(ecuted)i(in)f(the)g(ne)o(xt)h(stage.)j
(Practical)18 b(e)o(xamples)i(of)f(staged)h(sys-)2049
2909 y(tems)k(include)g(run-time)g(code)g(generation,)i(dynamic)f
(compilation,)g(and)2049 2992 y(program)k(generators.)51
b(Staging)28 b(is)g(the)g(k)o(e)o(y)h(technology)h(that)e(supports)2049
3075 y(ef)n(\002cient)19 b(implementations)g(without)h(interpreti)n(v)o
(e)f(o)o(v)o(erhead.)2049 3241 y(Staging)k(is)g(an)g(programming)h
(language)h(interf)o(ace)e(to)g(code)h(generation.)2049
3324 y(W)-6 b(e)18 b(ha)o(v)o(e)h(b)o(uilt)f(tw)o(o)h(lar)o(ge)f
(sophisticated)i(systems)f(that)g(implement)g(stag-)2049
3407 y(ing.)55 b(MetaML[)2508 3408 y
SDict begin H.S end
 2508 3408 a Black
-1 x Fv(33)p Black 2583 3357 a
SDict begin H.R end
 2583 3357 a 2583 3407
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Sheard:1999:UMS) cvn H.B /ANN pdfmark end
 2583 3407 a Fv(],)31 b(a)f(system)f(with)g(run-time)h(code)g
(generation,)j(and)2049 3490 y(T)-5 b(emplate)30 b(Hask)o(ell[)2608
3491 y
SDict begin H.S end
 2608 3491 a Black -1 x Fv(34)p Black 2684 3440
a
SDict begin H.R end
 2684 3440 a 2684 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Sheard02) cvn H.B /ANN pdfmark end
 2684 3490 a Fv(],)j(a)d(system)h(with)g
(compile-time)f(code)i(genera-)2049 3574 y(tion)d(\(think)g(macros,)i
(quasi-quotes,)h(and)e(type)f(safety\).)52 b(In)29 b(Figure)3975
3574 y
SDict begin H.S end
 3975 3574 a Black Fv(11)p Black 4050 3523 a
SDict begin H.R end
 4050
3523 a 4050 3574 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.11) cvn H.B /ANN pdfmark end
 4050 3574 a 2049 3657 a Fv(we)19 b(use)g(the)g
(staging)g(mechanism)h(of)f Fw(W)p Fv(me)o(ga.)k(It)18
b(consists)h(of)g(the)g(annota-)2049 3740 y(tions)d(brack)o(ets)h(\()p
Fj([|)p 2618 3740 23 4 v 103 w(|])p Fv(\))f(and)h(escape)g(\()p
Fj($\()p 3278 3740 V 103 w(\))p Fv(\).)22 b(Brack)o(ets)17
b(introduce)g(a)2049 3823 y(ne)n(w)h(code)g(template)g(and)g(specify)h
(that)e(the)h(e)o(xpression)h(inside)e(the)h(brack-)2049
3906 y(ets)28 b(should)h(be)f(generated)h(as)f(a)f(program)i(for)f(the)
g(ne)o(xt)g(stage.)50 b(W)m(ithin)2049 3989 y(brack)o(ets,)30
b(escape)d(speci\002es)g(a)g(hole)h(within)e(a)h(template.)48
b(The)27 b(escaped)2049 4072 y(e)o(xpression)21 b(is)f(e)o(x)o(ecuted)h
(\(resulting)f(in)g(a)g(piece)g(of)g(code\),)h(and)g(the)f(resul-)2049
4155 y(tant)26 b(code)g(is)f(spliced)h(into)g(that)g(hole.)44
b(Staging)25 b(mak)o(es)i(a)f(perfect)f(com-)2049 4238
y(plement)k(to)f(equality)h(quali\002ed)g(types)g(for)g(tw)o(o)f
(reasons.)53 b(First,)29 b(man)o(y)2049 4321 y(applications)22
b(can)f(be)g(encoded)i(as)d(domain)i(speci\002c)f(languages)h
(\(DSLs\).)2049 4404 y(Such)28 b(languages)h(can)f(be)g(gi)n(v)o(en)h
(meaning)g(by)f(writing)f(a)h(simple)g(inter)o(-)2049
4487 y(preter)17 b(\(lik)o(e)g(the)f Fj(eval)i Fv(and)f
Fj(exec)g Fv(functions)h(from)e(Figure)3631 4488 y
SDict begin H.S end
 3631
4488 a Black -1 x Fv(8)p Black 3669 4436 a
SDict begin H.R end
 3669 4436
a 3669 4487 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.8) cvn H.B /ANN pdfmark end
 3669 4487 a Fv(\).)22 b(Staging)16 b(an)2049
4570 y(interpreters)21 b(produces)h(an)f(ef)n(\002cient)f(compiler)h
(as)g(the)f(interpreti)n(v)o(e)h(o)o(v)o(er)o(-)2049
4653 y(head)d(or)f(tra)o(v)o(ersing)g(the)g(abstract)g(syntax)h(is)e
(remo)o(v)o(ed.)24 b(This)17 b(is)f(illustrated)2049
4736 y(in)j(the)g(top)g(of)g(Figure)2645 4736 y
SDict begin H.S end
 2645
4736 a Black Fv(11)p Black 2719 4685 a
SDict begin H.R end
 2719 4685 a 2719
4736 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.11) cvn H.B /ANN pdfmark end
 2719 4736 a 19 w Fv(for)g(the)g Fj(Exp)g Fv(fragment)g(of)g(the)
g(while-language.)2049 4902 y(Second,)34 b(staging)e(can)f(implement)g
(program)h(e)o(xtraction)g(from)e(proofs.)2049 4985 y(Both)25
b(Coq)f(and)i(to)e(some)h(e)o(xtent)g(Isabelle)f(support)i(program)f(e)
o(xtraction)2049 5068 y(from)32 b(proofs.)63 b(These)32
b(features)g(are)g(limited)f(because)i(the)f(tar)o(get)g(lan-)2049
5151 y(guages)20 b(are)g(hardwired)g(and)f(the)h(generated)g(programs)g
(must)g(conform)g(to)2049 5234 y(the)f(type)h(system)g(of)f(the)g(tar)o
(get)g(language.)25 b(This)19 b(often)h(requires)f(discard-)2049
5317 y(ing)27 b(important)h(information)f(about)h(the)f(source)h
(program,)i(or)d(run)g(time)2049 5400 y(passing)20 b(of)f(static)g
(information.)25 b(If)19 b(we)g(consider)h(the)f Fj(app)h
Fv(function)g(from)p Black Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.9) cvn /DEST pdfmark end
 -158
-316 a Black Black Black Black Black -150 219 a Fg(update::\(V)33
b(s)g(t\))h(->)g(t)f(->)h(s)g(->)f(s)-150 294 y(update)g(Z)h(n)g
(\(x,y\))f(=)h(\(n,y\))-150 369 y(update)f(\(S)h(v\))f(n)h(\(x,y\))f(=)
h(\(x,update)f(v)h(n)f(y\))-150 518 y(eval::Exp)g(s)g(t)h(->)g(s)g(->)f
(t)-150 593 y(eval)g(\(IntC)h(n\))f(s)h(=)g(n)-150 667
y(eval)f(\(BoolC)g(b\))h(s)g(=)g(b)-150 742 y(eval)f(\(Plus)h(x)f(y\))h
(s)g(=)f(\(eval)h(x)f(s\))h(+)g(\(eval)f(y)h(s\))-150
817 y(eval)f(\(Lteq)h(x)f(y\))h(s)g(=)f(\(eval)h(x)f(s\))h(<=)g(\(eval)
f(y)h(s\))-150 892 y(eval)f(\(Var)h(Z\))f(\(x,y\))h(=)f(x)-150
966 y(eval)g(\(Var)h(\(S)f(v\)\))h(\(x,y\))f(=)h(eval)f(\(Var)h(v\))f
(y)p Black Black 2049 219 a(exec::\(Com)g(st\))g(->)h(st)f(->)h(st)2049
294 y(exec)f(\(Set)h(v)f(e\))h(s)g(=)g(update)f(v)g(\(eval)h(e)f(s\))h
(s)2049 369 y(exec)f(\(Seq)h(x)f(y\))h(s)g(=)g(exec)f(y)h(\(exec)f(x)h
(s\))2049 443 y(exec)f(\(If)h(test)f(x1)h(x2\))f(s)h(=)2117
518 y(if)f(\(eval)h(test)f(s\))h(then)f(exec)g(x1)h(s)g(else)f(exec)g
(x2)h(s)2049 593 y(exec)f(\(While)g(test)h(body\))f(s)h(=)g(loop)f(s)
2117 667 y(where)g(loop)g(s)h(=)g(if)f(\(eval)h(test)f(s\))2726
742 y(then)h(loop)f(\(exec)g(body)h(s\))2726 817 y(else)g(s)2049
892 y(exec)f(\(Declare)g(e)h(body\))f(s)h(=)g(store)2117
966 y(where)f(\(_,store\))g(=)g(\(exec)h(body)f(\(eval)g(e)h(s,s\)\))
-150 1207 y Fq(Figur)o(e)16 b(8.)155 1207 y
SDict begin H.S end
 155 1207
a Black Black 155 1207 a
SDict begin H.R end
 155 1207 a 155 1207 a
SDict begin [/View [/XYZ H.V]/Dest (figure.8) cvn /DEST pdfmark end
 155 1207
a 17 w Fq(Inter)o(pr)o(eters)g(f)n(or)h(the)f(While-language.)21
b(These)c(functions)e(illustrate)h(patter)o(n)f(matching)i(o)o(v)o(er)h
(constructor)f(functions,)e(and)h(semantics)-150 1291
y(pr)o(eser)o(ving)f(meta-functions.)21 b(All)14 b(of)g
Fj(update)p Fq(,)i Fj(eval)p Fq(,)g(and)e Fj(exec)h Fq(manipulate)e
(while-pr)o(ograms)i(in)f(a)h(way)g(that)f(r)o(espects)h(their)f
(semantic)h(pr)o(operties.)-150 1374 y(In)20 b(fact,)h(because)f(all)g
(while-pr)o(ograms)h(ar)o(e)g(well)f(typed)f(these)i(inter)o(pr)o
(eters)f(ar)o(e)g(tagless[)2406 1375 y
SDict begin H.S end
 2406 1375 a Black
-1 x Fq(39)p Black 2482 1322 a
SDict begin H.R end
 2482 1322 a 2482 1374
a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Taha:2001:TEJ) cvn H.B /ANN pdfmark end
 2482 1374 a Fq(],)g(and)g(they)g(r)o(etur)o(n)f(v)o(alues)i(whose)g
(types)f(corr)o(espond)-150 1457 y(to)f(the)f(types)h(of)g(the)f
(while-pr)o(ograms.)p -150 1475 4200 4 v Black Black
-150 2464 a
 currentpoint currentpoint translate 1.0 1.0 scale neg exch neg exch
translate
 -150 2464 a @beginspecial 303 @llx 177 @lly
777 @urx 255 @ury 4740 @rwi @setspecial
%%BeginDocument: proofSteps.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - protocol.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 09:43:10 02/28/04
%%For: (sheard)
%%DocumentData: Clean7Bit
%%BoundingBox: 303 177 777 255
%%HiResBoundingBox: 303.40741 177.271744 777.268417 254.544022
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N11/Helvetica 1 TZ
%%IncludeResource Helvetica-Bold
[/N18/Helvetica-Bold 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1216 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:fc2b3276-56f3-443f-9cc2-ef22de2e31eb' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:fc2b3276-56f3-443f-9cc2-ef22de2e31eb' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2004-02-28T09:42:05-08:00' xap:CreateDate='2004-02-28T09:42:05-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:fc2b3276-56f3-443f-9cc2-ef22de2e31eb' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:a51e597a-e4b8-48c6-b0e7-86e2e9377cef'/>
<rdf:Description rdf:about='uuid:fc2b3276-56f3-443f-9cc2-ef22de2e31eb' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - protocol.ppt</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>sheard</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
303 177 474 77 rectclip
[ 0 -1 1 0 126.13567 557.95143 ] concat
/N12 [/DeviceRGB] /ColorSpace defineRes pop

303.40741 177.271744 77.272278 473.861008 re
W
n
q
n
576.039978 36.52 -540.0 720.000019 re
36.040001 36.52 m
eoclip
n
n
36.040001 36.52 539.999977 720.000019 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 J
0.75 w
8.0 M
1 j
10.0 M
0 j
8.0 M
n
306.039978 180.519989 72.0 468.000031 re
324.039978 186.519989 27.839996 60.0 re
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
333.639587 204.759689 m
/N18 [0.0 8.039993 -8.039993 0.0 0.0 0.0] Tf
(Typed)
[5.040211 4.200091 4.919611 4.439682 5.040211 ] pdfys
348.159821 193.359772 m
(Object-code)
[6.244662 4.901923 2.160345 4.459783 4.459783 2.666806 2.76007 4.439682 4.901923 4.901923 4.459783 
] pdfys
n
336.039978 294.519989 13.320007 42.0 re
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
345.639587 303.8797 m
(String)
[5.385247 2.640274 3.120382 2.280141 4.934887 4.934887 ] pdfys
n
336.039978 390.519989 13.320007 36.0 re
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
345.639587 396.8797 m
(String)
[5.385247 2.640274 3.120382 2.280141 4.934887 4.934887 ] pdfys
n
324.039978 480.519989 27.839996 54.000031 re
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
333.639587 487.839691 m
(Annotated)
[5.52026 4.900315 4.900315 4.900315 2.640274 4.458174 2.76007 4.458174 4.900315 ] pdfys
348.159821 499.599792 m
(AST)
[5.520261 5.520319 4.627759 ] pdfys
n
324.039978 582.519958 27.839996 60.0 re
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
333.639587 600.759583 m
(Typed)
[5.040211 4.200091 4.919611 4.439682 5.040211 ] pdfys
348.159821 589.35968 m
(Object-code)
[6.244662 4.901923 2.160345 4.459783 4.459783 2.666806 2.76007 4.439682 4.901923 4.901923 4.459783 
] pdfys
n
341.679993 246.519989 m
341.679993 289.47998 l
341.679993 289.720001 341.800018 289.839996 342.039978 289.839996 c
342.279999 289.839996 342.399994 289.720001 342.399994 289.47998 c
342.399994 246.519989 l
342.399994 246.279999 342.279999 246.159988 342.039978 246.159988 c
341.800018 246.159988 341.679993 246.279999 341.679993 246.519989 c
h
339.039978 288.519989 m
342.039978 294.519989 l
345.039978 288.519989 l
0.003922 0.003922 0.003922 setrgbcolor
f
n
341.679993 336.519989 m
341.679993 385.47998 l
341.679993 385.720001 341.800018 385.839996 342.039978 385.839996 c
342.279999 385.839996 342.399994 385.720001 342.399994 385.47998 c
342.399994 336.519989 l
342.399994 336.279999 342.279999 336.160004 342.039978 336.160004 c
341.800018 336.160004 341.679993 336.279999 341.679993 336.519989 c
h
339.039978 384.519989 m
342.039978 390.519989 l
345.039978 384.519989 l
f
n
341.679993 426.519989 m
341.679993 475.47998 l
341.679993 475.720001 341.800018 475.839996 342.039978 475.839996 c
342.279999 475.839996 342.399994 475.720001 342.399994 475.47998 c
342.399994 426.519989 l
342.399994 426.279999 342.279999 426.160004 342.039978 426.160004 c
341.800018 426.160004 341.679993 426.279999 341.679993 426.519989 c
h
339.039978 474.519989 m
342.039978 480.519989 l
345.039978 474.519989 l
f
n
341.679993 534.519958 m
341.679993 577.47998 l
341.679993 577.719971 341.800018 577.839966 342.039978 577.839966 c
342.279999 577.839966 342.399994 577.719971 342.399994 577.47998 c
342.399994 534.519958 l
342.399994 534.279968 342.279999 534.159973 342.039978 534.159973 c
341.800018 534.159973 341.679993 534.279968 341.679993 534.519958 c
h
339.039978 576.519958 m
342.039978 582.519958 l
345.039978 576.519958 l
f
0.0 sg
339.879578 255.279694 m
/N11 [0.0 8.039993 -8.039993 0.0 0.0 0.0] Tf
(marshallunmarshall)
[6.839562 4.439682 2.519674 4.080297 4.438879 4.438879 1.800155 146.400238 4.438879 4.438879 6.839562 
4.438879 2.645902 4.080297 4.438879 4.438879 1.800155 1.753523 ] pdfys
339.879578 348.279968 m
(Internet)
[2.280141 4.439682 2.280141 4.439682 2.640274 4.439682 4.439682 2.280141 ] pdfys
338.919617 547.720215 m
(check)
[4.080297 4.439682 4.439682 4.080297 3.989445 ] pdfys
364.8396 238.719696 m
/N11 [0.0 9.0 -9.0 0.0 0.0 0.0] Tf
(Code producer)
[6.480001 5.041798 5.041798 5.041798 2.519999 5.041798 2.879933 5.041798 5.041798 4.920298 4.5378 
5.041798 3.034733 ] pdfys
364.359894 484.239685 m
(Code consumer)
[6.480001 5.042698 5.042698 5.042698 2.400299 4.5387 5.042698 4.920298 4.5603 4.920298 7.559933 
5.042698 3.035633 ] pdfys
n
316.0 183.039993 54.0 161.999985 re
316.0 381.039978 54.0 264.0 re
0.003922 0.003922 0.003922 setrgbcolor
S
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica-Bold
%%+ font Helvetica
%%EOF

%%EndDocument
 @endspecial -150 2464 a
 currentpoint currentpoint translate 1 1.0 div 1 1.0 div scale neg
exch neg exch translate
 -150 2464 a 1352 2547 a Fq(Figur)o(e)g(9.)1660
2547 y
SDict begin H.S end
 1660 2547 a Black Black 1660 2547 a
SDict begin H.R end
 1660 2547
a 1660 2547 a
SDict begin [/View [/XYZ H.V]/Dest (figure.9) cvn /DEST pdfmark end
 1660 2547 a Fq(Pr)o(oof)h(carrying)h(code)f(pr)o(ocess)p
-150 2565 4200 4 v Black Black Black Black -150 2987
a Fg(data)33 b(TyAst)h(=)f(I)h(|)g(B)g(|)f(P)h(TyAst)f(TyAst)-150
3136 y(data)g(ExpAst)-82 3211 y(=)g(IntCA)h(Int)-82 3286
y(|)f(BoolCA)h(Bool)-82 3360 y(|)f(PlusA)h(ExpAst)f(ExpAst)-82
3435 y(|)g(LteqA)h(ExpAst)f(ExpAst)-82 3510 y(|)g(VarA)h(Int)f(TyAst)
-150 3659 y(--)h(Equality)e(Proofs)i(and)f(Type)g(representations)-150
3734 y(data)g(Eq)h(a)g(b)f(=)h(EqProof)f(where)g(a=b)-150
3883 y(data)g(TypeR)h(t)-82 3958 y(=)f(IntR)h(where)f(t)h(=)g(Int)-82
4033 y(|)f(BoolR)h(where)f(t)h(=)f(Bool)-82 4108 y(|)g(exists)h(a)f(b)h
(.)g(PairR)f(\(TypeR)g(a\))h(\(TypeR)f(b\))527 4182 y(where)h(t)f(=)h
(\(a,b\))-150 4332 y(match::TypeR)e(a)i(->)g(TypeR)f(b)h(->)f(Maybe)h
(\(Eq)f(a)h(b\))-150 4406 y(match)f(IntR)h(IntR)f(=)h(succeed)f
(EqProof)-150 4481 y(match)g(BoolR)g(BoolR)h(=)f(succeed)g(EqProof)-150
4556 y(match)g(\(PairR)g(a)h(b\))g(\(PairR)f(c)h(d\))f(=)-82
4631 y(do)g({)h(EqProof)f(<-)h(match)f(a)h(c)19 4705
y(;)g(EqProof)f(<-)h(match)f(b)h(d)19 4780 y(;)g(succeed)f(EqProof)g(})
-150 4855 y(match)g(_)h(_)g(=)f(fail)h("match)f(fails")-150
5004 y(--)h(Judgments)e(for)i(Types)-150 5079 y(data)f(TJudgment)g(=)h
(exists)f(t)h(.)f(TJ)h(\(TypeR)f(t\))p Black Black 2049
3061 a(checkT::TyAst)f(->)i(TJudgment)2049 3136 y(checkT)f(I)h(=)g(TJ)f
(IntR)2049 3211 y(checkT)g(B)h(=)g(TJ)f(BoolR)2049 3286
y(checkT)g(\(P)h(x)f(y\))h(=)2151 3360 y(case)f(\(checkT)g(x,checkT)g
(y\))g(of)2218 3435 y(\(TJ)h(a,)f(TJ)h(b\))g(->)f(TJ\(PairR)g(a)h(b\))
2049 3585 y(--)g(Judgments)e(for)i(Expressions)2049 3659
y(data)f(EJudgment)g(s)h(=)g(exists)f(t)g(.)h(EJ)g(\(TypeR)f(t\))h
(\(Exp)f(s)h(t\))2049 3809 y(checkE::ExpAst)e(->)i(TypeR)f(s)h(->)f
(Maybe)h(\(EJudgment)e(s\))2049 3883 y(checkE)h(\(IntCA)g(n\))h(sr)f(=)
h(succeed\(EJ)f(IntR)g(\(IntC)g(n\)\))2049 3958 y(checkE)g(\(BoolCA)g
(b\))h(sr)f(=)h(succeed\(EJ)f(BoolR)g(\(BoolC)g(b\)\))2049
4033 y(checkE)g(\(PlusA)g(x)h(y\))g(sr)f(=)2117 4108
y(do)g({)h(EJ)g(t1)f(e1)h(<-)g(checkE)f(x)g(sr)2218 4182
y(;)h(EqProof)f(<-)h(match)f(t1)h(IntR)2218 4257 y(;)g(EJ)g(t2)f(e2)h
(<-)g(checkE)f(y)g(sr)2218 4332 y(;)h(EqProof)f(<-)h(match)f(t2)h(IntR)
2218 4406 y(;)g(succeed\(EJ)f(IntR)g(\(Plus)g(e1)h(e2\)\)})2049
4481 y(checkE)f(\(VarA)g(0)h(ty\))g(\(PairR)f(s)g(p\))h(=)2117
4556 y(do)f({)h(TJ)g(t)f(<-)h(succeed\(checkT)e(ty\))2218
4631 y(;)i(EqProof)f(<-)h(match)f(t)h(s)2218 4705 y(;)g(succeed\(EJ)f
(t)g(\(Var)h(Z\)\)})2049 4780 y(checkE)f(\(VarA)g(n)h(ty\))g(\(PairR)f
(s)g(p\))h(=)2117 4855 y(do)f({)h(EJ)g(t')f(\(Var)h(v\))f(<-)h(checkE)f
(\(VarA)g(\(n-1\))h(ty\))f(p)2218 4929 y(;)h(TJ)g(t)f(<-)h
(succeed\(checkT)e(ty\))2218 5004 y(;)i(EqProof)f(<-)h(match)f(t)h(t')
2218 5079 y(;)g(succeed\(EJ)f(t')g(\(Var)h(\(S)f(v\)\)\)})660
5245 y Fq(Figur)o(e)18 b(10.)1006 5245 y
SDict begin H.S end
 1006 5245 a
Black Black 1006 5245 a
SDict begin H.R end
 1006 5245 a 1006 5245 a
SDict begin [/View [/XYZ H.V]/Dest (figure.10) cvn /DEST pdfmark end
 1006
5245 a Fq(Implementing)g(the)g(check)g(function)g(f)n(or)h(the)f(pr)o
(oof)h(carrying)h(code)e(example.)p -150 5264 4200 4
v Black Black Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158 -316
a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316 a
SDict begin [/View [/XYZ H.V]/Dest (page.10) cvn /DEST pdfmark end
 -158
-316 a Black Black Black Black Black -150 37 a Fg(x)34
b(=)f(Z)-150 112 y(y)h(=)f(S)h(Z)-150 186 y(e1)g(=)f(Lteq)h(\(Plus)f
(\(Var)g(x\)\(Var)g(y\)\))h(\(Plus)f(\(Var)h(y\))f(\(IntC)g(1\)\))-150
336 y(data)g(Store)h(s)f(=)h(M)g(\(Code)f(s\))-82 410
y(|)g(forall)h(a)f(b)h(.)g(N)g(\(Code)f(a\))g(\(Store)h(b\))67
b(where)33 b(s)h(=)g(\(a,b\))-150 560 y(test)f(e)h(=)g([|)f(\\)h
(\(x,\(y,z\)\))f(->)-82 635 y($\(eval2)g(e)g(\(N)h
([|x|]\(N[|y|]\(M[|z|]\)\)\)\))d(|])-150 784 y(eval2::Exp)i(s)g(t)h(->)
g(Store)f(s)h(->)f(Code)h(t)-150 859 y(eval2)f(\(IntC)g(n\))h(s)g(=)g
(lift)f(n)-150 933 y(eval2)g(\(BoolC)g(b\))h(s)g(=)f(lift)h(b)-150
1008 y(eval2)f(\(Plus)g(x)h(y\))g(s)g(=)f([|)h($\(eval2)f(x)h(s\))f(+)h
($\(eval2)f(y)h(s\))f(|])-150 1083 y(eval2)g(\(Lteq)g(x)h(y\))g(s)g(=)f
([|)h($\(eval2)f(x)h(s\))f(<=)h($\(eval2)f(y)h(s\))f(|])-150
1158 y(eval2)g(\(Var)h(Z\))f(\(N)h(a)g(b\))f(=)h(a)-150
1232 y(eval2)f(\(Var)h(\(S)f(v\)\))h(\(N)f(a)h(b\))g(=)f(eval2)h(\(Var)
f(v\))h(b)-150 1382 y(--)g(test)f(e1)h(--->)67 b([|)33
b(\\)h(\(x,\(y,z\)\))f(->)h(x)f(+)h(y)g(<=)f(y)h(+)g(1)g(|])p
-150 1457 2001 4 v Black Black -150 1532 a(app3::Sum)f(n)g(m)h(p)g(->)g
(Code\(Seq)e(a)i(n\))g(->)121 1607 y(Code\(Seq)f(a)h(m\))f(->)h
(Code\(Seq)f(a)g(p\))-150 1682 y(app3)g(Base)h(xs)f(ys)h(=)g(ys)-150
1757 y(app3)f(\(Step)h(p\))f(xs)h(ys)f(=)-82 1831 y([|)g(case)h($xs)f
(of)h(Cons)f(z)h(zs)g(->)f(Cons)h(z)f($\(app3)g(p)h([|zs|])f(ys\))h(|])
-150 1981 y(test2::Sum)f(u)g(v)h(w)g(->)f(Code)h(\(Seq)f(a)h(u)g(->)f
(Seq)h(a)g(v)f(->)h(Seq)f(a)h(w\))-150 2055 y(test2)f(witness)g(=)h([|)
g(\\)f(xs)h(ys)g(->)f($\(app3)g(witness)g([|xs|])g([|ys|]\))g(|])-150
2205 y(--)h(test2)f(\(Step)g(\(Step)g(Base\)\))g(--->)-150
2280 y(--)101 b([|)34 b(\\)g(xs)67 b(ys)h(->)-150 2354
y(--)271 b(case)33 b(xs)h(of)-150 2429 y(--)338 b(\(Cons)34
b(z)67 b(zs)34 b(\))g(->)-150 2504 y(--)474 b(Cons)33
b(z)h(\(case)f(zs)h(of)-150 2579 y(--)813 b(\(Cons)33
b(w)h(ws\))f(->)h(Cons)f(w)h(ys\))f(|])-150 2659 y Fq(Figur)o(e)27
b(11.)232 2659 y
SDict begin H.S end
 232 2659 a Black Black 232 2659 a
SDict begin H.R end
 232
2659 a 232 2659 a
SDict begin [/View [/XYZ H.V]/Dest (figure.11) cvn /DEST pdfmark end
 232 2659 a Fq(Illustrating)g(Staging,)j(r)o(emo)o(v)o
(al)f(of)f(inter)o(pr)o(eti)o(v)o(e)g(o)o(v)o(er)m(-)-150
2742 y(head)18 b(\(top\),)g(and)g(witness)g(r)o(emo)o(v)o(al)j
(\(bottom\).)p -150 2761 2001 4 v Black -150 2976 a Fv(Figure)67
2977 y
SDict begin H.S end
 67 2977 a Black -1 x Fv(6)p Black 104 2925 a
SDict begin H.R end
 104
2925 a 104 2976 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.6) cvn H.B /ANN pdfmark end
 104 2976 a 22 w Fv(as)g(a)h(proof)h(\(because)g(it)e
(tak)o(es)h(a)g(witness)g Fj(Sum)f Fv(type)i(as)f(well)f(as)-150
3059 y(tw)o(o)i(lists\))e(staging)i(can)g(remo)o(v)o(e)h(the)e(witness)
h(in)f(an)h(early)g(stage,)g(result-)-150 3142 y(ing)j(in)f(a)g(ne)n(w)
h(piece)g(of)g(code)g(which)g(can)g(rely)f(on)h(all)f(the)g(\(no)n(w\))
h(static)-150 3225 y(information)c(encoded)h(in)e(the)g(witness.)30
b(Note)21 b(ho)n(w)h(once)g(gi)n(v)o(en)g(the)g(wit-)-150
3308 y(ness)17 b Fj(\(Step)38 b(\(Step)h(Base\)\))17
b Fv(the)f(staged)h(function)h Fj(app3)e Fv(can)h(unroll)g(the)-150
3391 y(loop.)38 b(So)23 b(not)h(only)g(is)f(the)g(witness)h(remo)o(v)o
(ed)g(in)g(the)g(second)g(stage,)h(b)o(ut)-150 3474 y(the)19
b(resulting)g(program)h(is)f(no)g(longer)h(e)n(v)o(en)f(recursi)n(v)o
(e!)-150 3640 y(The)27 b(ability)f(to)g(control)h(e)o(xtraction)g(is)g
(important.)46 b(T)-6 b(w)o(o)27 b(dif)n(ferent)g(pro-)-150
3723 y(grams)16 b(e)o(xtracted)h(from)f(the)g(same)g(proof)g(object)h
(may)f(ha)o(v)o(e)g(v)o(ery)h(dif)n(ferent)-150 3806
y(physical)j(properties)g(\(i.e.)k(heap)c(space)g(usage\).)25
b(Staging)20 b(allo)n(ws)f(users)h(to)-150 3889 y(e)o(xtract)f
(programs)h(in)f(a)f(manner)i(that)f(\002ts)f(their)h(needs.)-150
3934 y
SDict begin H.S end
 -150 3934 a -150 3934 a
SDict begin 10 H.A end
 -150 3934 a -150 3934
a
SDict begin [/View [/XYZ H.V]/Dest (section.12) cvn /DEST pdfmark end
 -150 3934 a 167 x Fs(12)99 b(Example:)32 b(Pr)n(oof)25
b(Carrying)g(Code)-150 4238 y Fv(Peter)c(Lee,)g(on)h(his)f(web)g(site)g
(states[)842 4238 y
SDict begin H.S end
 842 4238 a Black Fv(22)p Black 917
4187 a
SDict begin H.R end
 917 4187 a 917 4238 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.PeterLeeWeb) cvn H.B /ANN pdfmark end
 917 4238 a Fv(]:)27 b Fr(Pr)m
(oof-Carrying)22 b(Code)g(\(PCC\))-150 4321 y(is)c(a)g(tec)o(hnique)h
(by)g(whic)o(h)f(a)g(code)h(consumer)g(\(e)o(.g)o(.,)f(host\))g(can)h
(verify)f(that)-150 4404 y(code)25 b(pr)m(o)o(vided)g(by)f(an)h
(untrusted)g(code)g(pr)m(oducer)g(adher)m(es)h(to)e(a)g(pr)m(ede-)-150
4487 y(\002ned)c(set)f(of)g(safety)g(rules)g(...)k(The)c(k)o(e)n(y)h
(idea)f(behind)h(pr)m(oof-carrying)h(code)-150 4570 y(is)d(that)h(the)f
(code)h(pr)m(oducer)h(is)e(r)m(equir)m(ed)i(to)f(cr)m(eate)g(a)f
(formal)h(safety)f(pr)m(oof)-150 4653 y(that)i(attests)g(to)g(the)h
(fact)f(that)g(the)g(code)h(r)m(espects)g(the)g(de\002ned)g(safety)g
(pol-)-150 4736 y(icy)l(.)26 b(Then,)19 b(the)h(code)h(consumer)g(is)f
(able)g(to)f(use)i(a)f(simple)f(and)i(fast)e(pr)m(oof)-150
4819 y(validator)i(to)f(c)o(hec)o(k,)h(with)f(certainty)l(,)h(that)f
(the)g(pr)m(oof)h(is)f(valid)h(and)g(hence)-150 4902
y(the)e(for)m(eign)h(code)g(is)e(safe)h(to)g(e)o(xecute)o(.)-150
5068 y Fv(In)33 b(Figure)173 5070 y
SDict begin H.S end
 173 5070 a Black
-2 x Fv(9)p Black 210 5017 a
SDict begin H.R end
 210 5017 a 210 5068 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.9) cvn H.B /ANN pdfmark end
 210
5068 a 32 w Fv(we)g(illustrate)f(ho)n(w)i(this)e(might)h(be)g
(implemented)h(using)-150 5151 y Fw(W)p Fv(me)o(ga.)k(The)24
b(code)h(producer)g(produces)g(code)g(whose)f(safety)g(polic)o(y)g(is)
-150 5234 y(embedded)17 b(in)e(the)g(type)g(of)g(the)h(object-code)g
(as)f(we)g(ha)o(v)o(e)g(illustrated)g(in)g(the)-150 5317
y(pre)n(vious)26 b(section.)43 b(The)25 b(producer)h(than)g(marshalls)f
(\(pretty)g(prints\))g(this)-150 5400 y(code)f(into)f(some)g(\003at)f
(untyped)j(representation)f(that)e(can)i(be)f(transported)p
Black Black 2049 83 a(o)o(v)o(er)i(the)f(Internet)h(\(a)f
Fj(String)g Fv(in)h(the)f(\002gure\).)39 b(On)25 b(the)f(consumer)i
(side,)2049 166 y(the)16 b(consumer)i(unmarshalls)g(\(parses\))e(this)g
(string)h(into)f(an)h(untyped)h(anno-)2049 249 y(tated)h(abstract)g
(syntax)h(tree.)j(The)18 b(check)i(is)f(a)g(dynamic)h(\(i.e.)i(at)d
(run-time\))2049 332 y(attempt)d(to)g(reconstruct)h(the)f(typed)g
(object-code)i(\(a)d(static)h(property\))h(from)2049
415 y(the)i(annotated)i(untyped)g(AST)-6 b(.)18 b(If)h(this)g(succeeds)
i(then)e(the)h(consumer)g(has)2049 498 y(a)d(proof)g(that)g(the)f
(object)i(code)f(has)g(the)g(desired)g(safety)g(property)-5
b(,)18 b(since)f(all)2049 581 y(well)i(typed)i(object-programs)h(ha)o
(v)o(e)e(the)g(safety)g(property)-5 b(.)28 b(The)19 b(only)i(dif-)2049
664 y(\002cult)h(step)g(in)g(this)g(process)h(is)f(the)g
(reconstruction)h(of)f(the)h(typed)g(object-)2049 747
y(code)29 b(from)g(the)g(untyped)h(annotated)g(AST)-6
b(.)28 b(In)g(order)h(to)g(describe)g(ho)n(w)2049 830
y(this)24 b(is)g(done)h(we)f(introduce)i(additional)f(features)f(of)h
Fw(W)p Fv(me)o(ga,)g(polymor)o(-)2049 913 y(phic)20 b(kinds)g(and)h
(representation)f(types.)26 b(W)-6 b(e)19 b(apply)h(these)g(features)g
(to)g(the)2049 996 y(dynamic)h(construction)h(of)e(the)h(statically)f
(typed)h Fj(Exp)f Fv(datatype)h(from)g(the)2049 1079
y(while-program)f(e)o(xample)f(\(Figure)3021 1080 y
SDict begin H.S end
 3021
1080 a Black -1 x Fv(8)p Black 3058 1028 a
SDict begin H.R end
 3058 1028
a 3058 1079 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.8) cvn H.B /ANN pdfmark end
 3058 1079 a Fv(\).)2049 1245 y(In)h(Figure)2345
1246 y
SDict begin H.S end
 2345 1246 a Black -1 x Fv(10)p Black 2420 1194
a
SDict begin H.R end
 2420 1194 a 2420 1245 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.10) cvn H.B /ANN pdfmark end
 2420 1245 a 19 w Fv(we)f(de\002ne)h(tw)o(o)g
(untyped)h(algebraic)f(datatypes)g Fj(TyAst)g Fv(and)2049
1328 y Fj(ExpAst)d Fv(that)f(we)h(will)e(use)i(as)f(our)h(annotated)h
(abstract)f(syntax)g(types.)23 b(The)2049 1411 y(type)h
Fj(TypeR)h Fv(is)e(a)h(representation)h(type.)39 b(It)23
b(re\003ects)h(objects)g(that)g(li)n(v)o(e)g(in)2049
1494 y(the)h(type)h(w)o(orld)g(\()p Fj(Int)p Fv(,)g Fj(Bool)p
Fv(,)h(and)f(pairs\))f(into)g(the)g(v)n(alue)h(w)o(orld.)43
b(Note)2049 1577 y(ho)n(w)26 b Fj(IntR::\(TypeR)39 b(Int\))26
b Fv(is)f(a)g(v)n(alue,)i(b)o(ut)e(its)g(type)h(completely)g(dis-)2049
1660 y(tinguishes)g(what)f(v)n(alue)h(it)e(is.)42 b(This)24
b(notion)i(has)g(been)g(called)f Fr(singleton)2049 1743
y(types)p Fv([)2227 1744 y
SDict begin H.S end
 2227 1744 a Black -1 x Fv(37)p
Black 2302 1693 a
SDict begin H.R end
 2302 1693 a 2302 1743 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.StoneHar00) cvn H.B /ANN pdfmark end
 2302 1743 a
Fv(,)2347 1744 y
SDict begin H.S end
 2347 1744 a Black -1 x Fv(32)p Black
2421 1693 a
SDict begin H.R end
 2421 1693 a 2421 1743 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Shao:2002:TSC) cvn H.B /ANN pdfmark end
 2421 1743 a Fv(],)j(b)o(ut)e(we)g
(think)g Fr(r)m(epr)m(esentation)i(types)f Fv(is)e(a)i(more)f(appro-)
2049 1826 y(priate)k(name.)57 b(Writing)29 b(a)h(program)h(that)f
(manipulates)h(representation)2049 1910 y(types)g(allo)n(ws)g(the)g
(programmer)h(to)f(encode)i(operations)f(that)e(the)h(type)2049
1993 y(system)18 b(\(with)f(its)f(limited)h(computation)i(mechanism)f
(\226)g(essentially)g(solv-)2049 2076 y(ing)g(equalities)g(between)h
(types\))f(cannot.)24 b Fr(It)17 b(cannot)i(be)f(o)o(ver)o(-emphasized)
2049 2159 y(how)d(important)g(this)f(ability)g(is.)22
b Fv(T)-6 b(yping)15 b(problems)g(that)g(cannot)g(be)g(solv)o(ed)2049
2242 y(by)j(the)f(type)g(system)h(can)g(be)f(programmed)i(by)e(the)h
(user)f(when)h(necessary)-5 b(.)2049 2408 y(W)f(e)18
b(choose)h(to)f(represent)h Fj(Int)p Fv(,)g Fj(Bool)f
Fv(and)h(pairs)f(because)i(these)e(types)h(ei-)2049 2491
y(ther)25 b(appear)i(as)e(type)h(inde)o(x)o(es)g(to)f
Fj(Exp)h Fv(and)g Fj(Com)f Fv(or)g(describe)h(the)g(shape)2049
2574 y(of)21 b(the)g(store)g(as)g(a)g(nested)h(pair)l(.)29
b(The)21 b(k)o(e)o(y)h(to)e(dynamic)j(reconstruction)f(of)2049
2657 y(static)h(type)i(information)f(is)f(the)h Fj(Eq)g
Fv(data)g(type.)38 b(The)24 b Fj(Eq)g Fv(type)g(construc-)2049
2740 y(tor)c(has)i(a)e(polymorphic)j(kind)e(\()p Fj(Eq::forall)39
b(\(k:*1\))g(\(k1:*1\))g(.)76 b(k)2049 2823 y Fx(\030)p
Fj(>)38 b(k1)h Fx(\030)p Fj(>)f(*0)p Fv(\).)55 b(This)29
b(kind)h(means)h(that)e(the)h(ar)o(guments)g(to)g Fj(Eq)f
Fv(can)2049 2906 y(range)19 b(o)o(v)o(er)g(an)o(y)g(tw)o(o)g(types)g
(classi\002ed)f(by)h Fj(k)g Fv(and)g Fj(k1)f Fv(that)h(are)f(themselv)o
(es)2049 2989 y(classi\002ed)j(by)g Fj(*1)p Fv(.)29 b(This)20
b(includes)i(types)f(lik)o(e)g Fj(Int)g Fv(and)g Fj(Bool)p
Fv(,)h(as)f(well)f(as)2049 3072 y(type)f(constructors)h(lik)o(e)f
Fj(Tree)g Fv(and)h Fj(List)p Fv(.)2049 3238 y(The)69
b(constructor)i(function)f(\()p Fj(EqProof::forall)40
b(\(k:*1\))e(\(u:k\))2049 3321 y(\(v:k\).\(u)h(=)f(v\))g(=>)h(Eq)f(u)g
(v\))p Fv(\))18 b(is)f(a)g(\002rst-class)f(\(dynamic\))j(witness)e(to)
2049 3404 y(the)23 b(f)o(act)g(that)g(the)g(static)f(types)h
Fj(u)g Fv(and)h Fj(v)e Fv(are)h(equal.)36 b(Equality)23
b(witnesses)2049 3487 y(can)e(be)g(created)g(in)g(a)g(static)f(conte)o
(xt)h(where)g Fj(u)g Fv(is)f(equal)h(to)g Fj(v)g Fv(then)g(passed)2049
3570 y(around)j(as)f(data)h(to)e(a)h(ne)n(w)h(conte)o(xt)f(where)h
(this)e(information)i(is)f(needed.)2049 3653 y(One)40
b(w)o(ay)g(to)f(create)h(these)g(witnesses)g(is)f(the)h(use)g(of)f(the)
h(function)2049 3736 y Fj(match::forall)f(u)g(v.TypeR)g(u)f(->)g(TypeR)
h(v)f(->)g(Maybe\(Eq)h(u)2049 3819 y(v\))p Fv(.)26 b(The)20
b(function)h Fj(match)f Fv(dynamically)h(tests)f(whether)g(tw)o(o)g
(representa-)2049 3902 y(tion)g(types)g(are)f(equal.)26
b(If)19 b(the)o(y)h(are,)f(rather)h(than)g(return)g(a)f(boolean)i(v)n
(alue,)2049 3985 y(it)e(returns)i(either)f(a)g(successful)h(equality)g
(witness)f(or)g(it)g(returns)g(a)g(f)o(ailure.)2049 4068
y(The)h(witness)h(can)g(be)g(used)g(in)f(a)h(pattern)f(matching)i
(conte)o(xt)f(to)f(guard)h(an)2049 4151 y(e)o(xpression)e(with)f(this)f
(ne)n(w)i(piece)f(of)g(static)f(information)i(\(that)e
Fj(u=v)p Fv(\).)23 b(F)o(or)2049 4234 y(e)o(xample,)f(gi)n(v)o(en)g
(that)g Fj(x)f Fv(has)g(the)h(type)g Fj(Eq)38 b(u)g(v)p
Fv(,)22 b(in)f(the)g(case)h(e)o(xpression:)2049 4317
y Fj(\(case)39 b(x)f(of)g Ff(f)h Fj(Eq)f(->)g(...)77
b Ff(g)p Fj(\))p Fv(,)35 b(the)c(case)h(arm)g(indicated)h(by)f
Fj(...)2049 4400 y Fv(can)19 b(be)h(type)f(check)o(ed)i(under)e(the)g
(static)g(assumption)h(that)f Fj(u=v)p Fv(.)2049 4566
y(The)24 b(standard)h(typing)f(rules)g(for)g(equality)h(quali\002ed)f
(types)g(pro)o(vide)h(this)2049 4649 y(mechanism.)41
b(There)24 b(is)g(nothing)i(ne)n(w)f(here,)g(only)h(a)e(ne)n(w)h(w)o
(ay)g(of)f(using)2049 4732 y(the)f(old)g(techniques.)36
b(The)23 b(datatypes)g Fj(EJudgment)h Fv(and)f Fj(TJudgment)h
Fv(are)2049 4815 y(forms)f(of)f Fj(TypeR)h Fv(and)h Fj(Exp)f
Fv(that)f(use)h(e)o(xistential)g(types)g(to)f(hide)i(some)f(of)2049
4898 y(the)k(type)g(inde)o(x)o(es)h(to)f(those)h(type)f(constructor)h
(functions.)48 b Fj(EJudgment)2049 4981 y Fv(also)19
b(includes)h(a)f(representation)h(of)f(the)f(type)i Fj(t)p
Fv(.)2049 5147 y(The)h(functions)h Fj(match)p Fv(,)g
Fj(checkT)p Fv(,)f(and)h Fj(checkE)f Fv(are)g(e)o(xamples)h(of)f
(partial)2049 5230 y(functions.)i(The)o(y)15 b(might)g(succeed,)h
(producing)h(some)f(result)e Fj(ans)p Fv(,)i(b)o(ut)e(the)o(y)2049
5313 y(also)20 b(might)h(f)o(ail.)26 b(In)20 b Fw(W)p
Fv(me)o(ga)h(this)f(is)f(indicated)i(by)g(a)f(result)g(type)g
Fj(\(Maybe)2049 5396 y(ans\))p Fv(.)29 b(The)o(y)22 b(are)e(programmed)
j(using)f(the)f Fj(do)g Fv(notation)g(which)h(mak)o(es)f(it)p
Black Black eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158
-316 a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316
a
SDict begin [/View [/XYZ H.V]/Dest (page.11) cvn /DEST pdfmark end
 -158 -316 a Black Black Black Black Black -150 50 a
Fg(kind)33 b(State)h(=)f(Open)h(|)f(Closed)-150 199 y(prog2::Com)g
(\(Int,\(Int,a\)\))f(Open)h(Open)-150 274 y(prog2)g(=)-116
349 y(Seq)g(\(Set)h(sum)f(\(Int)h(0\)\))19 423 y(\(Seq)g(\(Set)f(x)h
(\(Int)f(1\)\))19 498 y(\(While)g(\(Lteq)h(\(Var)f(x\))h(\(Int)f(5\)\))
155 573 y(\(Seq)g(\(Set)h(sum)f(\(Plus)g(\(Var)h(sum\)\(Var)f(x\)\)\))
155 648 y(\(Seq)g(\(Writef)g(\(Var)h(x\)\))324 722 y(\(Set)g(x)f
(\(Plus)h(\(Var)f(x\))h(\(Int)f(1\)\)\)\)\)\)\))-150
872 y(data)g(Com)h(st)f(x)h(y)-82 946 y(=)f(forall)h(t)f(.)h(Set)g(\(V)
f(st)h(t\))f(\(Exp)h(st)f(t\))h(where)f(x=y)-82 1021
y(|)g(forall)h(a)f(.)h(Seq)g(\(Com)f(st)h(x)f(a\))h(\(Com)f(st)h(a)g
(y\))-82 1096 y(|)f(If)h(\(Exp)f(st)h(Bool\))f(\(Com)h(st)f(x)h(y\))g
(\(Com)f(st)h(x)f(y\))-82 1171 y(|)g(While)h(\(Exp)f(st)h(Bool\))f
(\(Com)g(st)h(x)g(y\))f(where)h(x)f(=)h(y)-82 1245 y(|)f(forall)h(t)f
(.)h(Declare)f(\(Exp)g(st)h(t\))g(\(Com)f(\(t,st\))g(x)h(y\))-82
1320 y(|)f(Openf)h(where)f(x)h(=)f(Closed,)g(y)h(=)g(Open)-82
1395 y(|)f(Closef)h(where)f(x)h(=)f(Open,)h(y)f(=)h(Closed)-82
1469 y(|)f(Writef)h(\(Exp)f(st)h(Int\))f(where)g(x)h(=)g(Open,)f(y)h(=)
f(Open)180 2539 y
 currentpoint currentpoint translate 0.8 0.8 scale neg exch neg exch
translate
 180 2539 a @beginspecial 88 @llx 118
@lly 285 @urx 266 @ury 1970 @rwi @setspecial
%%BeginDocument: protocol.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - protocol.ppt)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 12:32:46 02/06/04
%%For: (sheard)
%%DocumentData: Clean7Bit
%%BoundingBox: 88 118 285 266
%%HiResBoundingBox: 87.750336 117.750458 285.001068 266.251022
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica
[/N11/Helvetica 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1216 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:d4018536-9ba2-4192-a825-04ded5802269' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:d4018536-9ba2-4192-a825-04ded5802269' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2004-02-06T12:31:17-08:00' xap:CreateDate='2004-02-06T12:31:17-08:00'></rdf:Description>
<rdf:Description rdf:about='uuid:d4018536-9ba2-4192-a825-04ded5802269' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:353833e3-1efb-4863-8078-06726382a23d'/>
<rdf:Description rdf:about='uuid:d4018536-9ba2-4192-a825-04ded5802269' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - protocol.ppt</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>sheard</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
88 118 197 149 rectclip
[ 0 -1 1 0 -30.00012 354.00136 ] concat
/N12 [/DeviceRGB] /ColorSpace defineRes pop

87.750336 117.750458 148.500565 197.250732 re
W
n
q
n
576.039978 36.52 -540.0 720.000019 re
36.040001 36.52 m
eoclip
n
n
36.040001 36.52 539.999977 720.000019 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 J
0.75 w
8.0 M
n
90.040001 120.519997 144.000008 191.999992 re
0.003922 0.003922 0.003922 setrgbcolor
S
1 j
10.0 M
n
156.039993 150.519989 m
156.039993 143.919998 161.440002 138.520004 168.039993 138.520004 c
174.639999 138.520004 180.039993 143.919998 180.039993 150.519989 c
180.039993 157.119995 174.639999 162.519989 168.039993 162.519989 c
161.440002 162.519989 156.039993 157.119995 156.039993 150.519989 c
h
S
0.0 sg
170.439697 139.719696 m
/N11 [0.0 6.960007 -6.960007 0.0 0.0 0.0] Tf
(Closed)
[5.034173 1.55417 3.839834 3.489051 3.839834 3.87881 ] pdfys
n
156.039993 264.519989 m
156.039993 257.919983 161.440002 252.519989 168.039993 252.519989 c
174.639999 252.519989 180.039993 257.919983 180.039993 264.519989 c
180.039993 271.119995 174.639999 276.519989 168.039993 276.519989 c
161.440002 276.519989 156.039993 271.119995 156.039993 264.519989 c
h
0.003922 0.003922 0.003922 setrgbcolor
S
0.0 sg
170.439697 255.999695 m
(Open)
[5.392612 3.84749 3.960242 3.84749 ] pdfys
n
156.039993 150.160004 m
155.199997 150.160004 l
155.080002 150.279999 l
154.23999 150.400009 l
154.23999 150.519989 l
153.400009 150.87999 l
152.440002 151.360001 l
150.759995 152.800003 l
149.919998 153.759995 l
149.080002 154.839996 l
148.360001 155.919998 l
147.520004 157.23999 l
146.800003 158.559998 l
145.360001 161.679993 l
143.919998 165.039993 l
143.319992 166.839996 l
142.720001 168.759995 l
141.520004 172.839996 l
141.039993 174.87999 l
140.440002 177.039993 l
140.080002 179.319992 l
139.600006 181.479996 l
139.23999 183.87999 l
138.520004 188.559998 l
138.039993 193.360001 l
137.919998 195.87999 l
137.800003 198.279999 l
137.679993 200.800003 l
137.679993 205.720001 l
137.800003 208.23999 l
137.919998 210.639999 l
138.160004 213.159988 l
138.400009 215.559998 l
139.479996 222.759995 l
140.440002 227.319992 l
142.23999 233.800003 l
142.959991 235.839996 l
144.400009 239.679993 l
145.23999 241.479996 l
145.959991 243.279999 l
146.800003 244.839996 l
147.639999 246.519989 l
148.600006 247.959991 l
149.440002 249.279999 l
150.400009 250.600006 l
152.319992 252.759995 l
153.279999 253.720001 l
153.400009 253.720001 l
154.720001 254.439987 l
154.959991 254.559998 155.199997 254.439987 155.199997 254.319992 c
155.319992 254.080002 155.319992 253.839996 155.080002 253.839996 c
153.759995 253.119995 l
152.919998 252.279999 l
151.0 250.119995 l
150.160004 248.919998 l
149.199997 247.600006 l
148.360001 246.159988 l
147.520004 244.600006 l
145.839996 241.23999 l
145.119995 239.439987 l
143.679993 235.600006 l
142.959991 233.559998 l
142.360001 231.400009 l
141.759995 229.360001 l
141.279999 227.080002 l
140.679993 224.919998 l
140.199997 222.519989 l
139.839996 220.23999 l
139.119995 215.440002 l
138.87999 213.039993 l
138.639999 210.639999 l
138.520004 208.23999 l
138.400009 205.720001 l
138.400009 200.800003 l
138.520004 198.400009 l
138.639999 195.87999 l
138.759995 193.479996 l
139.0 191.080002 l
139.360001 188.679993 l
139.959991 184.0 l
140.319992 181.720001 l
140.800003 179.440002 l
142.23999 172.959991 l
142.839996 170.919998 l
144.039993 167.080002 l
144.639999 165.279999 l
145.360001 163.600006 l
145.959991 161.919998 l
146.679993 160.479996 l
147.400009 158.919998 l
148.23999 157.600006 l
148.959991 156.400009 l
149.679993 155.319992 l
150.519989 154.23999 l
151.23999 153.400009 l
152.080002 152.679993 l
152.919998 152.080002 l
153.639999 151.479996 l
154.479996 151.119995 l
155.319992 151.0 l
155.199997 151.0 l
156.039993 150.87999 l
156.279999 150.87999 156.400009 150.639999 156.400009 150.519989 c
156.400009 150.279999 156.160004 150.160004 156.039993 150.160004 c
h
152.800003 256.47998 m
159.519989 256.0 l
155.080002 250.959991 l
0.003922 0.003922 0.003922 setrgbcolor
f
n
176.559998 256.359985 m
177.519989 256.359985 l
177.639999 256.359985 177.639999 256.359985 177.639999 256.359985 c
178.600006 256.119995 l
180.759995 255.159988 l
181.720001 254.559998 l
182.800003 253.720001 l
184.720001 251.800003 l
185.679993 250.600006 l
186.639999 249.279999 l
187.479996 247.959991 l
188.440002 246.519989 l
189.279999 244.959991 l
190.119995 243.279999 l
190.839996 241.479996 l
191.679993 239.679993 l
193.119995 235.839996 l
193.839996 233.800003 l
195.039993 229.479996 l
195.519989 227.319992 l
196.119995 225.039993 l
196.600006 222.759995 l
196.959991 220.360001 l
197.319992 217.959991 l
197.679993 215.559998 l
197.919998 213.159988 l
198.159988 210.639999 l
198.279999 208.23999 l
198.400009 205.720001 l
198.400009 200.800003 l
198.279999 198.279999 l
198.159988 195.87999 l
198.039993 193.360001 l
197.800003 190.959991 l
197.559998 188.559998 l
196.839996 183.87999 l
196.479996 181.600006 l
195.519989 177.039993 l
195.039993 174.87999 l
194.559998 172.839996 l
193.360001 168.759995 l
192.759995 166.839996 l
192.159988 165.039993 l
190.720001 161.679993 l
190.0 160.119995 l
188.559998 157.23999 l
187.720001 156.039993 l
187.0 154.839996 l
186.159988 153.759995 l
186.159988 153.759995 186.159988 153.759995 186.039993 153.759995 c
184.600006 152.679993 l
184.479996 152.559998 184.23999 152.559998 184.119995 152.679993 c
184.0 152.919998 184.0 153.039993 184.23999 153.279999 c
185.679993 154.360001 l
185.559998 154.23999 l
186.279999 155.199997 l
187.119995 156.400009 l
187.839996 157.600006 l
188.559998 158.919998 l
189.400009 160.360001 l
190.0 161.919998 l
191.440002 165.279999 l
192.039993 167.080002 l
193.23999 170.919998 l
193.839996 172.959991 l
194.319992 175.119995 l
194.800003 177.160004 l
195.759995 181.720001 l
196.119995 184.0 l
196.720001 188.679993 l
197.080002 191.080002 l
197.199997 193.479996 l
197.440002 195.87999 l
197.559998 198.400009 l
197.679993 200.800003 l
197.679993 205.720001 l
197.559998 208.23999 l
197.440002 210.639999 l
197.199997 213.039993 l
196.959991 215.440002 l
196.600006 217.839996 l
196.23999 220.23999 l
195.87999 222.519989 l
195.400009 224.800003 l
194.800003 227.080002 l
194.319992 229.23999 l
193.119995 233.559998 l
192.400009 235.600006 l
190.959991 239.439987 l
190.23999 241.23999 l
188.559998 244.600006 l
186.039993 248.919998 l
185.080002 250.119995 l
184.119995 251.199997 l
183.279999 252.279999 l
182.319992 253.119995 l
181.360001 253.839996 l
179.440002 255.039993 l
178.479996 255.400009 l
176.559998 255.639999 l
176.319992 255.639999 176.199997 255.87999 176.199997 256.0 c
176.199997 256.23999 176.319992 256.359985 176.559998 256.359985 c
h
186.759995 150.759995 m
180.039993 150.519989 l
183.87999 156.039993 l
f
n
156.039993 264.160004 m
154.360001 264.279999 l
152.559998 264.519989 l
151.0 264.880005 l
149.319992 265.47998 l
147.759995 266.079987 l
146.199997 266.919983 l
144.759995 267.880005 l
143.440002 268.959991 l
142.23999 270.040009 l
141.039993 271.23999 l
140.080002 272.440002 l
139.23999 273.759979 l
138.639999 275.200012 l
138.279999 275.919983 l
138.039993 276.639984 l
137.919998 277.359985 l
137.800003 278.079987 l
137.679993 278.800018 l
137.679993 279.519989 l
137.800003 280.959991 l
138.039993 282.399994 l
138.400009 283.839996 l
139.0 285.160004 l
140.440002 287.800018 l
141.400009 289.0 l
143.559998 291.160004 l
144.759995 292.0 l
146.080002 292.839996 l
147.400009 293.559998 l
148.720001 294.160004 l
150.160004 294.519989 l
151.600006 294.759979 l
153.039993 294.880005 l
153.759995 294.880005 l
155.919998 294.519989 l
156.639999 294.279999 l
157.360001 293.919983 l
158.679993 293.320007 l
160.0 292.47998 l
161.319992 291.519989 l
162.519989 290.320007 l
163.600006 289.119995 l
164.679993 287.800018 l
165.639999 286.359985 l
167.080002 283.23999 l
167.559998 281.559998 l
167.559998 281.320007 167.440002 281.079987 167.199997 281.079987 c
167.080002 281.079987 166.839996 281.200012 166.839996 281.320007 c
166.360001 283.0 l
165.759995 284.440002 l
164.919998 286.0 l
164.080002 287.320007 l
163.119995 288.639984 l
162.039993 289.839996 l
160.839996 290.919983 l
159.639999 291.880005 l
158.319992 292.600006 l
157.119995 293.320007 l
156.400009 293.559998 l
155.800003 293.800018 l
154.360001 294.040009 l
153.759995 294.160004 l
153.039993 294.160004 l
151.720001 294.040009 l
150.400009 293.800018 l
148.959991 293.440002 l
147.759995 292.839996 l
146.440002 292.23999 l
144.039993 290.559998 l
142.959991 289.600006 l
142.0 288.519989 l
140.319992 286.119995 l
139.720001 284.919983 l
139.119995 283.600006 l
138.759995 282.279999 l
138.520004 280.839996 l
138.400009 279.519989 l
138.400009 278.800018 l
138.520004 278.200012 l
138.639999 277.47998 l
138.759995 276.880005 l
139.0 276.160004 l
139.23999 275.559998 l
139.839996 274.23999 l
140.679993 272.919983 l
141.639999 271.720001 l
142.720001 270.519989 l
143.919998 269.559998 l
145.119995 268.47998 l
148.0 266.800018 l
151.119995 265.600006 l
152.679993 265.23999 l
154.360001 265.0 l
156.039993 264.880005 l
156.279999 264.880005 156.400009 264.759979 156.400009 264.519989 c
156.400009 264.279999 156.279999 264.160004 156.039993 264.160004 c
h
169.959991 283.0 m
168.039993 276.519989 l
164.080002 281.919983 l
f
0.0 sg
129.159698 175.719696 m
/N11 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(open)
[9.959396 9.959396 9.959396 9.959396 ] pdfys
214.3591 187.720291 m
(close)
[8.9784 3.974402 9.986395 8.9784 9.986395 ] pdfys
136.359695 259.720276 m
(write)
[12.720603 6.119866 3.960002 5.160597 9.732596 ] pdfys
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica
%%EOF

%%EndDocument
 @endspecial 180 2539 a
 currentpoint currentpoint translate 1 0.8 div 1 0.8 div scale neg
exch neg exch translate
 180 2539 a -150 2622 a Fq(Figur)o(e)18
b(12.)197 2622 y
SDict begin H.S end
 197 2622 a Black Black 197 2622 a
SDict begin H.R end
 197
2622 a 197 2622 a
SDict begin [/View [/XYZ H.V]/Dest (figure.12) cvn /DEST pdfmark end
 197 2622 a Fq(The)h(While-language)f(augmented)h
(with)f(commands)h(f)n(or)-150 2705 y(manipulating)e(a)i(\002le,)f(and)
g(a)h(DF)-7 b(A)19 b(illustrating)f(the)g(pr)o(otocol.)p
-150 2724 2001 4 v Black -150 2992 a Fv(easy)26 b(to)g(program)g
(partial)f(functions)i(that)e(are)h(comprised)h(of)e(sub)h(com-)-150
3075 y(putations)e(that)f(might)g(also)g(f)o(ail.)36
b(A)23 b(sequence)h(of)g(partial)e(computations)-150
3158 y Fj(do)38 b Ff(f)h Fj(p)79 3171 y Fn(1)150 3158
y Fj(<-)g(e)303 3171 y Fn(1)336 3158 y Fj(;)f(...)77
b(;)38 b(p)717 3169 y Fd(n)788 3158 y Fj(<-)h(e)941 3169
y Fd(n)1012 3158 y Ff(g)54 b Fv(succeeds)17 b(only)g(if)e(all)h(the)g
Fj(e)1831 3170 y Fd(i)-150 3241 y Fv(succeed.)34 b(If)22
b(an)o(y)h(of)f(them)g(f)o(ails)g(then)h(the)f(whole)h(sequence)g(f)o
(ails.)33 b(If)22 b(the)-150 3324 y Fj(e)-112 3336 y
Fd(i)-73 3324 y Fv(succeeds)e(with)e(a)g(structured)i(data)e(object,)h
(then)g(the)g Fj(p)1388 3336 y Fd(i)1427 3324 y Fv(can)g(be)g(used)g
(to)-150 3407 y(pattern)k(match)g(against)g(the)g(result)g(if)f(it)g
(is)g(successful.)36 b(If)22 b(the)h Fj(e)1611 3419 y
Fd(i)1654 3407 y Fv(is)g(suc-)-150 3490 y(cessful)18
b(b)o(ut)g(the)g(object)g(returned)h(doesn')o(t)f(match)g(against)g
(the)g Fj(p)1575 3502 y Fd(i)1613 3490 y Fv(then)h(the)-150
3574 y(whole)g(sequence)i(f)o(ails)d(as)h(well.)-150
3740 y(W)-6 b(e)41 b(e)o(xplain)h(one)g(clause)g(of)f(the)h
(de\002nition)f(of)h Fj(checkE)p Fv(.)f(Consider)-150
3823 y Fj(checkE)e(\(PlusA)f(x)h(y\))f(sr)g(=)h(...)23
b Fv(First,)16 b(recursi)n(v)o(ely)j(check)f(the)g(sub-)-150
3906 y(term)i(of)h(the)g(annotated)h(AST)-6 b(,)20 b
Fj(x)p Fv(.)28 b(This)20 b(returns)h(a)g(judgment)h(encapsulat-)-150
3989 y(ing)h(a)f(typed)h(term)f Fj(\(e1::Exp)39 b(s)p
794 3989 23 4 v 65 w(a\))23 b Fv(and)g(a)f(representation)h(of)g(its)e
(type)-150 4072 y Fj(\(t1::TypeR)p 274 4072 V 66 w(a\))i
Fv(where)p 604 4072 V 50 w Fj(a)f Fv(is)h(an)g(e)o(xistentially)f
(quanti\002ed)i(type)f(v)n(ari-)-150 4155 y(able.)49
b(T)-5 b(est)26 b(if)h(this)g(representation)i(matches)f
Fj(IntR)p Fv(.)f(If)g(it)g(succeeds)i(the)-150 4238 y(witness)18
b Fj(\(EqProof::Eq)40 b(Int)p 745 4238 V 65 w(a\))19
b Fv(is)f(pattern)g(matched)i(and)f(the)g(rest)f(of)-150
4321 y(the)j(computation)i(can)e(proceed)i(under)f(the)f(static)g
(assumption)h(that)p 1720 4321 V 48 w Fj(a)f Fv(is)-150
4404 y(equal)f(to)f Fj(Int)p Fv(.)25 b(In)20 b(a)f(similar)g(f)o
(ashion)h(check)h(and)f(then)g(test)f Fj(y)p Fv(,)g(and)h(\002nally)
-150 4487 y(succeed)g(with)f(a)g(ne)n(w)g(judgment.)-150
4653 y Fq(P)o(ossible)26 b(Enhancements.)49 b Fv(This)27
b(technique)i(can)f(be)g(e)o(xtended)h(to)f(the)-150
4736 y(full)c(While-language)h(including)g(the)f Fj(Com)g
Fv(language.)40 b(In)24 b(that)g(case,)i(the)-150 4819
y(judgment)d(for)e(commands)i(must)f(include)g(representations)h(for)e
(stores)h(in)-150 4902 y(the)16 b(w)o(ay)g(that)f(the)h(judgment)g(for)
g(e)o(xpressions)h(contained)g(representations)-150 4985
y(for)29 b(types.)54 b(The)29 b(same)h(techniques)g(can)g(be)f(used)h
(to)f(infer)g(well)g(typed)-150 5068 y(object-code)18
b(terms)f(from)g(untyped)h(abstract)f(syntax)h(trees)f(without)g(anno-)
-150 5151 y(tations,)i(b)o(ut)f(the)h(details)g(become)h(more)f
(complicated.)24 b(The)19 b(re\003ection)g(of)-150 5234
y(the)25 b(type)g(w)o(orld)f(into)h(the)g(v)n(alue)g(w)o(orld)g(is)f(a)
g(po)n(werful)h(idea.)41 b(It)24 b(lets)g(the)-150 5317
y(user)29 b(dynamically)h(construct)g(objects)f(with)f(static)h
(properties)g(that)g(the)-150 5400 y(static)20 b(type)h(system)g(may)g
(not)g(be)g(able)g(to)g(infer)f(with)h(its)f(limited)g(compu-)p
Black Black 2049 83 a(tational)f(mechanism.)2049 62 y
SDict begin H.S end

2049 62 a 2049 62 a
SDict begin 10 H.A end
 2049 62 a 2049 62 a
SDict begin [/View [/XYZ H.V]/Dest (section.13) cvn /DEST pdfmark end
 2049 62 a 182
x Fs(13)99 b(Example:)109 b(A)64 b(Language)h(with)f(T)-9
b(emporal)2248 344 y(Safety)26 b(Pr)n(operties)2049 510
y Fv(Man)o(y)19 b(systems)f(depend)h(upon)g(communication)g(occurring)g
(according)g(to)2049 593 y(a)25 b(temporal)g(protocol.)42
b(F)o(or)24 b(e)o(xample)i(a)e(\002le)h(must)f(be)i(opened)g(before)f
(it)2049 677 y(can)g(be)g(written)g(to.)41 b(Once)25
b(opened,)i(a)e(\002le)f(shouldn')o(t)i(be)f(opened)i(again)2049
760 y(until)20 b(after)g(it)g(has)h(been)g(closed.)29
b(A)20 b(closed)h(\002le)f(should)h(ne)n(v)o(er)h(be)e(written)2049
843 y(to.)31 b(Such)21 b(protocols)i(are)e(naturally)h(e)o(xpressed)h
(as)e(\002nite)g(state)g(automata.)2049 926 y(The)e(DF)-6
b(A)18 b(in)h(Figure)2618 926 y
SDict begin H.S end
 2618 926 a Black Fv(12)p
Black 2693 875 a
SDict begin H.R end
 2693 875 a 2693 926 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.12) cvn H.B /ANN pdfmark end
 2693 926 a 19
w Fv(captures)g(this)g(protocol)h(precisely)-5 b(.)2049
1092 y(A)21 b(language)i(can)e(e)o(xpress)h(and)g(enforce)g(such)g
(protocols)g(quite)f(naturally)2049 1175 y(using)31 b(its)e(type)h
(system.)56 b(T)-6 b(o)30 b(illustrate)f(this)g(we)h(ha)o(v)o(e)g
(augmented)i(the)2049 1258 y(While-language)21 b(with)f(commands)i(for)
f(opening,)h(closing)f(,)f(and)h(writing)2049 1341 y(to)e(a)g(single)g
(\002le)f(\(we)h(discuss)g(remo)o(ving)h(this)f(restriction)g(later\).)
2049 1507 y(In)25 b(Figure)2357 1507 y
SDict begin H.S end
 2357 1507 a Black
Fv(12)p Black 2431 1456 a
SDict begin H.R end
 2431 1456 a 2431 1507 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.12) cvn H.B /ANN pdfmark end
 2431
1507 a 25 w Fv(we)h(ha)o(v)o(e)f(de\002ned)h(a)f(ne)n(w)h(kind)g
Fj(State)g Fv(with)f(types)h Fj(Open)2049 1590 y Fv(and)18
b Fj(Closed)p Fv(,)g(and)g(augmented)h(the)f(command)h(data)f
(structure)f(with)h(three)2049 1673 y(ne)n(w)23 b(constructor)h
(functions:)31 b Fj(Openf)p Fv(,)24 b Fj(Closef)p Fv(,)f(and)g
Fj(Writef)p Fv(.)35 b(The)23 b Fj(Com)2049 1756 y Fv(type)i(no)n(w)f
(tak)o(es)h(tw)o(o)f(additional)h(type)g(parameters.)39
b(Interpret)24 b(the)g(type)2049 1839 y(\()p Fj(Com)38
b(st)h(x)f(y)p Fv(\))17 b(as)h(a)f(command)j(in)d(store)h
Fj(st)p Fv(,)f(starting)h(e)o(x)o(ecution)h(in)e(state)2049
1922 y Fj(x)30 b Fv(and)h(ending)h(in)e(state)g Fj(y)p
Fv(.)57 b(The)31 b(types)g(of)f(the)g(ne)n(w)h(constructors)h(en-)2049
2005 y(force)22 b(the)g(protocol:)31 b Fj(\(Openf::Com)39
b(st)f(Closed)h(Open\))p Fv(,)23 b Fj(\(Closef::)2049
2088 y(Com)38 b(st)h(Open)f(Closed\))p Fv(,)24 b(and)f
Fj(\(Writef::Exp)39 b(st)g(Int)f(->)g(Com)h(st)2049 2171
y(Open)g(Open\))p Fv(.)34 b(The)23 b(type)g(of)g(a)f(command)i(such)g
(as)e Fj(prog2)h Fv(from)g(Figure)2049 2254 y
SDict begin H.S end
 2049 2254
a Black Fv(12)p Black 2124 2203 a
SDict begin H.R end
 2124 2203 a 2124 2254
a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.12) cvn H.B /ANN pdfmark end
 2124 2254 a 18 w Fv(describes)c(precisely)g(in)g(which)g(states)f(of)
h(the)f(protocol)i(the)e(command)2049 2337 y(resides.)45
b(Commands)27 b(with)f(polymorphic)h(starting)f(and)h(ending)g(states,)
2049 2420 y(essentially)19 b(carry)g(a)g(proof)h(that)e(the)o(y)i(do)f
(no)g(IO)g(at)g(all!)2049 2586 y Fq(P)o(ossible)14 b(Enhancements.)21
b Fv(It)15 b(is)g(easy)h(to)g(imagine)g(richer)g(protocols)g(with)2049
2669 y(DF)-6 b(A)e(')l(s)22 b(with)g(more)h(than)g(tw)o(o)g(states.)34
b(Accommodating)25 b(such)e(protocols)2049 2752 y(simply)28
b(requires)h(enriching)g(the)f Fj(State)h Fv(kind,)i(and)e(adding)g(ne)
n(w)f(com-)2049 2835 y(mands)17 b(for)e(each)i(transition.)22
b(If)15 b(the)h(host)g(language)i(has)e(a)g(notion)g(of)g(typed)2049
2918 y(procedures)29 b(it)f(isn')o(t)f(necessary)i(to)f(add)g(ne)n(w)g
(constructor)h(functions)g(to)2049 3001 y Fj(Com)18 b
Fv(for)g(each)h(transition)g(in)f(the)g(DF)-6 b(A.)18
b(Languages)h(with)f(multiple)g(proto-)2049 3084 y(cols,)k(or)g(with)g
(more)g(than)g(1)h(\002le)e(can)h(be)g(accommodated)i(by)f(specifying)
2049 3167 y(the)e(starting)g(and)g(ending)h(state)f(parameters)g(of)g
Fj(Com)g Fv(be)g(structured)g(types)2049 3250 y(with)e(more)g(than)g
(one)h(component.)2049 3215 y
SDict begin H.S end
 2049 3215 a 2049 3215 a
SDict begin 10 H.A end

2049 3215 a 2049 3215 a
SDict begin [/View [/XYZ H.V]/Dest (section.14) cvn /DEST pdfmark end
 2049 3215 a 166 x Fs(14)99 b(Example:)32
b(Multi-Le)o(v)o(el)25 b(Security)2049 3548 y Fv(Our)16
b(ne)o(xt)g(e)o(xample)h(concerns)h(a)e(language)h(with)f(multi-le)n(v)
o(el)g(security)g(do-)2049 3631 y(mains.)22 b(A)16 b(multi-le)n(v)o(el)
h(security)f(language)i(is)e(meant)h(to)f(ensure)h(con\002den-)2049
3714 y(tiality)22 b(of)h(information)g(stored)g(at)g(higher)g(le)n(v)o
(els)g(of)g(the)f(security)h(hierar)o(-)2049 3797 y(chy)-5
b(.)39 b(In)25 b(such)g(a)f(language)h(data)g(is)f(partitioned)g(into)h
(security)f(domains,)2049 3880 y(for)17 b(e)o(xample)h(a)f(tw)o(o)g(le)
n(v)o(el)g(domain)h(might)g(ha)o(v)o(e)f(tw)o(o)g(distinct)g(le)n(v)o
(els)h Fr(High)2049 3963 y Fv(and)i Fr(Low)p Fv(.)2049
4129 y(The)31 b(k)o(e)o(y)g(semantic)g(property)h(is)e(to)h(insure)g
(that)f(the)h(v)n(alue)g(of)g(data)g(at)2049 4212 y(higher)18
b(le)n(v)o(els)f(ne)n(v)o(er)g(in\003uences)h(the)f(v)n(alue)h(of)f
(data)g(at)g(lo)n(wer)g(le)n(v)o(els.)22 b(This)2049
4295 y(is)j(trick)o(y)g(because)h(control)g(\003o)n(w)f(decisions,)i
(predicated)f(on)g(high)f(secu-)2049 4378 y(rity)18 b(information,)h
(can)g(cause)g(information)g(to)g(leak)g(to)f(lo)n(wer)h(le)n(v)o(els.)
k(The)2049 4461 y(e)o(xample)d(belo)n(w)f(has)g(this)g(problem:)p
Black Black 2049 4615 a Fg({)34 b(high)f(int)h(x;)2117
4690 y(low)f(int)h(y;)2117 4765 y(if)f(\(x==0\))2218
4839 y(then)h(y)f(:=)h(0)2218 4914 y(else)g(y)f(:=)h(1)2049
4989 y(})2049 5151 y Fv(T)-6 b(o)37 b(reason)h(about)g
(con\002dentiality)g(we)g(need)g(an)g(object-language)h(in)2049
5234 y(which)23 b(we)f(can)h(reason)g(about)g(information)g(\003o)n(w)
-5 b(.)33 b(In)22 b(Figure)3749 5235 y
SDict begin H.S end
 3749 5235 a Black
-1 x Fv(13)p Black 3823 5183 a
SDict begin H.R end
 3823 5183 a 3823 5234
a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.13) cvn H.B /ANN pdfmark end
 3823 5234 a 22 w Fv(we)h(de-)2049 5317 y(\002ne)c(such)h(a)g
(language)h(based)f(on)g(similar)e(languages)j(from)f(the)f(literature)
2049 5400 y([)2074 5401 y
SDict begin H.S end
 2074 5401 a Black -1 x Fv(43)p
Black 2149 5349 a
SDict begin H.R end
 2149 5349 a 2149 5400 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.volpano96:sound) cvn H.B /ANN pdfmark end
 2149 5400 a
Fv(,)2186 5401 y
SDict begin H.S end
 2186 5401 a Black -1 x Fv(31)p Black
2261 5349 a
SDict begin H.R end
 2261 5349 a 2261 5400 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.SabMye2003) cvn H.B /ANN pdfmark end
 2261 5400 a Fv(].)p
Black Black eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158
-316 a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316
a
SDict begin [/View [/XYZ H.V]/Dest (page.12) cvn /DEST pdfmark end
 -158 -316 a Black Black Black Black Black -150 83 a
Fg(Domain)33 b(::)h(*1)-150 158 y(kind)f(Domain)g(=)h(High)g(|)f(Low)68
b(--)33 b(High,Low::Domain)-150 307 y(D::Domain)g(\230>)g(*)-150
382 y(data)g(D)h(t)-82 457 y(=)f(Lo)h(where)f(t)h(=)g(Low)169
b(--)33 b(Lo::D)h(Low)-82 531 y(|)f(Hi)h(where)f(t)h(=)g(High)135
b(--)33 b(Hi::D)h(High)-150 681 y(data)f(Dless)h(x)f(y)-82
756 y(=)g(LH)h(where)f(x)h(=)g(Low,)f(y)h(=)g(High)-82
830 y(|)f(LL)h(where)f(x)h(=)g(Low,)f(y)h(=)g(Low)-82
905 y(|)f(HH)h(where)f(x)h(=)g(High,)f(y)h(=)g(High)-150
1054 y(data)f(P)h(x)g(y)g(=)f(P)-150 1204 y(data)g(V)h(s)g(d)g(t)-82
1279 y(=)f(forall)h(s0)f(d0)h(.)g(Z)f(\(D)h(d\))53 1353
y(where)f(s)h(=)g(P)g(\(D)f(d,d0\))h(\(t,s0\))-82 1428
y(|)f(forall)h(a)f(b)h(t1)g(d1)f(.)h(S)g(\(V)f(\(P)h(a)g(b\))f(d)h(t\))
53 1503 y(where)f(s)h(=)g(P)g(\(d1,a\))f(\(t1,b\))-150
1652 y(eval)g(::)h(Exp)f(\(P)h(a)g(s\))f(d)h(t)g(->)g(s)f(->)h(t)-150
1727 y(exec)f(::)h(\(Com)f(d)h(\(P)g(a)f(st\)\))h(->)f(st)h(->)g(st)p
Black Black 2049 83 a(Exp)f(::)h(*)g(\230>)f(Domain)h(\230>)f(*)h
(\230>)g(*)2049 158 y(data)f(Exp)h(s)g(d)f(t)2117 232
y(=)g(Int)h(Int)f(where)h(t)f(=)h(Int)2117 307 y(|)f(Bool)h(Bool)f
(where)g(t)h(=)g(Bool)2117 382 y(|)f(Plus)h(\(Exp)f(s)h(d)g(Int\))f
(\(Exp)g(s)h(d)g(Int\))f(where)h(t)f(=)h(Int)2117 457
y(|)f(Lteq)h(\(Exp)f(s)h(d)g(Int\))f(\(Exp)g(s)h(d)g(Int\))f(where)h(t)
f(=)h(Bool)2117 531 y(|)f(forall)h(d2)f(.)h(Var)f(\(V)h(s)g(d2)f(t\))h
(\(Dless)f(d2)h(d\))2049 681 y(Com)f(::)h(Domain)f(\230>)h(*)g(\230>)f
(*)2049 756 y(data)g(Com)h(d)g(st)2117 830 y(=)f(forall)h(t)f(d1)h(d2)g
(.)2252 905 y(Set)g(\(V)f(st)h(d2)g(t\))f(\(Exp)h(st)f(d1)h(t\))2388
980 y(\(Dless)f(d1)g(d2\))h(\(Dless)f(d)h(d2\))2117 1054
y(|)f(Seq)h(\(Com)f(d)h(st\))g(\(Com)f(d)h(st\))2117
1129 y(|)f(If)h(\(Exp)f(st)h(d)g(Bool\))f(\(Com)g(d)h(st\))g(\(Com)f(d)
h(st\))2117 1204 y(|)f(While)h(\(Exp)f(st)h(d)f(Bool\))h(\(Com)f(d)h
(st\))2117 1279 y(|)f(forall)h(t)f(d2)h(a)g(b)f(.)2252
1353 y(Declare)g(\(D)h(d2\))f(\(Exp)h(st)f(d2)h(t\))2523
1428 y(\(Com)g(d)f(\(P)h(\(D)g(d2,a\))f(\(t,b\)\)\))2252
1503 y(where)g(st)h(=)g(P)g(a)f(b)2049 1652 y(update)g(::)h(\(V)f(\(P)h
(a)g(s\))f(d)h(t\))g(->)f(t)h(->)g(s)f(->)h(s)2049 1727
y(update)f(\(Z)h(d\))f(n)h(\(x,y\))f(=)h(\(n,y\))2049
1802 y(update)f(\(S)h(v\))f(n)h(\(x,y\))f(=)h(\(x,update)f(v)h(n)f(y\))
1494 1923 y Fq(Figur)o(e)18 b(13.)1839 1923 y
SDict begin H.S end
 1839 1923
a Black Black 1839 1923 a
SDict begin H.R end
 1839 1923 a 1839 1923 a
SDict begin [/View [/XYZ H.V]/Dest (figure.13) cvn /DEST pdfmark end
 1839
1923 a Fq(Security)h(Domains)p -150 1941 4200 4 v Black
-150 2130 a Fv(The)i Fj(kind)g Fv(declaration)g(in)g(Figure)807
2131 y
SDict begin H.S end
 807 2131 a Black -1 x Fv(13)p Black 882 2079 a
SDict begin H.R end

882 2079 a 882 2130 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (figure.13) cvn H.B /ANN pdfmark end
 882 2130 a 20 w Fv(introduces)h(a)f(ne)n(w)g
(kind,)h Fj(Domain)p Fv(,)-150 2213 y(and)17 b(tw)o(o)f(ne)n(w)h
(types,)f Fj(High)h Fv(and)f Fj(Low)p Fv(.)23 b(The)16
b Fj(data)g Fv(declaration)h(for)f Fj(D)g Fv(intro-)-150
2296 y(duces)i(a)f(ne)n(w)g(type)h(constructor)g(with)e(an)i
(interesting)f(kind:)23 b Fj(\(D::Domain)-150 2379 y
Fc( )38 b Fj(*\))p Fv(.)23 b(Lik)o(e)c(other)h Fj(data)f
Fv(declarations)h(its)e(also)h(introduces)i(ne)n(w)e(v)n(alues)-150
2462 y Fj(Hi)f Fv(and)h Fj(Lo)p Fv(.)k(The)18 b(type)h
Fj(D)f Fv(re\003ects)g(the)g(structure)h(of)f(the)g(kind)h
Fj(Domain)g Fv(into)-150 2545 y(the)g(v)n(alue)g(w)o(orld,)g(and)g(the)
g(type)g(of)g Fj(Hi)f Fv(and)h Fj(Lo)g Fv(are)g(inde)o(x)o(ed)g(by)h
(the)e(types)-150 2628 y(\()p Fj(High)h Fv(and)h Fj(Low)p
Fv(\))e(the)o(y)i(represent:)j Fj(\(Lo::D)39 b(Low\))19
b Fv(and)h Fj(\(Hi::D)39 b(High\))p Fv(.)-150 2795 y(The)16
b(security)h(language)h(is)e(closely)h(related)g(to)f(the)h
(While-language.)23 b(The)-150 2878 y(main)18 b(dif)n(ference)g(is)f
(the)h(introduction)h(and)f(use)g(of)f(domains.)24 b(This)17
b(neces-)-150 2961 y(sitates)22 b(a)h(change)g(in)g(the)f(w)o(ay)h(we)g
(type)g(stores.)34 b(In)22 b(the)h(While-language)-150
3044 y(the)29 b(type)h(of)f(a)g(store)g(w)o(as)g(a)g(nested)h(tuple)f
(encoding)i(the)e(types)h(of)f(the)-150 3127 y(v)n(ariables)24
b(in)f(scope.)36 b(In)24 b(the)f(security)g(language,)j(the)d(types)g
(of)h(the)f(v)n(ari-)-150 3210 y(ables)31 b(is)f(not)g(enough)i(\226)f
(we)f(must)g(also)h(encode)h(the)e Fj(Domain)h Fv(of)f(each)-150
3293 y(v)n(ariable.)56 b(This)29 b(is)h(the)g(role)f(of)h(the)g(type)g
(constructor)g Fj(P)g Fv(\(think)g(of)g Fj(\(P)-150 3376
y(x)38 b(y\))21 b Fv(as)f(a)h(special)g(kind)g(of)g(pair\).)28
b(In)20 b(the)h(While-language)h(a)e(command)-150 3459
y(typed)i(as)f Fj(\(Com)38 b(\(Int,\(Bool,a\)\)\))22
b Fv(w)o(ould)g(be)f(typed)h(as)f Fj(\(Com)38 b(\(P)h(\(D)-150
3542 y(High,\(D)g(Low,b\)\))g(\(Int,\(Bool,a\)\)\)\))28
b Fv(in)f(the)g(security)h(language.)-150 3625 y(The)g(type)g
(parameter)g(to)f Fj(Exp)h Fv(and)h Fj(Com)e Fv(describing)i(stores)f
(is)f(no)n(w)h(a)g Fj(P)-150 3708 y Fv(pair)l(.)i(The)21
b(second)i(component)g(of)e(the)g(pair)g(is)g(e)o(xactly)h(as)f(in)g
(the)h(While-)-150 3791 y(language,)g(and)g(the)f(\002rst)f(component)i
(of)f(the)g(pair)g(is)f(a)h(parallel)g(structure)-150
3874 y(\(with)e(the)h(same)f(nesting)i(shape)f(as)g(the)f(second\))i(b)
o(ut)e(storing)h(representa-)-150 3957 y(tions)f(of)g(the)g
Fj(Domain)g Fv(of)g(v)n(ariables)h(rather)f(than)g(their)g(types.)-150
4123 y(The)25 b(interpretation)h(of)f(a)h(command)g(with)f(type)h
Fj(\(Com)39 b(d)f(s\))25 b Fv(is)g(a)g(com-)-150 4206
y(mand)34 b(in)e(store)h Fj(s)g Fv(e)o(x)o(ecuting)g(in)g(a)g(control)g
(thread)g(in)g(domain)h Fj(d)p Fv(.)64 b(A)-150 4289
y(similar)25 b(interpretation)h(applies)g(to)g(e)o(xpressions)h(with)e
(types)h Fj(\(Exp)39 b(s)f(d)-150 4372 y(t\))31 b Fv(e)o(xcept)h(that)f
(a)g(e)o(xpression)h(also)f(returns)h(a)f(v)n(alue)g(of)g(type)h
Fj(t)p Fv(.)59 b(Se-)-150 4455 y(curity)26 b(in)g(the)f(language)j(is)d
(enforced)i(by)f(the)g Fj(Dless)g Fv(witnesses)g(in)g
Fj(Var)-150 4538 y Fv(and)e Fj(Set)f Fv(constructors.)37
b(Consider:)32 b Fj(\(Var::V)39 b(s)f(d2)h(t)f(->)g(Dless)h(d2)-150
4621 y(d)f(->)h(Exp)f(s)g(d)g(t\))p Fv(,)18 b(a)f(v)n(ariable)i(e)o
(xpression)f(is)f(well)g(formed)i(only)f(if)f(the)-150
4704 y(domain)32 b(of)f(the)g(v)n(ariable)h(\()p Fj(d2)p
Fv(\))f(is)f(less)h(than)h(the)f(thread)h(of)f(e)o(x)o(ecution)-150
4787 y(\()p Fj(d)p Fv(\).)50 b(Information)29 b(can)f(\003o)n(w)g(from)
g Fj(Low)g Fv(v)n(ariables)g(into)g Fj(High)h Fv(threads,)-150
4870 y(b)o(ut)j(not)h(the)f(other)h(w)o(ay)g(around.)65
b(F)o(or)32 b(the)g(assignments)i(constructor)-150 4953
y(function)27 b(we)f(ha)o(v)o(e)h Fj(\(Set::V)39 b(s)f(d2)g(t)h(->)f
(Exp)g(s)h(d1)f(->)g(Dless)h(d1)-150 5036 y(d2)f(->)h(Dless)f(d)g(d2)h
(->)f(Com)h(s)f(d\))p Fv(.)j(The)25 b(thread)g(of)g(the)h(e)o
(xpression)-150 5119 y(being)h(assigned)h(\()p Fj(d1)p
Fv(\))e(must)g(be)h(less)f(than)h(the)f(domain)h(of)g(the)f(v)n
(ariable)-150 5202 y(being)f(assigned)h(to)e(\()p Fj(d2)p
Fv(\).)39 b(An)o(yone)25 b(can)g(assign)g(to)f Fj(High)h
Fv(v)n(ariables,)h(b)o(ut)-150 5285 y(only)21 b(e)o(xpressions)g(in)f
Fj(Low)g Fv(threads)h(can)f(assign)h(to)f Fj(Low)g Fv(v)n(ariables.)27
b(In)21 b(ad-)-150 5368 y(dition)f(the)h(thread)f(of)h(the)f
(assignment)h(command)h(\()p Fj(d)p Fv(\))d(must)i(be)f(less)g(than)p
Black Black 2049 2130 a(the)c(thread)g(of)g(the)g(v)n(ariable)h(\()p
Fj(d2)p Fv(\).)22 b(This)15 b(pre)n(v)o(ents)i(the)f(problem)h
(illustrated)2049 2213 y(abo)o(v)o(e)h(of)f(control)g(\003o)n(w)g
(predicated)h(on)g Fj(High)f Fv(information)g(being)h(used)g(to)2049
2296 y(leak)h(information)h(into)f Fj(Low)g Fv(v)n(ariables.)2049
2462 y(Gi)n(v)o(en)j(a)f(semantics)h(for)g(this)f(language)i(\(similar)
e(to)g(the)h Fj(eval)f Fv(and)i Fj(exec)2049 2545 y Fv(commands)c(for)e
(the)h(While-language\))g(it)f(is)g(easy)h(to)f(state)h(and)g(pro)o(v)o
(e)g(that)2049 2628 y(the)d(type)g(system)h(pre)n(v)o(ents)g(adv)o
(erse)f(information)h(\003o)n(w)-5 b(.)22 b(The)15 b(proof)g(is)g(cast)
2049 2712 y(as)k(a)g(separation)g(ar)o(gument.)24 b(Gi)n(v)o(en)19
b(a)g(a)g(well-typed)g(command)h Fj(\(c::Com)2049 2795
y(d)38 b(\(P)h(ds)f(st\)\))16 b Fv(then)h(its)e(meaning)i(\()p
Fj(\(exec)39 b(c\)::st)f(->)h(st)p Fv(\))16 b(is)f(a)h(func-)2049
2878 y(tion)k(from)g(stores)g(to)g(stores,)g(and)g(v)n(alues)h(of)f(lo)
n(w)g(v)n(ariables)g(in)g(the)g(output)2049 2961 y(store)i(ne)n(v)o(er)
h(depend)h(on)f(the)f(v)n(alues)h(of)g(the)f(high)h(v)n(ariables)g(in)f
(the)g(input)2049 3044 y(store.)2049 3059 y
SDict begin H.S end
 2049 3059
a 2049 3059 a
SDict begin 10 H.A end
 2049 3059 a 2049 3059 a
SDict begin [/View [/XYZ H.V]/Dest (section.15) cvn /DEST pdfmark end
 2049 3059 a 182
x Fs(15)99 b(Related)26 b(W)-7 b(ork)2049 3407 y Fw(W)p
Fv(me)o(ga')l(s)58 b(design)g(has)f(been)h(in\003uenced)h(by)e(w)o(ork)
h(on)g(Logical)2049 3490 y(Frame)n(w)o(orks[)2444 3491
y
SDict begin H.S end
 2444 3491 a Black -1 x Fv(16)p Black 2520 3440 a
SDict begin H.R end
 2520
3440 a 2520 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.JACM::HarperHP1993) cvn H.B /ANN pdfmark end
 2520 3490 a Fv(,)2568 3491 y
SDict begin H.S end
 2568
3491 a Black -1 x Fv(30)p Black 2643 3440 a
SDict begin H.R end
 2643 3440
a 2643 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.CADE99*202) cvn H.B /ANN pdfmark end
 2643 3490 a Fv(,)2691 3492 y
SDict begin H.S end
 2691 3492
a Black -2 x Fv(29)p Black 2766 3440 a
SDict begin H.R end
 2766 3440 a 2766
3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Pfenning91lf) cvn H.B /ANN pdfmark end
 2766 3490 a Fv(],)32 b(Inducti)n(v)o(e)f(F)o(amilies[)3433
3490 y
SDict begin H.S end
 3433 3490 a Black Fv(14)p Black 3506 3440 a
SDict begin H.R end
 3506
3440 a 3506 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Dybjer:1999:FAI) cvn H.B /ANN pdfmark end
 3506 3490 a Fv(,)3555 3491 y
SDict begin H.S end
 3555
3491 a Black -1 x Fv(10)p Black 3629 3440 a
SDict begin H.R end
 3629 3440
a 3629 3490 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Coquand:1994:IDT) cvn H.B /ANN pdfmark end
 3629 3490 a Fv(],)h(Re\002nement)2049 3574
y(T)-6 b(ypes[)2250 3575 y
SDict begin H.S end
 2250 3575 a Black -1 x Fv(15)p
Black 2325 3523 a
SDict begin H.R end
 2325 3523 a 2325 3574 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.113468) cvn H.B /ANN pdfmark end
 2325 3574 a
Fv(,)2364 3574 y
SDict begin H.S end
 2364 3574 a Black Fv(12)p Black 2438
3523 a
SDict begin H.R end
 2438 3523 a 2438 3574 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Davies97) cvn H.B /ANN pdfmark end
 2438 3574 a Fv(],)20 b(Practical)f
(Dependent)i(T)-6 b(yping[)3360 3574 y
SDict begin H.S end
 3360 3574 a Black
Fv(1)p Black 3398 3523 a
SDict begin H.R end
 3398 3523 a 3398 3574 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Augustsson:1999:CLD) cvn H.B /ANN pdfmark end
 3398
3574 a Fv(,)3437 3574 y
SDict begin H.S end
 3437 3574 a Black Fv(2)p Black
3474 3523 a
SDict begin H.R end
 3474 3523 a 3474 3574 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.oai:CiteSeerPSU:339817) cvn H.B /ANN pdfmark end
 3474 3574 a Fv(],)20
b(and)g(Guarded)h(Re-)2049 3657 y(cursi)n(v)o(e)30 b(Datatype)g
(Constructors[)2996 3658 y
SDict begin H.S end
 2996 3658 a Black -1 x Fv(52)p
Black 3071 3606 a
SDict begin H.R end
 3071 3606 a 3071 3657 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Xi:1999:DTP) cvn H.B /ANN pdfmark end
 3071 3657 a
Fv(,)3119 3658 y
SDict begin H.S end
 3119 3658 a Black -1 x Fv(8)p Black
3156 3606 a
SDict begin H.R end
 3156 3606 a 3156 3657 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.XiChen2003) cvn H.B /ANN pdfmark end
 3156 3657 a Fv(].)54
b(But)29 b(the)g(w)o(ork)h(on)g(Equality)2049 3740 y(T)-6
b(ypes[)2250 3742 y
SDict begin H.S end
 2250 3742 a Black -2 x Fv(9)p Black
2288 3689 a
SDict begin H.R end
 2288 3689 a 2288 3740 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Hinze:03:Phantom) cvn H.B /ANN pdfmark end
 2288 3740 a Fv(])24
b(has)h(allo)n(wed)g(us)g(to)g(e)o(xpress)g(man)o(y)g(of)g(these)g
(ideas)g(as)g(a)f(sim-)2049 3823 y(ple)29 b(e)o(xtension)h(\(based)g
(upon)g(quali\002ed)g(types\))f(to)g(the)g(f)o(amiliar)g(notion)2049
3906 y(of)g(Algebraic)g(Datatypes.)53 b(By)28 b(combining)i(type)g
(inference)f(with)f(type)2049 3989 y(checking)h(for)f(arbitrary)g(rank)
g(polymorhism[)3328 3991 y
SDict begin H.S end
 3328 3991 a Black -2 x Fv(19)p
Black 3404 3938 a
SDict begin H.R end
 3404 3938 a 3404 3989 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.RankN) cvn H.B /ANN pdfmark end
 3404 3989 a
Fv(,)3451 3989 y
SDict begin H.S end
 3451 3989 a Black Fv(21)p Black 3525
3938 a
SDict begin H.R end
 3525 3938 a 3525 3989 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.LeBotlan:2003:MRM) cvn H.B /ANN pdfmark end
 3525 3989 a Fv(,)3572
3990 y
SDict begin H.S end
 3572 3990 a Black -1 x Fv(35)p Black 3646 3938
a
SDict begin H.R end
 3646 3938 a 3646 3989 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Simonet:2003:EHX) cvn H.B /ANN pdfmark end
 3646 3989 a Fv(])g(and)g(staging)2049
4072 y(annotations[)2417 4073 y
SDict begin H.S end
 2417 4073 a Black -1
x Fv(7)p Black 2456 4022 a
SDict begin H.R end
 2456 4022 a 2456 4072 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Calgano-Moggi-Sheard-JFP03) cvn H.B /ANN pdfmark end
 2456
4072 a Fv(,)2495 4073 y
SDict begin H.S end
 2495 4073 a Black -1 x Fv(40)p
Black 2569 4021 a
SDict begin H.R end
 2569 4021 a 2569 4072 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.TS00) cvn H.B /ANN pdfmark end
 2569 4072 a
Fv(,)2608 4073 y
SDict begin H.S end
 2608 4073 a Black -1 x Fv(34)p Black
2683 4021 a
SDict begin H.R end
 2683 4021 a 2683 4072 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Sheard02) cvn H.B /ANN pdfmark end
 2683 4072 a Fv(,)2721
4073 y
SDict begin H.S end
 2721 4073 a Black -1 x Fv(38)p Black 2796 4021
a
SDict begin H.R end
 2796 4021 a 2796 4072 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.T00) cvn H.B /ANN pdfmark end
 2796 4072 a Fv(];)21 b(we)f(ha)o(v)o(e)g
(created)h(a)f(po)n(werful)h(ne)n(w)g(w)o(ay)g(to)2049
4155 y(embed)f(properties)f(of)g(programs)h(in)f(their)g(types.)2049
4321 y(Expressing)30 b(that)f(tw)o(o)g(types)g(are)g(equal)h(in)f(a)g
(manner)h(controllable)f(by)2049 4404 y(the)i(programmer)h(is)f(the)g
(k)o(e)o(y)g(to)g(embedding)i(semantic)e(properties)h(of)2049
4487 y(object-programs.)27 b(The)19 b(\002rst)g(w)o(ork)h(e)o
(xpressing)h(equality)f(between)g(types)2049 4570 y(in)25
b(a)g(programming)h(language)g(w)o(as)f(based)h(on)g(the)f(idea)g(of)g
(using)g(Leib-)2049 4653 y(niz)19 b(equality)h(to)g(b)o(uild)f(an)g(e)o
(xplicit)h(witness)f(of)g(type)h(equality)-5 b(.)25 b(In)19
b Fw(W)p Fv(me)o(ga)2049 4736 y(we)29 b(w)o(ould)i(write)e
Fj(\(data)38 b(Eq)h(a)f(b)g(=)g(Witness)h(\(forall)g(f.f)g(a)f(->)2049
4819 y(f)g(b\)\))p Fv(.)23 b(The)c(logical)g(intuition)g(behind)h(this)
e(de\002nition)h(is)g(that)f(tw)o(o)h(types)2049 4902
y(are)27 b(equal)h(if,)h(and)f(only)g(if,)h(the)o(y)e(are)h
(interchangeable)h(in)e(an)o(y)h(conte)o(xt)2049 4985
y(\(the)23 b(arbitrary)h(type)g(constructor)g Fj(f)p
Fv(\).)37 b(Note)23 b(ho)n(w)h(this)f(relies)h(hea)o(vily)f(on)2049
5068 y(the)e(use)h(of)f(higher)h(rank)f(polymorphism.)32
b(The)21 b(germ)h(of)f(this)g(idea)g(origi-)2049 5151
y(nally)d(appeared)h(in)e(2000[)2751 5152 y
SDict begin H.S end
 2751 5152
a Black -1 x Fv(48)p Black 2827 5100 a
SDict begin H.R end
 2827 5100 a 2827
5151 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Weirich:2000:TSC) cvn H.B /ANN pdfmark end
 2827 5151 a Fv(],)g(and)i(w)o(as)e(well)g(de)n(v)o(eloped)j(tw)o
(o)d(years)h(later)2049 5234 y(in)k(2002[)2302 5235 y
SDict begin H.S end

2302 5235 a Black -1 x Fv(3)p Black 2340 5183 a
SDict begin H.R end
 2340
5183 a 2340 5234 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Baars:2002:TDT) cvn H.B /ANN pdfmark end
 2340 5234 a Fv(,)2380 5235 y
SDict begin H.S end
 2380
5235 a Black -1 x Fv(17)p Black 2455 5183 a
SDict begin H.R end
 2455 5183
a 2455 5234 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.HinzeHaskellWorkshop02) cvn H.B /ANN pdfmark end
 2455 5234 a Fv(].)31 b(Programming)22 b(with)g(witnesses)
g(requires)g(b)o(uilding)g(e)o(x-)2049 5317 y(plicit)j(casting)g
(functions)e Fr(C)r Fk([)p Fb(a)o Fk(])d Fx(!)c Fr(C)r
Fk([)p Fb(b)p Fk(])24 b Fv(for)h(dif)n(ferent)h(conte)o(xts)g(type)c
Fr(C)r Fv(.)2049 5400 y(This)f(is)g(both)g(tedious)h(and)g(error)f
(prone.)31 b(Programming)22 b(with)f(witnesses)p Black
Black eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158
-316 a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316
a
SDict begin [/View [/XYZ H.V]/Dest (page.13) cvn /DEST pdfmark end
 -158 -316 a Black Black -150 83 a Fv(has)26 b(some)g(problems)g(for)f
(which)h(no)g(solution)g(is)f(kno)n(wn)1422 83 y
SDict begin H.S end
 1422
83 a -27 x Fn(1)1457 83 y
SDict begin 10 H.L end
 1457 83 a 1457 83 a
SDict begin [/Subtype /Link/Dest (Hfootnote.1) cvn/H /I/Border [0 0
1]BorderArrayPatch/Color [1 0 0] H.B /ANN pdfmark end
 1457 83
a Fv(.)43 b(Using)25 b(type)-150 166 y(equality)i(became)g(practical)f
(with)g(the)g(introduction)i(of)e(equality)h(quali-)-150
249 y(\002ed)19 b(types)g(by)g(Hinze)g(and)h(Chene)o(y[)825
251 y
SDict begin H.S end
 825 251 a Black -2 x Fv(9)p Black 863 198 a
SDict begin H.R end
 863
198 a 863 249 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Hinze:03:Phantom) cvn H.B /ANN pdfmark end
 863 249 a Fv(].)j(The)c(implementation)g(of)g
Fw(W)p Fv(me)o(ga)-150 332 y(is)i(based)h(on)f(this)g(k)o(e)o(y)h
(idea.)29 b(W)-6 b(e)21 b(kno)n(w)h(that)f(a)g(type)g(system)h(b)o
(uilt)e(on)i(top)-150 415 y(of)d(equality)g(constrained)h(types)g(is)e
(sound)j(because)f(of)f(their)f(w)o(ork.)-150 581 y(The)29
b(use)h(of)g(kinds)g(to)f(classify)h(types)g(has)g(a)f(long)h(history[)
1524 581 y
SDict begin H.S end
 1524 581 a Black Fv(4)p Black 1562 530 a
SDict begin H.R end
 1562
530 a 1562 581 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.ba92lcwt) cvn H.B /ANN pdfmark end
 1562 581 a Fv(,)1610 582 y
SDict begin H.S end
 1610 582
a Black -1 x Fv(18)p Black 1685 530 a
SDict begin H.R end
 1685 530 a 1685
581 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.mpj:con-classes) cvn H.B /ANN pdfmark end
 1685 581 a Fv(,)1733 582 y
SDict begin H.S end
 1733 582 a Black -1
x Fv(23)p Black 1807 530 a
SDict begin H.R end
 1807 530 a 1807 581 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.tal) cvn H.B /ANN pdfmark end
 1807
581 a Fv(].)-150 664 y(Adding)c(e)o(xtensible)f(kinds)h(\(and)f(higher)
h(classi\002cations\))e(to)h(a)g(practical)-150 747 y(programming)16
b(language)g(lik)o(e)f Fw(W)p Fv(me)o(ga)g(w)o(as)g(a)f(natural)h(ne)o
(xt)g(step.)22 b(Duggan)-150 830 y(mak)o(es)e(use)f(of)h(kinds)f(in)g
(his)g(w)o(ork)h(on)f(dynamic)i(typing[)1379 831 y
SDict begin H.S end
 1379
831 a Black -1 x Fv(13)p Black 1454 779 a
SDict begin H.R end
 1454 779 a
1454 830 a
SDict begin [/Color [0 1 0]/H /I/Border [0 0 1]BorderArrayPatch/Subtype
/Link/Dest (cite.Duggan:1999:DTD) cvn H.B /ANN pdfmark end
 1454 830 a Fv(])e(in)g(a)g(manner)-150 913
y(reminiscent)e(of)g(our)h(w)o(ork,)f(b)o(ut)g(the)g(introduction)h(of)
f(ne)n(w)h(kinds)f(is)g(tied)g(to)-150 996 y(the)i(introduction)h(of)f
(types.)-150 997 y
SDict begin H.S end
 -150 997 a -150 997 a
SDict begin 10 H.A end
 -150 997 a -150
997 a
SDict begin [/View [/XYZ H.V]/Dest (section.16) cvn /DEST pdfmark end
 -150 997 a 167 x Fs(16)99 b(Conclusion)-150 1331
y Fw(W)p Fv(me)o(ga)20 b(is)g(descended)h(from)f(functional)h
(programming)g(languages)g(\226)f(Its)-150 1414 y(syntax)26
b(and)g(type)g(system)g(are)f(similar)g(to)g(Hask)o(ell,)i(b)o(ut)e(it)
f(adds)i(se)n(v)o(eral)-150 1497 y(ne)n(w)15 b(features)g(that)f(mak)o
(e)i(it)e(possible)h(to)g(use)g(algebraic)g(datatypes)g(to)g(b)o(uild)
-150 1580 y(proof-lik)o(e)k(objects)g(as)g(illustrated)f(abo)o(v)o(e.)
24 b(This)18 b(approach)i(to)e(combining)-150 1663 y(reasoning)k(and)f
(programming)i(in)d(a)h(single)g(system)g(mak)o(es)g(it)f(of)h
(interest)-150 1746 y(to)26 b(all)g(programmers.)47 b
Fw(W)p Fv(me)o(ga)27 b(opens)g(intriguing)g(possibilities)f(for)h(the)
-150 1829 y(design,)d(e)o(xploration,)h(and)e(implementation)g(of)g
(programs)h(with)e(seman-)-150 1912 y(tic)h(properties.)36
b(W)-6 b(e)22 b(belie)n(v)o(e)i(e)o(xploring)g(this)f(point)g(in)g(the)
g(design)h(space)-150 1995 y(of)d(programming)h(languages)g(and)f
(reasoning)h(systems)f(mak)o(es)h(is)e(an)h(im-)-150
2078 y(portant)29 b(step)f(in)g(the)g(direction)h(to)n(w)o(ards)f(the)h
(programming)g(languages)-150 2161 y(of)f(the)f(future.)49
b(Our)28 b(path)g(in)f(this)g(e)o(xploration)i(is)e(closer)g(to)h(the)f
(w)o(orld)-150 2244 y(of)d(programming)h(languages)h(than)e(the)g(path)
h(of)f(man)o(y)g(other)g(reasoning)-150 2327 y(systems.)34
b(W)-6 b(e)22 b(see)h(this)f(as)h(a)f(positi)n(v)o(e)h(bene\002t)g(and)
g(conjecture)g(that)g(pro-)-150 2410 y(gramming)d(languages)g(of)f(the)
g(future)g(will)f(be)i(b)o(uilt)e(along)h(similar)g(lines.)-150
2576 y Fw(W)p Fv(me)o(ga)32 b(supports)g(a)f(re\003ecti)n(v)o(e)g
(mechanism)i(that)e(enables)h(intensional)-150 2659 y(analysis)26
b(of)f(re\003ected)h(types,)h(and)f(thus)g(allo)n(ws)f(programmers)i
(to)e(write)-150 2742 y(tactic)19 b(le)n(v)o(el)h(proof)g(scripts)f(at)
g(the)h(v)n(alue)g(le)n(v)o(el)g(on)g(these)g(re\003ections.)25
b(The)-150 2825 y(tactics)g(can)g(then)g(be)g(re\003ected)g(back)h
(into)f(the)g(type)g(system)g(in)g(a)f(sound)-150 2909
y(manner)l(.)30 b(Staging)22 b(can)f(be)h(used)f(to)g(b)o(uild)g(ef)n
(\002cient)g(implementations)h(by)-150 2992 y(e)o(xploiting)h(conte)o
(xtual)h(in)m(v)n(ariants,)g(it)d(can)i(also)g(be)g(used)g(to)g(e)o
(xtract)f(ef)n(\002-)-150 3075 y(cient)h(programs)g(from)g(proof)g(lik)
o(e)f(objects.)35 b(Our)22 b(sincere)h(hope)g(is)f(that)h(a)-150
3158 y(programming)17 b(language)g(with)e(these)h(features)g(can)g
(lead)g(to)f(more)h(reliable)-150 3241 y(programs.)-150
3272 y
SDict begin H.S end
 -150 3272 a -150 3272 a
SDict begin 10 H.A end
 -150 3272 a -150 3272
a
SDict begin [/View [/XYZ H.V]/Dest (section.17) cvn /DEST pdfmark end
 -150 3272 a 167 x Fs(17)99 b(Refer)n(ences)-150 3486
y
SDict begin H.S end
 -150 3486 a -150 3486 a
SDict begin 10 H.A end
 -150 3486 a -150 3486 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Augustsson:1999:CLD) cvn /DEST
pdfmark end
 -150
3486 a Black -113 3605 a Fv([1])p Black 42 w(Lennart)21
b(Augustsson.)34 b(Cayenne)22 b(\227)e(a)h(language)h(with)f(dependent)
16 3688 y(types.)f Fr(A)n(CM)15 b(SIGPLAN)f(Notices)p
Fv(,)i(34\(1\):239\226250,)j(January)e(1999.)-150 3704
y
SDict begin H.S end
 -150 3704 a -150 3704 a
SDict begin 10 H.A end
 -150 3704 a -150 3704 a
SDict begin [/View [/XYZ H.V]/Dest (cite.oai:CiteSeerPSU:339817) cvn
/DEST pdfmark end
 -150
3704 a Black -113 3808 a Fv([2])p Black 42 w(Lennart)33
b(Augustsson.)73 b(Equality)32 b(proofs)i(in)f(cayenne,)k(July)c(11)16
3891 y(2000.)-150 3892 y
SDict begin H.S end
 -150 3892 a -150 3892 a
SDict begin 10 H.A end
 -150
3892 a -150 3892 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Baars:2002:TDT) cvn /DEST
pdfmark end
 -150 3892 a Black -113 4011 a Fv([3])p
Black 42 w(Arthur)c(I.)f(Baars)g(and)i(S.)d(Doaitse)i(Swierstra.)57
b(T)-6 b(yping)30 b(dynamic)16 4094 y(typing.)39 b(In)22
b Fr(Pr)m(oceedings)i(of)e(the)g(Se)o(venth)i(A)n(CM)d(SIGPLAN)g(inter)
o(-)16 4177 y(national)16 b(Confer)m(ence)g(on)g(Functional)f(Pr)m(o)o
(gr)o(amming)p Fv(,)i(pages)f(157\226)16 4260 y(166.)23
b(A)m(CM)g(Press,)g(Ne)n(w)g(Y)-8 b(ork,)24 b(September)f(2002.)41
b(Also)23 b(appears)16 4344 y(in)c(A)m(CM)g(SIGPLAN)e(Notices)i(37/9.)
-150 4346 y
SDict begin H.S end
 -150 4346 a -150 4346 a
SDict begin 10 H.A end
 -150 4346 a -150
4346 a
SDict begin [/View [/XYZ H.V]/Dest (cite.ba92lcwt) cvn /DEST pdfmark
end
 -150 4346 a Black -113 4464 a Fv([4])p Black 42
w(H.)i(P)-8 b(.)20 b(Barendre)o(gt.)35 b(Lambda)22 b(calculi)f(with)g
(types.)35 b(In)22 b(D.)e(M.)i(Gab-)16 4547 y(bai)g(Samson)h(Abramski)f
(and)h(T)-6 b(.)22 b(S.)f(E.)g(Maiboum,)j(editors,)f
Fr(Hand-)16 4630 y(book)d(of)g(Lo)o(gic)f(in)h(Computer)g(Science)p
Fv(.)g(Oxford)g(Uni)n(v)o(ersity)g(Press,)16 4713 y(Oxford,)f(1992.)
-150 4724 y
SDict begin H.S end
 -150 4724 a -150 4724 a
SDict begin 10 H.A end
 -150 4724 a -150
4724 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Bertel97) cvn /DEST pdfmark
end
 -150 4724 a Black -113 4833 a Fv([5])p Black 42
w(P)-8 b(.)28 b(Bertelsen.)60 b(Semantics)29 b(of)g(Ja)o(v)n(a)g(Byte)g
(Code.)61 b(T)-5 b(echnical)29 b(re-)16 4916 y(port,)g(Dep.)e(of)h
(Information)g(T)-5 b(echnology)g(,)30 b(T)-5 b(echnical)28
b(Uni)n(v)o(ersity)16 4999 y(of)19 b(Denmark,)g(March)h(1997.)p
Black -150 5063 801 4 v -49 5124 a Fn(1)-16 5151 y
SDict begin H.S end
 -16
5151 a Black Black -16 5151 a
SDict begin H.R end
 -16 5151 a -16 5151 a
SDict begin [/View [/XYZ H.V]/Dest (Hfootnote.1) cvn /DEST pdfmark
end
 -16
5151 a Fv(I.e.)38 b(gi)n(v)o(en)25 b(a)e(witness)h(with)g(type)g
Fj(\(Eq)38 b(\(a,b\))h(\(c,d\)\))24 b Fv(it)f(w)o(as)i(not)-150
5234 y(kno)n(wn)31 b(ho)n(w)f(to)f(construct)i(another)f(witness)f
(with)h(type)g Fj(\(Eq)38 b(a)g(c\))30 b Fv(or)-150 5317
y Fj(\(Eq)38 b(b)h(d\))p Fv(.)55 b(This)30 b(should)g(be)g(possible)h
(since)f(it)f(is)g(a)h(straightforw)o(ard)-150 5400 y(consequence)21
b(of)e(congruence.)p Black Black Black 2049 0 a
SDict begin H.S end
 2049
0 a 2049 0 a
SDict begin 10 H.A end
 2049 0 a 2049 0 a
SDict begin [/View [/XYZ H.V]/Dest (cite.PPDP`02*76) cvn /DEST pdfmark
end
 2049 0 a Black 2086 83
a Fv([6])p Black 42 w(Fr)t(\264)-29 b(ede')l(ric)20 b(Besson,)g(Thomas)
g(de)g(Grenier)g(de)g(Latour)m(,)g(and)g(Thomas)2215
166 y(Jensen.)37 b(Secure)21 b(calling)h(conte)o(xts)h(for)e(stack)h
(inspection.)37 b(In)21 b Fr(Pr)m(o-)2215 249 y(ceedings)26
b(of)f(the)f(F)-8 b(ourth)26 b(A)n(CM)e(SIGPLAN)f(Confer)m(ence)j(on)f
(Prin-)2215 332 y(ciples)19 b(and)h(Pr)o(actice)f(of)g(Declar)o(ative)h
(Pr)m(o)o(gr)o(amming)g(\(PPDP-02\))p Fv(,)2215 415 y(pages)g
(76\22687,)g(Ne)n(w)f(Y)-8 b(ork,)19 b(October)38 b(6\2268)19
b(2002.)h(A)m(CM)f(Press.)2049 431 y
SDict begin H.S end
 2049 431 a 2049
431 a
SDict begin 10 H.A end
 2049 431 a 2049 431 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Calgano-Moggi-Sheard-JFP03)
cvn /DEST pdfmark end
 2049 431 a Black 2086 535
a Fv([7])p Black 42 w(Cristiano)e(Calcagno,)i(Eugenio)g(Moggi,)f(and)h
(T)m(im)e(Sheard.)24 b(Closed)2215 619 y(types)h(for)g(a)g(safe)g
(imperati)n(v)o(e)g(MetaML.)47 b Fr(J)n(ournal)26 b(of)f(Functional)
2215 702 y(Pr)m(o)o(gr)o(amming)p Fv(,)19 b(13\(12\):545\226572,)j(May)
e(2003.)2049 718 y
SDict begin H.S end
 2049 718 a 2049 718 a
SDict begin 10 H.A end
 2049 718 a 2049
718 a
SDict begin [/View [/XYZ H.V]/Dest (cite.XiChen2003) cvn /DEST pdfmark
end
 2049 718 a Black 2086 822 a Fv([8])p Black 42 w(Chiyan)25
b(Chen)h(and)f(Hongwei)h(Xi.)45 b(Meta-programming)27
b(through)2215 905 y(typeful)d(code)h(representation.)43
b(In)24 b Fr(Pr)m(oceedings)h(of)f(the)f(8th)i(A)n(CM)2215
988 y(SIGPLAN)20 b(International)j(Confer)m(ence)h(on)e(Functional)h
(Pr)m(o)o(gr)o(am-)2215 1071 y(ming)28 b(\(ICFP-03\))p
Fv(,)h(A)m(CM)f(SIGPLAN)f(Notices,)j(pages)f(275\226286,)2215
1154 y(Ne)n(w)19 b(Y)-8 b(ork,)19 b(August)38 b(25\22629)20
b(2003.)g(A)m(CM)f(Press.)2049 1170 y
SDict begin H.S end
 2049 1170 a 2049
1170 a
SDict begin 10 H.A end
 2049 1170 a 2049 1170 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Hinze:03:Phantom) cvn /DEST
pdfmark end
 2049 1170 a Black 2086
1274 a Fv([9])p Black 42 w(James)c(Chene)o(y)g(and)h(Ralf)e(Hinze.)j
(Phantom)e(types.)j(A)-6 b(v)n(ailable)16 b(from)2215
1357 y Fa(http://www.informa)o(tik)o(.un)o(i-b)o(onn)o(.d)o(e/\230)o
(ral)o(f/p)o(ub)o(lic)o(ati)o(ons)o(/P)o(han)o(tom)o(.pd)o(f)p
Fn(.)o Fv(,)2215 1440 y(2003.)2049 1441 y
SDict begin H.S end
 2049 1441 a
2049 1441 a
SDict begin 10 H.A end
 2049 1441 a 2049 1441 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Coquand:1994:IDT) cvn /DEST
pdfmark end
 2049 1441 a Black
120 x Fv([10])p Black 42 w(T)-6 b(.)19 b(Coquand)h(and)g(P)-8
b(.)17 b(Dybjer)l(.)28 b(Inducti)n(v)o(e)20 b(de\002nitions)f(and)g
(type)h(the-)2215 1644 y(ory)27 b(an)g(introduction)h(\(preliminary)e
(v)o(ersion\).)52 b Fr(Lectur)m(e)27 b(Notes)g(in)2215
1727 y(Computer)20 b(Science)p Fv(,)f(880:60\22676,)i(1994.)2049
1742 y
SDict begin H.S end
 2049 1742 a 2049 1742 a
SDict begin 10 H.A end
 2049 1742 a 2049 1742
a
SDict begin [/View [/XYZ H.V]/Dest (cite.POPL00*184) cvn /DEST pdfmark
end
 2049 1742 a Black 105 x Fv([11])p Black 42 w(Karl)36
b(Crary)g(and)g(Stephanie)h(W)-6 b(eirich.)81 b(Resource)37
b(bound)g(cer)o(-)2215 1930 y(ti\002cation.)102 b(In)43
b Fr(Pr)m(oceedings)g(of)g(the)f(27th)h(A)n(CM)f(SIGPLAN-)2215
2013 y(SIGA)n(CT)e(Symposium)j(on)f(Principles)g(of)f(Pr)m(o)o(gr)o
(amming)i(Lan-)2215 2096 y(gua)o(g)o(es)36 b(\(POLP-00\))p
Fv(,)g(pages)f(184\226198,)k(N.Y)-10 b(.,)37 b(January)68
b(19\22621)2215 2179 y(2000.)20 b(A)m(CM)f(Press.)2049
2180 y
SDict begin H.S end
 2049 2180 a 2049 2180 a
SDict begin 10 H.A end
 2049 2180 a 2049 2180
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Davies97) cvn /DEST pdfmark
end
 2049 2180 a Black 120 x Fv([12])p Black 42 w(Ro)n(w)o(an)j(Da)o
(vies.)34 b(A)20 b(re\002nement-type)i(check)o(er)h(for)e(Standard)g
(ML.)2215 2383 y(In)27 b Fr(International)i(Confer)m(ence)g(on)f(Alg)o
(ebr)o(aic)g(Methodolo)o(gy)i(and)2215 2466 y(Softwar)m(e)21
b(T)-7 b(ec)o(hnolo)o(gy)p Fv(,)22 b(v)o(olume)e(1349)h(of)g
Fr(Lectur)m(e)f(Notes)g(in)g(Com-)2215 2549 y(puter)f(Science)p
Fv(.)h(Springer)o(-V)-8 b(erlag,)18 b(1997.)2049 2565
y
SDict begin H.S end
 2049 2565 a 2049 2565 a
SDict begin 10 H.A end
 2049 2565 a 2049 2565 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Duggan:1999:DTD) cvn /DEST
pdfmark end
 2049
2565 a Black 104 x Fv([13])p Black 42 w(Dominic)25 b(Duggan.)48
b(Dynamic)25 b(typing)h(for)f(distrib)o(uted)g(program-)2215
2752 y(ming)e(in)g(polymorphic)h(languages.)41 b Fr(A)n(CM)22
b(T)l(r)o(ansactions)i(on)f(Pr)m(o-)2215 2835 y(gr)o(amming)42
b(Langua)o(g)o(es)h(and)f(Systems)p Fv(,)k(21\(1\):11\22645,)j(January)
2215 2918 y(1999.)2049 2920 y
SDict begin H.S end
 2049 2920 a 2049 2920 a
SDict begin 10 H.A end

2049 2920 a 2049 2920 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Dybjer:1999:FAI) cvn /DEST
pdfmark end
 2049 2920 a Black 119 x Fv([14])p
Black 42 w(P)-8 b(.)18 b(Dybjer)h(and)h(A.)f(Setzer)l(.)27
b(A)19 b(\002nite)g(axiomatization)h(of)f(inducti)n(v)o(e-)2215
3122 y(recursi)n(v)o(e)33 b(de\002nitions.)70 b Fr(Lectur)m(e)33
b(Notes)f(in)g(Computer)h(Science)p Fv(,)2215 3205 y(1581:129\226146,)
22 b(1999.)2049 3216 y
SDict begin H.S end
 2049 3216 a 2049 3216 a
SDict begin 10 H.A end
 2049 3216
a 2049 3216 a
SDict begin [/View [/XYZ H.V]/Dest (cite.113468) cvn /DEST pdfmark
end
 2049 3216 a Black 109 x Fv([15])p Black
42 w(T)m(im)35 b(Freeman)h(and)g(Frank)g(Pfenning.)80
b(Re\002nement)36 b(types)g(for)2215 3408 y(ml.)48 b(In)26
b Fr(Pr)m(oceedings)g(of)g(the)g(A)n(CM)f(SIGPLAN)f(1991)j(confer)m
(ence)2215 3491 y(on)19 b(Pr)m(o)o(gr)o(amming)g(langua)o(g)o(e)i
(design)e(and)g(implementation)p Fv(,)g(pages)2215 3574
y(268\226277.)i(A)m(CM)e(Press,)f(1991.)2049 3585 y
SDict begin H.S end
 2049
3585 a 2049 3585 a
SDict begin 10 H.A end
 2049 3585 a 2049 3585 a
SDict begin [/View [/XYZ H.V]/Dest (cite.JACM::HarperHP1993) cvn /DEST
pdfmark end
 2049 3585
a Black 109 x Fv([16])p Black 42 w(Robert)i(Harper)m(,)h(Furio)f
(Honsell,)g(and)h(Gordon)g(Plotkin.)31 b(A)20 b(frame-)2215
3777 y(w)o(ork)d(for)g(de\002ning)g(logics.)22 b Fr(J)n(ournal)c(of)e
(the)h(A)n(CM)p Fv(,)e(40\(1\):143\226184,)2215 3861
y(January)20 b(1993.)2049 3877 y
SDict begin H.S end
 2049 3877 a 2049 3877
a
SDict begin 10 H.A end
 2049 3877 a 2049 3877 a
SDict begin [/View [/XYZ H.V]/Dest (cite.HinzeHaskellWorkshop02) cvn
/DEST pdfmark end
 2049 3877 a Black 104 x Fv([17])p
Black 42 w(Ralf)28 b(Hinze)g(and)h(James)f(Chene)o(y)-5
b(.)58 b(A)28 b(lightweight)g(implementa-)2215 4064 y(tion)16
b(of)h(generics)g(and)g(dynamics.)22 b(In)16 b(Manuel)i(Chakra)o(v)n
(arty)-5 b(,)17 b(editor)m(,)2215 4147 y Fr(Pr)m(oceedings)25
b(of)g(the)f(A)n(CM)g(SIGPLAN)f(2002)j(Hask)o(ell)e(W)-7
b(orkshop)p Fv(,)2215 4230 y(pages)20 b(90\226104.)g(A)m(CM)f(SIGPLAN,)
e(October)i(2002.)2049 4246 y
SDict begin H.S end
 2049 4246 a 2049 4246 a
SDict begin 10 H.A end

2049 4246 a 2049 4246 a
SDict begin [/View [/XYZ H.V]/Dest (cite.mpj:con-classes) cvn /DEST
pdfmark end
 2049 4246 a Black 104 x Fv([18])p
Black 42 w(Mark)j(P)-8 b(.)21 b(Jones.)36 b(A)22 b(system)g(of)g
(constructor)g(classes:)29 b(o)o(v)o(erloading)2215 4433
y(and)e(implicit)e(higher)o(-order)h(polymorphism.)51
b(In)26 b Fr(Pr)m(oceedings)h(of)2215 4516 y(the)e(Confer)m(ence)h(on)f
(Functional)h(Pr)m(o)o(gr)o(amming)f(Langua)o(g)o(es)i(and)2215
4599 y(Computer)20 b(Ar)m(c)o(hitectur)m(e)o(,)f(Copenha)o(g)o(en,)j
(Denmark)p Fv(,)d(June)h(1993.)2049 4615 y
SDict begin H.S end
 2049 4615
a 2049 4615 a
SDict begin 10 H.A end
 2049 4615 a 2049 4615 a
SDict begin [/View [/XYZ H.V]/Dest (cite.RankN) cvn /DEST pdfmark end
 2049 4615 a Black
105 x Fv([19])p Black 42 w(Simon)72 b(Pe)o(yton)h(Jones)g(and)h(Mark)f
(Shields.)198 b(Practi-)2215 4803 y(cal)64 b(type)h(inference)g(for)g
(arbitrary-rank)g(types.)173 b(T)-5 b(ech-)2215 4886
y(nical)68 b(report,)80 b(Microsoft)69 b(Research,)81
b(\224December\224)69 b(2003.)2215 4969 y Fa(http://research.mi)o(cro)o
(sof)o(t.c)o(om/)o(Us)o(ers)o(/si)o(mon)o(pj)o(/pa)o(per)o(s/p)o(ut)o
(tin)o(g/i)o(nde)o(x.h)o(tm)o Fv(.)2049 4978 y
SDict begin H.S end
 2049 4978
a 2049 4978 a
SDict begin 10 H.A end
 2049 4978 a 2049 4978 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Launchbury:1996:PUU) cvn /DEST
pdfmark end
 2049 4978 a Black
111 x Fv([20])p Black 42 w(J.)23 b(Launchb)o(ury)j(and)e(R.)f(P)o
(aterson.)43 b(P)o(arametricity)23 b(and)i(unboxing)2215
5172 y(with)j(unpointed)i(types.)58 b Fr(Lectur)m(e)29
b(Notes)g(in)f(Computer)h(Science)p Fv(,)2215 5255 y(1058:204\226??,)21
b(1996.)2049 5266 y
SDict begin H.S end
 2049 5266 a 2049 5266 a
SDict begin 10 H.A end
 2049 5266
a 2049 5266 a
SDict begin [/View [/XYZ H.V]/Dest (cite.LeBotlan:2003:MRM) cvn /DEST
pdfmark end
 2049 5266 a Black 110 x Fv([21])p Black
42 w(Didier)g(Le)g(Botlan)h(and)g(Didier)f(R)t(\264)-29
b(emy)-5 b(.)35 b(ML)3428 5349 y Fd(F)3473 5376 y Fv(:)28
b(raising)21 b(ML)g(to)h(the)p Black Black eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a -158 -316 a
SDict begin H.S end
 -158
-316 a Black Black -158 -316 a
SDict begin H.R end
 -158 -316 a -158 -316
a
SDict begin [/View [/XYZ H.V]/Dest (page.14) cvn /DEST pdfmark end
 -158 -316 a Black Black 16 83 a Fv(po)n(wer)30 b(of)f(system)g(F.)59
b Fr(A)n(CM)28 b(SIGPLAN)g(Notices)p Fv(,)j(38\(9\):27\22638,)16
166 y(September)19 b(2003.)-150 182 y
SDict begin H.S end
 -150 182 a -150
182 a
SDict begin 10 H.A end
 -150 182 a -150 182 a
SDict begin [/View [/XYZ H.V]/Dest (cite.PeterLeeWeb) cvn /DEST pdfmark
end
 -150 182 a Black 104 x Fv([22])p
Black 42 w(Peter)62 b(Lee.)167 b(Proof-carrying)64 b(code.)168
b(A)-6 b(v)n(ailable)64 b(from)16 369 y Fj
(http://www-2.cs.cmu.edu/\230petel/papers/pcc/pcc.html)p
Fv(.)-150 381 y
SDict begin H.S end
 -150 381 a -150 381 a
SDict begin 10 H.A end
 -150 381 a -150
381 a
SDict begin [/View [/XYZ H.V]/Dest (cite.tal) cvn /DEST pdfmark end
 -150 381 a Black 109 x Fv([23])p Black 42 w(G.)24
b(Morrisett,)i(D.)e(W)-6 b(alk)o(er)m(,)26 b(K.)e(Crary)-5
b(,)26 b(and)g(N.)e(Gle)n(w)-5 b(.)45 b(From)25 b(sys-)16
573 y(tem)30 b(F)g(to)g(typed)i(assembly)f(language.)65
b Fr(A)n(CM)30 b(T)l(r)o(ansactions)h(on)16 656 y(Pr)m(o)o(gr)o(amming)
17 b(Langua)o(g)o(es)i(and)e(Systems)g(\(T)o(OPLAS\))p
Fv(,)d(21\(3\):528\226)16 739 y(569,)19 b(May)h(1999.)-150
755 y
SDict begin H.S end
 -150 755 a -150 755 a
SDict begin 10 H.A end
 -150 755 a -150 755 a
SDict begin [/View [/XYZ H.V]/Dest (cite.morrisett+:wcsss) cvn /DEST
pdfmark end
 -150
755 a Black 104 x Fv([24])p Black 42 w(Gre)o(g)42 b(Morrisett,)48
b(Karl)42 b(Crary)-5 b(,)48 b(Neal)42 b(Gle)n(w)-5 b(,)48
b(Dan)42 b(Grossman,)16 942 y(Richard)23 b(Samuels,)h(Frederick)e
(Smith,)h(Da)o(vid)g(W)-6 b(alk)o(er)m(,)23 b(Stephanie)16
1025 y(W)-6 b(eirich,)29 b(and)g(Ste)n(v)o(e)f(Zdance)n(wic.)56
b(T)-7 b(ALx86:)42 b(A)28 b(realistic)f(typed)16 1108
y(assembly)20 b(language.)30 b(A)m(CM)19 b(SIGPLAN)f(W)-6
b(orkshop)20 b(on)g(Compiler)16 1191 y(Support)f(for)g(System)g(Softw)o
(are,)f(1999.)-150 1208 y
SDict begin H.S end
 -150 1208 a -150 1208 a
SDict begin 10 H.A end
 -150
1208 a -150 1208 a
SDict begin [/View [/XYZ H.V]/Dest (cite.JFP::OrbaekP1997) cvn /DEST
pdfmark end
 -150 1208 a Black 104 x Fv([25])p
Black 42 w(P)-8 b(.)19 b(\330rb\346k)i(and)g(J.)f(P)o(alsber)o(g.)32
b(T)m(rust)21 b(in)f(the)h Fw(l)p Fv(-calculus.)33 b
Fr(J)n(ournal)22 b(of)16 1395 y(Functional)e(Pr)m(o)o(gr)o(amming)p
Fv(,)f(7\(6\):557\226591,)i(No)o(v)o(ember)f(1997.)-150
1410 y
SDict begin H.S end
 -150 1410 a -150 1410 a
SDict begin 10 H.A end
 -150 1410 a -150 1410
a
SDict begin [/View [/XYZ H.V]/Dest (cite.SheardPasalic2002) cvn /DEST
pdfmark end
 -150 1410 a Black 105 x Fv([26])p Black 42 w(Emir)d(P)o(asalic,)g(W)
-6 b(alid)17 b(T)-6 b(aha,)18 b(and)h(T)m(im)e(Sheard.)25
b(T)-6 b(agless)18 b(staged)g(in-)16 1598 y(terpreters)i(for)g(typed)h
(languages.)32 b(In)20 b Fr(Pr)m(oceedings)h(of)f(the)g(Se)o(venth)16
1681 y(A)n(CM)e(SIGPLAN)e(International)k(Confer)m(ence)g(on)e
(Functional)h(Pr)m(o-)16 1764 y(gr)o(amming)g(\(ICFP-02\).)p
Fv(,)d(pages)j(218\226229,)h(Pittsb)o(ur)o(gh,)d(P)-7
b(A.,)17 b(Octo-)16 1847 y(ber)38 b(4\2266)20 b(2002.)f(A)m(CM)g
(Press.)-150 1848 y
SDict begin H.S end
 -150 1848 a -150 1848 a
SDict begin 10 H.A end
 -150 1848
a -150 1848 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Paulson90lacs) cvn /DEST pdfmark
end
 -150 1848 a Black 120 x Fv([27])p Black
42 w(La)o(wrence)c(C.)f(P)o(aulson.)j(Isabelle:)k(The)15
b(ne)o(xt)g(700)g(theorem)g(pro)o(v)o(ers.)16 2051 y(In)27
b(P)-8 b(.)27 b(Odifreddi,)i(editor)m(,)h Fr(Lo)o(gic)d(and)i(Computer)
f(Science)p Fv(,)i(pages)16 2134 y(361\226386.)21 b(Academic)e(Press,)g
(1990.)-150 2145 y
SDict begin H.S end
 -150 2145 a -150 2145 a
SDict begin 10 H.A end
 -150 2145
a -150 2145 a
SDict begin [/View [/XYZ H.V]/Dest (cite.PST00TR) cvn /DEST pdfmark
end
 -150 2145 a Black 109 x Fv([28])p Black
42 w(Emir)38 b(P)o(a)r(\020)-27 b(sali)t(\264)e(c,)44
b(T)m(im)38 b(Sheard,)45 b(and)39 b(W)-6 b(alid)39 b(T)-6
b(aha.)92 b(D)m(ALI:)38 b(An)16 2337 y(untyped,)53 b(CBV)44
b(functional)i(language)h(supporting)f(\002rst-order)16
2420 y(datatypes)j(with)e(binders)i(\(technical)f(de)n(v)o(elopment\).)
121 b(T)-5 b(ech-)16 2503 y(nical)46 b(Report)f(CSE-00-007,)53
b(OGI,)45 b(2000.)113 b(A)-6 b(v)n(ailable)47 b(from)16
2586 y(http://www)-5 b(.cse.ogi.edu/P)o(acSoft/.)-150
2602 y
SDict begin H.S end
 -150 2602 a -150 2602 a
SDict begin 10 H.A end
 -150 2602 a -150 2602
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Pfenning91lf) cvn /DEST pdfmark
end
 -150 2602 a Black 105 x Fv([29])p Black 42 w(Frank)18
b(Pfenning.)26 b(Logic)19 b(programming)h(in)e(the)g(LF)f(logical)i
(frame-)16 2790 y(w)o(ork.)68 b(In)32 b(G)t(\264)-29
b(erard)32 b(Huet)g(and)g(Gordon)h(Plotkin,)h(editors,)h
Fr(Lo)o(gi-)16 2873 y(cal)20 b(F)l(r)o(ame)o(works)p
Fv(,)f(pages)i(149\226181,)g(Cambridge,)g(England,)f(1991.)16
2956 y(Cambridge)g(Uni)n(v)o(ersity)f(Press.)-150 2972
y
SDict begin H.S end
 -150 2972 a -150 2972 a
SDict begin 10 H.A end
 -150 2972 a -150 2972 a
SDict begin [/View [/XYZ H.V]/Dest (cite.CADE99*202) cvn /DEST pdfmark
end
 -150
2972 a Black 104 x Fv([30])p Black 42 w(Frank)24 b(Pfenning)g(and)h
(Carsten)e(Schrmann.)44 b(System)23 b(description:)16
3159 y(T)-6 b(welf)29 b(\227)g(A)g(meta-logical)h(frame)n(w)o(ork)g
(for)g(deducti)n(v)o(e)h(systems.)16 3242 y(In)20 b(Harald)f(Ganzinger)
m(,)i(editor)m(,)e Fr(Pr)m(oceedings)i(of)e(the)h(16th)g(Interna-)16
3325 y(tional)i(Confer)m(ence)h(on)f(A)o(utomated)f(Deduction)i
(\(CADE-16\))p Fv(,)e(v)o(ol-)16 3408 y(ume)i(1632)g(of)f
Fr(LN)n(AI)p Fv(,)f(pages)i(202\226206,)h(Berlin,)f(July)f(7\22610,)i
(1999.)16 3491 y(Springer)o(-V)-8 b(erlag.)-150 3507
y
SDict begin H.S end
 -150 3507 a -150 3507 a
SDict begin 10 H.A end
 -150 3507 a -150 3507 a
SDict begin [/View [/XYZ H.V]/Dest (cite.SabMye2003) cvn /DEST pdfmark
end
 -150
3507 a Black 104 x Fv([31])p Black 42 w(Andrei)33 b(Sabelfeld)f(and)h
(Andre)n(w)g(C.)f(Myers.)70 b(Language-based)16 3694
y(information-\003o)n(w)28 b(security)-5 b(.)53 b Fr(IEEE)26
b(J)n(ournal)j(on)f(Selected)f(Ar)m(eas)16 3777 y(in)19
b(Communications)p Fv(,)h(21\(1\):5\22619,)g(January)g(2003.)-150
3794 y
SDict begin H.S end
 -150 3794 a -150 3794 a
SDict begin 10 H.A end
 -150 3794 a -150 3794
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Shao:2002:TSC) cvn /DEST pdfmark
end
 -150 3794 a Black 104 x Fv([32])p Black 42 w(Zhong)j(Shao,)f(Bratin)f
(Saha,)i(V)-8 b(alery)21 b(T)m(rifono)o(v)-5 b(,)23 b(and)g(Nik)o
(olaos)g(P)o(a-)16 3981 y(pasp)o(yrou.)55 b(A)27 b(type)h(system)g(for)
f(certi\002ed)g(binaries.)53 b Fr(A)n(CM)27 b(SIG-)16
4064 y(PLAN)17 b(Notices)p Fv(,)i(37\(1\):217\226232,)i(January)f
(2002.)-150 4080 y
SDict begin H.S end
 -150 4080 a -150 4080 a
SDict begin 10 H.A end
 -150 4080
a -150 4080 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Sheard:1999:UMS) cvn /DEST
pdfmark end
 -150 4080 a Black 104 x Fv([33])p Black
42 w(T)-6 b(.)19 b(Sheard.)29 b(Using)20 b(MetaML:)g(A)f(staged)h
(programming)i(language.)16 4267 y Fr(Lectur)m(e)d(Notes)g(in)g
(Computer)g(Science)p Fv(,)h(1608:207\226239,)i(1999.)-150
4283 y
SDict begin H.S end
 -150 4283 a -150 4283 a
SDict begin 10 H.A end
 -150 4283 a -150 4283
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Sheard02) cvn /DEST pdfmark
end
 -150 4283 a Black 105 x Fv([34])p Black 42 w(T)-6 b(.)20
b(Sheard)g(and)h(S.)e(Pe)o(yton-Jones.)32 b(T)-5 b(emplate)20
b(meta-programming)16 4471 y(for)28 b(hask)o(ell.)58
b(In)29 b Fr(Pr)m(oceedings)g(of)f(the)h(A)n(CM)e(SIGPLAN)g(Hask)o(ell)
16 4554 y(W)-7 b(orkshop)p Fv(,)20 b(pages)g(1\22616.)g(A)m(CM,)f
(2002.)-150 4570 y
SDict begin H.S end
 -150 4570 a -150 4570 a
SDict begin 10 H.A end
 -150 4570
a -150 4570 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Simonet:2003:EHX) cvn /DEST
pdfmark end
 -150 4570 a Black 104 x Fv([35])p Black
42 w(V)l(incent)j(Simonet.)36 b(An)22 b(e)o(xtension)h(of)f(HM\(X\))f
(with)h(bounded)i(e)o(x-)16 4757 y(istential)k(and)g(uni)n(v)o(ersal)h
(data-types.)58 b Fr(A)n(CM)27 b(SIGPLAN)g(Notices)p
Fv(,)16 4840 y(38\(9\):39\22650,)21 b(September)e(2003.)-150
4856 y
SDict begin H.S end
 -150 4856 a -150 4856 a
SDict begin 10 H.A end
 -150 4856 a -150 4856
a
SDict begin [/View [/XYZ H.V]/Dest (cite.StaAba98) cvn /DEST pdfmark
end
 -150 4856 a Black 105 x Fv([36])p Black 42 w(R.)f(Stata)h(and)h(M.)f
(Abadi.)28 b(A)19 b(type)h(system)f(for)g(Ja)o(v)n(a)h(bytecode)g(sub-)
16 5044 y(routines.)50 b(In)26 b Fr(25th)g(Annual)h(A)n(CM)e(Symposium)
i(on)f(Principles)g(of)16 5127 y(Pr)m(o)o(gr)o(amming)20
b(Langua)o(g)o(es)p Fv(,)h(pages)e(149\226160,)i(January)f(1998.)-150
5143 y
SDict begin H.S end
 -150 5143 a -150 5143 a
SDict begin 10 H.A end
 -150 5143 a -150 5143
a
SDict begin [/View [/XYZ H.V]/Dest (cite.StoneHar00) cvn /DEST pdfmark
end
 -150 5143 a Black 104 x Fv([37])p Black 42 w(Christopher)37
b(A.)g(Stone)f(and)i(Robert)f(Harper)l(.)84 b(Deciding)37
b(type)16 5330 y(equi)n(v)n(alence)29 b(in)e(a)g(language)h(with)f
(singleton)h(kinds.)53 b(In)27 b Fr(Confer)o(-)p Black
Black 2215 83 a(ence)20 b(Recor)m(d)h(of)e(POPL'00:)24
b(The)19 b(27th)h(A)n(CM)f(SIGPLAN-SIGA)n(CT)2215 166
y(Symposium)j(on)g(Principles)f(of)g(Pr)m(o)o(gr)o(amming)g(Langua)o(g)
o(es)p Fv(,)j(pages)2215 249 y(214\226227,)d(Boston,)e(Massachusetts,)h
(January)g(19\22621,)g(2000.)2049 265 y
SDict begin H.S end
 2049 265 a 2049
265 a
SDict begin 10 H.A end
 2049 265 a 2049 265 a
SDict begin [/View [/XYZ H.V]/Dest (cite.T00) cvn /DEST pdfmark end
 2049 265 a Black 104 x Fv([38])p
Black 42 w(W)-6 b(alid)23 b(T)-6 b(aha.)42 b(A)23 b(sound)i(reduction)g
(semantics)f(for)f(untyped)i(CBN)2215 452 y(mutli-stage)i(computation.)
h(Or)m(,)g(the)f(theory)g(of)g(MetaML)h(is)e(non-)2215
535 y(tri)n(vial.)56 b(In)28 b Fr(2000)i(SIGPLAN)c(W)-7
b(orkshop)31 b(on)d(P)-6 b(artial)28 b(Evaluation)2215
619 y(and)45 b(Semantics-Based)f(Pr)m(o)o(gr)o(am)g(Manipulation)i
(\(PEPM'00\))p Fv(,)2215 702 y(January)20 b(2000.)2049
718 y
SDict begin H.S end
 2049 718 a 2049 718 a
SDict begin 10 H.A end
 2049 718 a 2049 718 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Taha:2001:TEJ) cvn /DEST pdfmark
end
 2049
718 a Black 104 x Fv([39])p Black 42 w(W)-6 b(alid)19
b(T)-6 b(aha,)20 b(Henning)h(Makholm,)f(and)h(John)f(Hughes.)31
b(T)-6 b(ag)19 b(elim-)2215 905 y(ination)h(and)h(jones-optimality)-5
b(.)30 b Fr(Lectur)m(e)20 b(Notes)g(in)f(Computer)i(Sci-)2215
988 y(ence)p Fv(,)e(2053:257\226??,)j(2001.)2049 999
y
SDict begin H.S end
 2049 999 a 2049 999 a
SDict begin 10 H.A end
 2049 999 a 2049 999 a
SDict begin [/View [/XYZ H.V]/Dest (cite.TS00) cvn /DEST pdfmark end
 2049 999
a Black 109 x Fv([40])p Black 42 w(W)-6 b(alid)20 b(T)-6
b(aha)20 b(and)h(T)m(im)e(Sheard.)31 b(MetaML:)21 b(Multi-stage)f
(program-)2215 1191 y(ming)30 b(with)f(e)o(xplicit)g(annotations.)61
b Fr(Theor)m(etical)30 b(Computer)g(Sci-)2215 1274 y(ence)p
Fv(,)19 b(248\(1-2\),)h(2000.)2049 1287 y
SDict begin H.S end
 2049 1287 a
2049 1287 a
SDict begin 10 H.A end
 2049 1287 a 2049 1287 a
SDict begin [/View [/XYZ H.V]/Dest (cite.COQ74) cvn /DEST pdfmark end
 2049 1287 a Black
108 x Fv([41])p Black 42 w(The)50 b(Coq)h(De)n(v)o(elopment)h(T)-5
b(eam.)127 b Fr(The)51 b(Coq)f(Pr)m(oof)g(Assis-)2215
1478 y(tant)57 b(Refer)m(ence)h(Manual,)67 b(V)-8 b(er)o(sion)57
b(7.4)p Fv(.)149 b(INRIA,)56 b(2003.)2215 1561 y
(http://pauillac.inria.fr/coq/doc/main.html.)2049 1577
y
SDict begin H.S end
 2049 1577 a 2049 1577 a
SDict begin 10 H.A end
 2049 1577 a 2049 1577 a
SDict begin [/View [/XYZ H.V]/Dest (cite.VaderwaartCrary2004) cvn /DEST
pdfmark end
 2049
1577 a Black 104 x Fv([42])p Black 42 w(Joseph)27 b(C.)e(V)-8
b(anderw)o(aart)26 b(and)h(Karl)e(Crary)-5 b(.)49 b(F)o(oundational)27
b(typed)2215 1764 y(assembly)35 b(language)h(for)f(grid)g(computing.)78
b(T)-5 b(echnical)35 b(Report)2215 1847 y(CMU-CS-04-104,)19
b(Carne)o(gie)h(Mellon)f(Uni)n(v)o(ersity)-5 b(,)19 b(2004.)2049
1863 y
SDict begin H.S end
 2049 1863 a 2049 1863 a
SDict begin 10 H.A end
 2049 1863 a 2049 1863
a
SDict begin [/View [/XYZ H.V]/Dest (cite.volpano96:sound) cvn /DEST
pdfmark end
 2049 1863 a Black 105 x Fv([43])p Black 42 w(Dennis)c(V)-10
b(olpano,)16 b(Geof)n(fre)o(y)f(Smith,)g(and)g(Cynthia)g(Irvine.)i(A)d
(sound)2215 2051 y(type)28 b(system)f(for)g(secure)h(\003o)n(w)f
(analysis.)54 b Fr(J)n(ournal)29 b(of)e(Computer)2215
2134 y(Security)p Fv(,)19 b(4\(3\):167\226187,)i(December)f(1996.)2049
2149 y
SDict begin H.S end
 2049 2149 a 2049 2149 a
SDict begin 10 H.A end
 2049 2149 a 2049 2149
a
SDict begin [/View [/XYZ H.V]/Dest (cite.wadler:90) cvn /DEST pdfmark
end
 2049 2149 a Black 105 x Fv([44])p Black 42 w(Philip)j(W)-6
b(adler)l(.)41 b(Comprehending)25 b(monads.)43 b Fr(Pr)m(oceedings)24
b(of)g(the)2215 2337 y(A)n(CM)15 b(Symposium)i(on)f(Lisp)f(and)i
(Functional)f(Pr)m(o)o(gr)o(amming)o(,)h(Nice)o(,)2215
2420 y(F)l(r)o(ance)p Fv(,)i(pages)h(61\22678,)g(June)g(1990.)2049
2436 y
SDict begin H.S end
 2049 2436 a 2049 2436 a
SDict begin 10 H.A end
 2049 2436 a 2049 2436
a
SDict begin [/View [/XYZ H.V]/Dest (cite.wadler92) cvn /DEST pdfmark
end
 2049 2436 a Black 104 x Fv([45])p Black 42 w(Philip)25
b(W)-6 b(adler)l(.)49 b(The)26 b(essence)h(of)f(functional)h
(programming)g(\(in-)2215 2623 y(vited)e(talk\).)46 b(In)24
b Fr(19')n(th)i(A)n(CM)e(Symposium)i(on)f(Principles)g(of)f(Pr)m(o-)
2215 2707 y(gr)o(amming)31 b(Langua)o(g)o(es)p Fv(,)k(Alb)o(uquerque,)g
(Ne)n(w)30 b(Me)o(xico,)k(January)2215 2790 y(1992.)2049
2792 y
SDict begin H.S end
 2049 2792 a 2049 2792 a
SDict begin 10 H.A end
 2049 2792 a 2049 2792
a
SDict begin [/View [/XYZ H.V]/Dest (cite.wadler94:) cvn /DEST pdfmark
end
 2049 2792 a Black 118 x Fv([46])p Black 42 w(Philip)i(W)-6
b(adler)l(.)82 b(Monads)38 b(for)e(functional)h(programming.)84
b(In)2215 2993 y(M.)34 b(Bro)o(y)-5 b(,)39 b(editor)m(,)f
Fr(Pr)m(o)o(gr)o(am)d(Design)g(Calculi)p Fv(,)j(v)o(olume)c(118)i(of)
2215 3076 y Fr(N)n(A)m(T)o(O)24 b(ASI)h(series,)h(Series)g(F:)f
(Computer)g(and)i(System)e(Sciences)p Fv(.)2215 3159
y(Springer)18 b(V)-8 b(erlag,)18 b(1994.)27 b(Proceedings)19
b(of)f(the)g(International)h(Sum-)2215 3242 y(mer)34
b(School)g(at)f(Marktoberdorf)i(directed)f(by)g(F)-6
b(.)33 b(L.)g(Bauer)m(,)k(M.)2215 3325 y(Bro)o(y)-5 b(,)19
b(E.)f(W)-7 b(.)18 b(Dijkstra,)g(D.)h(Gries,)f(and)h(C.)g(A.)f(R.)g
(Hoare.)2049 3341 y
SDict begin H.S end
 2049 3341 a 2049 3341 a
SDict begin 10 H.A end
 2049 3341
a 2049 3341 a
SDict begin [/View [/XYZ H.V]/Dest (cite.SSP98*52) cvn /DEST pdfmark
end
 2049 3341 a Black 104 x Fv([47])p Black
42 w(D.)28 b(S.)g(W)-6 b(allach)28 b(and)h(E.)f(W)-7
b(.)27 b(Felten.)58 b(Understanding)30 b(ja)o(v)n(a)e(stack)2215
3528 y(inspection.)22 b(In)16 b Fr(1998)h(IEEE)d(Symposium)k(on)e
(Security)h(and)g(Privacy)2215 3611 y(\(SSP)i('98\))p
Fv(,)g(pages)h(52\22665,)g(W)-6 b(ashington)20 b(-)f(Brussels)g(-)g(T)
-6 b(ok)o(yo,)19 b(May)2215 3694 y(1998.)h(IEEE.)2049
3696 y
SDict begin H.S end
 2049 3696 a 2049 3696 a
SDict begin 10 H.A end
 2049 3696 a 2049 3696
a
SDict begin [/View [/XYZ H.V]/Dest (cite.Weirich:2000:TSC) cvn /DEST
pdfmark end
 2049 3696 a Black 119 x Fv([48])p Black 42 w(Stephanie)k(W)-6
b(eirich.)39 b(T)-6 b(ype-safe)24 b(cast:)31 b(\(functional)24
b(pearl\).)41 b Fr(A)n(CM)2215 3898 y(SIGPLAN)18 b(Notices)p
Fv(,)g(35\(9\):58\22667,)j(September)e(2000.)2049 3914
y
SDict begin H.S end
 2049 3914 a 2049 3914 a
SDict begin 10 H.A end
 2049 3914 a 2049 3914 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Wright:94) cvn /DEST pdfmark
end
 2049
3914 a Black 104 x Fv([49])p Black 42 w(Andre)n(w)27
b(K.)g(Wright)f(and)i(Matthias)f(Felleisen.)52 b(A)26
b(syntactic)i(ap-)2215 4101 y(proach)35 b(to)e(type)h(soundness.)76
b Fr(Information)35 b(and)f(Computation)p Fv(,)2215 4184
y(115\(1\):38\22694,)21 b(15)f(No)o(v)o(ember)f(1994.)2049
4197 y
SDict begin H.S end
 2049 4197 a 2049 4197 a
SDict begin 10 H.A end
 2049 4197 a 2049 4197
a
SDict begin [/View [/XYZ H.V]/Dest (cite.XiThesis) cvn /DEST pdfmark
end
 2049 4197 a Black 108 x Fv([50])p Black 42 w(Hongwei)i(Xi.)30
b Fr(Dependent)21 b(T)-6 b(ypes)21 b(in)f(in)g(Pr)o(actical)f(Pr)m(o)o
(gr)o(amming)p Fv(.)2215 4388 y(PhD)g(thesis,)f(Carne)o(gie)h(Mellon)h
(Uni)n(v)o(ersity)-5 b(,)19 b(1997.)2049 4404 y
SDict begin H.S end
 2049
4404 a 2049 4404 a
SDict begin 10 H.A end
 2049 4404 a 2049 4404 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Xi:1998:EAB) cvn /DEST pdfmark
end
 2049 4404
a Black 104 x Fv([51])p Black 42 w(Hongwei)29 b(Xi)e(and)i(Frank)f
(Pfenning.)56 b(Eliminating)28 b(array)g(bound)2215 4591
y(checking)c(through)g(dependent)h(types.)40 b Fr(A)n(CM)22
b(SIGPLAN)f(Notices)p Fv(,)2215 4674 y(33\(5\):249\226257,)g(May)f
(1998.)2049 4690 y
SDict begin H.S end
 2049 4690 a 2049 4690 a
SDict begin 10 H.A end
 2049 4690
a 2049 4690 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Xi:1999:DTP) cvn /DEST pdfmark
end
 2049 4690 a Black 105 x Fv([52])p Black
42 w(Hongwei)26 b(Xi)f(and)h(Frank)f(Pfenning.)48 b(Dependent)27
b(types)e(in)h(prac-)2215 4878 y(tical)32 b(programming.)72
b(In)32 b(A)m(CM,)g(editor)m(,)k Fr(POPL)31 b('99.)i(Pr)m(oceed-)2215
4961 y(ings)g(of)f(the)h(26th)g(A)n(CM)f(SIGPLAN-SIGA)n(CT)d(on)k
(Principles)g(of)2215 5044 y(pr)m(o)o(gr)o(amming)22
b(langua)o(g)o(es,)h(J)m(anuary)f(20\22622,)g(1999,)g(San)f(Antonio,)
2215 5127 y(TX)p Fv(,)15 b(A)m(CM)h(SIGPLAN)e(Notices,)j(pages)g
(214\226227,)h(Ne)n(w)f(Y)-8 b(ork,)16 b(NY)-10 b(,)2215
5210 y(USA,)18 b(1999.)i(A)m(CM)e(Press.)p Black Black
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
