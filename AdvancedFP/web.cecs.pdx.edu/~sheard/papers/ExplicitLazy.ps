%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: body.dvi
%%CreationDate: Thu May 22 01:10:48 2003
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica-Bold Helvetica Times-Bold CMR9 Times-Roman
%%+ Times-Italic CMTI9 CMTT9 CMTT8 CMBX9 CMMI9 CMMI6 CMSY9 CMR6 CMITT10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: "C:\Program Files\MiKTeX\miktex\bin\dvips.exe" -t
%+ letter body -P cmz
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.05.22:0110
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMITT10
%!PS-AdobeFont-1.1: CMITT10 1.0
%%CreationDate: 1991 Aug 18 17:48:50

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMITT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch true def
end readonly def
/FontName /CMITT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
readonly def
/FontBBox{11 -233 669 696}readonly def
/UniqueXX 5000779 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cdbafa8977dcfa841fdff9afd3a7a7c7905c219
28506d4d50a72fd1db1b54a855775831bec099a567f3f795b812ed5e145213c6
d5d27f9ec6709245e9e4068a6606742aef616dfcfc9e0b9af7e687fdcda43c51
81a08d6ab72b86fb38756fec992191c1b3fd151c417125d4777f0bd0c57d2959
0db35f1e9e27945498a3f7dd60bc54d72bc8a573457c16796914029dc282aaea
fdaa4b1439f4125add4b7399be6fc68e4d5a766cbe5ddd161180d4e1ee3c95d8
64e79fd0c65b8f459336e99827454d662768df3e6c1c3647b00b70b5f96a3944
b7a197be0f58a1e995a77221bd374a40159d81c7196c94e8af7c3392255ee6dd
0663e05998ff917a62d635ca45e952252342507d6b4d28833c7809c1b88400ea
50c652efc339a66355c8017651fd24d9a5cc51ecb55bbe64ea523b094332c832
52f7b426909808ae113c1e5601b0e081fa8e7777ab93b42207100f43abbb9ce4
ebbf51e584299a06fbea62b8ad3632ff0f281ebf9503ba6b8ae4f3b57f650388
df63eea9e1ef1e08f7a2c6e4f5cae2c4dc7b42726a6ea6b7592e9355a01fe517
12264a713ba83c057cb5f663045791d4c7598b246cd3b8466a1130249568e95d
ee2c0b4abfabc8e362b78d9fdc025fc19cdf1887997d32fd1487cf2bf0ccc966
319e3e3cf4add90ab51f0c3e918a00e5726ee346ae410ec3ce90404580c47572
35b3ec4f5ddf23dd43224d90d8dc932ec7f0acfbbcdaf80f261482ea4a2a2644
129c27fb4b44ba8c78d23273122cbf1ca49ae879ddeb6991b87ce2ff25c655e6
b5ad950028de17f6628f9eec6842b79f69c84b6c55ae423714e622eb4e47f9fb
c30a71808d70b89cc1a9b60f0ef21ad074a63d38344446947fcae80d22c6bf9e
efecac8e558ed73566db2222f32e6da2e0c0f083744e44fddd9ecb381919e500
c1607f0aaa0781ac78b50f8de49f2e4e04cc363c5333e2bc8feecbd9ef4463d9
409de45a89c1f8cf7cf3b964b664d4d1dd85ad09ae53f9b3bd233c1ca3ac65b9
6acd873448c12a0a7691a435313cea28b7774f42f837f7e058a98e2565802d23
01f31321a9c173d81fb21ed42124779990e454d9487a8b7443e404b17647d1b9
eb6418f8c9f747ec97d39b38ad332de0e10dbc0e756de78907ee4a37fc2fb45c
b359c71b06e92a7deceef091302cbe7c15aab14dc4b53cb5431e1171e3d4b89d
08517061f55bae6d2f992d2c33478cf9f6383dc30cefdaf368e5e13a226a32d9
5808b5e9f4c134ef1f174a7f44ded860913ddecbd8936f62b3fd85f9f9755010
9b5fa926e9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueXX 5000789 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486858b2a4b5a0cc2e1bf4e2a4a0e748483c3bcf
5de47cc5260a3a967cac70a7a35b88b54315191d0423b4065c7a432987938c6b
edad3b72ad63c2918b6e5a2017457e0d4ebc204b031f3fc6c13d7da7277a94ba
018e9998b3dd888011a5d7c4204989f30f908b95533bda845746b673ab71ea57
65a0d14f4350707e47c8276305b28513cbe1bb0dbd269a53719bda46e536685d
df78ca0146b6b93e760256b74d939d4e35b5e77238f04c92298dfdd188feea30
e053eefbcbb52f2011772b3aae39f5805597bbc1e8bb75a446ce014030f4f2f0
f49f9e962ee4a1024a746fa92a3628db5270732b54e43fe5ecfa524f127e5fcc
788e77e66098336ad67fe4cccaf0253272d5df79864bf4b734cb9a5859d557d8
bc11b8e00221ebc12e97de4b1f466ead83a4c894709363bca9040410a52d592e
34ee40cc7e5efa920546b981aa659513a24b1b85c221a1875b62d0b89e57a368
321b8043a5b094e0379760a443d632892b14ad6d19dacc8c78093243ad67e6a3
08e56e6b68412ee690b10dac6e17708754a00d51fc957b500eb80175716eef4b
2ca1ef867614659bee3f2b7319e97b6fdf1efc847bf3cee3156f72f21751da8e
5fb6898919e6799820d3de0642d756e09d6fae4ff08dd3deda3173bff4bb11f7
9109c97ddc05897af709ea199a90fcee8ce4c7a3c15b18170c41c04de2d3fba8
f34296a95b8e1e8de3739b17273f8f2c85e914615e8eac5e8bd2387ba3b1edf4
7968f06e2067d836d0f9f3e085cdfd2de06a62c81d786b304326f7002e83160a
36598589228b4dddddc43c85e1d126f8fe81b828028e26317af5894aaccf4f69
6301e1a9fc45935d8a414957f08febebbc3a72ada80f101e47447d019ade56e9
f4fab969bba2b44e47399fedf5caa1bcea216d7ba713d523de97a57cbed59a39
c235a135d115ebd4abbd5c9600b26694d650c64477d24d3e668cf2f77c682069
8a49e801bc835101d0380ff234ffc28ff2f6fe6f1ad59d35142a82e252b03506
4eefbe506595eee4c52ed8c9e252fe3a9894b250b5a8765bd0a3ccec511fc398
f294b9ef281f87d76802eced7414297358d29f12e1d246c0f39f9ec4536c3f4f
0549474956b5667672941778cd589fde416abb9915c030ac96e1b70221c9b072
04f75663bcb1dc96dbafd3ddde72bd6af74b96324b707d58c89ca136d07c38f1
bd08201d21d46b9067a4c1ec2857c203487a9237cfbf1dbef5af4c59fc1e726d
f49161e746feae8bab48ec220e62fc4437ae29ddff8582dfeb1afa3531a3f86a
22606ab4a62e2107e4569716d1b12297b276035d91ee77babb02b1a5a9428528
b13475a731a58f734f2640f57946f21fd852f775db7637444b84f2dcf1a530e5
964667948960b901dcee0d45e7fbe71331faf54efa7462dd3d6c0e88334556a5
b1418fab410355d9856668d76d6943ca25da0ea62be33599f490997674a9eb45
5f94c730ca6580cdc3a7bd5f362d0ecffecb99b24d7301bca4a0fe45
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /arrowright put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueXX 5000819 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddc63eb43f34fa90ea73a234af35fd9b24eb7
4f19626e9124df7acb92629cc87b2cf81c4a89b27447806db34393ddf0402958
e2daee0b4bf315f9aa0a2650d2e11ee289ffaec940d0af160fe7f29411c1c458
69d1ac3bcfe2ae4da72422549095f1fc9fec606289316f106e719a4ae2fd45ee
868fddf07a80e9a626bb43cdfdaa9dcd208b88fd99af20b27f9d6b5cda6a3fa8
8d5acfce8b5eebb38854378cecc3bfdac526514f1be9fb28ae628918ba942a3e
05b78c3aff808cf416a5ed01be280231b75a7aee0c66b0549713bef6b3cbc188
e625ba81a0a7f34771e69cf51959595a11c3e703d4cc8f8f0f56d50eb6b403ab
2d8d948c98f4a677aa6c315a7729e64bdffbc658ad89a94eb084eeb7a753855d
ce997db53a1ab641ac6552b43ec8f4ca71ef546f4ad999e81fec44c9e4d3823d
b1ed9f3589bd166b67444bdde6a72bc94c658f97ba66732012534bac9666c07a
4ac56cd35fe41cda053add2941fb584ffab1bed0450411f2bdd01e769c6edebb
d8caff7fb55538a7fe0830892fc6ca88b6a311752560646ec2e29828101c0738
246b0f90f6e64633987429264cfaba372392d269229b608730fc94a01547af4f
708dbae7361c0c746d1a7601f42af8e4c6b7d89dda69f362dc5f61db80c72454
2e40ed33f78f55f6b33b400f5f4640ca7f9c7411306d82b0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 118 /v put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueXX 5087381 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930e72218b3075925ce1192f11fc8530fcd5e3
038e3a6a6db2dcfbae3b4653e7e02730314e02b54a1e296d2bef8a79411d9225
dad7b4e6d6f9cf0688b69ba21193bf1495807e7a1e67ed7e41cc25acc04702f6
8ef703e3d45722c1a91fdef7100a48631a02a6f02a08c6b1f9b4df8310385b86
8632718fd87119a233f219d9411383b7fa9f3e4780d8c27e2e89e0cae883d664
c3eac57a3aef8988a2e9f0f8c7f53e0a80bdfc4620e21287d0390e1975398544
7f3ea66401024bea75e1b4c4437b7bb188f76f96b918ac7c6ad7e8ae7f21d8c2
790f08cccec904fe48ef39e597ed4d4237c1d1f596f5906b19ea308020f7a35c
168e327ec3246b1dfabe912f6b6daac09974876d3996e57d180261110db05f15
e3e8eebba3d90b5764c03df3033a1ed678ebc679569a2fb297378b25434c0f20
5313ecb8a952f07242d3ee731b0cdc086a4481178a3d65129c47c09b22e9c431
e11b3747b94c26a757c38d06001798c6a568303d541385244b967d3b1786edea
f65bb53c4c2fe75e4b1b15c2c78d930b4296c80f08bad86012451edc8e9f0854
c3b390a16e27b11b3d45a9f72eff8baded2242dc928a61685d79e09681c97425
5b90a498614cf560fa5b1718981388268ba206a96989e6d0b5d485d9aca5594a
e67dd7b34d8a369adb06647f8aff8814d6d9cdc04a4835918e557174c5bc0f3f
bcea9907a04cf93c12727ec40db3f2f77596dca477862747435bdedacd9b2311
6cc97fa47ffdd7d897fb6bdd5572e35d34e7e1cb5e7273a4ffd86525323ace4a
84e1297028c2bd5469baa2e75d19360c2c9042139d5e7dd4390a6a3935424711
de21910126d750ae279916ceb71da3591d60dc62db333c5021e2c1cd61ade51e
9391472f46a58f4d47b46f95c41dbec5e4518446481134bb6ff3001bd0d7138f
b1d8a6944c05369c6da1bd752af17b34957868c7b5b61a8f1e47b1e0738799de
1503db71b44b3c26944161c8add922abc31d7ec32ccb6fe53888c5f1a9a96504
58f0f08e06cef82cc74daa0a7399a1e3905638523869eb09e9879234294df5ac
c214c98efaeec03363893be1142e0cb0e3744a18672bc4a5ef2ef2f1df78a425
c1bfc1ae140dffd4aa550eb58e66c52fbd2756a7ae31d93beb7828d4e78981ea
dfc0088725c41f32e6a366bcae1a3a9059ea209619a3cae325b1f8ac8bcadb3a
4a28d5d75be8444c0e638c4a9c058a1d348f537367918a8d64a87e24b32284e2
fc795dfab4b374435c976fec18f1e6ff603ac806e76411fbbd494ab521f885d6
12f0aaf8b66cd516ac236abb7c46865eb3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /beta put
dup 21 /lambda put
dup 58 /period put
dup 61 /slash put
dup 67 /C put
dup 101 /e put
dup 118 /v put
dup 120 /x put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueXX 5087384 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b33ae3d31bfe98efe259f07f7950237bbaee4f7b64ffea83a
757fa717d50c3298392891bfd60e34a056b0d6021da3fd9b8b01bf78b0b23dc4
ea3b0605150d20b27ff9ea5f2524661019d982a2e47cd7c21ee5ca9ed9227821
f8d07119397de26838c11d7b35bcedc43e011626e300f8249ed846d7b5ccbd89
02550cda17ddf113df658fb13f8162681013766863784efac128e01ef997e1a4
30312afac8f3d948edecd7d5090ab5c864b91d7f6e80256f0e1fc99f1102b74c
61cc456e2e1bedf0e627d5f70f738f963a13666405c51ebf23ca077e97570a2f
1118536b92e585cf1dbd5fbf36a0a5d197538c05304e93a15f3c931168d91d42
483ef428b1a3f1b7e548fd1d23b80f5523c8b8bf450b02804fb689f915c86693
f7dfb1c43f681627c7f027021aa3a8179148f1819cd94b8890a9ac63dc1e8a68
f254b64f6f173c3d02e3ebc037da05074017c8b113e94f4e2d26b467ef9da07e
afd7ea7c86e025af52c5ceeb835951e67e02a38daf1e9e698bd21996c1071e84
ff7fbe77f6ddf9d06fa92b16ecebcbe0370b5cd9d450d0f2906a105cadf93ed0
0abc7fcf2c996e7c15e452006e35390d99b9cfc59925f1444c20d9c3e1fc2910
32cf9fa9d580eac1bc956334da391b870a757c3bee6aa3e005b20988d8587876
3ced20c6edf2ac2b22890e37ff7aedeb0986d85ae05bc84339bf2116df48c5d1
cc888bb33d409b06dd70ffd0618b2080442aac439aeb39c20a87ad74ef10629c
f1604db8611e8e4224c5b21ab0c7ebddc77fe9a283b3a8c6a2a9508f6836e3fc
3eae1366b4da4f44cb7a77fd81d278c17775d56cb28b70f18d894bfd1ec1827f
fb1d1511f0a425d52e4ca97dc3a53c42700efa8670723ca9d7584075dd0263a6
2399e2ee369be0b3281859a613a44f74fd8812f49216888cc0513bb80315d37e
42b0f439561fc8de873f638f065db8be1cfff707733767fc75e6cbfc2d0588c4
4e993acce5cd2d9524aec48c26031bebc84c42e885c80fde428b47b806c0d298
f69687dc98c5525f4fffdeabb1ad81eb096effcc6c5e8e1897214db784af7913
0e8be2599e99b7ad0d0728cbf166bc4776ed3cfee9ec3134a6ab182cacd31847
612ef9e2003634bd36c55efb0c297a0bb6b972a854f35546830d65ec9b542ba3
2eb180cb6368b9add350e92f6ab02bde5ee184274c95dea44b369e98aa3e9148
bab2e596cd6dfba4649d8c009cece018b6a1e2a174bb0f1e007bb3d3032e56a8
674ffcd009dfe6d1ee4f3dd7193fbe9e08f6225f66de127598f3f579ee2e7d3d
1fe836ebe613ed195b97cf9bafdfcf382bee7dbf677961a3bc2875c5ae9e681d
8ee1e15eb7afcb37c7c3faa5c84c9cd4e1825b8b24232aff6b586a01059fa88c
48f31b37aefa37678d01158d2dabb048f11434518954c4791cc11dc51b3ffad0
6b95b2f7b7fb5a7774dbe4614cf0f527d8fac56c6ab8a0c11fa69da81f8d7172
eb4f378de4cf6e122180b226582ddb7d32b33316f731b08dc7117d62cad872f7
eca7dbba00618efc8f06d7a022e52a5e11c9031a2961808911f098edd79def2a
be30185cd1003358dec76e73ec8e90afff2dc7dbfc6333c58a17f59f8ab1d136
81e937341a7585fb50ef3514571e7eb45856362bff6d5366d998c9d562d9a61c
6640cdb295946274ba1ea55887406ea98202da3268a9ef6810650f609709a1a5
4e164b3047087c140780807c30ed48520d7431df5227e4668870ef2b61bfce79
513b9b658f2abb0e13dd59734cfab136aa26c0b19ae8dd7177340c75ead140be
87389c8ae5f9b5cd99979d3e08ff225e37fd45d38c9e824181a2b8459d705d43
976099e31b7d53257023184bc0084e93b848772c4c6d2bd7c206ba6efe668404
f026be69b92f5289fd1232c1261bc6214d71272b92100035adf604d0ea64c45f
a9af5bad3a8e862ec446590682e0d76a8573ed7821b9eb37a545f0c521a2562c
7d05d32fa698da81d85c614cc07c516532ec9861c7fff2fb1222504d574afa9b
fd97174ebf646e103c91509f651712d4a93e33b62ce7a6d7e2dda9b23fd5c207
6369f5ad4dd1b790a732b2a212d996b50f7a6f0c31dfa5a8e5ba04569cb8f657
1cfb149cbab1ca8b3fa5b61f816c5517b4c9e8579157bf85f84c2d4b4ee8721d
e34651dc9d916a9e841c47a76e21e40cbda8802b8b37e23d9d38ae754ca21de2
881ca4dc7112debe4e9cc4a951411144b6d89279417e99ea5dc3f7e1451a19bd
f2413336ec3931ffa5884182d9eb17993068cf29470d1015b904549214ee969d
cfb54679f3d802358eed1366d2f3455e9c3ab39d9741936d46b0661c90b5f8ba
2382d67932e9584802f585ce5041ff3843b0c77d3c0998964728f4c85579f7ef
c052be2cdd3b5deb59513f9cbf862ee519b95465de5f796077c08160b2c933aa
76b819711e5a97a1113842ff7e11aa8765c30ddb7009ac7204cdde3929635ffa
84339757fb5a0f914f912cd5e3f05ac1a35638960caf9b80734a1566d0ce4f99
5df8143370fe9e490f5a86e14849a3eb45f11d1578854fa668ff0c21664ffc9a
de6b82a3dd4951294aad2fb4dc3af38fa807b3587cc2f8e0dd449e640d4f98c5
974c7e90f8d3ec3013b8a73d6819f9c51b16f2d1ed91d0d90503cda12074da8a
8a30452655eb6386c248c57410951b436c07f03604ed2e9c27860f174a382712
47642a7a90c52b584944ce919bab68bdb748e3a8aed71be45c36d9ab1bb2caf0
4a0a0c30947a1a5a8aeab50b4273668ecbcf60ea707fc5b2d3e9ea80149e53d8
1f195eb4a5ba73cff84800da09f8459bb48fb8994eacc807833199e1c20e7075
03188845284598225a9d479f2379bad0bec10db4164546108137f7bf8dba9214
dcb674015a9d9d1d165838d3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueXX 5000767 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be79011d1f5bfae5c1f476ee6f05eb1d2caeb
269958b194521197b312fcced4867f3c8fbd030bd715d8ffda1dcd454b174e7a
1a97b59fe770e67702519d9d9b23d61ac08424d55fd4dda249cff0b56b9f3aff
e9d0de215c02a52a6bc77155ff6b8cba5cd6646ba331254ac58ace650a967d3b
272331b87b6df06d5ab9d80fabe9f9ceac10139b61244814dd9fc295ed42d1b5
cd11c2e4beab318b20f51ca2c2930657e5343ab7bcf0e8870a0d12de4ffacb6c
b3fdbdda481c2fcb84408d3d902e9a32070b2af6cd9317a33a42a43857c114b3
f4c3005cef9401f1c2bad3e69150d7145b79f95c9cfaf7a335b277e6435ab374
f6a3e78e124ac1e4615511f743ad65c5d778403a840310ac4902985f107fd33c
0049623e4c496cd353d2ae2a4804110c6a420a38ece5d5b235c5e35886a0987d
284e6110527b653b1b2c68c636ef423536180acadb954843eff4d9a82568a713
b682c574e30f793f093aef755c650e0e7175c2e3138695212d9fea7bd4b5805c
a90985b134c6bc15a19afae0bfb3066363ca3e2568c2ac4559a69fc32feb443b
61243b4508b7524d974636855c83c8149d489b68fe18bd497116a953431251df
bd09fa1d2ef66c85b997ab2f6b7c6d9d096cb43931379ff9782fa00c5f3cbd06
04265d16891ffc4f66e4a0307765d384c32aa83a4e4f89ac79ef8e76eed08450
e3466fbaf54f85324f0a4f04bd00ccc22d32e4132c51749bea28f112c2051857
423ea203df902ae80224d75efeb59094bdc5f4b6784ebeb01c38c34b695e681e
57a93ae18b657d13770300bde28833c732010ded4c8e79078d17acc3d4b521b1
6f2cac338c4f72e2e07c667227ef142d0273e5b501f24b02e9cad75fe9d18741
b36bbb29c9cd3d46964e00d8ba318912e69a6aa7ccf823c12a94f29a509cec6b
6190e9f2dab93e50e4006e7cd6206a9de11d78ccf036b36d574cfe4b55abcef1
498d6103401fa892feed3c51e2edadc5de312337e114337cb43b204dfa9c4a9b
58208dbf12c6e167420b8283ee75fe971045bfad24abeb683a5d40a55fe55fb0
293a538b3ada6b444292c1c14a662e1c2c36d11635a7a58829d66d2f9fa2a013
3bc6a47b418afce7d7f2a453555b4df4ae2ffb7d3348075fbb0bd543bb3ae36e
5d1549a37fc829d8d5f61e263d3d716167eb2f3871c46c5634d45c4c61a39a4c
3ced995dc16082c780012cf20d262351b954f4f0c70ae6448bf1236fb49f0fdf
69b8af75f5fc883355fd667bf65de2e3ce775f0d4a84e58fe917e691f8eeaf75
14886fbd000c1ff72a8b485d44cb2ce462e34ffe58734f57d3eeec26d10100ca
dd80fc4114a86706e07a93d84cbfdd1a46dba95f1cbf551738a0eeb98a190e19
6c4b9825f31afd53f855f615d8c68e57f0f7a0adf0ac41e410dc1a9fb2c3bd1c
2312289bf4898085670ab7dc7232f027c266d426cab68ce1798aafca434dffe4
52d739f907ff58871d48781d679961d1567b517d9fcd8d3a7cae220eaa0d281f
af56110bf07fdd73e2c6cf4e9cf60dbe0219d23464c8b41ed7bded3e2692dbfc
7b58fd2bc7c11646bfb3dfd4af1ec74f8b59d2443111dddc42586006e50b8608
8aee444c1a9c8836986e74d878ea0a63af40f7b71438451443273c3402a1e3da
fd4f51c8444d765d58394e886afe00b20db082ed0148474641ef18f890cdc8a1
261e681f66c23650faddffcd3b795518f5dd43f28eca1c17574a827b30572949
caaf7e2d8f14d3bf68b7f2d7ff45439adc4e20d820081e4ca087a8b09001929c
cf6765cd02b23592dcd3ef25446830a05905e30cb471eea95b4c08fba11cecf1
fde3d6155d426c22207ab102d093fa3d0bf338c4917e3cec599e4e05c4631131
b49c9477d081a2a2e80ca37415d9531a934556281fbbced3bebcee6693ff2a45
1298b49883fb71584f5aa974d54c5a19e0a07cfc3236d437e921b80ce143a694
2bd4835c247162075e9a8b66d2b7cb1fd0b64d3f2ac6d7d04d1169fd65605121
07429eec0f58d7f348c1c2ad8c3598bb4a1ebe9a81b0d8f2b973408359cd17ce
b3de0b40f2c86e22354d13e3469fbf0920605e69211fd3e185fe5a96b7aff9ee
c6ef1b0af52e8f8f60e7976f8d512b10f05a49bf5419a5920401628c39fba721
bde2a56c20b3c3b55b769d8f4e78c95edd198e398ec3716f19c441846e7f27b5
b18ba0003774f486204250d3956243ffb6aac26e541f69653cc951113a99f815
a0b75dc9633e6b39f2a8ea732c5af449c34e159e6842111721941621da73abe7
6d665818f042ad2a2aa3c4f44789823f33ad3bc0333248599ea1cc3cca5c65e9
e73a09755654196eeaa72ce10eed9e5d5391e049ddb32194401602a8c787a993
90e2131be57ea8cedf843e15f584b8c3d74923f3ae37aee1b2da942dae4da595
322a9faaa31abc7537f9cbb840a3220e01a3e426653b01ff9824329963dee5a1
f0658978f7759c393f20ca95c70d6d1074bdddf8669c8b367242bd3c51a10827
542fee52e9161c6c322bc092d202e16ab0920749be65fbdd9b3f2d1ceec65add
a0d7a800f20842ef1308420c3f3c4001524ca25e6c5e101287c007519fb034fb
748422b547e6a49ec7aaa45f6eb4dcaf5e3f487603a741ea74b1529470c8f0ee
ef032e8349a48db878adbaf7c61fa502ce9cc56b6a753bbab1ef1abf81c8c9b4
7dc9f3674236dc707400885a5e1246244f9b4dfc7a7698b733a8998b5c8c584b
13443eba9c8dc47ccbc7a5c6187c7d77ecb24d0a2f52da2a80fffda9f1dcd0a2
f9f4456649925351cdfe92e417aa18503e313401dd4473c08a3fd807c4db58ae
5896cc19127c37386da9d557e8115904903d90dce4e59056b738b7e6349ddf8b
4b6c45ad4f506b7f3daf417fecc1c9a16c4db1de05ac6af0f4ee4233bba74e48
686b21f08af153d0d81880abca0899aec1ceda64304380f31fe20ea2240cd22b
1ee8b4ca3a99a88730c8a598a70c912a6ca9c62f5ca5da9fcf036886f3d0ef5e
e261f904765dd020c0691d72781c243f385113c6acecf1468ddb22fab5f7acec
259eab19e5907d09b5883bb37a7cfb91804e993ff91b7fcebc0b98e040051c1d
3145d9c809bbbc14531814f7da602481544e8fcf0f8f61b5733158d4f76367ed
50c1807b5ee3b428ed6dd52e7e341f0d8e1d80aa531a8a5f67d5ce241fac769e
badd152f7680cbe997bbd4e06cba53ca3d8d9b6c9fe1033b7a5101eb7cdecf98
7a671e6a8828edb8697588c9b65b6da09b79185506099f2cd6836e237177c104
6cafcf355f9a97f69fa936fae826dbbe6889f9cd061dad64a32b0a50e12588f2
ced26d9a8e54b92b2ba585d15d6547d25ef1c293dee3c1717d077ea2a3f93879
cf9958e7dff9d53f675f5a1590364151190c78048bee546da5cc0f768cdc7ab7
2de6663aa3b9b3d3332e76adf513adaca9acf9ae6c9dd04b63947f58d370ccc3
119b871468bde2a1c94f59ae1413e164da8dbc2aab2b3d097a3a3dc0311a79d1
a7af66137e54fcad3387a119eb023ef9c441f22f9686d9439d4a4b510fdf6453
17b7cd67337714aa34a42709029240c65a08c1b3daab317b2a646c5d1b94c0d4
dd24c9f634eabf5305c8de89d0826753ebc14b0624e8a6fd1b4f4230be09e527
d3c5e5a84b41b7d6c4f83585860835ae86fa7a6225361856ea426dae8776a9a2
5f906c95fe7666ed4de76b20be522f5b51f6c2f0f883d3e2d713a777aa98896b
ed53c252695b2d5f54d9c6ad170c86c1c50eb3f4b0dfa532e317baa621451d64
6558dea5cda441f882ddde031e8e0bfb8b9e6956a8b46713b874df94f4d45c77
79c54341674669fb1b913d762c551c08c9f5f5325e559ccd922bd4cadc3a76ff
b0a45f868c3dc377b50537f8939daf3c2080eac1fc4c774e3eafbee7952f76ae
ba7901b89134e4775cfe1728373ec99178299dd5a38b0bebe649249da2026725
b38ebc7688985eabee049b01bfea4a27aa30ece6271ebd19b228eefdd7a5c6b7
376675ba2a3316086724ef5cf495a781ab07f55cd076204ea4d7300102b940f5
1febdf3fed341f5a1ac9560b162710547ffe735373ccf3b7d3bb13b195ea0aae
94479d59b533cea29f251597b4634518d4524ddb6b0dc2aa671eeae568ea9cd8
651ffe24927cd4a9b764127223d632859895604d0d74dc74f3a85c9d73bb6e8c
f607020f95eb30660a0af91feab138427307953eab6b638fbcf251a50e786613
7c5fb933847ac8bb21e52ea5dbd4051a904633e8f72d8dd3ed037bdca6d9ef84
a03c4cf42c586aec15f3f4b636f92353f6728a9bf43656fd10f7155c16a33547
2fb597b5df2e392fd472d215df074a6f62ce4761f9ddfa0f72513442177a60e4
b677c2d4bcd969a04fb9b2fbc3ffb9c3c783963c6db068ce696d044927b9e925
f9fe38120cade4775105fa3892111b43d88df54a4cf166532b76a71d0a98bc20
f35b41b9a5cdcde94c9c692e5e3b336884afd44cd7ee4b1f7e3be3fd84280564
5c461ee6fbe906c9fbc4745b7df99956f755731cc1b4a5cc3487d6ca7f076c4e
822f96105dfc9245e4b17422ef49c800d61a29f3ceac4e6eabfdd45e584a2831
00ea495bfb8f1c645bb4a7dd6b1985b7b3ca9f1d0b3bc1eb52dd3df0cdcff180
6cc821429551ba3dfe6b95ca1a347c24df0c31d3891e174e41f3a39234edb3ee
e67d0bd2188d9db4f82bd6253b2ad51866fd532af8724ee8e112f01aadcd3472
798a68d722dd7fb5e50f0b30dcac73a1eb2f0835cd6f98f39697e7b7143b8103
609c3e2345c65a56e05a032a9b0ba7736e07e78880b6e1d72d1c95883bfc6a8d
390a75840b8ca3e05da9220a0796aec0b830b868026dba2f234d6dc30d61a86b
e49a0121893dcf4ea1f8bc8006b7d8dad4bbf9905fc4702c558a4cc1ccc98c03
61cc750fb57aee46642036de9edb3f0262ed709a0c0526b94ba9d627c69db5b2
e1c288de2cd8f32cc32debdc7acbe20daabd6b7808efbac23e312fd162d42b8f
2356f05c722ed7733ba404cb8d7bbf13a231a5fca2ae1e6bcb3f214fdf506b73
c0eef8e03407bd0cc24b45cfe1fe702cee97c02e746fe081b88807f7619cae60
7899d366fc43dad6e2b98ccf6f2552688e3da7b44f429ccc33d47b83d4fa2f41
bf99605f8a126f7d171daa6fd84ef5143978ab91f96cf3fc96f6aabc9b545073
ecc1882c4f28aac1f52895c3b7aa8c5566cb0986883371945766dc1fceac8343
102f8a69784d56f62d123e3a3194ddca900d20567e0240ad8d4410bdaed9c5ee
bbc553b2ce7b0828c7500d129a1d92b92e4b9d0e05d38abfb200f932a09d7d97
dfe3db5526d6be9b0506ab1df4ed3adae21af9bfdaee8b0d78358ba801e5e6b2
9066244be9e2ab95bc292f1f947d9ac3349487e02e9ca15a022ff87abaa1ac75
16b8d03c8e4df7409b89a5cecd6b7583ce436b621784c7b3aa55138d9d79eae5
ec0045032bc25f36e4663ba631eff1513d9c184f82cd2bbd1a6b8464a2a64d68
d04c38ad76d47e1657f08786374dc0cd13ef83ced2cc1fd4964d45c9fefc00b5
34efcd71ed2c6032fba50882653cbe810f98b9d4e86de717d12334798beb1820
1adce0a64c56b24e677451c059647d4fcbf1eee1f9d61ef694030d7b4984da49
0595b2b3fa82a4fc42f7fea3cc65e7ef035ef9ff49bb28e96094d3803bb6db8a
07e68d4ada8a07c50f367ba57932a9cdaaf32ba062c92a16096f2e95cf58f0a0
a60df5fa36e884d52542a707497df4549d77cd74dd08f1686d1c3baafc7954e6
4ec98bcd590d4537ac88f663d22e38e82329120e563d5529cf77c031f6fa113a
c617d95837036f1961240ccb78b013e3b0ab3bd8a19ae2e18ecf3677c4f310c4
7071413a79e734789dfd30f5804903571bafb2b7f578d7492c5bffac1529f861
55af79d50e067776e1f477f03d5ab2c2865fc2e12ee268fdd75dcb6b8ad78abb
fc93257e4cc9988e5b2147d5c2aab7f40b347bcb3c6e28d2eef9d1d63adbd270
a5c490c34ce8338ffa50b871e4fcc8a58a09e3fc425e51dab71e0b8ed8217d4a
499d06c56bd8d786dd6b8a5f6af4371440fc716cd0d59b1a6a089f865ebc03fb
38df3fa6e33b33bf327047a9c8eb0bd79cdd62835ed6649988e0ca954a3912c9
f092a5b3da124506f6d7513386bb5d180a7cbd32459054efd6250c1877481ebe
d65bf6147c6b5719c229e887f6080760df228148666f79bb652ce5427908a105
3304ebfb5fa2eb4b16366b77998f25c1034fedc317e115cee282e1408013b757
9f6941020481efb52e25e4e66bb8c64625703d2771c9bb923de927ab21013767
15131342498c7510a2eb04e443539896a4e35228f0180e01504d40f3703dd8be
edcc897a5c651cba64842e96b83da7ad36f0727de69fdf183814b79a98057f57
e26ce5df2780c1d8edf0c9427326dcd13b0dce39ca40b86afb61aa476f20b9e6
7d12b9a6901795eac2e88b8bac0dd2ff3027d1760f277a870cedfd7ec0376b04
69064e1b1b5825b3fb83fef81c4b4d4622dd5f40e7d5741fb7c40d4e12571e12
fe72e922394c54c1b3d2c9d0e74fdaf724974f522e545e4af17c5c235286e45e
70c2eb22202be20a8c1cee7ea7dbaa5393aadc3f413495761eb09e3b96ac817f
4ec9074fbf6d646c94eec0c1213cf9c7b0246bde092b379d7650fdc92b91461b
4e1f213cfccfbc362577be895deb505a330a3af32b527208adb2da3467a5c140
762c499e21c5298faf73564a839999444a60b34e0dece17703c442c32a7d99be
bac7c622fd6a74566f9abbf242cecf11c05f6bb000bfb678a629c1b0cd9ccfa5
b8fa1efa02851507b4e8ff128c28401533d0b20c0c34a50dc72721564b8d480d
7ec14ac4e7e48cde4926572c5b15b6b239e6971b8ffa21ee2a622e55a996e7d8
ee5c810efc324df644db411f2e22f3192fec898954cdd3d90c45da628ef9bad7
ab2a6eef5511928b81535a5775186afa7878b554504305ad1fdac31247d3dedf
16f55c0d0498558407ab4a9ec412e8de4d173ddf6e17716acc20a31add62d5a5
264dd77deb389e4febf378126701a2f9f76e0e98423b643d1e70e39fd9f7eecc
36c2301aec09d9f2bc6c8e8e2be4a472e75135967ed24581e469ef545ffb435c
d04646ad787cbdca0c3edf4241c4e2761e9b507bebbf4341cd3718741688c5db
58e86cffa8032bc72f76a4f4a142dcef5f614d035c11b2079f6bd67b0f772c34
765bdfbd445e149ad996b562642375477b3a911a4f8c50a6ba95a7f4f6a286be
f4afc02026da387649271072bb3c1e4f3d31a419fe364c3558d9bd554874ac5d
612468ddecf5474b70a1c8dcd96a02406d4146d3af99c3dbae21ca98c87a1062
31856fb43a95580fea70319887332569c5aa8f5d68aed30b372558c9ac7bb224
728f41255552aa971722b36ee7ca81a018afaf7a92d14bfe45db9b2cc646b976
5fa9f6250fb377118de634e1f0e1e6949056ef9345933ab5cd19da7c22beb30e
6f9e1235ec0d26a465b1ab5d09a9ceb66c5a029c68271589bc50d6ed8063b508
26a62a9ea313f64b3351237ad2ee3dd00f4f4eb1034d2e2102b1244f59307ce0
a7a2ccd6234ba321f4ee734d6ef5a0d21e123d45af4685c90110e0f50ac3b9eb
aa5d5f5f0016fc08899009387ea4b7c1a98b99052709f423ab435c437fd69fd8
245b1afcd19ff44250244d2ba9c41952a40ca00b76f26bedefe145503dadb8f9
3f17d15f1c08bd8b6af2155c58ba6ddae903a7a0b21f1038fcf74fd04805d6ac
cd070d03e6fcc800de60757a6bd9fa7104c4bf44f30f6a33b25ef05e01dcc489
bcd4aab01989663ae42e29e2bda7a86ee56c816bfb92088da8a4e3586ff48de2
b8465c3c97779bdbee9f70ff02ceed2dab1314e0f3c9804f3901187c2e722428
cdfd854d037f491ed352fae986b709b152c657583080c67a93c8e8efd4df8d75
c75496252a39b7b6fb03e4bef5475c46d126fb1fb196ba425415c362d84a9efc
db3595096f2b7b9ef4b0232801f3164a5768205feb6898963b5b7e497d376c29
6cf8a5b053fb5a6073f8f57bc44a02ca01f1f7efa1243de68d8d06b14ca348c4
8d29080815770f4afdd935b7051360fccffc560585de0c0440d179831f9b204f
8a87c2632cb407a48e67fbc945563926db2f00fde5c50bbf4559ab9a083f8f0d
fda5578805c475b062c65d063c37c2e67333c0aae182955f2c574a704cb9c395
92c7daa498e2c77881dffc84466f7c9bc4dfad41ed0f0fb30fe83ebd538d8f30
8844e50801ca8c624f74c1f03022f94fba0912fbfba1dd81f18785ed7c3ee2e3
c719830d91b84291d267a1547420ce2bac9057283d004ceadefce9074652edbe
17c7035d6dd7ab2347a46df34b650786cafcca6a7ff0372e8b30eba3cd43dc91
b8877d3ea005c294a73597226b9ad81f8350947e704079a36e7b4ba7e196df9e
80412300ff9a6ac57349b0e9e629c37e56338fb97cf240de02fcd8a4269b9f87
01aac6660f3d743b08c1d5f27b83be98337375c02af1acce7a52a104e531ef2c
7df0a49304a3b35f73fff918b59359a9dbd94d86a2bd1a51d81a8186177a159e
f6950863942ca4f4fa5de4f728b2be7222cb6c1e5362976c54a2e3ab0916022d
56dcca9b9e98892629aa19dad127b0ab968af41a87b0e3299fa91e94f7d8e5d0
b06c996916144c228980f3387c48e9321963a90da8bfd531d09b5717f687bcf0
119f310df584ec061d3e4b03987e033e39688ddfb07d8a892d
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.1: CMTT8 1.0
%%CreationDate: 1991 Aug 20 16:46:05

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
readonly def
/FontBBox{-5 -232 545 699}readonly def
/UniqueXX 5000830 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be533de8dbe3ccd493ef4c9656d5d5b76d531
9e704539dd76b065f45e6d6f62ec499c9ab91923a364237ef75e1d62d52df3a9
43713cbc63b16c1880feedd1633766248fed9d060ff709951f2ec84ecdc06bbd
9cc4a865e1f275455525e5ac7e2e6289615e98cf7ce3763b6914d3a4c5b75b29
b8043dbd898ccd5be448064cf1af2f80f969a44b4f9b801c42f6d6a6d0c3ff42
e0b1cff748c1fc49b598eadde0c2802dd591c54b802ffd24cb7a7639295713d5
4e639514ac78460672c9c51742ae2014e4137ba4303051c06f686395aaef86c9
9d7f9a97009436c2ff55b770de3e80cef0d53f4df46aacecc21632c0c676e2f5
ca7bb101a239a0ff67ebd37a6b8c4c8246dc2c90b759dc03fb26bde8f134f552
23ef3d6496aa0c4a2d7b6398de6e6a0474ee1b0d78b2d865614609f1db92fc56
4ab5921078b4944e11a2162902f0e04f4b29448aaa22b4ea92fac48f8dc47535
d717dc7acd08b25d391c97c6c540ae0a98be5d6a8da564ab73e8b5d3b5e1989d
6e25c3a35ea44d596b5fd6b2373b30de7d59c1831245edb76d6a67816ab91a80
a27a6597c6dfd274db8b3e45cb01aedee59ba6efa1428e41ed557f051012a389
9b195ea44a4e4d0067398d9d40ea26195efbffd2cf785540bbeb8964f6391361
904fa5e187e4af3baeb4e8cbe7558fb7049c94a1769a2ff0b44f679bf6f14d8a
974bb8bdc734077371d2d1b09e1a5c2fa63222c67f004f7dc18ec42bff9736e8
04079c457059bcaf6c180ebab7ad3b0f93c0a843143600b18f6f2b7853a05cf3
97493d825b14c2fe7db788ace9408790c928501f123f9041610206d020115cad
3243f145df5577a91772a69c8edec1ce5b6ba16d583c83696f25a3a3061ba431
3196743b117ad89a3712fa486dceb117b99fd90039a656083a9c78eb5402b547
a08ddc567d4b415085f205b0b18c3971645cbfc0bb9fb679d6ebacdd2099e1ea
9de46d84a9dbde9ad32faf44ed862518718df8565cd4a4857c5819d239156682
5fb19cf3cecb668978107ede6cb5a6c33c63f96a903be41ebef8accd76efefc8
021d9e18478e1f5171935755ed15fdb9a226b951f2a2c5de734e13e2647c8a8d
d7142f401cfe930cd38cb0352a3d3a112c14b596078fe56d7f02d30808a90559
bf9faa1b6fba746406d55519ed00c51fc9ea28813c6231ad46ad30d8ac34d5fe
ba67128e0b854ead573f6536661e1da9e78aafd69b1dfae6aa66780c83d6c56d
1d0260daeaa328b7f3f0d25985abb985a7707d19436c8b464294ba83c7c67a19
e8333c53d434fff9451a76e6e46c56a2cb63dd2d3b875410109059417b55c227
5256410da97535f04a7462cd6cf3764f149d573e6a5eb63c5464716e8764113b
9fe70dd25ba574afd13eb656b3b1fe92eb01f23b411b80f95897228dd08bae92
f59448187698c689ca35c00b737fbc513c1d0a564c67a85e7f1c8f0f848319b2
2f25f2391875147da285639cc5d683142f82259a229088c674f8d1f3504b371b
39d67ad0e29302c181011d5b83320a8548d30e08b57924d9856ff71252364df7
ab444603f417b2c75c827782def6a65443a1f5dcd26f14ccced4e2e4e52e76c7
dc3764a09f8130bdd1b62028dd04c0f5c8ec8d25e8f83801881784e2958e25f1
b0164ea87c49fe4bfad861d2b88990aaba9e793a57e8f0ef160bec6bbb75915b
56c7a3789b676666a714e05f17dc8fce7f8af6780573f6860a8b79c2baf2182a
769dfcf2d0a355fef6cb37c324d7ef3832a57670d116be6a48ff518a3a9b7488
21067ada9f3dedc33eb237242ee6b4924ef7fc6b48707b87500851bcf2bff6b6
8a3710dd866ede0137b6dbe6ae5e07a086bb91f3cb721fa1ac43964b004b535f
d462c473ee6cfafd425f1613e95a954451cd0258fca5d6fa41d2119e0a50d84d
c447813c9e50d1679ccabbe34cf41d0d18ec55293024fc4c559fc8b9620b8039
2d64587f47f4db5eb6bfbf628e3893eab6ed07e2f9cc34b09db2935ba2c5bcdd
9e3ede3060e8af9c97eaa7e70b38c8dc30ef7cb63b4fba95d78686446686c6b1
753a8a78bd6ea37d7a08687fcd2d66504f186ef090d560504d0abdea28e30eaf
e9516af01d0765c179d93fa669330530944b1df07f0daf95de5d9980f7c41307
e2acb0c97790da9ed0843163d9a2d359402ca41a73c8d73da301226d2bce2f7f
a0b4a137c732371fe08b495d0a4adaefc2ab08347da0a81fe688957b31f45327
e02d42e7df662be8e7ee5ab795374d67f0b0310298815d12ff5323033adc1e65
664b158430d3ea318a7ef6047edb26259443e121d4078e224a82af4f68e81466
5cddb7d7dfaf55cc6605a674861049cb53b09988c94475cf6237eec43fb36d15
7878d551376393a1fa3cf5a28eba2cc9f7d34620776be0f3d7936b0d723bb2aa
06b868e39efd8fdc336ef9fd8bade89e1d24c08f77d7e14ffab4ed67cc29bc86
0bcaf4430636071d9e2851f90855ef9a8b85ff667558385ef68f7727367803f6
80e7c28e469e6fc050a8d13764e5e845dfbf1113d623a3ef1d87034313eb33ec
d4d1889c33e304caf6c539d53845f85184c5c6d31c8070bc3711656b752bda7d
d7d8c75438cb505a7f67f3b77533d537b7413cfa2a426de33cd4ae7330ab0865
99e771e4d6ac4157c0b6efc1f8f71220a715a61cccb878e354419ecdd97d89a9
c884cdf9235a36e349a4358f6a37c1b42c1ab12fa7e4e5f5aeb3384118367aaf
8603f69a0735082d4ebf3397cb33e506278f43335c87877aac8a1f3b40ed3f3b
11872e409fd14371ae1f722bf946c57856a0ec0d2801d989b1d979352d52812c
11586c2f54f4367897a3dae61157cdcf1812eba12c61c3b8216634af5c5994a7
17b90032b3475d59a86cc83798b85001973c8865070a2361c66af9ba32b08e31
657392f2db133e12893dd32a696447c94be95e5f9413ba01089039ac59851f18
3e5f87699d5aff25aaa866dc7871eb905b4e54b026f6af295ca39692baa98c20
1e73924936c1c593c7b62e3353e5b7d38809d67d26c8d8498cfefbc5bd7f3436
0e432343bd9a25637baae8548b6c3819ce30377aea3429fc4ed038bca273330e
3ef9fd65e7e4d3d1daf31db4b2a412ca381f10c237f8ba4b95fb50fc4c330bce
69c58ac5917dbecf13c4e4e58818de2ac3ac6b7b31e83f31d9b982eff9da05cf
d6dfe0d85b5ad64e188f2809d5ee49db1392a374d35069888de6359e99eabec5
309e4e47df6ba150e7ccdbf45c7d9e0345034ffb09211b458247bbc3f9a897c1
01b68bcedee3b3cc5f9f14e9dddfd8a6afdb71b68be23610ab1b3042873ed54d
1913a8349933b59f83b5cfba617ba51a93a53735f65e7835d9f150216625ad11
4445b556f8aaeb90610f5784b2095362458f30f0ee1c9eda0c370ea88814bbe1
812b253b30c0c7f2f7fe0154859d899fd4cb804a3df523023d6a62d8f8ffe182
e01951713f27c1ba500b0460640176a2c1057778afc90e927ef7b979f18895b6
0368f6a408c27dc54a9343fa94a3bb7ca82009a4ff24ec0457a1a2c10e7912c3
fc06aa2a213359d514ae12bc2fb9703f4f32e30496fd207c3816e6c3c981eb5a
965b690966ca9308aa048a4c050cc87363e36be525f8be7285cdef4577c084e9
663b8f489ae66bd4a6d8363f0aca1cec99d6d77ea288de24358bbd38bb861cb4
acc78e6c0ad502174b73246dc30d51a04521e9e35ebd13ab5a3043a8f2ed816c
5c6940137e30248303b2716242205a0d79f817dfaa9289f2dfd591300cbbe7d3
bda2c1ed80bac233bc4c6a907e516c442accb8d1c289921cc4a3dadf607c4980
fc2646a83bb17cd52f9c6f574e99acaa015d5d4944e3403040e59ad06afa3f4e
b17873dd984930aeab4f5217f611989ad32ac51d56bfbde9f538361f730a51bb
7a0cfc9884f225683672e71a0f62292d5c14f5987dd31ea8bc15a8b5654b9d9e
a3def4504f3509e8e5a592fdfe5ce4fdd00c04c0f42c19c6e025da0272802498
627d2c96161b7bf7f179124aa8b2b8fc02c09979a8e4fe4acc8191b3bef54d8d
ec0b4aac3db235c5d73e9cc1fcf0c9de0f9fcc54f99a4f4448f3646d8851e2f5
2dfa15a2c011e01aba9a120829eebb5f780963ba0c7113d7d4b0ddcbec7bf732
9dbba21c3031434ed3be20254334cd5c060b34cf49699c3863d8f852c3ff570b
c9354284f1f0b4922352af61c8ab0113705eae101dfed06d401db363527899b1
b3116f0a3c0ab238cd944f98d05ff60ffe78913dfea9fd7c6aad282d5fb9f908
de1541e1614c5cc03bc5d616d98c5cfab2e63ff7879e8c2296150ecc4c02b2a0
7ef6614cfcc1281d40e462263562b22303d58afbc1f82c031d683d082cbe2cc0
36cb7dacb115c82ce3aa8e45bd99dde7031127e15b6690aaa4de6bbd59185ce8
8fcf620629879f22e9684a4d62a0a313e5c6ccf0cd7d49c13b4922001cfeaf42
8a33b47e5f0271c2aa64f17552576329f74d22732355af74cc1bf47078ad6106
5ebb2b7dc59ce08fb9dd3785f4ecaaa3a4e93edace43803142b1a794d089ce8e
d8da0aff762672f2c30b4cb6ebfc562d58f27d5dd1d44cbfb09c8e4d4d1920c5
08914b14c749436723433793b11cb0ea3e003a51c28772137e4fdab3f632641b
8c68c3d8ba2f7b784acc607ccad7f5750f5fb8c6cad6be938ad3d9522d8a7c62
2c150b4d9e4eb2c60a27c07ecdcd18e3e5d088af55f34eb0ebc9096321a3ca43
8e0d1506c7c7a5fd911496ba44e0a851a7b42fb78330420e1dd8ea8d8c429d56
c3bf85d5a477eb993e85cfc1dfdb366c426f0a23376577f6289c96ab87fd4c59
fc74b8b6ffa05f4f6e5057f05314c565feb157b19aca58a6f65a0ed0949613c4
5cdaaafebca9c3266e8e22d3cb9a029ec869afea0296fa60cd1a695814aabd48
2119f0c13733f20b3279b4cb5e2816d1684c80e50ca2570d64db4d4959a40a54
37ad09a67e6ae3aef5d42c4a0a8ae3f749b1337f123af9833656c2d549627cb2
aeee36fac7df547539e28f7ac48697dcc9822e8d4ebb4ad16b7886a183d4e6cd
19c92ef5c0159771141bf4d60a17c8230ed15155560007828922716aea0a8274
571f3a073e86cfe914326e6397cf9cc44f5fd34140df5add5deaa971ebfca82b
2c06b5e3a28dda56f02c5df88481fe2fb8970e5515e6b3165c5bffb1074720e9
dd0c6bfd8b7313b16db7956650fb44a3565483bc3fdddc2072463b5b47606649
7fdbad611662fe184c0fdec90ef7e5f04d889c83a04bb855a266b3d2889aebe3
30cefaf1b102138f669abf77ae5230a6925f0b8f583409b0e66987aa27c07b88
9af91a80ee55e86db470d4357e493e9734c6b80a7fc0b4e337a9c294041ea0ef
ee47c57381662f7b214b5b0ce56e39c3f571fad8a3042949432d0b0a5c9957dd
ca3ac1fe007db56cd81459dc413ab500c349843a84ad0edd3bd97541e4792f0d
623bcb5ca8d98acebd37b58dafa075d46702a5e816f92313ccc412a8c465159c
7bf73f8253b41afad9decc94cf0f67f16f95222efe63ab6b02ecd4ffba007ccf
0a56a1698b741b986021ac7bc6518af0bb4bfacf5b4e48a5cface5fb20b010c9
985f3bc803f87fdee77bf892f87dd24bc64a5ba1af6441a0b9566f9079e70875
234ed16393a148b279943c3e298be2006c1892258a9ced0d5804c973e3e60d0a
c43284f05ef5c3a1d9e67b22eeb3c304f13b6e8b2ba12489c1ba83d721112b91
3463347f09555a4461f0efbb98858e19ffbb6716dc4d3a6670281522057fe843
6f277074201ae0a4eccd7ef3ca730de43a286aa6c245615b98ad39a92ffdc945
c6572232eb628433cf33f5da3b61ffd77f6a9b476bcb216f00b331e4c591fd25
90eb338a433a4694525c7137e6d36c1730235d1aa14f69d9a1ec9ebf64c85f35
f57e35c49355c8ed63f1b05ddfb933f3926f1c9efa0a4e1b3a1f5e07289faa5f
f2f53469bd72f6ada4b9646efa31ba8d43017419517b591786416d5f2d56106a
9b202ed6ca7f2e47f9feb0ddef555cbc5043384b43c2296d4f23f674b78bae54
c1e5bdc08ba26b2b7716d73ac620aad60e72eba273b5279fc1a7644202f3e640
6de2175b2924a4e0c9985646760a19ed123a1020e5aa51a6efdc7b44c38bedac
79602b9548e9e14656a96760b1f0306f7e319668b9639f5a811abc8a7f6c65c5
c4e3ed9c90e2593489a8aa3ea8897e319998c3867f047c3b9865c820d9e2df10
da287cc138706032c7104766d4d12f934d4699b75126131a417d99803cdc58e3
ac8688f1f944cfa76f9d2112d517281ed9cabc255aab8ad4dffc4fe23cda2bc3
b83ef9e3d82476dba29faab929252f045b2cd3856b3625fe037f7277e745cd2b
72df1c8cd9b91a11dcea63e8e2b55f009cdf22253a828a674ae63a3476178b63
cb12ce7f4406d9750f0f1f7ecf9ecaf3a4be3d75a2f1b1324ec47057a34a668e
165d37e166fe2fb7e38bfe47c411f70929fba561adfbbb510a77fb09d31f2328
14e9ac5d6f1cfd0d2a3f4051cc0e9a85576e3cb9ab8ff5fde244cb147d6f4426
e8bb1d6a9d72c5a457e30ce241d2e34db1fdd9f2bf100da61a944f17f6a56a3f
e7219bfe347dcdef3d02edd0524d722236518931900a25504774d311a5f4d05d
eb34f0b5ad1aabfdefcfe39e8897fb45a10737a6e49a5b198fab4c498741b83b
300af1f10bb8d211440e022763ce9e5216b4cb6ab3d7bb3a44c8feee3951beeb
77a3e90e4d64f75bdee609f608fac24c329862b86d58522d513b239defe4bd5c
2a478612f5b375cea6a9c74218a1ab146965915a844fe8b97e7b480ca66f519e
29bc5cd86b32001d91a75451b152921de777ebc90e94663c530554d147eb48db
bf9c287777644fae9a0f323e200dabebd671334bfc2c7b1896364ce9b56e7579
ba03b086ee3e44667a895bff6fa2a69efe32b8071afe847fccb5e5da4bdc8755
46cc6b8bcbd62bdf6ae2934b78faddf161200ad8ac279ba7515772297a7adc81
7560203917cc3e503236e037b962732c4c5bd42df3ba2d3363cbe045466fa266
94f3f6ff5e50e697b24a7c4a1f8aa6e7df552617867944a3dc52f366466a454c
d4145503adf40a18a27704ea3c6e2a8296fdb977df063ba333b2c9e4874c0a44
3b891b5b7c7cc6fdc982212328f5606573debb5473684e2fd4a5348a02ecd7d9
331c9d931f18e9c7ff8df72fd820938db4a83bcd9661e550e672a1a95e52b632
e6f50045ed1c8d3a7aaedf9c394501896591e3719a42c64be1a8d5e11fe4b561
b96fc93607f2ee8b705b48bd537fd70c1efcf27727599bf3aa79a0acb99d71a1
da5020b3326de002d5e35e28bc8ca8cb4fad28fc979760a0ffcf0e4664f68f76
979abb66fec6c8b11005294091dd2a3ed1ece8e8daa187c4593d1745b5b5dbbd
e363c7db923c7cb72ff79ff5f4c41ebcd1d0b1493a92909af83c8632cc522836
c8f5ac0070bdfd799593ac75e65cc8616167b334b664393e2bc4ad7ef5ad7bc8
4f96f07b0c0aa98c6cb1855d36f7477ae83833b547784081d790ba0c7fffaf3b
ce038bf90c74ddc7247f88b161b79ee916885ec76c5bf6fcb460c1b4dd6cede7
c2f578c4ce1c39119ac90851a78c731cc7bcc978fc86c16099c9155ca5aef0f8
d0a27688cd360e6f27e2858878e48a5f4dce5e60087e379b164cf5f3fc86642e
5be647bfab711f0064b96629763de12c0c2331334808b20dc1bbff43ad56ec7c
9c68159ddc6b8df863ffa31041b94bf91dbf4135f8b6495a40fd82e35ec12eeb
58f88e3c6a249de985860ec9fcf6c9e4892d946500db891af1a275263afd12af
22eab34458798f63224ffa8676a730bd527e6a1f113d3a0f304a078a4d8a1ecc
b99175d23460e083647a91ccff3dbbceae11a4dcc2551957abc3ee7aceed35a4
3978d5114e0c9fe65f4d5eaa17eea893f7449407ee5a9429f3cfc7324a11d7b7
b4f678587fad6e8ea515b3b4dbfa15d21c3fb9ad21dca6b3f23dc751eb31b96e
a24adad173f2cca31379fdc68e21cf60c6fb139ef43ae0d39fa4ff0216d56240
86508e910777774a0b54b42b61eac5c763b362a666e750d036f3f06550c8af34
d2dbd0cbb23fdc7ba2405ddb43f095b70a81969561f5e79c457aa0ebbd8a1dfe
4f63395e0b1127f7c545bab6d519e0a895f44e22ddb166490046d5b102f2cfd9
125695cbe28c49e2cdece2bbd692fffcf7d54f8b56954a8ea4454b86d3bd6dc7
344ba4c7228cfb3a7b498db4f8327855bc948ebd5b7fa280a9129be5aa4c200f
8fb59b8952e36d97c07217b7d1add9e7b2c011ee261798b09ea682b9e0a53dce
7e4ea1c3722bd2c1d161b1dc392c7abaf82849f6fd87c427e9427dc4c0a8ffba
15bad2ff8f946388d058f6be2a81663ca8f266e1670f5df9b7bc30e8817ba5be
f9f4e3498e1b0b72268ad053f2549e40d14d45679de37ff3508f5fe2ad21167a
250e99287df9fb2b0bb34c5150fe4efa653f8490308b24ebbfa0ec4b4fc39119
ad5775d5f6ebc286b899e433a689d5f36a502ec0fa104678c8ed82d526e888a4
d3d853e27cfef7a7e7976ec681c639282f975118c44d9ab3977df966b2b2c015
3090304856fba35387fe7616786fad8a5e6131e0daa3bf38914d7927d2539dee
92b3460994fd25a06baa32a5e19a62de4dd0af61def8ac39fd0146697c2e7297
4eaa491a5c7e5be7e0595043d16fa9c4884e793fe768fa1815d80a7634e8eb90
f30443362e2d5848644e5064b138f068a1db26bb5ab918ff59e8e00a4f0e4acd
a5a6a505ee48fde2700544b0f4be32610540c6737afdcecc360c32641eb91707
397cfbe88b090bf504fc09391d3ecb242f0d9cee214abf1bd56eb6fec5e8570c
43a02096cb5d84ba70d706e59dcf5630cb3644b24e9dd25ba2b843357ee9ea11
01639addfc584569a5514e297b9af14bad7ed2778b59b48d09a40e279c1efd4e
a7a954c86865451294c6b0fdf809fbd853be4acd6147b710231ece3997ff0a22
4a7b3dbc9f061e090fdf130ff7dfe88282c6f34d3737a2c0de5ec5ddc1b0ce6e
9893f182f2f51103e03d59875bded365c56ccc1dea465e4e63ebf75198134cca
49b1c5a3284f3700d6425b80b63782eedd5c19eb609b63a273ad5c132115c8f2
7a5a6c4e9ae7cbd6991d8fa1825c56c9fab9069fc0c1bc55768cf98c68d33081
39e9221adc4743600e381f88e5ebf840a8faf6c604360fcb514b9ee597ff9041
a4f0e0226bb11a2f4f803bace05ed3de8be08fedf380c35f35f9d7f49e1ef195
bc9b9b03e467c4b5a71d4a2d382b0ff20db05158a3813e7bec694a723c6a5a32
4298547a917554858d3fef44826f92cc603fd80b9d4858f3372f1f88d7db543f
22159526ebaa7f3819b0d28a1be7d91ba3c9ebbc0e1b3ea8f59e6bc41d4b5f42
4af4d9dc0d58f51e2de5b92a0b38b2ca933a7cf2ee04cbd85efa9a518ce91c21
5bb3998e78d84c0c87ec6a8342d5c2a122ae8c2940f327d4ef833824c3a15ce4
834fc8d5c057dcfdec15019848b9a31479e88ad81475b90e5c41596156dd6922
00c4eb918f64ab6a5eb14fd5246d2b72c5d1e6bd9fa623a4236615628d1d0e81
8e67b42ea77d764ac7587be8fafa98e0ad84fc7d2b65e3d286acbe1769271479
92e0c9dea9914e7890df8400af9b2426969d778ddd910b957ee0121f13cc1256
8318812527fc81ee469a7fd1df29e789d1128beeeb8dbecf36f6419265e6f989
18cfaad730a5b1d067d1e3ee6224bef9bc6b5e7d77f6d0305b706444827c5084
806d6714f1ca4d248697972daac04ada5967ffcf78a9b489f29ae38c5ff7c21c
bc6c7e3d2640a024ddaf985b290a0b7a9302ed358d0f7f0c378547dea6bf811b
c01cdc735e3e1f91e0004c0dcf23a94199e574ed331d032211288b96d3d3c807
9b126686ba6090ece2a315ddb7bf32db9735cee3d53d085a12cbe2c51686a395
65917069eeb91eca28d191385c50b4f8d2a375ea31706cbbb4b46269703f5239
0492a9e402d2763019df07650865266c6f938e42afee6bef7b5f370363c23854
c9c6609b17c7fecabde4b6eb4517bd69d9dea057f8a59f2371639d70e3d152ce
8d6070547637ffdc60a0e6e8e929ea09402cc017b9aee1b7198247f715adde80
0b7b372c9ad967a48e6a36b08f2687d8295c2c84ced76ba8ed2f8f2499878774
dcaf769412b32d4562fdf23261f6b2fe17c68ef3630e1a2368bce144456afb68
8378c210430556b1e5596f546b3b0efbd1258502d0cf5b472ed11b8cf6f02124
732dd9f812dcc1db0c390edb11ae58b00e60d697ce5e09741ca8c3ae3dc7f24a
2a2b5b5dc13d9340f64adda4749530a49d6383e732f749f6cd59a208158f321f
7ad2a33ab506477e8959a35600f65a5fae8ab7ae8d943d7e5942fc6e9f3f1619
68504247a6baea356b2fe045d831dea2518abb8e7eca199ec554fef035af3e31
faf234ff207d6ea3ef08e38ca276bb2511a60dbcb36a4f0bb0cfe00d73346a09
083a390d8d4ddabf6f21c930d32e59cb6a6ac5e2f116d26b1a54d9bbb49e6bab
785554659cd1948a0b3b946283b210d0e277e91b38941519e5f5b0331185f196
01a394b7d68267c2f6304583d2187de92273394477756a6a9a57986c1713e34a
a82315d535310329defaadea7ebbfccc1113bef04e71026475a8dd9efbfb704f
e3fac9d4f35f115c8b4014a28a91a6cf7b62f0d12cf0bbf8742503e42bfa29b6
e5f69ccf71a79727c310f5d804e66291f2e6b281a6da89f7476e9da75b1e8f42
c1b58b152bd685c93d55ab2f3a82592b72f577008cf0178a986ef33fe408c754
74254f5e8fadb39669ab07cec28fc8f5dd3993129cdcd4567ce338f1d5aa7020
005ff880a273887c6b9d116622858905e7d274e6daa9763e5fa25d4c708c0b2d
1c17ff669c897a94f3a6e300748e694f4f71c1f27955e12c287be5b7a80d54fd
4379474a4b950a51a25618fc3300d38413e6807c39f6dcce5f2c85e07f9b343c
37473f44e078eceffdeeaa54c385b2165a57b44482b63069d31bda98365e3d69
90d04d2e516511e8a091b86bd73db8a863548b44b950beb5b3488d9e697a1dd5
e30efe862ea749cc8cff9e97f39f43a72817281be2d86610ad4dbf55d33ebb85
6d2c813bcf1eec8a7064c463039dd8d48c4897211df7da29f6e0e0a3c4202725
89c69241cbc93f856afbaf47dc762191e29361bfe7c522aed5ed821968971ee5
2e9a603686eaff147cfa7d381f86017153361e3e0bea98a50601eb9403ccf8cb
96886f7433783ae465461f4a7edb727bc7892e1a6de3b0a87c40803571fe3daa
e3e1978181fdc34b111378b75f579b5e6a1962719c4aaa73d6909065f56c7dc7
a33d7899874eacccbd0dbca223349cd5dac5a8f38f9fb18ac3c41f5404d9734b
6509aeee745fed2ef56570f41bfb8b6da72b3318d64a7ec2703a5c91857bf8ea
bed1bb27a98b0194acc9ea92dac2a404b7ba3929f68f05a525dd5e9a9a642467
4eb1b4b673b7329af3c3aaa59e30b732ce848f57324af465b92f52250ecfbdc7
e4248fefdf7d4ae07e3a6e4b2656700c042ca59275fb59a69cb41eb149cf4b27
0b3d844ac047631dd9fd0ec163e8af67a2ec319929d91d5822e7d5249ba2b8a7
be37a62261a767e2c99641948006bf6b9877aa24ceb3dddd707ec6b7501aaf33
cd8899392adb88bb55007b377f7f0cceaa927b95810b5edbae67682eabac666c
f1f24a151a73c28e4a813b5e8b3908381982260004a15067aa81c4e8c77baad3
9f0b94db62eb1a2810918aff9d2b01411fce452d00c4c0bd294fd10e584215f0
681fb3ec63913714e0de7be6ef71656c396140f630ec1659e8063c7185386b7a
e85e75e5a1f83ea4b69e83691a80a3fbeba0f0a933b57831e326ae135ca99590
b8b89b48a8caad594896420a9b9e70f6a0d3204fb9f69be884adccdb53901e67
b658e6b7b094e056c17c8827d30f036fb5894b3386b6f881b65f2474e8359107
4a6e343bd3f286806f43e1ee74343ca5aadb39c9c7c021f2d9adc4d5791e4261
4bc779e1182ff017095bbbda0f4925f5de844291ec2ddbd7455e226837b4ec2e
c5c88c16308c79a19adeaf5ec37a0926a12376af1e7f9f5a2e29adb4e03e9d48
a12098a60df37868eeea417ba18d339490a27cc3c404ac2477badae4d8b6f08a
9a5289dfd03601613806e3f99d7eaa7d95d36d3df5955f77ab147fca6f084e39
54303d6208b125059dc3409e188febb69f358c6d09c580e101ab639eafb305b3
abc70e82fa23fd1adb871bcf3f8dc31b52693ec608aefffbadd8fbd581945776
3eaadaa71159c12554558fffcf48967cec299af2d078044eebd64196ed5401e5
9fe29f338cb29e25e42d6bed5028c279d32f53ae2efcddf2eab83a80878be2f5
dd33bf1744ff7bcf64e5ece2d47f5f75f96effaadf9164480587032adf17fec0
044681f89b71deea1405b893c36fe592710d18293dc3c5ded4526d21902af4a2
b4afadb7571afff65d690e1cfddb1ac4d51913487ed04ae35d6ecd2dba569361
2aa2bd71e40590c0ff047934ff03674750ffcf928c05267dca2f85229efad2eb
305a6c7f9e4cc7f3cbce446b7dbc99f44ba7545f39e7a0693f7560dfaf42fa81
da2cfb44229143bfd33e0f8ff900a7aab51e366f66c136370ed3aed542efab70
e536a831a4cc2d07fea8f09994ccf6f4f8a000350878d8a314ad26032e0f91e5
31822970333bdb7af5b5fdf85d556b60a4a57a41d8a797f423d5852851faa489
f281d98606585b86ff5e869e7ce8ba450cc87e5efb37033aeb4116f032ee0c74
954746c0718f6591bbced145f4ff184c22abdc12bff060d3523c076f472954da
e2a770c0b8b30041a8e06b48380073d0f7bdb1ef9ab70e8cba676c25aebc7067
928f8a07bcd24087053c1e218527df63aebdea1a63eefdf78c7066d601798da9
cfb1947fb42f83aa90fbd9da00581cbf49cdb225a06e4dfae9b49c816d9e1afe
8989356662e93b4893c3a69cd76f80fe224d4abfdf97443427f8c70f752c2cc0
7da57f8bc9ed46bef61de9e633b1fdb38bac2502bfb5308419485241c8e3155f
f9dd671bcde52bc694fff99161ced20bfc1b2dad3632b08544bf741a6f301de8
6ccf9a0fe336377294213552e76f65be4d671bfb22cb75c1bbcb4521030481ff
f8eaa93e47085f0d404293e408cce41037245ce2bdae0aa087a42e1914d75459
fa77ec90369f62541aa4659c21bb59a2e14168c415bba7e401d7f746ea7bf99c
08857ab029df05482b7b2e341737715649f9ef5d496f50a2285fedf878103d83
1ae2c9d0bbb7cf7104d86436c35c4146e9d4c21542c931957fda9b8812b5bd2b
97f44d2e13cb334f33ca675f15685a6e9eb78ae1924f39ca8ed560b6ee0c28cf
919f8bda228ef08db4ef2c95a1496ba1facd49b4f12e47a46f6c44c04fee7c77
1d0f6d8c4fbe917a43312257c7146cf54376a204a8954d66f21b8b577a9bd688
6fc5f748b6f4748f63f3023bce511bd7f51774974beea53f694c847ba6120a75
040aaa24cd540e0bc39ed8f3cf96f0611645cfad5be8d4e8a170b263fd887faf
115a717ec83800bb9e7482be1805460ce57c168aadca896074d258f635617d20
3bc4dc91bc61d0f4017cc0ca3d47d4ef8acfb7c15ef7b4040bbc7de02dd3cc3c
b43ec1ad216364447ce2a52cde4b55807b9d70c43a7316561162672a52715883
c194c85101309556c6bc01ac8997ac99e2d063ebecef96b3c58bb8622416a262
646c992af0854033036fdd11ffefb7fff0c7a7f80cbee91ff13f34412751089b
c326024e8625864f94e1ba7effd8de8f068c654039f3663c7630af015388a646
b8e9916ab7b25032094b030641ac8b3429621fdcbbcf8feb5815b79c0ee3d267
5bf632009a3f54d4a4ed0187075a8f738ddec6eb37f44c72811cc1217d1bf904
a8eb577962c3720106d3fa8b3ee8db1f43c3a383569ffe1e7e1f457a7c1933d5
f140c9cb100eef67aa027edcc1bf7f7ebcfc92166acad213c73073bb564ee7f3
eb40bf41b27b7ec35421951878d17f07e29bdde07a2b36c2b854e1ac02b7ad90
e6b0bf8a55a928f9ef1cbd16a66129db34b08bdf99e41a2c5bdd88da162e6734
e7002a8ca262c85ad068dde963f81afb94dd86b699029555b80d61ab96b77fec
57e731dc0fbc36aea6b91d3257850dad4a323497a4969b615c67f5f838badea5
4fbe552ed1d9428f88969ea1cfebedda1352f6863bcfdba3b1b2f77eb65166db
fb1b4d929b42487fb4e7f4792cbee35e36155e00ebd5dcd0d54bcb41fc5601ab
c1c61d1ca7378358153696ffa151bf815a21667e055165bc5641f4b17a88a2ef
f5e082cdcbd0eced2b776bb07e92695517dca0c4a3ab034b9fb4aaeb2fb5ddaa
5ced9bfbb6e83f10c1f8911376d9ac8adaceea3b1ef49628ba2f3c66bb5e21c9
f3d6880e1896b3860a4be6d9b67511f43f717f35f6733b703a510e157d46d56d
bae8d1fa4e3ada71a84b2eb2eca64f0a038f3d86c018814d1582c5ecac3f3aa8
13745ca91580d9449ff27c0a51f0e5b2f36dde6ee1a522e8d5f1ab7ec03315d3
c596ddb1210e7ee754b08b97b08dd3fe26628e847bec26f024517cbcceeb43e1
33d157aaa74bd3171546fd90cf959be1c4dbd8810b68abb5ea4da2894084d1c1
08ff9026e08320501daae307abab3f54caa7ec98edcd7e3a05e6b916b6484c8f
4527ec1fe0cac8114ea7ab40c76024da39eea19d410580cab63e6cf93b95633a
769f1856fce942139c928d06416201df639292cece69f07609b033c5ce89ba2a
6e0dd347b3a2e8354f6bcc9b408afe47f8b7a37067f071b1d927046a7f479ed6
5d19eb43742e0abbaff34d9ea6453b2feb9ab4ce6d6c47dbe44eeaa78d99f39f
137211552b6ee0a6f7e385e8abf4afd1357f0ff5c70229e81bdeede658fdb0dc
6b0df031f5e63f1fbb1f0848dff2833fc008ea3146ef73b4618afc6215f59aec
8c43fd9d068959421d6bddf3853942500fa9865ccc42cc61a2b8f87f57dccd7b
5de4e1daad1d8d687e037c4184ca3bfc2d52d2974bc051f10f548d794ac215b6
0232a71e31959f84f4015d7e8158eb64679e8daa17eccd3a65a8f5235570faa0
546e3ab9f43e42d8981504ae7c91584dc0016e8a6b2d54033e7af597af5b945a
76ff2126031a4e75148115d89acf4f961fd659fbe7995178659db28cdbbb46f8
4d42a69a
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 58 /colon put
dup 61 /equal put
dup 62 /greater put
dup 66 /B put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueXX 5000831 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b4486be465959b1188f76df7824c135a7fb382c4e1
1b0ddfe856b6f34552ca48c24b57dd8448fac257c4d93fb122e1218fd36b99b2
d79dadb8a66613ef11039be77816a7a2d6781fe0d69cecc36232ae87a172afe0
95532a8c7ff40bdd4a5fcfb6ccfd8f73c572231734e0609c6743ee11010f6579
820b367c49069ac1d45760c0ce8dc1e67e2beb72be6d287910547e1b4bb52465
b75947d224998223275a2c340a1c14c04328cc2935c53ee2723f1de6357a291e
14863f6c1411477b3ea074052b30a4c1ef03ab324d678307e1cb02c7aaffa90b
73975378b9debcd3f6aab626a361be8068c60edd0b2be4a7bbf4efa21cc23607
bf7e2556c17b5923d7b0fc036d5fea743c55f2bbf72e8a61995bd63d7104a085
b8dd5a83d9077376a4ae8f0c048606bb9e84c640c52d0a95b35d48cfafd6ebe3
d6eb0ed88c1212818ca93e40614740a77c446b792d02945642014a5d55ba970e
f97dcdd5b839f621a052d1085a1e668161d3ac0227c7867324ede883589b39e5
d152793009cb5a08eb6719a44dd01b6147e3436bdbb28215ce3d29a3b1dfc72b
d942f8cb3376b4e12cff53a793d935346ceb2afc3428cd9313c671ec1911252c
19de341556999aaf7417aa5085daa35ee71353fdc2c7d83ec2dedaabb1b89b99
e4cb5282159cbfb45a286f8d6bf3abdedccbdcebaf6994b17f1be07d10f00cba
47f2fbf66c0cf524494c53786b0f88f5d96a18a086fbfd22b6cd3108ee918369
8b342fe978502afdebf98632d63bc149de9eab94230a55327fb96b72a85ef6b7
acde791164e8f856e95058b875b02a2262b85a2ff02fddaaffc3a476f7abdb58
f5b1df019a4ca14695cf1f238756b3ce61ffa44d543341b9c1a3b422ad6ad0be
db2f2ef0ad1d60a8589decb250451260a0dfafca04c4435a350b80b75f198c1e
ccddca12489fe22c127dbb5c933103e2f7fc94a1c6af565d34ab622a7508cb9a
1ad12ecbbbba79ec980cc6fc920518d09f30b9e05429be5ba4bdf23e2dd0b017
2d9de9440b51f1153974b672fb33c353491c804e1b91a0f3b3c9f975bfc00ed9
09ebbe67e397487e7164cf0d03e95a0411993d745339e2b938eb4f75793162fc
9db6bce4fd5d35c26286ae547bd4f68776c5105f085df2a6b698e7f43ff66844
81754fb8bc480a057173fcbc6d7773ec0e39891c9161f9d130de848086900dd8
e97db2c2cc820325366587e1c1c8530ddb816b31814ea347be491873acc8d7ab
4efaf7b97e228d4b78430021013681f045a8f9f09dfaf43f14ba67ce1a7a5ce2
77849e440c2e97e23e1cd5c885048d27e900a4564ced659308fbcc400989ca77
ec89aeb4a4133f6fc14289d4ffae7ef4c9be494867b72d65cb69c905236c9225
1690a3b84ea66768190e00c2071f93a9a74a6cd87ef07192319bf08bc2b2344c
58406136c10907e956fcd2eeca3b0e261e4580210197f5309e0426c2333dd691
6749a209c490d4df3b5fb17ad84b2c0f9a1f965dc1bc5adddb8ab35c1e00b5e0
52220dd1a5fb9e1ad8712f21d177b8c4f5614a46a9d3b1e4641b5c90638aee1d
868e51ea41c682ac193918108ae6f65925d30e0b57d50d62979dfc577eead63b
b2f72c829d630118de21ecd53461b965f37ec9ee834a57c95f8f54fced775720
992027da64dac008a9d088944fe727810b85e4467a5cec94c984942ed747db9c
c5ec1bee41af8de97a4e07e974d06a810534b68752a2e9bfb47589f4cfec114c
3212d88d63a139cccf808e4321298a9f3e11eea2a348750692e8366eaf767b48
e79adebf93bf03a3926ca35b81ebad92d88bf058edb550c13c71eeab346d8444
69f454563d60618121972fb6a506a72879dd0b44ab0c57253cacb85b2abf57e7
e159a7f253815c854ed4c4a77a164511877e61279fa9407fa6064be9e82d444d
03e1a988fd9af0368338bc0d6acd45b80623e3cfb3cff6c87971369aae593e86
c192eec4830c561e3949a4101658010a76fb1dcc2c3cdd74ef62c00b0b5e8fdc
8844cd0f36660503be572eacc92a75cf67c1fc9bae04e270856d9787e536c229
e279b0f4ff5bb9211d4349aa90f705114b0bae92c12f122bb6002cc73cc52cf1
8e4ae4e04bd89e4d7960642a3fb437bd454626bd57a8c803f0555eadb4aef506
d28108d01d9560ca95de7074d67cc151d5a4e652d08fe14c08b1909b3307b06f
007560d617443716e64e0a2b9c9adf577c4fcd755ce52907d0e316ac18d5adb6
55697937d67a4365f4825defe0a8fe1ba3c33dd53622027d1ffe5a9ac530f715
8a0d93eff070173d064a6f56947d4aeca9ed8ac90e543824d1162685b6f7f73d
de972ee68e9bed3d877354ed6e240ad3347197f73e8b4de6a343779a152f230f
f1db67eda1a532359af35406c00eaf0ce83713ea7179ee1dbc702440d52dea2e
e10fcd9cd4384f4e8d72520df586bc24a7bfa5b4722b7d4e4b1c7767b2e2f542
dc85e419f00beda3aa2ee2265ec468d75d413e59290816b0407104c54a115264
887a1b6ccfe83ecea1a3f9aa391701b48ad7a6df16eca4f6bac39c950108ffd1
7a8e31b33488852b1ae672b552087903d75ff0eba5a4ac53acd639ae204eace1
cd4a9e6f19aaf3254304251f15d1a5bae98680178513e1aef6419c7e7356e313
d49eaa2fe5d498ebce103dcf5e1fa2869787beecab58f27e10ebba69ea4316fe
313b57366017718e98f5aeaaada39375658c4d64124c302201c14ccebc9e69b3
e53e54a64dce809f93778bc2a238135aaaf99c14b889b50dbe003a81d6333354
1f750e49a4c1068f3921d34e2a8ce92f5fffea3db4d644516d118cd5bbf69867
8823aa57bdf35047026035b679b9821e1799e46c2963ed7105acb5ab3dfd6bcd
fab62484cfc1e6b514ec63663e32a77911183ba46cdedcd3ea057a5ed3b8d88d
352ee6d340a051d8b542c24a5f9277631a70412cc95f51f05e3df108d91ecb58
2d8b8f4a008f69bd09018b915a6507cb569ca8b124b01f903112e2a131a6e907
1cf0eecee252f2f0dd9caf37a0cb111c780d03d0a94eeecc109db6a13e48a186
20152cd969f540deaa7d711494d13174c901564a9d3c56a79fc9f6ca2e9e055f
e5d1ffdd9d89a600d08a60f6b64fdbecaf6ad1f51bf0efae465204d88f48673e
7eccf137922c606496a496b85f71ddc10f2c53c66445f4e8adce22f137a67c61
0fa250c74520d552ce03055a41fd7860939ef3948e26c505a5f11f446186096e
45cb07929cfec51471e7a184af21d383ba49e02b1992a21386f380a0f0d249d3
cb47a9545c367277c9e61394a8d8bde89bf07045d05ea85de7203547e0d75b31
f778e6c6b65c91db842533cee08a95bc94533665ba4bd6d8ec5463d4ec0ffd72
79227fafbc122accc2cad2d6dc4bffc9bc6d81c29a1e833f6965b964ff2a4ac8
c7e5a4fcbb2e577a7fa450d37113f77d9eed6851a7ba8c268582a2b65b4c7df2
31b70f2bfc33231f3cc6ea65163da5e41c6d45dea8b2ceedd1948591d4a4636c
dd2e428c201d9bca34cf411297f9c5fece742244f8de4c0f3c354f28f3188550
9f5574c934a1059791f0eb7971eb3096f2d71ae3c30532c6f8c33300caa54dcf
f214622e040487087caea2bd923a9fa906f0e1e1e91624ddf8edaf0feb63a07c
6bcd01d07b1ae70f5a0e56c16b02127259856a434b5b966c35e7fe3fec3063b3
2f270adc41a7a6454a1033b51ce018b95ccdb8c1c785416c1ab111208aff2b9a
3a51a4089e7c8145bd088c7bf88a76ea65193b3a7848c383d5139d3bca00003a
0ddf45de364e8829fb4a18337444be0ac7d5f518bcb6238cb3cda6a4a01f2227
e969a13e1e5a23fc4bf328365b801864eb7e55f2ec583b3c78500e0ee9376af7
1907d17729dca1172b631b25e54a6337d379e354db2c77f773f3f54413e8dd5e
1dc6a52a77084efcbebc88c7a4cfe34768fd685067b1e313d866002c3dddd5fb
14e5c6c6d1ae190a7d1f3830a3ed27125af8ef21bf059fdedee6011ebf1f24ff
08acbe5608d387a6722e96c0a9d3d54773ea9eed96154567ada22b0bab559632
12bb387d074dc8d1d82053ba72f64dba6b8ce4f22d88533ca5e71f5e295a3007
f2e378851025b5b5e0aeb49e8c0077a9633c739d7d73a6e190940346bfb86674
fb6eb7b66fe13659c5c1fd4ae1e14dc2e34143f2a83420377e97d47b872f9b0e
cceed4b8cd90ca3753a7db1fce279f7e2582294ce3c6e51e029135d7f1da23f9
fe377bce6125ee0ad12f796f78e9214b2050b5234b1c7fc55f279d2fb70631ff
fac72b0665b9d00d8f8d6df5b385b525ff6bcd183f72c215fc40a1733401bb9b
73a9bcd3c2a3d83fbd62f36d2e04f60039608f35395d147c4e28470b90c77d44
526b7a2b62b1f12bdbc96a03714781f507b7a2f47d2209a841e38388043a16c3
5dcfb77c2aadfa978a2291d94600483df144a1accadc47ecbf3ed9adecef13e7
ee0f8777a6d5406192f63734f0fa02cf1203b4e2d60ede8fc0d7d596ae21f0f5
259a0c002b28ac15d8a7da8dcefc98b6b8d5269e42abcd7f67490df644d2f76c
75d66e0700cf0d63b0a856590e5a164e6facca72a7d625e4626b620dd98b35a0
251f332da7467b96b71ba8fbe925541c84286609e49dac6f6b5aed10ca62c41f
2c5644ef2413e3a5cc62b835ef98499ff9a74ba5eddbc11da3ace32fa7afe489
a1ccd0f57045b036ec29625f8ed4716faf4f52c03b3af2b91b71ae14bfe1527a
d32f2d02dbc9d6645a9c12f6d108b3f1f94074df2d9b07b929f8ba84dee8dc77
e862a70f2060c9e579065bb6535b86e4452881c78e22fd5606fe18cf88885a3e
ab6fdec9f87aef4712ffec4ad1cdbe0bd4e0a138c6e7488037c3d437098dc41e
a5c1f67ba529e1369d09088d2010d9c8153643719c881533f93a3ff51ff07468
a69c81de1a47f0f273a25119a1efb0f6b3db8ef31b0282d3418c202f08d6a495
9f0fc5fb000adff9f222e645c6dbf9604b3d6a4dbb9593cdd442b34b097175e1
1c689eff32c7f1b471cb7eff1f9ff3142d76469ee694e5a92ed271bc619cf750
4208e1c90dbb2f3b4c04ed0d4eb5f145bc35bd27f7cc1da4e4daf2e9ed4eff99
9a540505bfde6cff531fc8e24d006d175343613ee4daf17759d4c31f19474921
756112335239bfe0be4fb5cd83239b602e12e3ac3913f349f9d4b19577966f92
76623e28fbfe0ae44f571439d58f19755a64d50c76c44fe4df4d9ddd38bb5821
d23bfa48215f5c7592e58116b63946b3cb2200b69a39b1b0e57f28e52aa3eefd
18ad459a017842b5ef1f39e11093b49516fe59cb49194afefd1ce923b05c9c16
2ec15d33d5ec87fc46ae50106741e04b3100ac9f522fff2dbe5db470b2aaf725
fdcc9ebb6a9c2513df76f06acca5d75bad1e1b94d65de60c735b63ddc54daf74
9f37be1e8bda2ad763698e9ac1c2bfa045b5ec0b6aa6c03f669b52bcc6e36470
782b48725cfa3f85d7ca7aec4befc232e7cc9b29b0bdf29d6548cf8cdcba3651
0a59858fc235514cf907f2d371ab6acf4c45cb7e973888ce4bc650d4e69b34d1
250935bf7e49c2fe3596393bd726ce1f388017a228b9e67ae123f0931593baad
29b0c5e93eab01f5d26a9bee0b0974ab85d90f66ddb72201a403985c9b0e8039
fb55ac014d4f95f7e691e0af4696ea3efe8f3995b43867c628468ab1b8b083b6
a56e487fee300711542ba7bf7bc5ba3e6d8148121456ffab3384e8c85b396082
05c99b7d3ff01370d70ef63a2bc648fc3f012a3559c5416cda32a828b17f545a
00ca554c377bf62401ea41f08cfeb4edf69f39ab9313dc41a8bdec164524a5e8
698a8169754052c4736192f3806ef1d7ef1c83b9397437f49cfff2762d1ab279
ef132a3bc513f57d57da45c2372fc35a016cfb5a98d0f0dc015437431f951736
6339e2907faac11d5e424627d05d3915d078294c0ddba3732edbd685eb44107c
e99565a951fa6d34dfdf9637cf29611d0f67e60e16ebed3bc71c22af1324819c
9b0bc05927a64e654413454c62c7b1a7182673239c110088b835b04fbd534c10
bf587797174da552347d6fadc8e67f73ffd06afbfc7e1de142ffbfe68dc1dad4
0126c5e75efa4800fffb95991e009f98bae74c95240682fd865668ed6cee760f
2309673c42b01f26bf36485a2659f40c5c7571b855cbed80e4381c45e02311ca
dfe12f1212bca58f60a3a48685ab752a54e7ccfe9980f91860b39368ca629475
cf029dc628d10ea03713bafc32c0ab42637de25c13ef018e38e33b5549a1477e
852ae89e67a3e714f7ae4b126d2f2d73e223a8e7c8d6fddf76e7261063e21291
f4932d7a437c0af1e9baebf913e6a19da32b40de1dbb4b721696fefed3d6cd7f
fd8d2fc808d8df7748750bcb8d70a1946b64192793e5ef24d1805715b3571336
b65c98826f7b5c8bab79bc7b349c7eaa7d6c4f37c8c530bdc5df537a591976cb
281e85e5d26e9bc8994433dcb88573f351ecc18b7a4bcf95e9f6cd8ed2a02ad1
ebadaaf0bc262686033f0d6a02db9d9367d79883e5fde3a20b9489476d9872cd
cf0445fe23d0e027126f2e3cddefa922de66d2d9d3e90737e72e314f0ca18e54
5a98d35e9a6f60bfc8c460a87aa95d5089ea70426840856c4cf10db71cf0bbc3
f73040938fdb6972a509d22557ba3e0b89dcab2b7c3afee6eb97bed7e150e999
8f4375eedb2f6bb9f6da3af6989710c7594ef2990def875071c7463068bcb0b1
617338aa555a42904e83640a879191333ed00f6a2945f28f63e9a5de81902fb4
239f8f97a000a0d578602683b44f2980f349a3f3198880542cd935c354ee0e46
dc1d65c54d0fccd8d25265909ea335bb59ed99d4580b08c3ac51f0ab2f3fcb8b
28c76f92efba9423733e6820ae6fead6b99cfa07e32147072bbdb0b1b2400aeb
8c46e549aee2b1514e82042d17955152f3c8306828a8e2f814495ee40b9137a2
8b86bd40e62e3397d26851101b0b77d453fc3fa31419eda9918f28225b24c706
06d4e23400eeac21458b35cb714f172840048b08eeb2d431b03d77f18a7c6a95
72f040f5dbfec90ff08bc023e58eb7797cc39680fa345b1ed0e1ff19ddac887c
583a42eef69d5af395097b2b23d08e4f695760414fe82dba2fd27eb8035ca9cb
9773fa145c4ee96ab0f7e637a0e613040f9dda00fe2ee836ca067c1990fb4a96
2410a995c46408d10547de101b8f9be1ea8c917448a19908a2089efaf5bf7959
aefe0382b0a0e89b300ef88ce45ac05481403da86e640bd02b7261331e2e5ce0
b9839bbeead08bd16fbcd76a5c1bb102bf5d91c5af0d57723237091f13aafb6e
4194e860e38a77ca51a165154d0c82e431c10bf605d4f28112d78257fe4bacb6
dfc188d8ff7bb1aac9e9035ffa139e9660837988adaab53ef7c199852cd704be
9c110266960266312edbf1a309d563a3f070443577de172e47eb6b7c80931f45
9d6d721275b9df570095415e9d6d71b9cc72ec86de6ad2c1282b0825a7c0c500
fc7f59e5f89fdda598d8644e93f1057d4d57428d6d74b0461a6787572537eb96
9e1315bd632e6a711e3f544db6cae2c89c475b1e69b01a8adddc3ae5f168c41d
caf51cdc58b40f422606109ddb83a1c882e22b315fb879badb0d234728900d67
d90ae32f79183bdaf570011a049e7faa9231e6b31bb6d5f2094222cc5cc6ec12
49947af85d30b30374f8bd627659b19cfd6ffddc35b30ac09260150137f7571f
9b3efe44597bbba33e28d5cb75288e3ad29549817cd3a9648991fa4f933c68f0
20af6fa2e4dad501a92be78651219bfe2e032d392196708cf378292acfeda5b8
515df1afe87ec073edfb995987fd0acb5ead60ca7dbdda73689874c070d35fc7
7d0a9cae340e68ac7807035c5f0769a39c1761e69633287061f109f5fa79ca98
d62b7e230989fc70c37f23f954610762ad0fbe1c685c433972c18c33dcba8a11
72a4b3ed5e4cee01aa7cb787c091109da1317de77f6faac41ab83c28bd8c6a72
eaf9efb53c6f6e46d524506a853a651aecd80b5500ca85f6fba2397ad9e190e0
5a4693e80d4633f09a9449b6dc755bd7b493acb772d1f8727e1458eafcacb716
eccc40faeb12790accaf4ab92f0b8107147b8e398e43951378b0d52d302e177c
7d49f13c4d7c1ac64fb138c361914afbb2e27b1b895205ebebbb25ede00edc9b
1de29b99e3bc6c991f5285909d7782687d5351faab8f06e7d0522fb71be2ffb9
b5cd603897e7042030eee640f3d1a9276a43d2f7bf9439fb4978c3ad33d2fad5
1841f3caf109c9eafaa0d3170e2fcae0290e93349afbb9fbb5a8c608cfd758fa
7a48fa83e86f3c3a66d7be98cb61d95133327dabe81c3e2a9c6ea8151e8fc7e0
a6a2caac8f232099115146790263282b2f9b35fcd14b8b262d4748adb20c8d20
75b2604cf33b7f5f99f943a6ba5a7e8ed6179912a05abd4ab7a018b686e46763
88a680995f612e4e7239843d0879a114d87d9d3116c172572892659d93ed25fe
f7b721684f32cfc07ed02437f90a38a99a02f1e729d5a1b91ba0b52cb778cdd2
f6d1e40858dc8ccc09d736ba5065895250dbcb6dbab616cb9faf86d50e615caf
b38127e383014cf2c88b3fb4fffbf48b728bfe7effeb9cee419a20f1708d58b1
3eb5b7d66c1ddb4e2e663491533cf64b8e6627c48cd7927c9c94f49e766f9053
b35f277bd6aa63e7daacc70d6027f28d53539e1eb6b682afc029bf4958b95678
55c3f9854080fc7d89cf6e1e0b6b0a5ae8926f1eb248f3c58d6367e2e297cf5b
9cff271a6f77f961ff37c7d7f82cede408c334a1b774bfb72bc92ae4d15bb460
887414da8a34e9f4e4d971293728247a8ef4c80cef7c535e4418e88d533e31ac
925cecd26074a23b228b42ec9fa698b4e053a8748f7f0968f028a11c853668fe
ee24c311e85e65dee2a92d6b11eac19860bcb92930178d35967fd52c8dd32a7d
88889e08bec901ac33a3f02d93337336e64e8b21b49dfce7151811bc15952068
0c32615aafbf9457b3dfae49d39815639e8dbfd17264cd6adda589a62611b508
c89e7771bbef0be21c01de55a92006413f67245f0ee9b9461f6e3087640f4965
d9e105ea87109a3c6c29a1f7b9f7596d9b69893b1c962f17f970b247c0726255
57ad8cd3bc08bdbcad323f7dcac0831d67b3c3f879821735c9a4c9ff714f1f96
2eccebfab8088f5ace8973909e89292b1d079d25c866150998bde2a70e672425
ff7d1d78bd267527d8f498b5d8f2fa09916c9a99b7476cde271d3a1875bde97c
5126b903d062a0cdd6ed8adf3fee9fc1e14318591f685e801d8afa6660b8af17
bcfc5f79c0eaef9451550269d4a77e2bdca36538a1e9c4d8eed85caf7602f978
58c20d2a3a7db9a0ff52fbed3a6982bb9fa3187e8e9a21b8d81385211da25c53
36bce04c0eb50588b0afe69fdd24f26eeb3bbdba587d9ffd8ac0c30f97f7b844
117b7ced050b4429cf894c22fe0a92cf83c87c8bcd13a5b50389cda143146106
d4b58f1b3dd66764f25a90a839e18e2f37ab1abeb96f9e88ba27080a88855386
e0d054d42122b0022efa0ff9fde1055150916cefd4ca6baf2a0e0d89b5b8b4f7
71c2597280dc3d65ef9f9ad5f4a911d169f8310fa1954a4f87ce8e747b118ac0
aa5a4fd0407b7759abc2dd9fc47e1d0724fb812f1aada4992b0e570a3ce3d2c5
f74d5cf9da79efe7f61288d1b1faf403572980cdd34c1c712b20486b7e434a75
bcca1fbbda6f33b6d328f30e6f991b44ff6000d4a62881de140e6b0a350c5af4
7b5755d0cac62acfa0d7909a52f8ee2cee5bcd862713b54068305d7600b11516
2a6b432b831900638184ed7edb37881d77a62d42e39be9ae95f9c510ce2ebd7c
c8278e7214cddaeadcdf36352ddf94f833a1c67d8457db2b1555ae6e06fd91d4
75f744c720ad077cdf4d69963794d64a43f10433ab20b0ce90cc2f5a56fe8f5b
e726a90e8e030aaf937c0748f78e64fc7d69cfa0e04daf7302dacff373c51eb7
0521131ce3dac643a501f8054aa100bd49af60b404714caf3db4007a7b651114
41189cc628c39651266775bc4d49b456c826dd039ac9c8b70c3690122c54fc28
ab014510522e54f5ff412f5fdf868802e3b47fe8509bc704a52331e5d6730319
c7304065b2e9d45d0f6b5cbc512f21163efbde195a359bafe4921e5be35bc79f
b5a7688beb83d6942542428312687f92e99e8bd569ab581693fda2413631098e
5ad7755f1b94cad963db633b88a43629686f81e12e9e790a525a9fc3c4e79300
98e7b8bd76201768d57eb07a361c65586bde965da09be4f80b646605715ae7e0
149922955b48e0055c0115f13dadffa3fa59507573c03dc08417ebbaa591e874
fed34145d77d28d72eb4a026c473b39b9d13c3e3bcd2562bca80f66a06a4fe89
6326c099345e3e3722996d51207d8113d6b51367832974c9e928ed3c8df556fe
ded83c08b96efc8dd5647a4fa834c5b326b866e93490c788089b0c43c66fd090
2ac5fbec8335fa74b6bcd934942c23b062a7f6907336bb167053284f2f24c145
60d5757735f756d61feb4656410df538603cf57e6ac1f9ed3950afbe095b3e99
ff553e251b903aca1b9ad514f485ab4781a2daf97aa661213294f5cf30075a49
50fda9e6d92949379fef47ff661f50af2b1769da841809d5bd34143b7a6bdda0
7dae063dc9eacc66d4f5e5e2822587150e7c7ac015c3f860251e698527b1f63d
48f4c8c82c636211c20b9255e41334fd9c21d4570e7fb147519746871c3261be
a51f371f1e55e39c90254349472db54c77425e0edab0b09d1c37609ebdf5e802
f3b5413ed780fb0bb9a35427004325e11e012749446dbe641edeed78bb3d5bd6
ce8dd5167175dd329d4b3dfbbe7086b12f6637e380e806942d21743726abb64f
ad918c131e5b22872f4415c5581f83d34f8069906c098bc6b447dfe7e9f8d3ce
0ad0b39cc26e80d5d6b8b072385d81941ef478e3abd5b1c669d32ac02a3e0e67
5010524f374eae113b3cd17cf36d372292c70447fbb0b68e61634d91843a0648
66b59643fa09168e32a5f6992c596c307148339398a590e3444aafc444786aaa
60ddafee457536626112674421d79b0d5a39e715f52b974eb720fefd90c8abe3
97e2468243ce2421c4c85f0b9406c65adc5afdf72c6de4b237c3b8da8b94084d
4e4e2fdb0767e4aeb2c9c13e38c56c7de70246af18456662b20756522f271382
6a41b0b482a12192ed14afbd40048062941041071c4489e14bd5119eaa5941a2
1529e517baf38e3b9abe0fcbc1967210354ea280ebed3dc8a5bc92587545a8cc
83e11429577c6301cd9226fe90bd5c92f6c17044530a5a3c4d8fe3a8c7d6de88
dc476048f0aa9d7bc1a5c83bfea0ccc5d5991e528de3ec9e357d31f96d72730f
edc72f557d63dfa77fe917c880cc909969c5ea264ff360ed37e04e93276ff3c4
e49fd23de2cd97bb487ddc5cb7d6b1ea9f686f07021bf810ffd6d5fe6c2c8b74
5ec9d6ee89d6b8a4088f77445b06bf711fe325ade1de2efbc530892cea788f61
ed7ba0ce0b5bef662d462648f54cf04e4edd323c1f3b0ac6e582a8ff3bee1f66
2c4cfa96c5f5cd51aaa12faf71f7fadfa4eaa06c18d23dd24e1b4705256f0f03
895c430c65550321561259e9d80bd984e3e22f9f5834025f87241a40c52f2ae0
3484e357e32e24f341c0ea7ef14023edb6def0e17e08fa508f5321d3ccf621f4
f0c0aa80c191026ed79f6139dd755ae04edc39adb97fe547993de860dd17b6cc
10d15c04fb77b9c5476f139bfd23a552c11d69d338509eec232e689d21b63f78
5eab563678ecd1673219c4ebea3bec09412afbc07e1b10685c43630f0603d0f4
7e4661bee653863a102486f96b7c3d863998a40e007d076ae8bf56564e813ca5
270eff568b35c1e227f68acdfb68f65e3c55eb2c3e86a7f4f210e981ecf521c2
380ec1a761bacdc6a9dacafe9fc50d8c26f1eb3ebab81f8fa4a45c6f95cd8582
b015a9ab734e3c829b4064240897cb236077b8f91c2f70e688ed1a4f0f398e99
b8d87ec982e8aa83bc3e3dcce8b79bd4edeb29bb5dc9df7a78972095559d2406
29dbc332a268a48c32f7e6996d7110becd254703bc21f5c7d3124a7f659e8e75
247ca6bfa8ec1c97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /ffi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueXX 5000827 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacee583a5c939393e012707b47e0c1f
a47d284a1edc9d01a497d772bca8c543388e6dc0d1e2c4944740470e0914f65e
fb0737b0851b2ba713a9a00b36d07da6bcb52920b9b59efe587734027a3c5e65
66aad332fe6fbcced1417802822a3b81d6187875263d6bbda04bbcf6e4870fee
ad60f104bb3c5a766610dd11aea64a6b107b0b04439fa2888b8cc39232bb83f7
695aba81f0260cd5248b9e649cd800bcb325468c79ffacb9cd3036f2ed7bb65d
cc883aff8d6350d6e8af1a9c1d2d7fcddc4c554c7e350f2420586f43e2124611
487cdb176d453854b51cb8f9100bf241899bbef87d57f1135e589813995c4d86
ce91db2b3757948f365186c2a4f32d845f659a8e95028f9c0168851997135c67
ce7654f2de4f22f51311aa78f440e5fc2c58f6df901fd071b2d53b2697bfcebc
43fe4508828b4756ebbe1f3e8512514162b3bb44493a65f11ab56deaf152fd01
bc8b642e6021af01998edc76b6a1929fbb9fa4fd1a430bfd4464b53f75075f66
c726fc037fc23cf09a178ffc60908f77d8ea9dea79c1e21fcb5a6a994e5a8e5c
c6d6291891df7695db58a2dfcf3bc9a17888c29559ce8f37dd35c0ae35def3e8
daa6d8d574f457b0385efd1611c048b9ce76393fbfa006fd23d742cfe7016035
5fe95302b129a824c7794a9de47e463a7fdc42fd72b9da3fabc3e65d90258ac9
c1ecbd3654b103a488715f9e0e649b57146b786aa399c6ff39f362816306a1e0
ac83a4c83410030d740e15165683e843f69579ec1824c36935ed4705962f494c
401400303b590614e5daa8dc53fdda083fc854e535fcd575b38aa43d3d5c4a38
d56bafa926fb9e7fd69be1af2b502849500693dadd5f00b3185a8b18a0b64f28
9f33f5f1eceb14d6945a22d0def259076cb9b11d899318852053d98c379de350
8a8a7a3ae6c9a73e878f7cfaa856e64b993b13baa4ea8ad693b380171f4f04be
5464e1fde8190f963ad3dac489ca9154a9d35f479635781233c57eba78a4b34c
5b3f74db0cde46a05e26de79e8b958f6a99a3bbad79d0b461621fb80d7f5992b
3a4a42a45d55ac22fff1ca04d5e0b14713cddc23f7d69c6c672092d9c73ad09d
6a7e9dca222dcd415ee95c783eaa5be6a24ed0acab9dc4ac38e040a099d69e74
d9b6cce1f507e7753edd468ca58de2f595099f12621fccb5fce4ecee1d253b1a
e5f383d0f88969d0f0f51c2218f6c36469b25d06387d77f18a89deb8f2f05304
c74e4607c41706093f724eb43400e45424a40341741d19e29f7b17e12c194e5c
c9785862c68216f0845e192493d13f54c74146d68859d79d6afcab6cba53e4e8
ab0ec494540037debaaced4c7ca5a5d86d10aa56b7299fa8e3bac5d68cb5ccd1
e88d5356a58c00c14925fbcffc2052a54827e478112df57b448f82ee82f85793
5b94730baf2e4994131095b2efb79bfd81582695403aa6ed8f726d33e1db60ee
bec0aa1bf02b30057701e4bfb5da22f54436d2e551a78ae09e11c85722931da4
b72a33579af67aba853a3bb6c30f83d82643058da8846b2f87236224f5b37504
a30c1e20b4b1e9ce42db51a21f927c902580bd3eca34a853aed64f24059cf0a4
bd1fd17a5e86b19ae89fd6db0d3cf827615206401535af6317aa6738660c1205
2c1029ad5c01e5f598acfaf10b7958929eea3e16862e7ce88172841ad7a5d976
e64b63053617f8aef51c403c3620372a20aa2a73653d9a628a1b99b99acfddfb
715287b5681656f7f9abc1dd617eefaac5183306c7cc22c938c83001ecff4649
84d3f967682cfac851b6dbf0cc8ced6ed82b2dedefc0665fe27d83829f056435
62f1ec339ffaf258875f536e3502b0b4d083711d66897d6919a70e3cb94d6b90
7995638a78a151013de8556c59f53486effdad967e635da725098f4e63216528
06bb3c79878fdb610be0b13b55002c16e46b272c18f11bc0919a5f3c46e2dd91
03eae75f1b19a092ddd38b706a01de5646f02c409886b39cddf6a9b7379b4ec0
83ab31e5c941aa2815ad209369d157ea4de231e68deb7c45e9b86606f4070986
ac0685c7c22f525fc22c4ba41aab7716ddd022a456ebf65346d84b1726b46644
427ece1345950adb907a947117846481f235606be52ce7b3905dca7500e9cdb1
7d9a4d8a73a85e7953fe3e533f5c63ecdc5c31fe886fc23191b69831fd8d6c3a
2d72c1554448121aab5894169dae14a8dcdaab0a86df967e71cdcad510b22949
3b15b83f584bd5baf3f4341bb0396b935341ae431a4e3084ece7a0d7c0b30650
13db90892b570fa352491a569d5dddd52273df0a5e07fda42b5ebc498b0016b7
bc62de1f529f4de3e0f5359b7e825d49a7c8aec54ad8e7c8524607d862a60d0e
22ff1e96a9555261afd1cff3bf8eec4ebcd7ce0c523fd67a331eba9b99cc511d
34325e775937846b2e864e5560d13713475e88d4b31e11bf30d7e909c058a5c0
9286d7002f6dec42505c276d451278b3112c44f9bb5b6629417563175dbe54dd
26a95dbb3a03cebb65a3e502076c4720d881ff18f1db2e09e25f874c91d7bb8a
d66085241f34ab8358a3692d11db7504c0c465ba9f62de0fbf36a5dda7917176
e8ef3e63e8e3cbee2660af9a2b07f6919b528e48ab4686d851645cc8bb942363
5d33d4a48ed030f5aeffe91c9d35798018a6adc66cc8efad439ee2ff26359093
4991b0348cfc0ae10f4822b8ded192c4e28373ddfd57d0e5007d53c309d43a88
d21a9bccf908e685dad863f22c9e3d893d135761c58caebe11704e23c260d621
31baa24142fd85b58f3654c7aa72256795674072b181a374500dcdaba4c99785
bc996aa0e499ca0face74bdd08c5e581199a0bb3fac716dcbc57acdbb20c0e24
ac7abbaf2d1d45675245f69c23b7c4a92a7cd9e8d36c21e3a57ce81c6dfe1fc4
29e0b7e9698ce3d35c8f45e53648ce51da8db19abff7e6839eec16ea3b7304e8
3cdfef772e40e2bd3e44a049b125a88d9be6352c5f2b7af876e7b6859bfd28fa
a93c3db5c1df513a5f80f5ac88af467c41fb3160866f4578fedf8575f6b639e9
8ee7e6a7e8a9855c928c428e41493bff6effefa7d14fbb7ebb0198135812f3fb
ee23becbcec27eefc6d197274f12f47d4deae8fddb507578ded2480e0f02ad5f
b068e87f50f2e58284f9b69e2e35990fc1d1cc077af86ff1ac0381df940b055d
10000757ae66aa0195a3546a2e53e862d63f655b4bcce84d2234c53a51af7636
ab1359dcc01e36195c6531cb18465ae12c0093c57f18f263b9daf132198be699
9cca6b09ba2d38937fca54dd9d418ba45a05eb385c3b15753198b828c08c9cc4
0e5adf50900172fd56dbdc26d6c98f75f2a47aa6b5e068f9ddbd027b0b1ddf81
4c9ccd1dba8f395c54738927109faa2d7245a52e1a5c7322b9f459128afe26c8
9bb606e237a8abda6c05e4721c9d33938592e416ec643988771506807e46e6da
af6c730876d7c757059d9f97f1a43f6edf9ce20492b1dc060b8f9879dcacd64e
adf06e8b1ae4a91035b35d7cb1c0e87170729c5babe0494df0f2606b953ef787
7f9ecd7148b1ffdf3983fdaa86d22578ddacb59a5b202174ae158027516360e5
ade6ea9b4635a6b930aeb733425c918a6eba9753603d73c2b6833c24e96ce422
2d940dcbbbad4ae531be0edbca2902bfd850ba33f3a9851dc2f31f42c1e013f8
30a4fd1d9942b30cc2bf61535b6df426e9e8b78765811995dfeff04a6867f4e5
b0cf6b816c31f7325abbaac96ffe6d91aaa247d8438f474cbd8886affeaa4b82
74b1d32c82e05c61b752b8685f6284f11b450b17fc1377fab856a05471761903
410094ce9cdb2c2c316a72b9791c9097b6156097ea1b598cb3ab943ecea4205b
c915ab92349eed2811a2e489bb1d324ef321c0f7c86bca15989bb3167bce9595
1288846c26107df7cef7070ed092850e05c084d3f86fd7240a5941d82b96519f
2bfe1fec474303b923c83e080749006de93b9bed89ad102514e23ab4ec227fe7
7cb605dd066948b512f99547cb0be9e0b069ea9d1b44653a01e785f7e9d5c0a0
c3767303af81b6498bef7cfeceb831f7f1170249462db3044a6ec7ea43ca1a62
86b9634256b4155bb14ddbdd7153ee09e36c011326928217929e82481f1c6abc
b43da890e8949fd84f4335575d7cc01de72ddbd7b2286cc58db19ab34fd27caf
08e56d7e75fdb69f9264a12e6ed799bbda085c9f101b2730593edf4d29c48f35
1a5b1216c989c84a3b434ddc991188b035d32f1b784f49d8f8330b971e20d14f
9f8d37cd6b5620a5001db9e4ce94e78a8cf1dc0715f96acf9a776066673528d1
02df5e7ae0b2b00d7c48e7165512558cccb87d3cae7502ea0792278ae8a07554
7a40714ca6c1e873752a344b4d083fba132809d0c502cfc2c51b84453841811a
a6870ed0bda89a7899fc5dac7c2231333f64f916f292b72623ef29f77adc3b4b
06b746dc1bc5ce8e8510b553c8de4b7e1530d37e66ce8f2f01c54811e929e41a
809d5f590dfdf2c77a556076f649a5f8429382d9374048e4ccb3db4f681c0b73
6d753b77987fcf29a52aedaf8ee39de0a0050f9816a9ca5371b9b021bc50deaa
77a9dea9fda691d1d5ea0caa0d4e0339538c63318a68ca55b8c47cbc04f89280
b125fd2a17edea4d161c069857564e91b6a99c0fb48b7d9be1af6c589eee556a
4aeb06ecdeb3430ef7c44f091b57c901cb6b0803d30aaca2dec1057574ab8593
aec0a84de2f5670c23dad3d4fb71413cdf4bfcfd92afccb8b601237a023f2572
8aa89a177089b6388a8443ad222cd390695b6f04d189296e1b27ace1d7512726
2be360fe430d934d5a1444a0d7733ae29128a9e6d78d622a1a1468a161f701ce
1e1bc7aed4b610bb5df02936d00ddf242406a2c2f631c26c360f9f8f3cd05935
4519bf44527f0f71b36681406f0c2361eb9847ae549b9eadcdac33bebd4e7e7b
44046b04e201e47608fa9cbad7d76f160222ec37b5591fce1d09bf19c3920294
d2763d7b722ce1273d498e985e2e720ffcebe935a6e764ea7d5f920e1461b544
57ee0e00b0806c4d18b4400415e82b559701558e2bcbb810545ab5f69fdcead6
09f12892bf109644562291338f2aa5998d61c22ef24587854839b8da3f92defb
66036b0b51b024f93c69b58e6d31a86c029ad384336188698144fb4275819655
3a98baab860109bacc7c895bc2bd6553ba7958ce0600864c2f862cb43162e0df
a1149c50d93e06ac53904860fe2a06c9c5809cc36d02ca1021049c55cb3dcf0e
66a0c9a046ac38d5e1d39451948e4f18791c58e8e25aa38e2e339958ab1bd1f8
88f062a15ef7253c22bcded4cf2a03b07f1a872e4016e46fa549836877d4d537
c78628ea9ec54df0f641e76fe6a98ca124dccb0e1dd6a50b93f12b1a0730374b
c0e295c61022ea724ba23e8e1d978f0ba7b694549369c89282de5109ff601378
c4dd6d426dfc8149afb0cc833eb36dee961ad2b255da309df35248d0d6b5183d
f4777338e219e339752ee94a2d61c12c94a26b939a1ca2577e20b2b92216f04a
b74ac9b966cbf2078e5b6e6aa77983adc4f82b6eb817edafcc060bc7f77a6c69
4aebce5ab252bc0d32211f8f2a81de90d6d59cd599a303bad58600986b379961
e4a603ec5a2be19866969502ecad4364ae11082edc8ccb30a5920278a2410534
6c27a14e280897ef705ff103f4dee4faf7381b7ba96d3bef45b0ba112636c033
49521b90679b8fa7497d2f452f221d21fdaeb0471ae0306356c5fc8a0393db35
5d24ca09028727535418bebfb3b222110e55eb9c73917ae0dc1387160f894448
c406d6ac29664e6ed4bcda6ab5ad6d3afd6af59e221948d872d817f37e866404
36d35e7e863ba55b1e482404fcd59a1e1b051df88114f33e2b0a46bb422f7049
258bbb88764185109dfd0aa69323c015518e7ee63ff0bf4f7465b4f4e07a84b5
24a51ecebbd1ae59d0c0eb58fb35ca69fc71ace84ab6d01220fc92cf6b4d86b6
c6bb95419743eb863fe3fe08e91c183604f374fcae6f711a0a34cfcd78ddafcc
a0be23adf3baee880bcb3bb1d9cddf8dbed37dd4f5b1b9335147e9cefae8ea5b
a15f953f0931cb300344aff7ef6fba8d8d9eacecfdbd14757744e9721d6c7ba8
f14c72cfb04ba30b94ec94f71a1a393e7cc89b5181a120dcfbcf181adcf34b81
4c71600bef517d5d210183a78f84f15190c7a4e123263e3e4a56e0484bfd5715
1fc465546b966663fb7741722744131b81e6cb8128cefb35a359b22562e1758e
9a21848f4cb5e1bea494da31c7faa7d1c8f805718eed85490d82a72e7c5f7ad7
cc8dbafacecb550cc2df49e7ff3ea38ecec86a89b1cb0ebe0f67a837009a9d2c
30a7700bf71e85456dcf6b82c36c92f60aaccb49fc459c3e5726905894276965
d5a15fe3e97264902801f53c622734d5d1b90e909f83680b425524ddbc80aee4
8b6902a72043ed9e2be51df9457d0f2207379f46e768491909224b6e36e91211
9748d454247e73cc2e48aee7558f96e13a7a707d484dfb4312e35b765720e4b2
a688aac45a2c7b1796213ec8c7471505e609b23cd0a4b1f056778636c4ec9cd9
c04284337b01e88e3151c40320cd36db0e2bfa6446b644829f771bf55fbe7474
74f42f3723bece5f36c3d750636f890f5132e28cd5a4ac0c57dda8b05372de71
ddbfe1e0755915a08fa11583e0656cdaf6123862bc65823d71dca94282fd3aec
62651e05279170437477b3247eda26be09b151e80a527a20a504cad52a5cc44e
268ff80f908ec2810b3d53ee131d2fdf3337283d940b80b5e775b9f269881952
6e68385717e95fa7c1e2751b7c0ed7c886ae29bcefa4de5ff0f339ea1c736e89
c80515ff5cb77e35e21afa38beffe9846b714ba229715e3738cf140b3eca9000
5cdc8fbc9919b290cd0f9786e2f8f1ce994476d900eea4bc2ff15f2ba57ec9ed
16cf3d4a24df6a27798b186be0189e5a3a1c659fd5b9d8709aa3ba4fa28e7bfe
16b0c7930fe0b502abf4468292a6af7bf10186e489fed1633217b895ce656ba1
ac12f12062b687c2d86c5c72d1637a39ae3e8ea399c9d23b8fdfb63231a36138
8ec8470b3cc471db0f480a8816ddb1f74b6b22eb498fbfa1b3a73d68a7167279
fca5fd05be2409b5cc029e09400a6f3635fa5e808a6a6f8076a50431f79daac5
e3f2ac1410136433353609479385f6e341a35423418252e577c107ed2519ef22
87cfb8eea107070d1808f76bbc43c09bbdf715941081b36910a0d8d54becac0d
d5c0951e45242ca33acfa1f3597107f551afef8eb9c53c8abcfd695ea3e21007
ef796e2169dc2197f6c767317a386a0ed8a3d1de9ddb1c262f657484efba7707
20de3bbdda04638f0e4f2c17c7fbc213bfc953a9f88025a9837510033b86f588
713721a24100cd7d2378e18634367267d5342fd928d4e3678255b6147a55dd10
5d27ab4d9f913a94f29a04ce1d3eac701a4755f258309be67b9b49beee412818
f29c5032d33bb230654ed6a7a016836ad7a5190ef9c8ab108b1660c6885358ce
55628a2060e22a8e0a8b9365f09396b32140462b123faca9db24d290d8909c8c
65afdf603214a593fd1d71b5c4bb7a216e5fabc53c525b0a1e9345fce8b13683
7505b247403343f7349008395ff9d3d8861b0dfe14141bb7eaa9f0440fb3e91a
fe8d388bf6a117385e1f4fe5690b66b7ab831afa22369cef2daa39dd1153530d
fae6a71495c3ac63874aaf3572448c1bdcb1e72f942d5d4661742411cd5bdcf5
15f266cb48a84212388d7350428b886bedce503ea1b7ce9bcbe63b7f17879025
81241d59eca4f02d5435c25b7abaaa678369c7eec98d84931616a3465620b668
8b5996fc3c542c460915eb568b43f8f4fc0e691da8d6cc6cea1647f29b78c377
593e23bbd9a40e80a917fb5ce22fe4b3cc786153695e9199d006a594d7882281
507bee260cbf42e417547989842fcecc66d2188145294afd78a8db7d24313fb1
062584ce7415a00d98ecd331b51dc88e41d1a840d6ca66c5dfe557144cbee5cb
5e6fae52d42daf40655d36e98efe15daf93cf62ac54245a3a492a63c048404e2
4927d48981a725e07c9b77c1675165fc7cf2cee184aef0e0a4edd4ab455dab9e
e52b00d8e0c4e04b4f8c9a9218df037e2ddeae33c84707080d9c62d53943acd6
9441565906c05609807bd6525727377df4590c3cd46cfd2f1557ebb7dd6bda5f
9eaee5f8d8c3e1dd9541c1285a520d92900d969295e099fde19093e0d266c4ec
dddfd6146b5c9a93ba34bc707fdc6b61fa7fd001b38f681a26d12551ab5a9606
afb2a9b3a1bfee5188861992ffac22ecf4e94ff84e52966c8c68d0eac796fcc2
79b9018a5fdbdd71baee91273061742cf060eeed387e760eab06864f4c638618
480089041fa599abeca15fb2c5c29220848574d006d757a656b8d537a4ce4a54
3e6eb4a6dae1af647b169dc55df7c74d9f7e5ceaa06874ec3a2cd888c7ede4c6
0368112e3af9f8473657077fef61c0c60742ca6d6f7c7088ddc25e5e8f33d835
e1c8f6fa7fe1b510cfee3fe5d288b74fbed3e6c9357d1ce5232a93ec887b5284
6176562b3a591ee0b10bea9619ef1ec6972c00cd4d8433d6f49e0e8a4783e21b
8104288c8fee47e7e30c0638dfeec5a4bb4576ca31b1a9c7f613725db3e29020
00aea1b7f963a7477c5e3a1daf78a92f40da2651d159c9577ddf3cb8fef48bcb
97c501513ee52c10c4dc1b2cd4092358cf65535e393f2c78b1d07cab38d5ee6a
851eb8b01537d9f361cef5c93cee3560299f94774523aaa196ebb8c4ce8eb079
eef5a79c8b2e5e174c5af7db0f049416fcb46347bf6f316241aa13f8c0ff7362
2722215dc4197f72b9b77ad251eb66153a30678cc78e45884679e14ed9bc59c9
cb3a655caba4415f95fd4342b46df509035c131f5b9f9a0b4a3ae951190cf9f6
b0b92148d861d5a145b9f14c780a07fe92dccd7074607bf974cc0b1b7c4614f3
7ac5654c010ce899dc16bf9a6bdac5c75d10c49da1e047abf8d43aaf0a2ef926
008a2cfafff3565112378481d86b0c77d97b475a1a95580a92c303a2870a1cfa
8aaad6d7bb94fbbb1ea73a9535a350ed1f19addc2b1f5ecdcc37eee665775243
fd12b9a1f53fe42787cfa4823d2f75a482e332c3de94fea3e27313b2ccb9792e
55941222371231232111fd54125231d6fa6993d40d7464c2787e71aa21c21574
826b098cc585352d04ac745683296a243ba89502152d1af98c165cf24731acee
284dd319d8a1d40a7d6a2665dbd4dfe64d5968152eff506f908b4ece6b9eda9f
dc260616ff0666070820b70d20dff629242907d7afbff532e19a6f5193b38e6a
be7fbc3318a11174223e6cc0f202d540fbb43683c6129dda782da7d0148f609e
3e11ad334a91512eb9b1aff9c12610e9b9452985b7de5f506b49125825117e7e
4d2ae083f6f6cfd05039496fec6f9f2261e790827b5cd79648da62f639bc6c72
e6d6fee6eed622c5fe69a62702b61595be0e9f2b385f5df0c28344a82e85fcb0
cd17f310d72f910b21cc5d6bfe0370e78f8fa7d96d9cec848024cff02015880f
236f65ac4fa1d11f55745d1f02f3d98045c3c35363a1eb6a094830cc55bf8749
729c01001e14fc10ed7c16f26255bb4e1a82e9d245e8209e7e0e3df287c15060
3ff8defe8f6712b8b326b57e26a2890024a2ebde6bd0f0ccd2308bb0386efbdf
9f0127d7bae7aab1f3ac5e47d7a761c79eb4bc5b8e30c10d8091fe648a03bce6
c1db46a6d75b8a8dce063193f19a2761c72eff801b079008f0cf9a5e91cab0c5
aa6cde97f972e9f1fc448f8d250b4a7219f7ec76e81e8233b0dd4c795582224a
cabe9b588a917f3d02143520ea8815f22b81c3ef002afbfc085c274500de3533
15aacc1db358edfdaa95ca6b09ba2e3679b3b58e6c3598cec4e29f2d9e657a3b
8d74d7e41fe68b615fa1eac83ac7ee7a9314c40dcdc9d4548a3c7f1dfe7e7ced
beabbc300801130afaa2a429c0c87ab78ada71e97e00de52beb15bf84fb02930
54890ee2e0093a429b3f3adb60840ca1bbf94031421acc3f3abb681ff9fa8fd0
2a691960a41a7393f6944a90dae86c9dc9e8c11ca21ad19a44d03d5d37f7ef93
5711835e6e5b133ee744c879530c60935c54ecba4db0115c19129ba7c58d0091
45ec9c4e35f473e28fab82c4376d1158adfa80e4f5478731732ec365a581461d
4d4b5c4eaf282ea6cd07da69fe67bd95beb82c8b7a64335fc5ea5b45f0414b17
0d2b6003b2495ea3e986d34a367696ebffdcc14d8592d8c155bd6e788c1328f2
33a347cabad7f9d525ae17cd53f1c5b159c71daebdf6abec9ce27f36e1b82896
293463d096e217e1127e3ec0f226a5255cd0e73a09c3f5991fea07d7c8ff7f08
c2e807b122bddd7dda93fe5aecb111875ad316d28faa9116a5d9f044eb6e0a25
85c0de696ecba3e55a0b21438c7fa7bfc259c8e3e3bbb1d93080571211639c5e
47531ebf4201a4ce775ef4ad0c8a7dc0706a3808e49f33cde62511510166126e
286c171af6d0290b2569327f85b28b8758d77105298cf4266158f5cbbcabd126
8b6371366f5ebc5f80ddeb0a51171e60168462f74b320c35b14fa897a902585b
e0dcabfa68b79726883188515e9e6f82fd74ed8f5a52f17e853b6db88493c60e
160d661f270f702b0f63918fe922eb07fd6a9036d1de70504409f519226ae09a
4d0096a51ad85ff0d4eab84979b127d3800446d918a4b192afcfb3296f860e04
b8fdd3c7187cc6dea26f68069055b9be0efb4dc5862972e83518eea61c647778
b7fd0802163b8238ecdead199ff5c23e6dc7328defe18fd837a752169382c303
abbd12ef77199260bdc6a0568568ef1880418885e41e439a20c72c50efe043a7
e450c7ebfc11e4dfdd29f09605ef7e03f1bb968b7e6e84ee328feb26251f493d
b83a5cd755bf2204d6d37810002b0a67cb0d45d11f8389f95c01a79d75412e59
a30374007f5468bc30a4eac724ef156a89de2c30ee194fb3d09e0f95b983d05f
19c1a071f2b498845e6d140f50f117baf6fa767637fedaa2ce600813112e874b
5ff97ae4e7cc247983913d2137b2fd206bd818d872e84c6be75ad211f3482754
fa852d03eb30dbb30f0ae27f4569b6f030f48b34c1fcc47fb5485a025c99b480
025ce9997bb4849f6957bd3bc6e66143f7470a2d4dbb393392a08e129b649e85
d7607f1c208b6c3f8295d0b50424df90a2e7584f6100b39466dfd0761434a5ff
2a3a441f1b91b5c255033a2a9aea495b1e063a9b3dd84ce38db270003e374d07
e397fc62ac754c6cf298eb3e4fb358d02a9bcfae2016ae6cac0c837405bc4195
8f542885adce9caf1d8c09e36fa99648188d4ad41996abbd0e2d7a93833749ad
4b9b60789ca9d147bebbbce10693537cc962e5f366eb311ec682af042e1794c3
7ad9eacb27a715d6a458d049d2e6804e7a5722d4729785ba971ced2aad24948a
6a076ff31d64973a361f8445e6a819b5b6747d3cc18a761a2c973a51dbe34336
4248e189d150bc7196367a6f4f1bec5c3124b5ad0c69ba1c65f3c13bcd68f9df
fceaf030ff274b38451853ec24d68ca601d9bc12e3ae105de7e3c96517f4bdf5
5679b6b08fffabafb7d9667eb55c5e769ab5e8c93319e9ba0304a4f56a5b50ab
fa133656ff8d436288d000f13703802eee84aa0b633dacdc2c95a5fe7393a49d
0440817ae7f96230961decb06e7a2f56fd90b25a3dcf2da81d5a5281e8df8455
3e6fa520ba58ff9e1a9065c60943e7a95163aee48348093a8901466b634bdddc
f378ce68fcd9c61e53cc867ae24772961644aba52ba58bc340d482495eea6e0f
47a891ddbfb600d68d84fef3a49bed957769fb83e60f529d9ded1403b145c7b5
049fba6007088bbe33a752681163cbbc36e1ef4c7702f75587e7f02f72124073
2da56a7bd0ca29daed6f1c6a412c52d5043d462cb3fc15a56cdbc068729c59a9
5d0b542d726bd7b109bea7291293b40ecdfe8a94761453b77cec2a39291f79f5
d9701b2e50494ca848eefdc80310d3384cabe82131a632da7da060a71744255d
43acbf2495f909ae62254507d8405ec11779477b825a823ce477457743c9ba13
6c0618a27b0965cd77576fcc64fbc3fe6731c9c7bbff32b8db739c33868877d1
1f55b19b19f0a5e881f29d692f8e2b1c31c76ab29a0c7655c2391fbbe8b2e108
9020f237119a40f42e9eb2a6d2de80e4edc4bbb7c642d0d35ba7cf8e3e100bb7
0f44d141e64928fca03f0c2b12535177106aedcb1babd47604b708969facc98f
aab899f480e68e38cd1d5ed194a2ea321eeae2173d300585fb4fdf51e79900e3
0e3b442b889a44d1454d6406382422781bd5c888f996bd9c8b65c2ce119cd500
483f8380bc0562b129603f6c1b0bdbfc8b9fc501cbeb27c06fb70610169d1009
d8743f059f82c7698d31044d476a086eb3222ebc5c974b06c80058253d805c01
6cfa8007f2c87678238b0b1b6dd524bbf119d8300a68ce8b1df18713f55e585d
c406999204cb390aac595b2cda8c0a46daf2eba065ea07fbbeacbc91b446d5cc
83f8078c4983a50673fe58cde09f6a56010e48c9c69cad569b98b9b2be7eee69
f443ab0598f4cd0023bc98a1b8d60ccf482524c8f90d84b9de487fa5ea790b65
069c912efef05cf64d2f55e9e368427de0cc8a4562af52bd7edc4bbc05bbd86b
57202f8ac32ffed162ee7b189a8d89401cb55f67b29b66721426fa6b288db7c2
fbedd7d88dced3fd11cd38fdc64ccfa9485c82df206437c6c38f190e09dc373e
ca377f9e9e9aa9b99691db7c586e562186ac6cef4a1896103c1098bbe7ce99c0
b8d8964e0ade535389052d2c5cbeb509f949e7564d6ceec1f60f30675e28f0f1
cb2a124b24805e9f97a4e0e59cfcc81fc14adf332e918385f753d029af9a980c
9210222c33af9aeb4d212495157cc894a11c51383fe1a87b5f4ce5a1268223b4
173928e635ea861efd91c9d01cfed3504da5576218d337063add5a40993cf046
13db876b2064a4bd270ddcff19c8d497291d6360ee5101baeb301bf3e7271743
80a5159bb428fe82f70ffd519f7cf54b5894bf431c81770bea7ec2bf82c69108
0176dd2208f10d9c3af02e7f8d32bf2a6ba09b31c52638d0ec4e599b41723adb
29f763c971eb75d1775a425f3dcf6076b9c1e044037d4bf3e3c0d6fc922e27c3
fa1a60e55c5e6705747e85215102fbb8f4d20faf625b8b559e807de6caeedea7
6e81f6b09cb85d07bf959f222c4df8a7a546af0004c8fc04e6a17e502a7b1c54
2e8b334569d887feecc915bd914b8ead1f591e04d639603d7b615883bc8559c9
836fd2cca19002b52c36bd3a6ddd10766dffa04fc50455005ae6f34d2613376a
1f3cfb5da0062bb08de4a0eed6e1419bfc76869f583e8d924d59bad5410df084
78349ab8b7256e7e32caa8bbdd806022c1ab06f4ce64fb8eec3646630ee47e0b
8282e3387643518fe7c93bb2e4cb5cd1efdbe37e70498a1c4960556481e02853
e910c169ee0ffa0da41c0016e083e7d96d1f2ef9a7a0d6ec854ff9afbc7a40b9
4ce73c7af924847b3210fddf58264ff4696d9896b766c48049a17ef6165ff1b3
08f74c41241eefb603c868950412964a4f5e3941214adccf37d2092cd8fe1bb5
c5f20c1f6d2bf27f23822d73b3be40bacc1862936428984a2941ab5d355e247f
296e3ef59fb80cfd1caa3b27062d8f01c3872e6170d2b64b4fa7e5499b893324
d91f2bfe5bf2acfb46846c5258d4c5569a18befbc8d3f70698bb66ba4adaa6a8
c83ed1d8ab7d6291debc210b0395ef8f34e5faa1bccb5590419e7e051bf8da6e
a66c1afb97f7988d39510c9d5cac52f75557a7e983a49739717abb0fcd289456
6693c7942f1ead0dfab21c7764aaf9032bfefe0d1d2f50376eca26ea897ab1a2
173ce8cd6a455e1bf38e736c1cde71d6f43af92e89ee5958b32b4662a488fdee
b5a15cc90d4cbb92985c57525e83c0ebbfd42d3ae030ce6489622dcac5ce2f00
3ac54d2bef502e10f8a339cb6e8fe68020363b2fc70ebc94455da82826c9ddcf
560e7d469d332fb60254eea832c61687884f2426b175254e2c20d8417b92befb
7d9a4e9ca28d8dba7193a437dd745532a07235a754b492f83f42acc3b39617d4
609ce81f50dd850c6d7ead9304e5b6875cff8b92a9283c819735661ffbc0a3d4
6cf9cf65e3e92ab1ba1c27b6168a230319c1e21c2f7653e69be3a4ea7bf0a844
cbd83d6bdfc7c304d8c112b34246d01366765a0170b412890f9d7b59cbc9140f
b966ed30d1408938dcc490d3a894312d0b8e64d5b778cb0a4bb76ba33602ea39
db618db1d96d321024929be9bfc27d1232c955ff57ab047cf842ad43a13863d6
decd95d807d2acc0e3aedcfa5f0fe4ef575cbd34c14ed7f0505daebb66cfdbda
86e46260e041ef9f1fe344a95273d92293da2d82afef11ef3ade0c7411ea690a
bda37864a8b57a0ebdfeb08608274e42110308280255313c39e2b528b5130003
1baaef6f7970da7e1fc1779236dce55f5d56fefeeac81a16cf0ced0a6a1f6f7b
ef9a01bd5a1da7186ea79d8b4645010acb4b0a61e4cd39b7eafe29dc38dfe19c
c3f1a44fc62f8f0cef02cb48c74c668d6e7950ff4476fd5c6ba2eb89aeb86d50
942b609a7e9584e8e2fe3be9b4040e81a464add9e05053ebaa06f72b281e5291
5a75d152504f7661d9e153fabc667a80747a4984d3c8cd28d78db18495a201e1
2227e9d15f9bf8ac1974322d944d31d977271edef01b2c10e0d5a182ace95799
dd15bc66eb4f0dc491b668ff5c4dad122fbed7926b580a4c94b41e5735ee98e5
3259191d3ac1d49c80d9ba8f872ad6926ebd8001229a2ce2de98eca8f1761f76
d86c10c1fdf278435a346fc65d34c4bf0e2142d662be08c7d672f05dcdbc5536
3e3eb0e3f3b697a616c984d249d4aa0ba95c6233393d5e6dff1d24448f3ff96f
a6bb3b77796ec4a84741b06babc44425d59d15b219bcafa76874ac6af4854d7a
de921dbbdeae37b808ada00092f180724c00041de0148dcdcad231fa74f584cd
861e5e5c78d9cb7e4963305f4fe79418e2e120bf218fb26ba0c10ea1dc40821e
9b8844c46d585deff1dc8eb4eefbbb1972e144a8c1134527fbfb96e21162dc4b
2b549338932ebb8ced85b2b157dbdafd291ef7ab7ab6dc7cbe6ae7b3c2df5964
9315a6155ef2a0d372f15f8c9f9b60cfb43ecb5d82b4aaf414417302622cdb72
8c44461426d0a40983ece01b7d442118550795bb3ea49dc2987c2feb4228a13a
d67e5650d5c9b29d0ddde14f89c2c6fd20029583d613aae151ca448269c48bb0
6e666aaa7f223a83975abae2ab096a6810b84f873e5f924f217a24083c31a6e9
0b8738483a2d80d6fb45016af2563c9555f71b3e391303943a4806fcec2041b2
966646e935014828af854fdee38b4121cd94cd2b6a070db921e7a3acf6e4a1fd
7d9325b998e10d09a1400c0067d055d724d91d86aa7633c89be416c8506ed01a
d426df8f94adb6afe3be5ae5c279eefd853280b0df06c84f2e4c908ae6608526
1ce9f3b3be7960014a7da237805b4c92eefc5c2ef0a4865413a75a7fa2b460a8
1f0e52798cdf4de0fec1969913499630353f018e7c0bd626fb30aa7867d6d1c0
eadb50fe1488ba75b0d156d529dc0a50905c134d95fd7a800b692fd57203b33a
79325e1357be11ad870bcb75e70e3aba147ff5f8665e52ad9a8f7527e9dbd0f0
769427ef75d0a7f4ce5cc376d5848bea4d24cddb7eb1e1f4445c6827f2103047
c521e9a859e5783e68ddb3acca095b35ef5233f62d563ae1301f97edac9b29cd
69126bc0b69cf66f90d7e00f93dcae5706427ef55ac9a32cf77098f7f3de381c
6f278b9eb9f94ab31675ecae42f777fba192004c212c6762ef68a68d03a44d94
3b6218af8637c818812d098176f1de8b14d66573bc36c7dc0def5b40f00a6b86
be6ffe379b280740eaa85945ed9caf89be8c024846bd58dfdfa2db26463ef4a9
3f786496a9f72ba0778ca75b0da637659508e4ea2a2285312753b7b8666125bd
c049a5ea9eb15cdcfd150abd27a206e3233b9a29eca0af16e2794f815391cb1c
518c55e438665eca673658598db22a8d9ef5b18c76d87f2cb06504789c6b0918
1c943a69b8208f9a46e45592e8c26be0f28cb6d78005e82534bcf46682bb6954
a95b9af630
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 19 /acute put
dup 34 /quotedblright put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 94 /circumflex put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueXX 5000792 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bacdd6500abda5ed9835f6a016cfc8f0
0b6c052ed76a87856b50f4d80dfaeb508c97f8281f3f88b17e4d3b90c0f65ec3
79791aacdc162a66cbbc5be2f53aad8de72dd113b55a022fbfee658cb95f5bb3
2ba0357b5e050fddf264a07470bef1c52119b6fbd5c77ebed964ac5a2bbec9d8
b3e48ae5bb003a63d545774b922b9d5ff6b0066ece43645a131879b032137d6d
823385fe55f3402d557fd3b448685bdd20eb05d5e7c2126132e33a59a7170609
dcf4871a5d023c9ef57d3362d9f2d7a440bb69bf653364105f16f4d0f03582f9
aced3d05cc76489b16e3fa8a446094d30038b06ecceda269f2eab9d19a99c7f9
39f9548f206c5a457a19270b2b82c43b091dfc5573468eaa3e7a4a32f8042891
d85e4b180fcbcb3091d2800e54c87d84ce9cad6869b5aabbbe47f40c68799893
d22b765295e1e69e33aa048b7ed98ba480ceca91f3ebf8ef85fe9a3976909626
b95ac5940d53f9b02215d84a44837ba25ed15cce0d504f1d335065594f3bc824
5405407591cccb11cfd4645da60d960c0b93f187b0cf7b105543c0b70f89af5d
264b6c026e3ae646acf145950202ec73282111e3e601cf2bcde22ce3edf6db23
516481420f26552ff4472d749811f27768150450d0d0ebe3c79f999e99b5c0f2
2eaebb12d97782b1bd91b2a1f62a76412548ad53c0dd411d4a08c0f071c2c218
63d9adb75a4621803ecb84c2bb235b620b658984b2d8e0c4637e2811bc8f0d04
6c8935afc70141e1b2d9c23bdb251d304b3378faf8928bd09686aa0340fb0cb1
dc48c996ef91530ff078666fad227a3589f50b605267212d3a65ebc1019a8eec
9a0739a00279471a01e1505c17658c10030fae32f274fdc8c8774b0d5406c384
a1d17068dcb0c2575c562fdc5a2176609bad9a2c255e426a4325a4fc3053c7b3
2f35f7bbc9aa50135f30223360fa2fbf019294b2e1d1405e078341097090ddba
1561f22f8738fe105c0e3b84532bed145d51428c9cb1807e655408807dc69161
1109a98af82680d6dccc987cb312835dec4ea0645f47a15b6707d654ae54846b
3d3301d61150fdea8ae2da33e79976812c7764050a3e86a2a819ffd3c64c38ec
16b2d0bec3922847fde375ffdd82f8f8bcdfa39c53068da393b35277ba7af682
9e48b1607f22eeefd7d0eea93ba1e2fb9b5ecc6c6fe1075db980999f0be7add6
e026230f4416b47adb6a6c0865e63407f8c52ab548bbb502117245c72ad476ba
d878ccd9dcf755cd6a3a7cc97470634e3a33b79f407d028b8366ac62d8f87dc1
a80a9ba740349732ea51e286ee2b305775602a78bca0975e3e7ed529ad24ff48
e06c77a4eb1e0a43af0ecca1c2e1488c0a89f11be408260cdec99a9a69d4230a
c89bd8759e55676c4d1aa7938dabf72f730eacfac7e6fbdd37e82a22da52e5d5
9f4578bc5e8919709c8321fb35911a44cd22d37a0df0ccbfb2fb44ef8351bcf5
ec1fbece910bad3e3c8f13d50ef752ae3cb80112a904bb2d54b851d17f261ac5
394d611e0bc32dc42f17676ab3b0b3e8716b63f2b70397d74b35ee0d405419bb
e4f98ff1ff49959c584762c8e93db65978d4d7b11db478a224286766c2f37e08
e4f076c4938ef80caf469aceb28c0f8b511c5a386822184582ad152281a51da0
403ce2b8d8b2eb8c399d99393f979dc7f6dc21ef798996ee7eca03f8bcc84f9d
87b282923a8d6a0a1081e128a10326cd49aa0d1e99436b8c696e00803228adfb
b144f08e86618c2860bfe07ee4aeebaff1f1f1429566e0a4a73e40cfd301d22b
656fbda8f6b5222715d088d6369d35aa135ecf671c3b487a7de62a2acddd2265
48f7367a5ddd1e1062ef422c048e731b43cef5954ceea1a3b21cd00a7ff60b42
ea1f07e8c505691115550c25c2d85878a819593fcec2ddab638bd4d5e4a01d61
44634231becef136450ea049525a17f03e0db19027c388856dfd05f1098e41c3
2d9aa83ee9d64829735007d102c11e06d2635663cd3d08781b9df1af66919eb6
032ff21895270a9bc7f7998577df83bb87ff9074d0a3d394181b35090f7db6a4
d1512f4aa2c1b0a1a3eee43566ddc03183fee9fbc34d35b3481ddeaecdb1be3e
1d4162d2fc733bd391794699c6cd1b1fd2d5b67e7e572143311c2472d8d31983
daac202871044900ab9ed05ad95bf6de9894d75353e7f7adb7e4625d3435144d
742a015538e7f6342f06b4e0638f186e5fd7ba3fac9e0e7e68aea7f289231cbf
914f20b4dc1f21270d6d0ba6257b646ba5927560f952721fc88f232b26eea890
496ce34dad6159090d988077e2d5a1c178bb46c3754fd7b37add7480c83e69ea
3fbbac34ba0d1e8588e0f52b73c9899bb78f949c5442da10e5ff1a5146cadb2e
c94670aea3dae186f760a1e26ec0ef60d782d55fa5c59c0c4ffea0519e4fbbf4
cf1c777cee9829ec63c43c1532785de91d6256be6db8d49b8cb6cb24ebdb2265
49f9eb4ea9fa92333e3d559a57bc4cf9c5d74a5400e8ce420efdc87e7ca6cbb9
db542a1c688a51321529ac808c736a1900877b2d14bf14601fccef11baa8689e
5e99e5ad673990b7454caf3d41f96eff1ee1424ca66bfef4506cacbcdcde91d5
ef16df706c9ba049b54205e519d67c8f21ab05b3429969f6439a6db8c04aac92
38ada119768a1fe16bd7cdfe842aa746c012604eca1ff62b8123b0c1f6c1b666
efd7983f77f459196567a5cc680a8a5a61d206dc5e782ed751b2fca8f4042f27
d59dad2575cc4b926834335483288c4c0f82319d0dd17c6f7c3ae4b84fe48a36
ffbd1c63b7f4af3b91faafd6b28c1ada79c342502b5af6d1343f2b0b88319a56
828fe60b9ac0be261d8534bcc26fa9d924e3da648d72b78247b31a079186f2ee
dbd5e0d2ac96538ec17907a6784ccd914e86759913d2f438658bdd34db6a6897
e77bc74c284e803446574da224781c7a75d56d9586a70ae3cef130b256dfdd40
6d1d6373b1d653158968766b597ee9c01cf91b3adbaf7b176e520fa219b76ddb
8795a78ac0b3342cf39961d2f9864a7892c333372a4272e4422e5d9154506a47
e7a63231d83f494808980c7c3791125542c60842552d6e224765cd3c41378ec6
bfe88d72c2013df7e8b2c7471be8e7f14796d3a2e595e8d775a4c83c110193fb
2a378663b12b26caaa240e2f46edb6ca513aa0c9bc8258d97041b69443b1df10
dc13e1811bc50a7470b9608a6977fcfe7c14342e791c17c877d0217f4c84ac11
248daeab976ffba56f5a6af7bf3e9a7ccf1e913126e4bab4989a33a781323cfa
b3c8e5d08ed0cc19992a4f7928064ceba446d4ddeabb9e7557cc75a51e4542bc
33d8681aaee956eb0a90f392a6c56617d05883911c8248f1c48e91ffe1736104
f6a1689a2e86febd5c027892102a49e609501ab1a60e3320e75db1b194e1833a
d036a87a801090ee0954fdcac8026f2d4ae000f6d3ff2c48ac633cf8bf91d019
a3cef752a008efc5bf98d1902134d663205c6771879ec8b6508f2e94ead42832
12e27538df7d6c5a2564205aaa6e9049c63a5c7b573ab86788ec11781b19c50c
8549536f39f1402ac7f59127673d43dd14f5aa6c2e06f797fed11370cc5d45ae
7016b1290ce15ee86c25a1383f05dc12a81c1341fda5c18c1c2416af79ce067c
77168e89574ab61b211135fa88f1e0cc0eee01944147cb0f41c1416b4efac15b
7aab47388aeb556e4e77fcdb0e532732283d454713a8504b66d9e66379ff5874
3fd3eb6b4a9adb52adccf5331bdf98848330a3c5d11707a21f38e9494f8eae37
0a13908bf078cb7bf0b617342ddebd2ab722b654c59f16a32a15ebc13924c59e
73a85071312ad5c789332d800122b7a2e72167ab38d09d3f2fee0ce19b193dde
f64893f873e5fe25f768fe8323e849b22371135f98a04584d02fb3e0de44f901
8deaf90f4a1bacc6a85b3fb018ceea0b91a00b49b8df4911326da3dc1efe2fd2
1d5afaede6d104c65f6b2ee6be770effbac480c9b0c72010fbd2c693a2442325
f6df4f3b0cac844402bbec3c13823082b19569768b17febba2f3c82d3decde2f
53be26067975a2e187d466a3c9e6a5e47626da0ebf0a6048a4a1ca6772b662f6
83f273ad56c9f62c0af3215df69fe39159990c7209e047722f82a48c901872c8
67f464d3050a03a873e9c60595183e5ee725d7fdeeb3214c9e70404f5509617d
293b1d8dad36bfea6ac15ac8a548c02c7f7882e81ff70aca5ab65314396f2b84
3dad6f3f4e452a3b95587fe61271f6df0da17d63a2f1a92228533915e93f0bea
6d1cf8ea1b7164bcfae5cebfc08e7cf287509403df70934e9fdefa172802aa8d
2190205d3e70e0a86c714b6c14038cbb7711ef9ac262a09d4df09b137ee86253
a32939b3e3aef9c50ecfd6375b05f78b3db738997f8637e14c54047cc6aa081f
2f070bdb32c03d008473438280c5048b1a959791ccbc7b45a1d5f508c93e50e6
604d1106b8708bc7cd91f8ab5d99c33baf1183230eb49cb3c0bad665b0878dc7
d8d083a6517f372b644a842808cb873ea5a77d7a3093250077f3ddca3b5c2724
34087b7213b0298ca2bd994f0032e4beb3afb57b5516378830d2502a1b8d0496
752ba546d7db229d2660efe8a0089ffc2a4941c9805ace1ae5fd54002e5f34b5
2151052c8b4bfe617bc952374b6da403254523659ab9f4f521b126f2d43b5b06
c8bbdf0986a4856aee8939bde62de1e8b62fc49c00ace734b1bddec4c0952dab
fa08f2575b466b303cb3e9c0a267be450473b29b586b8b7ada494639c12547a9
e3ca31b90cd36a7522401941cd8a3b2e2155284d7e24a43b783e68e07ba9e89e
69e3b438ea694e7a03c08582f9aabc3152843dcd2e1c77e616a3538ec3e5d9ec
9d15c91ed891de4a24df2a05f11be60d4ecd40f416ad393d3981ee18a988e38c
f6dd6e184609b8c2663c9a70b613bb2d7bd1db7b9b3c972f6bff935e50d1eee8
594757f61a39e0eba9d962fc39eb79bd8bfd19ec5632901774e26eadbdbbec7f
d667bdda3afc9f885cbc6bf5bf6d5ea48b228c9870b8699c82929922c05f9f0e
8553c7548305156e0e9b9f27dfb8f7af95657dd53b0f0a8f4dfdd182badf1fe2
9f2b19dead332ac3e34c2ad91d924b3b4488026bf05c7f3c6cd83c75107d94ca
c92f60cbe935be2f289df64a82b62e2c8d13bbc4221ae84f774ba0ce60c6a5a6
7851b6878ec6a118f93352de2a2a20d2618ac4d5c63ce87ddee646b4c03b7bcc
313cdf959fd28a58cb634dfabc1014f4c2cd359f770de941aa562da5a5f173e4
8420731a7f6f191ba2d27ec5060af54f4530a1c25789866e3756d24318ed755e
df7be73991aaa11056bf612f86c8af64246d0d2fb3d52d7b41a34d65e8f386d8
1d5b85dc052e2e45e69277840ce3d56070fc1ac5fb4bbf5a30d6920c864e1ece
e35d29f6e815d976b7b3557e0ac049d79de9c860154834df92a30ea5dbd35b88
619eed989a59ac0ecd60d16c1d57f471b55a7d97a41251e6119b4cfb4d5b2047
d8717949c20ccc41f1b35e10e90296a3d3d689c966cfe444d4b6c377102234f7
9c1ee9fb2321b871a48337e7bae1c2feab343b111b199d894fc3111c045852d5
774cab0519f5e4a5a3c2064fda41e915a0e93461f83e084f49824dd1068095aa
a3b0f8661838a64fe9323722edef3013628e980e7d528622fe51469d118a731e
e4c910d8cc7f283d13e445194acd7eafd2c9a63c59823284a6f827205a291052
0b82274e34a68d2730387da31ba109b2ea8ff2476ae6b4902cf79dda9be1e4cc
ff191c6b509e3745a52a7586ec043602b0fed69d5942b51b0680fca2c211291c
f1874ab45f1a19f18811a0913d5cecb0d0a9904ffb38bdf196211b5368aa2ad6
f9b33353c86edf6c739c6bc2f1638b9ad74990dcf5f7e561586461e277fd0c38
d3be94c2701ca064a49b600935178f77d61fe1ecde9a1510ec25a93a1b2f67a8
2d80b59245202ef80a0cf7fd64af80945ce25ad407ef88083025b527f4b77498
933a56dc59159daa6182e94b2b93c6de8768059de101c5ff81396066be0d8ac5
5a72340c4f24e6c733b8c1c3a08bc725b3555245d22e6c625546c58ac32337ec
ea4cd0116621b675159b983f7718ae897048958edf1c108f9146789ef5a9462e
f1d64039cfe864b53a509ce9dc7609587e9936ac9f70ab0f99635706748e11f4
578dbf11fcdada6d9a8c038bf7edd8439364012989e72e762446e401e6c75163
ef7f933c9159305de06af5754ce64f66f1dfe37cfe4c1c17ae3e483b4eeceeee
7e1a544ae8b5661f78970b04cd8aa7b240be31b2d44fe2f15dbbe552364670e1
87983c7a3a5be117b6bfa3cc85a4cb413f2a02c2cf1ef225bb584a168e6c1115
b9f2d444ed8857b7ab302f8df74a903120279e20f92c6d66fae0d396f3ee5720
2990d845cbbe774ef2c96a000052ebb2ac3db76ade97ecf400544270541da835
f6c778ce12707cd65b69730ba86330ebbd2f9b3711585148e0d957fc5fc11ac6
be9850b40ea96301a3484b9bcd4a5b8d6e81113b5a48fbf1eff6c5159144f2e0
addee79cf1d6bfc0b4849ccda4ed305f3c48d2b854e0277baaf63969c8551ec8
b0b8f40d86431486fbbd4f1ba78ccd9ed6bd1e0b898fc306bfd56174cbb65851
44c6a5df124f5a63069763dfcbda36a6d49ffca894bad04436f99d919a2dda73
507590121338a06a069dd1426f5681e86c372522e475f1c52e2450016f5f7bbe
b0e23e6a50d0307b2f38bfcdc947ea857145bcc091679e678a2bc09ba4bc4efe
a9c38ae99ad3bf4cfc85822dbfd2bf69d2cc42537837d3cb5cdfb326bcb900d5
8cfc5d1373d3ad9b0bad49e3eea63e806cf56da109ecf4aea245c159887b1452
db6b50b4b137c3e75fe6e03969db2aabb6f43f96b4b17767fab98aea5d6af702
2f0d54e37c79579fdd472f230b277594fb1f2a0e866d90c362d5e10db3df5cb6
7fe61a13be7c61b7bb6490668685cc22f118745c5971e67eacf978586f410e03
0b53a4e12a326559bcd4a3e1e0bc658f923761894574f6c443dd591318a68ac6
1192a553014a4dce80255a70fff7c28b5a0705701a63373c9e254fcb046187a3
926abbba00d9f08278d3f2ad13e473cbb8a6cf9def3c325457446b1024c8b931
081281b9a33487d8f5b3ee7fd2ed1a698f51a84f68b2cd2e7d6846bef839927b
a42e16207bea0d9e63bcbecd64aa3f3abf3a46fa4f3802a70fe2382ae4266732
769905fbfe1841fe164443792c9c4e22eddf14f545c3d8516159a1c495ca6c49
baeb049281177fdfa9d862a5a8b7ac09c515d6f29ac806bc03f6cceba27dbe0e
272a51247929f7d4e0bf5111d932fa9508cbed8414b3d184a4aa801ce7ae68e3
d25ec839d7ab1d99f2bd3b278661d72e6bdf621d59280044e621934c32ccb63e
62bdcd9bd443ce9643d67fba1818bb36e3b853884e15d2e74f28673c4d6ad794
7d5a20a60f06aeba05b92e1f0c73816898d2dcef32528c2e6139cffcd3c40cc0
c96f6012888c0dd1e749cf249d36862d51bdf9807f7ca18b8b7fb604f55c1e27
1475cedd09d408346a7bb095b71e95874282ee7338e29e4828d5a5ed50088e99
1c3a2779a3530c193e276793ad544beebda91e08b5c59760a5630f69fc255bbd
f9613bf0e93ac788e7a2f90d5900920179f6fb1af96e500c71376cc8bef564d6
0b0a05b5475e11564043ca79105703db0628019fca87ed79cac47b477dea5dad
c4a55815ca0de30665d6db29a8ce0a12100814dae2d791de0541ec0ef12849f8
a720884e4a2dc037fd3bdf383f92ba7a306ecff32aaf81744a39ba18a49689ba
695301b43173ce9ea51a09b2a7fffd8655ef132ad58737036dd85aa9d9b14945
f0b3eebde9499deb6e34c47ecbb4a3b46be0ac86c3920086afb88bb1e49cae2c
487e7e3f6b966051656f8bd28d37f725a61b57fa965c128e00ebf06fb8ae5946
1372ce1657fb50bcd94d14c759214737a00fa15dd3b49c952050ddc914459eb9
f3f15884a7d5fbd9b5b62e1702ef10d6758daa026f46feb4d3ac4d4f9c67fa9f
9170957b5ebc8735a973c0f3e8a83a58269265769528f10800be2d97b6f1f309
8cd485f39e3ed8d93012243d4038820bd8b64711ea3984ba99ce090849c47ffb
a7f2552d802030a171465f5425e2feb3bbe21a6da9785e57228edf3c605437d6
3c5b81b003d77d2f0505a970e765fa59737d4ce6ce0615e70314a549b3a430c4
d0756af0f5f88b9e71cc7a54a741a4d528f2479e6440245a1100f228a6126249
d040595796fd4be0c5c266f7fa6b8eb62b0fa814c304fdabba8aedadcf8157bc
fda3d54aa7151a4b456449daf9384c50762abe13b3171082e59aa947c203450a
1d70ca2ab10f876056c0439f76adb91fe4775fd10bc4590d39af73c78a7314d6
3e27f91630f8368b51f04e086afb14887d2be611eef093f943a9310b9cddef24
04a5397ec1609c1012ef09a48e4d18df9c9c9645fb9983a9483998a26c3bd826
a754b47e92cfa295dc92e5188860faec98c88b23ba4d9ee14abcf17accbad467
e85b9d32abd1697d3224a0383d71ddd6726f63b3cb2c7bf184e5aad2bf8fc6af
587adcd77fa4d25b8bf14756b3a9ea9a3291df836105e1258099af339f3c38e7
1638e47989c03a4380973ea6ca6bd63bc495bdfb363fa9b0ba7d25c8388be2f8
b6d85b3a41e81c9c29b2a0830c04bd91dd00712ad960165d62c5a7fb01a2aae2
d2f92d66c12e25214290e0e68c0c624756276089c7c92a166c932efd2aaa7b2f
6c3f699b8f1ad5a7a5f6e77d0159235c024620616e19232727200ce1a96d6356
dcf0faa1830603590df66996813d4c579c166a3a9fcd11e937c40458371c0fd2
5b7517679a2412e62e0b2a149f77648e804602712a82fc18cf6255e4c4ab8eeb
b4c64c81b79a6c7bb53848124fd6357d4eeb72ce79fa88c3afd9697411c33cab
c669e85486f92be44a9770e8f1f5caf334eb13be3baee7c27c9cf4d398db469d
c9efdc5eb698e5541f474bc2172072f4bce0cf7685572535c16679803617c4fc
5a18b1522201c1bd22f05a3c858066ad3835599b36227fedc37b26d688d71658
ea0bd4ec10c479fd9e106e98324a552fa4fedd2a4441a8d7c42d33772d8e5ebf
8a8dbbbe758673a3453c5d110d54d9f5eadb25f8bd8f818133560b468e1eb336
fed970301e7111039a76b746f3b4b10d441eceada6249adb4d5a922046209e1a
f65232819e5d086f72c195506e9379b6b12cea751fdb99d80faa1a7865cd25dc
f5d969125665395f39027c424d2b596e91246793ef28294b63cd907884b7edf0
39641960f76eb62e3db9ff01721a1236a36db4deeeb8e11f52147a4adc1c2df1
2fa612047c52bb5749c43ae0a15007cb99ed1a78760bf7c1191bc03463a5ea95
ab67f10caa6c76c6bbbeaf1c8ba5c0262a62653073e7a971e14065188d344f70
08b3bb8b500813bf707045cc9e619dca29796095981108856b55a4766df0add1
5a35c9aa919d0b461cecf7afc2cddbabe6900f90f5e2327c7fc64f02022714b5
f4f96993d2dac7af97d414625deba42bbb9aed3ef721100d36410ef00e8bd958
5fbad2f3a0fe67c5a27442982a5c4efb486330ead492c03a66f7a461d1ee2128
76c82a1c6c6e36fcaaad52cb2a1098d9f6f50820434a869585f3a2ab214c803f
ea48ddd985992dbe2d37e4b9f0d9b1aead0cc69fc1262ed1f6a1d7c81b0d5d22
f1a29d2ed89f17fad482ff6a98b15440ba153f41369bfd485e65d6d928e0e19b
8925d4a8f6717a7b9593c144325ff6f902e696d697cd233833df88df53aa06dd
0a745814f0dc8e05fdc1fa15578a9491c439c003d8e7f7bb3bbea28d4ccc37ba
07b9f8d83aef0aab993a4b20dc85cbe4df106a62b626e54d6064db3b521c5c97
ffe176bd66264715c1faac392d2c7d3453822fd2ccbf0a13d8fbe0e14a89b786
1a64fcb3983de07f7d096920676516d078ec793b984428c031221376aae21f7f
940ce1b42258c72640073b3d3b9e4e0e177577884e4fa72be282993d5c639777
4086e04e0c540545e540242107fa14b201751fc28096fc862103cef8d0b38a8e
413bcd1d7e0ec74d7ccf096f69e23b6ac9ff093927c2d1d7fcf400e4e45f319c
4e10115daa600e7a925369d8c1ac137c514954ad4a7d8ce03f15d221ddf22984
91a9491bc916d731397517351a91827b16ae43b3096b0d1a9773239976cc0741
d599f8db243c7df81da8e29cf236d9873973563009befcf5ef5ea77e0b209d20
77fb8ea0737e16d640e05d3ee8fce0325e4428be085272dedce891c68a711e16
82edae4faa4fa4b7e6d2fba1f41d0168a0cee4f13dc93aefaace438e85e234e8
4949138c72344c48f3bae7f399177bb3fc07e8b002c8ce0ff039e425c6182230
866b80f485966bd4ca04d73e861f58f781538e26544544dca29306307c28c429
ca20b9f149dc20e84d181fdc941ec325a3880971af34b6f5068c361afc25a668
b21c990f440ceac623bbdb035dacf04f34621fd5a4add9e2167836b296e48eb9
4d1c6391aa2d50e1d33229f130f08c55f8c29af1eb20d05dd6c42b7fdabfa02b
552c32a27acb7184c6eca59c50120c796a44c902a5559b633313c727c25bb86e
da12c14b54df6a62588e81015a8602bf86de53c55d1ed3fd235e1a7711011a2c
a6bc517fd9dd5187bccdec90ea8d30e6e71e8a325b13c60ba183f56c00ad065c
1706f0c3f99374d8aba67d41043b639d3f61def5bfcc5f624027bcc42ce4a7d6
a0ba7bb6be0a907e89263a8106892eb3fc2078b65d32f73990d2409fd0df4541
cd95acb43b4fdcd81871797ca5364fec992589b5293365af8751158f7f8950a2
014ff6b4e7a2217b35587d04c774baf612e4f5341c5795567a96b81bc3ae7060
ebae02aad4e30c2778485aef82edd1dc5bfb37d35bd0b864c4dd380e4d23263a
d1cea290050ba49ac8ed15743af65ba6ce833178abbc7028fc9cf57e95c57337
48531d8fb75736f901f891e409b1fd7b14275e6f265d994859ca467db880fa59
f2c39c4db1049b4a300a81c975166050026f1b0c588b6567d1268f1ade486875
b33f7687216b8c53c882182378250f136dd65a6c68b83d90c9f96cf8ec5888c6
18aa695dfb77a650c57742c235708f1a9a114a7af97ec4f4347b1e82719aed92
baaf85393e8a84a0b8ec7046ff4b00f6ddf348ae43cfed45d042867e13946ad2
c6abda94113d22c47ea8a4959f7e8d3975893e6b080a8a404c3e1a794cb6ec7b
d26dc0c607c8189e9040768058e4e7112098ec5517289ab444f8f6a2baa8a979
693cbc597e5fce319005a6991d2734b6415bf230f409ab88e185a5977095d896
4a1b51592374fa1a184d84ff01dbde2fc1276d0acb73452e222b31966a259cb6
f2345b547fa2730276a14e1c108924c1ac2b506687119e228def906cd2b42c3d
9485f6501e50517b4d8a6623d3ff53945b12ebfee5b1ab88e33c5dc1a4194620
be432a2c1ecbd0dcdc0d2ebe9e4271313427c7cc64bbd3852ee9a45f00199693
743fd314c44ead0c0a58e24d5c551030eea62989d3fe32750f72ebda11366be9
1b5358b316b8e3e19181d2d0cd682ece1cf711a66c340484cf6afdaa5264fb33
eb24547b194a16f6b29599528be157f395800633675b794200a974b2eb4ac4cf
cfd90cd1205a299362b2c927deb7b9d3608fd1d23764c414da358b2bc3d57cfb
e6933ab896b3c686c09d36d8974699279173c1727627413a277d7928709b2300
b92eac197adcc23b5d9feaff0a7b94a343951e86d8ffb1b30c0aa87a769b0fa7
463f3a097abaefa150e4e2ea83bdce6510806da8065cc81641067a24e2f90696
59446bc53b4261fda4838f91693405327c1f269a43b22d379dbea261a71fcd17
a326359c19d3fcd82eb5e84272c6b8030ba1bbcecbd05de6730a38f15dc3dd06
bb95cbb548d20294e0602b404beb476d0be3453aeecd42e5a087a00fa7881d2b
ad3266c58d9a4cfc179d69afdb491e6c8b16528075d955ae1f1667d08ce6a3ba
3bbbac91c337de6a82c580a9923aa416e920afbad6b614306f522b6247b47b43
09c1f25054793f8e8d512bd66106654942314733bd03ddb636dfc8f56c610ca6
46aacc89f636e2af7256bb5f46b3d75b9fbc5e74052df5cee06eebf55be89271
248e276cb69be77ffeed482ca27c93dd79a00fc47b1972eda96f3671197d8cc0
171a9e03424e06ece9978bdd1cb50e30bb3d5c61db965893255e263c2709bad5
974c7c128dc563a6881b75775999641e4718b12d53166cb16ed64fe6fa7ad5e4
9128e600814a08479704ab6b7490d999364a747019cefe8e55a4e5c9e1d1dacf
ecdbaf9027721ae0ac2fadde2222f54ce7a2b9544660e31f7a35e17913124d10
1b1796688b502e01e22b23aac1cbe36cd2e2489fe1e03322cd6d944cb1167a62
e5aa116c1247fc94e7b014b6281cc2b8913d36b7c72f85228bc2949249861658
e72e144dbee73e908d89232476799d647bdeca2636c1b8d3b3dea612237196ee
bb51bd3f2380a24cb5393b93db44e28d4878ec3365a71e0b4ba8f65c06f6efe2
c14387242afc92871d9c22ca965ba4749acff032efaa9e711cd11cb069064c6a
ef8cc7fbd69f097d538c27ad9195ea6defa707bd80aec54cdfa9fe6a564c826f
a4319a141d00f6620d58a4888695d863585c3bf7017640023cafeee04284bc48
75c63949a28968ba5486fe2fff0eb24b0c63b95c1aaad8bce501717d864c1732
52c2d4a48be2a5be39d4090160cd726ddcc00580dd60088c601fa35eb693d13a
c37f009ed7fa7c245afacb5f9c5b36c6e188904d9b24de502b7a4ba7df01e4f7
fd234c545deca408bea5e307e36985b8d00efbe50022113f653e51dc681c77c7
1f4e31353413bf474d770227f34e507cc8d6edb3564e1f3e48cdaad0b03ad2e5
c791d95140587ca65e1632dea5557fff6132dfe5fd5a58486db9350ec966ae8a
1b99040fe958e04002c0e1ed9cb877353634329024c4f312fb582e52472c6bf6
7bd2b6698cf1af70b7c9df058f38499b5b6f1ccbc63d1cdb44dbeff632658015
19f3abe1693c8c4b3c607fb7da7552c9e3a0060ac5d9480c833d3c194617f535
dc51e240fb6340d3be430b78d5439e742f19325ed188d26f78950784d79b03df
bc5f12d8bf52da37abfba0856ab543790a06599e7fd2e3e75ba397b7e405d9b8
43487e8bd83cdce74638cb7895bc8aa3263d4aaf6332f05f85b9ae41eda7923f
fb03f7ebd7161039ca018688fb40007e760f5897b2823de6359466731e770823
d95e67ced07b56b9e0a05d089730d65c77ce92bc06163279a55cb3025fb69950
9e1fad8810b0756ced2507c5aaa829d642aa90a24452b527dd177e7e1514efad
0b02387654a9fc80565050afb207c007b7c938a4d3acde6548c498cec35d65cd
912fd842ba0dabb5db221b60f83ec5c7a91ec039af15a9c667214b78cc171f6d
275495303c0901312992296f54ecaeeaab2bb28f7d9fccd8d4329f8b90e38ea8
73e23b0f5994aa3b3ea0579a8a8c54464894fc49e3dab5a24a0757efdce80635
550c4211ac80a410a2545b620065be12052dfc16488d1dfa3511df615a9b67a8
bc8b06beb716b545b64b7bf9e514b53b0d72b7a4ca63060f9866d75127da26bd
5f4c728fe0ad546071aaa72f9ee7c1b56b64e33005ab0699cf6c90d269542e48
26ea553f09c600daa22120c4c9897246f76d19ba69d41838edae2dc0aeb81700
a32430a702f0ce0d88ba7c7b4e5d43257c09952068ea4d88c13dd314ac18102c
768f537a06a0ffb9ddb14b09c876f0164ba245232cd22dc1ab56402e4130fd73
d760b3baba5345ca178e03428493504c318ff90ccf141031833dafaecf4e1eb1
f0e0481de2fde8ca35046cf29da2b1db0cffba9249c09ad73795c09a4478fe33
4e1cdfe3da524a3ba8eaf0f6f0b8c26b05a2167d8f71804769e115e54a765358
ce28e534ee5c4a5c39f7636c2247dd6dad72d20b04fba58f67a4d407d99642ee
b41a6207c9696c282b342ff0cf16d4425973c2951085e798e421e46468963995
d9bbef2f23704f751891b15c718319d58bdf7c5d15a416ba846556c0e6d59f56
635a642586df0377397e9c3917f0e83cee4378cec4e88b8bac43b17fc57bc662
0f3cc4ad430d113d5fc471b3e54a583035310ed63f9c1897b3ad27fd6525bb73
7ab5a647efb960c01ae8839177b767a6bc743632e4abb8ccffc31fb2436beb06
a6dda4929b872984baaf5613c8b455470645dee37582dbf3fbe9c3cd20985066
6ca29795b093260f71161b4b1317c3a3bc0dbc88f90960b16805bd43cb3cf9e9
56bce3ca1624ab89b969a99646280570962d5e60d156d619b8ab057f5e4b42cc
a55473887c540131c1633105cc97bb7897981af3cbf5b1aea29f6b11b958dd3e
9000e685578afa503024a9eeaa4748af58e6b3c1e92e7d9ffe59f65c8f61b642
489071b75f8fcfa79ac470f615d0d6edadc866f773c544c19aeb407f83462f2a
d94cf5cb91591085ccf4be26e0764708dea6936647f4435d745c701cdfa4cb20
cbbaae6b8be39a8cb991b6b93a33dfe43bd615709ebaf7aa8fb723a6219d8037
428af56140516d0453e531131d77e58f7ce2ee046be7a5f888a16fc4701473ee
d2476eecbf0a7b8f662d399832781d3908a584cf464672d939976768195f7242
08613afffba813ad3db172e6e27f593fb150d8a4bf146b0af4cf6fbf04f496fc
e3284aeb830f32b6d0a3626428af926e07efcae784087616608abf6bdb0c5788
d3348381ee1c57f955e67803dbd76f79a00a9bea1f0fedb87bdc86e965d77761
ba0de50784aa18dc7664a60fcd85dc916554a7f9b89c0d9fb9ab170ac39ee6d0
e42cd318626a0708afd17e66d7c804d44848bb4dfd46bc16b980be6ca0ecd8ee
3b4112e14d92f5a9adc7e104622aba9eb37a86580cc3f0cbd3248007f8c4ff8c
af1093a9bc5527fe1babd020497ca5270d825e98a1f5ffc9b0a12def198a4119
53f1089fca55fc75721c0c835adff880ce73c3829ec7807a90a9419b2285b00c
3b4d1c2af33be4b46d9d1da049c510e2e2fe2563221b4b4114806a7740481c17
7c338210ab967e183bdf2553ef2b340b96e3defd99dd4e7cc05d672b318e806c
196209ba4397cce7a4dda732f310ba71e9d3bbf3be604d7b6af4718c80b57cf6
e10e1d0f39b68e8570ffb98f534e43c75ca16ce616b64bd1fd1f753acd3585a7
b4e781de3c033f2c09870dfda976cd1996fb1ef86d65929a80f7a8f8eaa51a4d
d4516ed3185eb6f0df993cc9d363cdabefd425360cafee5e7b207da2ee89a91c
c4c13730744a4b867efb675a17d2194fdf76a466c423012f077f431757ee0eb1
d2da035c70c213a474f93a9be1e093e7ee3d3a45f020e491f311eaa76289e34a
fc8930ba422ce199cd36c601998201cfa192631db7fcb53ae498a2920de1cecb
9e570acb327e8874358efda94ee7cf715628ddf2ff4d9d46e01770d7997b34e9
e612fd51543ca01137e086a0e2bf064120295586633e9ffd48dbac8c4afe1e53
5172c67368b00e759be6d8e2a8deb3dbb2076f63d74411575346a08fe9ae8b82
3c7fd8bc776eaa9195aec0376fe977c4dc215deb48fa61863de085b030ec1f72
bbd3458237aa83c6bcb88434bf2723b16d6f076458905f3982c9aba14c879623
0f287c18b3898dda78765ff3caff5795f4ca8cfc212d43d8c5fcba5d0aef9a9d
4fef40a5e479a3dc383c55aaaf699fcb7ec4e5084e28fb5884cfa99f31ff7f13
f18d529ef438a2d203012ca7bbd22879a7e78d900333e97e639e7b3f1f85d0d6
e5e9b5168ba1ac49593cd6955233a9ad517a42a5442acb9aaa40ada08065f65c
1634dd7d7a56fb6e1ab83d68c957f11018f6d0b1f0f2cc11014a2b66f7c39e36
741edc94b1438b2e817ad82b7a413fec5a6be5998587677be126fdf810ff6830
125dfe453134bcc054e2193906358e0873d43b89ab6e4eef18e8f01616393a00
c95ca171b1ae3a83a2e92a5122a913df3d0106dcfa351f25ada280c2ab7c92b6
9a6a5d6cd2cd35ee9cafe589a380d8242b2f00645d7cf42ab877df57acbd5e6d
2fa58c91d15d0c740af288a97e96d0098f9856f943dfab924f5e6a02e53c083f
40a2f18133a0e1ec538e39db74905aef617f3297c8bb8ca371fbc25edc0196dd
4b6b238165636efc156a01c35d2b2d03325eb46c14dde57ae7758fd92ac4e715
3f6e2e88c2c1e72b1a667666ef1fb8dd604fca445362fdff766b4f4c7fa85b67
a226a1afdab5ebb4c767613f21ca0dc0972af5083478fa5f58d0fe0693657b34
6a9490ead472cc7c209da1589506bd144f6ffc7d7b764e2d3dd27014088f22e4
f850b660fb3f82d4f8257ba400c47f7f589296cacb8416fd6df8adc9c3527c76
598e7e24d09d86dca54ea8c5eee09dedf503deed1bc02469fc816fecb9891bdf
1263afae72137110c0723e08f5fd26776234f8f915602480663973cfb211f6fd
bbc77add85c9fc70389b854ee5bfb2fb975effa069b5ac9c38b34c562a74d421
29161ba227538a8519f16e2f874bbe7eac25c05a8402fdb95c327e0f2b529b04
29ab23a953598977d3d6d418731d34a0a9bf64e5daa15072e630d6d4cbe1e3b8
1dda8f845c58eac887f6be1cbef1838af7b18d1ab1393f469eefb448b6a8be2d
660ae7df146c0052447d2c29c250e821d18e61d63bbb0dc5eb625983a508a685
4ab3f50382958dff03e4f4faa736eba77ebbccbfdf5e1d83e707a4ba487edfbc
bb767190e42e101c2087617c9096d84ba22d9da4cb2a5e9510ec31ba599a4137
179c336190727c32fc2862eeb2a2b9b0f29b5a7535c46baaed3794c506c8aaaa
e2978ce5378085f2f353421906295093d45bda12b53a867fe7a5c0ef211c8053
d2653d1b4efeda7db4d5b8c600011455713e8442fae279ac0e0542ac4a2c2c55
ba6864e83f1aff43213bff824d2ce12bf0ff5de4512d2e38c15b79f697b6d585
3b073e8fa45ecf53674c21b7094e4d26800e90f404c15baff7441496b83a7ad7
59fd5617d851764dce812c776dbf8e196091ed8307f6af5dfbcedf3e263dfb1b
9839c322177c3759e4bd508adb6350010fc94895dd0e59673724d75ee66ff762
fdf0cb491a616e92061486023e6bfff542d462dc036109166cefb031a46f33fc
5ae995921ce2f434073b89918be1f7a5de62d086ee13a39f2e83e11206c93c68
2cdf530fd05cd3bac1cf6f072c86c60954aa115c03145f4ebe51843cb11f3eba
d97697a462a7c9f05245c4fade26cfea1c0eb209153392d954090a2a7538427c
e32020ca9533304cc3c577bda81a70aa4fae3735a0fe89566b14e84ec72ac9d6
52797bda71ca50a75c918a39ed46585ddb4aef408f80322f148da9c7f0f46ae3
5fed6777e091369c49de6055220d66b40eaada7b17b8bbd117c00ce681f8d284
8e62b01a781bcb4cd0b2069ea699334266610f97ae22798b3fa3dfefb18171f0
9873aba104a34846312e4347ea91e9364eb585e5d87e5be9995b6d48bcc46d9f
d76bd6c4c8c923e6c48226ef315f1ce4dbfccb2888fbfd795d2a8dd27d9477a6
0d9bc915bf4b533f3c2f4dd8e8cf54083b2384a2c09b3d5b22015a49b27d1eca
5b49d07126d01e6ac068325bf828c8348454f5eca9e067f060e3b1f1e2f35c12
815e8e99b6a67580034237561f3330f6776c71ae5fdc2789a44405eb6c172230
a7bfa185614242e17a9b0d10c179e879d0130667a430b9a118e31568c6c175a3
35c84dd0ff4612a38502e2a80e717156400b8d2797496fd1fbab4b74a66dffdf
045746d4ab735a1c69c968fe2f953bfb2b6f4d779ec776a5d5dd2068cc26fe47
2f9381eb01f7e25ca3d564b97c51cf7507774e3125cddb30bbb9317b418f35e3
06109c37f5879641b11da17fc94d35bfbff961f31b032be9ee782a410d7ef778
d79f045e2a5dffda66fa8097c4419aad3830a77195301d13f40d3fe857a9b50c
f29d4523a9bb59bf05a590a249dcea966fb4177260a274bbbe2a1a23782215f8
ea28a6db4a0e516d7a924d0aa9c8c622d0bed6c3dcad48539d800ef6eebd40c8
246b21577695e05fdb18da6cd53eed532fd2d6f8963aac4ff5728ba7e7854af7
b5607bafd8296946678b7680129f510539c2d8b45fa09ca97a904d6dcd6224f5
a394a9de62bfc336b5684d2c27442514a22d3cfa1bbde1b1f775f0143340f1c2
afb93525eb692b91c1839801cf80510ef66f5c9b90ebb0638789177b35c2826f
29000c7117664bbae264f97a1e891ba8e56262d2a87d5c738053fd911294e01b
0e19d04d115cef42ead3d3377b21b83c892082b5a2d74ed8829b8c916a818daa
01379d8af4abcd3118dcaaa0ac7cc0ff2dabb76b8bfc9dedf16817a024d5a8b1
7032b5f85f41f897319563a07623a17bfcf237c61ff45b508cdb171b5326619c
6f7ed69e7b0174f1f748c65d5f3a79ddbb6e71adaa9066b9e7dd81dc07412821
ca65d6d12603fb63ba97c8c34f4bce6d0e22e73cffcb568365775d74feb03fd5
99a9ff0045c04e61201f9b4fdb527e5b32490b91b86da803dd857559d5c7cf61
c372e3061c66c3750ca684ddee2c84aaf61733d055b1da714903b2412a67b3ae
c2314f16f1d4567c39411c91720a7351693180c6ef77e7f35bd1b1f2e883cf58
53e873e75ec7f7512cb811e43d216badb7991749e4e81399c7e0dae71f84e024
19fa85b134e567764dad14da0ad3dd3048f152ade302e59e2a5293675ebb7500
cb7acbc49a6e4324b220d8f8eb79ebfd7683d7b0f8d4229db5c75e4a7ef51e69
29ea56e5fdf3ac06a6ff169efb178bd52c0aed26cf4acb567a9fc88237258c3f
6773758d7fe48db8c60480747e2b7c663e0d16a8758fbbf65884fa3d5980ec15
51875b3efe45ed18416df288ef4b0a83ec0623ca25251d2b2d5ec13ed5141cf9
fa3465a3a69327e604967c5b8ea43a288651f4c08f466b08828e65539e247f7e
51f20b087109492d3590aa7c3fdd4c2eeab5f94eea81c8e7b7976419efd4f71b
f31b6fd39b101a0fc1be27201cacee19aa4f47d6b3950982d7762dd84eec762b
36185b408c309b5adfcaaad993ed2bce1376211ead2255a01cabfd1f2223c857
1041b853094016dcd33d3a4021a57e862079edf10254328ec8c5131a468f5415
94af00c7dbf8295696c6c43deff59acc6bead0e60251db75e3248b3884fa8ca8
8a2ee1630bb2a6a7d12c0bce2a29119b6c30d2f5c919f8f3a506d5c6107d7e81
d701211bbaab903af36b6e17cc0a73b4e95f6990391f190558a17340b4c32d19
feaa2a4998eefcc9438cc301458ef2cf1bf7b36762f3932361cc804a4d5f5886
ba38a18378f19cd6af32cff1b33468f855b80d0ba81d97b187ff0ccae407bc96
30007faacd0c36e8086273c89ae1c83c98b5a9d99e54d644264926acdb431795
dcc11492946f81a6d205ba392d9fab36828d25939dfcfe4fbc31f87a667d4adf
6cdff30ec0da6488218f342d4c522ebce4b76944e397d9221a71b9631f7d257b
e36bad7f45626217181454fdd076578bb8c3bc7e81669863639c9a3a72a01354
8b6f43a7616d7169ca6fbcb856c61d86bb937e159ffaa597a06db274b8de940d
a2f318c6e8c25de034eafd7f2c67db7dd3b142c0436f424864529047d28b781b
7029d350cae7774828781bbabe15eb537d93f03985eb6b1af15e10bacc00b17f
2b8333ff367fe269c7ffd7c9ac24d0676d9a8dc795583486b511b44b0ebec225
4a979dcacedce88bdec4d450d5edcd40461190aeeeb0710e71c9144baf81f82a
def04dfe4a986475d98821f2920013a5941f45359472999194b9ec4c18f0494c
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (body.dvi)
@start /Fa 154[39 101[{}1 74.7198 /CMITT10 rf /Fb 205[30
30 49[{}2 49.8132 /CMR6 rf /Fc 222[77 33[{}1 74.7198
/CMSY9 rf /Fd 137[31 118[{}1 49.8132 /CMMI6 rf /Fe 135[44
1[37 16[36 33[55 5[38 2[21 36[45 8[43 12[{}8 74.7198
/CMMI9 rf /Ff 134[47 47 64 47 49 34 35 36 1[49 44 49
74 25 2[25 49 44 27 41 49 39 1[43 12[62 49 3[66 1[84
53 4[69 56 58 68 64 8[25 7[44 44 2[25 29 32[49 12[{}37
74.7198 /CMBX9 rf /Fg 130[35 35 35 35 35 35 35 35 35
35 35 35 1[35 35 35 35 35 35 1[35 35 35 35 35 35 35 35
35 1[35 1[35 35 35 3[35 35 35 35 35 35 1[35 35 35 35
35 1[35 35 1[35 35 35 1[35 1[35 2[35 35 35 35 35 35 1[35
1[35 35 35 35 35 35 35 35 35 35 35 1[35 35 35 4[35 34[{}71
66.4176 /CMTT8 rf /Fh 133[39 39 39 39 39 39 39 39 39
39 39 39 39 39 39 39 1[39 39 39 39 39 39 39 39 39 1[39
1[39 39 39 3[39 39 1[39 1[39 1[39 39 39 39 39 2[39 1[39
1[39 2[39 3[39 39 2[39 4[39 1[39 39 39 39 39 39 39 39
39 1[39 39 39 39[{}58 74.7198 /CMTT9 rf /Fi 132[39 31
37 1[51 35 41 25 31 32 1[39 39 43 63 20 35 1[24 39 35
24 35 39 35 35 39 9[77 2[55 43 2[52 59 57 69 48 1[40
30 57 59 50 52 58 55 1[57 6[24 39 39 2[39 2[39 39 39
2[27 24 2[31 31 24 24[68 14[{}54 74.7198 /CMTI9 rf /Fj
140[26 26 1[33 33 2[18 29 2[33 2[29 3[33 9[55 14[48 72[{
TeXBase1Encoding ReEncodeFont}11 66.4176 /Times-Italic
rf /Fk 134[33 1[48 33 33 18 26 22 33 33 33 33 52 18 33
1[18 33 33 22 29 33 29 33 29 11[48 41 37 2[37 2[59 9[44
1[48 1[29 6[33 2[33 1[33 33 1[33 18 17 1[17 41[37 2[{
TeXBase1Encoding ReEncodeFont}40 66.4176 /Times-Roman
rf /Fl 132[38 34 41 41 55 41 43 30 30 30 41 43 38 43
64 21 41 23 21 43 38 23 34 43 34 43 38 2[38 21 38 21
1[58 58 79 58 58 55 43 57 60 52 60 58 70 48 60 39 28
58 60 50 52 59 55 54 58 1[36 3[21 21 38 38 38 38 38 38
38 38 38 38 1[21 26 21 2[30 30 21 2[38 1[38 14[38 4[64
43 43 45 11[{}82 74.7198 /CMR9 rf /Fm 133[44 50 1[72
1[55 33 39 44 1[55 50 55 83 28 55 1[28 55 50 1[44 1[44
1[50 8[72 100 1[72 66 55 72 1[61 78 72 94 66 78 1[39
78 78 61 66 72 72 66 72 8[50 50 50 50 50 50 50 50 2[25
46[{TeXBase1Encoding ReEncodeFont}49 99.6264 /Times-Bold
rf /Fn 82[28 51[42 2[42 1[23 42 28 2[46 46 1[18 42 1[18
46 46 23 46 46 42 1[46 9[78 1[60 1[55 60 2[65 60 4[23
60 65 1[55 2[55 8[46 46 46 46 3[46 46 46 1[23 1[23 5[55
38[{TeXBase1Encoding ReEncodeFont}39 83.022 /Helvetica
rf /Fo 138[55 1[50 33 2[55 1[83 3[22 55 55 1[55 55 50
1[55 12[61 66 18[101 17[28 46[{TeXBase1Encoding ReEncodeFont}16
99.6264 /Helvetica rf /Fp 133[75 1[83 116 83 91 50 83
58 1[91 91 91 1[42 2[42 91 91 50 83 91 83 1[83 13[100
2[100 116 2[91 6[100 108 2[108 65[{TeXBase1Encoding ReEncodeFont}27
149.44 /Helvetica-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1156 108 a Fp(A)41 b(Pure)h(Langua)o(g)q(e)h(with)702
274 y(Default)e(Strict)f(Ev)m(aluation)i(Or)m(der)g(and)1338
440 y(Explicit)e(Laziness)1683 784 y Fo(Tim)28 b(Sheard)1248
871 y Fn(OGI)22 b(School)i(of)f(Science)h(&)f(Engineer)q(ing)1279
958 y(Oregon)g(Health)h(&)g(Science)f(Univ)n(ersity)1476
1045 y(20000)h(N.W)-7 b(.)23 b(W)m(alk)n(er)h(Road)1433
1133 y(Bea)n(v)n(er)s(ton,)g(OR)f(97006\2558921)1484
1253 y Fo(sheard@cse)o(.ogi.edu)-152 1554 y Fm(ABSTRA)-5
b(CT)-152 1674 y Fl(W)f(e)23 b(prop)r(ose)g(a)h(pure)e(language)i(with)
f(a)h(default)f(strict)g(ev)l(aluation)-152 1761 y(order)30
b(and)f(explicit)h(laziness)g(annotations.)47 b(These)30
b(annotations)-152 1848 y(do)f(not)g(mak)n(e)g(a)g(distinction)h(b)r
(et)n(w)n(een)e(the)h(t)n(yp)r(es)f(of)i(v)l(alues)f(and)-152
1936 y(computations)39 b(as)g(is)g(often)f(done)g(in)h(lazy)f
(additions)h(to)f(strict)-152 2023 y(languages.)73 b(This)38
b(supplies)g(all)h(the)e(expressivit)n(y)g(a)n(v)l(ailable)i(in)-152
2110 y(lazy)d(languages)i(with)e(m)n(uc)n(h)e(of)j(the)e(sp)r(eed)h(a)n
(v)l(ailable)h(in)e(strict)-152 2197 y(languages,)30
b(for)e(the)f(mo)r(dest)g(cost)h(of)g(programmer)g(supplied)f(an-)-152
2284 y(notations.)35 b(W)-6 b(e)25 b(explore)g(the)f(design)i(space)f
(of)h(mixed)e(ev)l(aluation)-152 2371 y(strategies,)f(and)d(compare)g
(our)g(prop)r(osal)h(with)f(other)g(w)n(ork)g(in)g(this)-152
2459 y(area.)36 b(A)24 b(simple)i(implemen)n(tation)f(suggests)i(that)e
(it)g(is)g(relativ)n(ely)-152 2546 y(straigh)n(t-forw)n(ard)33
b(for)f(the)f(programmer)h(to)f(supply)f(the)h(correct)-152
2633 y(annotations.)-152 2852 y Fm(1.)100 b(INTR)m(ODUCTION)-77
2960 y Fl(In)18 b(lazy)h(languages,)k(computations)c(are)g(deferred)h
(un)n(til)e(needed.)-152 3047 y(Strictness)24 b(analysis)h(tries)f(to)f
(infer)h(whic)n(h)g(computations)g(will)h(al-)-152 3135
y(w)n(a)n(ys)j(b)r(e)f(needed)g(in)g(order)g(to)g(a)n(v)n(oid)h
(building)f(th)n(unks)e(for)j(those)-152 3222 y(computations.)42
b(A)28 b(lot)g(of)h(recen)n(t)f(w)n(ork)g(has)h(suggested)f(that)g(the)
-152 3309 y(v)l(ast)35 b(ma)t(jorit)n(y)g(of)g(computations)g(not)g
(iden)n(ti\014ed)e(b)n(y)h(strictness)-152 3396 y(analysis)20
b(will)f(either)g(alw)n(a)n(ys)g(b)r(e)f(needed)g(an)n(yw)n(a)n(y)-6
b(,)19 b(or)g(at)f(least)h(rela-)-152 3483 y(tiv)n(ely)h(c)n(heap)h(to)
f(compute)g(\(ev)n(en)g(if)h(they're)f(nev)n(er)g(needed\).)32
b(This)-152 3570 y(has)j(suggested)h(ev)l(aluation)f(strategies)h(whic)
n(h)f(are)g(\\mostly)h(ea-)-152 3658 y(ger",)20 b(ev)l(aluating)e(ev)n
(ery)e(computation)i(optimistically)-6 b(,)20 b(and)d(\\bac)n(k-)-152
3745 y(ing)23 b(o\013")h(only)e(if)i(it)f(app)r(ears)g(that)g(suc)n(h)f
(computation)h(are)g(div)n(erg-)-152 3832 y(ing)g([3,)h(11].)35
b(In)21 b(a)i(lazy)g(framew)n(ork,)h(deferring)f(computation)g(that)
-152 3919 y(app)r(ears)29 b(to)f(b)r(e)g(div)n(erging)g(is)h(safe,)h
(since)e(deferred)g(computation)-152 4006 y(can)e(b)r(e)g(restarted,)g
(if)g(and)g(when)f(it)h(is)g(ev)n(en)n(tually)f(needed.)-77
4094 y(Measuremen)n(ts)j(of)g(suc)n(h)e(systems)i(sho)n(w)g(that)e
(they)h(can)g(sp)r(eed)-152 4181 y(up)j(computation)h(signi\014can)n
(tly)-6 b(,)32 b(since)f(most)g(computation)g(pro-)-152
4268 y(ceeds)c(without)f(the)g(o)n(v)n(erhead)g(required)g(to)h
(implemen)n(t)f(laziness.)-152 4355 y(The)35 b(cost)f(of)h(this)f
(\\win")h(is)g(increased)g(complexit)n(y)e(in)h(the)g(im-)-152
4442 y(plemen)n(tation)j(whic)n(h)g(m)n(ust)g(instrumen)n(t)f
(computation)h(to)g(dis-)-152 4529 y(co)n(v)n(er)19 b(when)g(it)g(app)r
(ears)g(to)g(b)r(e)g(div)n(erging.)32 b(Suc)n(h)18 b(instrumen)n
(tation)-152 4873 y Fk(Permission)26 b(to)f(mak)o(e)h(digital)i(or)d
(hard)g(copies)i(of)e(all)h(or)f(part)g(of)g(this)h(w)o(ork)f(for)-152
4948 y(personal)f(or)f(classroom)g(use)f(is)g(granted)j(without)e(fee)h
(pro)o(vided)g(that)f(copies)h(are)-152 5022 y(not)c(made)f(or)g
(distrib)o(uted)i(for)e(pro\002t)g(or)g(commercial)i(adv)n(antage)h
(and)d(that)h(copies)-152 5097 y(bear)e(this)f(notice)i(and)e(the)g
(full)h(citation)h(on)e(the)g(\002rst)g(page.)25 b(T)-5
b(o)15 b(cop)o(y)j(otherwise,)g(to)-152 5172 y(republish,)g(to)e(post)f
(on)h(serv)o(ers)g(or)g(to)g(redistrib)o(ute)i(to)e(lists,)g(requires)i
(prior)e(speci\002c)-152 5246 y(permission)i(and/or)h(a)e(fee.)-152
5321 y Fj(Hask)o(ell)i(W)-6 b(orkshop)18 b Fk(August)f(28,)g(2003.)25
b(Uppsala,)17 b(Sweden)-152 5396 y(Cop)o(yright)j(2003)d(A)m(CM)g(???)h
(...)p Fl($)p Fk(5.00.)2040 1554 y Fl(sc)n(hemes)j(ha)n(v)n(e)f(b)r
(een)h(tied)g(to)f(time)h(and)g(space)g(allo)r(cation,)j(and)d(re-)2040
1641 y(quire)j(signi\014can)n(t)h(additional)g(complexit)n(y)f(in)h(b)r
(oth)f(the)g(compiler)2040 1728 y(and)h(the)h(run-time)f(system.)2115
1815 y(This)35 b(complexit)n(y)g(suggests)h(an)f(alternativ)n(e)g
(approac)n(h:)53 b(Can)2040 1902 y(a)29 b(language)i(b)r(e)d(designed)i
(and)e(implemen)n(ted)h(where)g(ev)l(aluation)2040 1990
y(is)i(b)n(y)e(default)h(strict,)i(except)e(where)g(it)h(is)f
(explicitly)h(annotated)2040 2077 y(b)n(y)26 b(the)g(programmer)h(to)g
(b)r(e)f(lazy?)38 b(Suc)n(h)25 b(a)i(language)h(w)n(ould)f(not)2040
2164 y(ev)n(en)33 b(need)g(strictness)h(analysis)g(\(m)n(uc)n(h)e(less)
j(the)d(\\bac)n(king)i(o\013")2040 2251 y(mac)n(hinery\))22
b(and)g(w)n(ould)g(trade)g(complexit)n(y)g(of)h(the)f(compiler)h(and)
2040 2338 y(run-time)31 b(system,)i(for)f(increased)g(burden)d(on)j
(the)f(programmer)2040 2425 y(\(and)i(the)h(p)r(ossibilit)n(y)g(if)h
(the)e(programmer)i(is)f(wrong,)j(that)d(the)2040 2513
y(program)h(migh)n(t)g(really)g(div)n(erge\).)61 b(After)35
b(all)g(the)g(programmer)2040 2600 y(often)23 b(kno)n(ws)g(where)f(his)
h(program)g(needs)f(to)h(b)r(e)f(lazy)-6 b(,)24 b(and)e(should)2040
2687 y(b)r(e)k(able)g(to)g(comm)n(unicate)g(this)g(to)f(the)h
(compiler.)2115 2774 y(W)-6 b(e)35 b(w)n(an)n(t)h(to)f(b)r(e)h(clear)g
(here,)j(that)c(what)h(w)n(e)g(are)g(prop)r(osing)2040
2861 y(is)h(an)f(in)n(v)n(estigation)h(in)n(to)f(a)g(previously)g
(unexplored)g(region)h(of)2040 2948 y(the)27 b(mixed-ev)l(aluation)h
(strategy)g(landscap)r(e.)42 b(\(See)27 b(Figure)i(2)f(for)2040
3036 y(details\).)55 b(W)-6 b(e)31 b(di\013er)h(from)h(lazy)g
(additions)f(to)g(strict)h(languages)2040 3123 y(lik)n(e)25
b(Sc)n(heme)g(and)g(ML)g(b)n(y)f(requiring)i(only)f(a)g(single)h
Fi(lazy)g Fl(annota-)2040 3210 y(tion)i(rather)g(than)f(a)i(pair)f(of)h
Fi(for)l(c)l(e)f Fl(and)g Fi(delay)g Fl(op)r(erations)h([2,)h(9].)2040
3297 y(The)f(second)f(\(most)h(observ)l(able\))f(di\013erence)g(is)h
(that)f(there)g(is)h(no)2040 3384 y(distinction)h(b)r(et)n(w)n(een)f
(the)g(t)n(yp)r(es)g(of)h(a)g(lazy)g(computation)f(and)g(a)2040
3471 y(regular)i(one.)47 b(W)-6 b(e)30 b(di\013er)f(from)i(the)f
Fi(optimistic)h(evaluation)g Fl(v)l(ari-)2040 3559 y(an)n(ts)h(of)h
(lazy)f(languages)h(b)n(y)e(requiring)h(the)g(programmer)h(to)f(b)r(e)
2040 3646 y(explicit)24 b(ab)r(out)f(where)g(laziness)i(arises,)g(th)n
(us)e(allo)n(wing)i(a)e(far)h(sim-)2040 3733 y(pler)d(implemen)n
(tation.)34 b(What)21 b(w)n(e)g(are)h(considering)g(is)g(a)f(language)
2040 3820 y(where)28 b(denoting)f(lazy)h(ev)l(aluation)f(is)h
(explicit,)g(but)e(pulling)i(on)f(a)2040 3907 y(lazy)d(computation)h
(implicitly)g(forces)g(the)f(computation)g(with)h(no)2040
3994 y(further)34 b(explicit)h(direction)g(from)g(the)f(programmer.)61
b(The)35 b(lan-)2040 4082 y(guage)27 b(implemen)n(tation)h(exp)r(ects)e
(that)g(an)n(y)g(result)g(could)h(indeed)2040 4169 y(turn)32
b(out)g(to)h(b)r(e)f(a)h(lazy)g(computation,)i(but)d(it)g
Fi(never)j(cr)l(e)l(ates)g Fl(a)2040 4256 y(lazy)f(computation)g
(without)g(explicit)g(direction)h(from)f(the)g(pro-)2040
4343 y(grammer.)2115 4430 y(The)26 b(language)h(is)f(pure)f(\(with)h
(no)f(e\013ects)h(other)g(than)f(p)r(ossible)2040 4518
y(non-)30 b(termination\),)j(and)e(emplo)n(ys)f(a)i(default)f(strict)g
(ev)l(aluation)2040 4605 y(order.)j(This)24 b(mak)n(es)f(reasoning)h
(ab)r(out)f(space)g(and)g(time)g(straigh)n(t-)2040 4692
y(forw)n(ard)34 b(in)f(those)g(programs)h(that)f(don't)g(use)g(lazy)g
(ev)l(aluation,)2040 4779 y(and)d(the)f(programmer)i(has)g(complete)f
(con)n(trol)h(o)n(v)n(er)f(whic)n(h)g(pro-)2040 4866
y(grams)d(do.)2115 4953 y(In)33 b(this)h(pap)r(er)f(w)n(e)i(rep)r(ort)f
(the)f(results)h(of)h(a)f(simple)g(though)n(t)2040 5041
y(exp)r(erimen)n(t.)49 b(Can)32 b(suc)n(h)e(a)h(language)h(b)r(e)f
(designed?)49 b(What)31 b(an-)2040 5128 y(notations)i(are)f(necessary?)
52 b(What)32 b(do)f(the)h(annotations)g(mean?)2040 5215
y(Can)e(the)f(language)i(b)r(e)e(used)g(b)n(y)f(programmers)j(to)f(co)r
(de)f(up)g(the)2040 5302 y(classic)34 b(programs)f(where)g(laziness)g
(is)g(essen)n(tial)h(without)e(undue)p eop
%%Page: 2 2
2 1 bop -152 -69 a Fl(burden?)34 b(Can)26 b(w)n(e)g(pa)n(y)f(for)h
(laziness)i(only)d(when)h(it)f(is)i(needed?)-77 19 y(T)-6
b(o)37 b(answ)n(er)g(these)f(questions)g(w)n(e)h(mo)r(di\014ed)f(a)h
(small)g(Hask)n(ell)-152 106 y(in)n(terpreter)18 b(w)n(e)g(had)f(built)
g(for)i(other)e(reasons.)33 b(W)-6 b(e)18 b(w)n(ere)g(surprised)-152
193 y(ho)n(w)32 b(easy)g(it)g(w)n(as)g(to)g(giv)n(e)f(seman)n(tics)i
(to)e(suc)n(h)g(a)h(language)h(and)-152 280 y(ho)n(w)20
b(easy)g(it)g(w)n(as)h(to)e(program)i(with.)33 b(While)20
b(our)f(implemen)n(tation)-152 367 y(is)34 b(only)f(a)g(to)n(y)-6
b(,)34 b(the)f(ease)h(of)g(use)f(of)g(suc)n(h)g(a)g(language,)k(and)32
b(the)-152 454 y(facilit)n(y)24 b(with)g(whic)n(h)f(it)g(w)n(as)h(giv)n
(en)e(seman)n(tics,)j(suggests)f(that)f(the)-152 542
y(functional)g(language)g(comm)n(unit)n(y)e(ough)n(t)g(to)h(further)f
(explore)h(the)-152 629 y(idea)27 b(of)g(a)g(pure)e(language)j(with)e
(default)h(strict)g(ev)l(aluation)g(order)-152 716 y(and)f(explicit)g
(laziness.)-152 914 y Fm(2.)100 b(EXAMPLES)-77 1022 y
Fl(In)23 b(this)h(section)h(w)n(e)g(illustrate)g(b)n(y)e(example)h(ho)n
(w)g(to)g(write)h(pro-)-152 1109 y(grams)36 b(with)e(explicit)h
(laziness)h(annotations.)62 b(W)-6 b(e)34 b(write)h(a)g(few)-152
1196 y(functions)23 b(\(whic)n(h)g(should)f(lo)r(ok)h(exactly)g(lik)n
(e)f(Hask)n(ell,)i(except)e(for)-152 1284 y(the)28 b(annotations\))h
(and)f(then)g(ev)l(aluate)g(some)h(small)h(expressions)-152
1371 y(inside)c(our)g(in)n(terpreter's)g(read-ev)l(al-prin)n(t)f(lo)r
(op.)-77 1458 y(In)19 b(order)i(to)f(clearly)h(describ)r(e)g(what's)g
(going)g(on,)g(the)f Fi(print)h Fl(part)-152 1545 y(of)h(the)f(read-ev)
l(al-prin)n(t)f(lo)r(op)i(is)g(non-standard.)32 b(Rather)21
b(than)g(use)-152 1632 y(a)k(strict)f(prin)n(t)g(function)g(that)g
(demands)g(the)f(whole)j(ob)t(ject)e(b)r(eing)-152 1719
y(prin)n(ted,)31 b(w)n(e)f(use)g(a)g(sp)r(ecial)h(prin)n(t)e(mec)n
(hanism)i(that)e(can)h(distin-)-152 1807 y(guish)j(lazy)f(computations)
g(from)h(v)l(alues.)54 b(This)32 b(lets)h(us)f(displa)n(y)-152
1894 y(where)i(laziness)i(o)r(ccurs)e(in)g(the)f(system.)59
b(T)-6 b(o)34 b(do)g(this,)i(the)d(sys-)-152 1981 y(tem)24
b(distinguishes)h(th)n(unks)d(\(computations\))i(from)h(other)e(v)l
(alues,)-152 2068 y(and)28 b(displa)n(ys)f(them)h(as)g(\\)p
Fh(...)p Fl(".)41 b(The)28 b(system)g(also)h(displa)n(ys)f(lists)-152
2155 y(in)38 b(the)f(ordinary)h(notation)g(\(i.e.)71
b Fh(1:2:[])39 b Fl(displa)n(ys)f(as)g Fh([1,2])p Fl(\))-152
2243 y(with)32 b(the)f(additional)i(syn)n(tactic)e(sugar)h(that)g(a)f
(list)i(ending)e(in)g(a)-152 2330 y(th)n(unk,)39 b(lik)n(e)e
Fh(\(1)j(:)f(2)h(:)f(...\))p Fl(,)j(displa)n(ys)37 b(as)h
Fh([1,2)i(...])p Fl(.)70 b(Note)-152 2417 y(the)28 b(missing)g(comma)h
(after)f(the)g Fh(2)p Fl(,)g(a)g(list)h(whose)f(last)g(elemen)n(t)g(is)
-152 2504 y(a)k(th)n(unk)e(\(as)i(opp)r(osed)f(to)h(ha)n(ving)f(a)h
(tail)g(as)g(a)g(th)n(unk\),)f(suc)n(h)g(as)-152 2591
y Fh(\(1)40 b(:)f(2)h(:)f(...)h(:)g([]\))c Fl(displa)n(ys)h(with)f(the)
g(separating)h(comma)-152 2678 y(as)27 b Fh([1,2,)40
b(...])26 b Fl(.)-77 2766 y(The)d(p)r(oin)n(t)g(of)h(this)f(exercise)h
(is)g(to)f(illustrate)i(that)e(the)f(need)h(for)-152
2853 y(laziness)d(is)e(almost)h(alw)n(a)n(ys)g(kno)n(wn)e(b)n(y)g(the)g
(programmer,)k(and)d(this)-152 2940 y(need)24 b(is)h(easy)g(to)g(mak)n
(e)f(explicit.)35 b(Our)24 b(\014rst)g(example)h(is)g(the)f
Fh(from)-152 3027 y Fl(function)h(that)f(generates)i(an)e(in\014nite)g
(list)i(of)f(successiv)n(e)g(in)n(tegers)-152 3114 y(starting)20
b(from)f(some)g(initial)h(elemen)n(t.)32 b(Because)20
b(this)f(list)g(is)g(mean)n(t)-152 3201 y(to)32 b(b)r(e)f(in\014nite,)i
(laziness)g(is)f(required,)g(the)f(programmer)i(should)-152
3289 y(kno)n(w)27 b(this,)g(and)f(it)g(can)h(b)r(e)f(easily)h
(expressed)g(using)f(the)g(laziness)-152 3376 y(annotation)h
Fh(lazy)p Fl(.)-152 3524 y Fg(from)37 b(n)e(=)71 b(n)36
b(:)f(\(lazy)i(\(from)g(\(n+1\)\)\))-152 3674 y(take)g(0)e(xs)h(=)g([])
-152 3749 y(take)h(n)e([])h(=)g([])-152 3823 y(take)h(n)e(\(x:xs\))i(=)
f(x)f(:)h(take)g(\(n-1\))h(xs)-77 3984 y Fl(The)23 b(tail)g(of)g(the)f
(list)i(created)e(b)n(y)g Fh(from)h Fl(will)h(alw)n(a)n(ys)f(b)r(e)g(a)
g(th)n(unk)-152 4072 y(b)r(ecause)k(of)f(the)g(annotation.)36
b(Other)25 b(expressions)i(are)f(ev)l(aluated)-152 4159
y(in)g(a)g(strict,)g(call-b)n(y-)f(v)l(alue)h(manner.)-152
4307 y Fg(prompt>)38 b(from)e(3)-152 4382 y([3)g(...])h(:)e([Int])-152
4532 y(prompt>)j(take)e(5)g(\(from)g(1\))-152 4606 y([1,2,3,4,5])j(:)c
([Int])-77 4767 y Fl(Ev)l(aluating)25 b Fh(\(from)40
b(3\))25 b Fl(returns)f(the)g(in\014nite)g(list)i(whose)f(tail)g(is)
-152 4855 y(a)i(th)n(unk.)33 b(But,)26 b(applying)g Fh(\(take)40
b(5\))26 b Fl(to)h Fh(\(from)40 b(1\))26 b Fl(forces)h(ev)l(alu-)-152
4942 y(ation)22 b(of)g(the)f(th)n(unk)n(ed)e(tail)j(to)g(pro)r(duce)f
(a)h(list)g(of)g(length)f(5.)33 b(While)-152 5029 y(creating)20
b(a)e(th)n(unk)f(is)h(explicit,)j(forcing)e(a)g(th)n(unk)d(is)j
(implicit,)i(and)d(is)-152 5116 y(p)r(erformed)28 b(whenev)n(er)f
(computation)h(pulls)g(on)f(the)g(th)n(unk.)38 b(This)-152
5203 y(is)27 b(completely)f(analogous)h(to)f(pulling)g(on)g(a)g(th)n
(unk)e(in)h(Hask)n(ell.)-77 5290 y(Unfortunately)c(things)g(are)g(not)g
(quite)g(as)g(simple)h(as)g(this.)33 b(Con-)-152 5378
y(sider)26 b(the)g(t)n(w)n(o)g(functions)g Fh(map1)g
Fl(and)g Fh(map2)p Fl(.)2040 -69 y Fg(map1)37 b(f)e([])h(=)g([])2040
6 y(map1)h(f)e(\(x:xs\))i(=)f(f)f(x)h(:)f(map1)i(f)e(xs)2040
156 y(map2)i(f)e([])h(=)g([])2040 230 y(map2)h(f)e(\(x:xs\))i(=)f(f)f
(x)h(:)f(\(lazy)i(\(map2)g(f)e(xs\)\))2115 394 y Fl(Applying)25
b(these)g(functions)h(to)g(a)g(few)h(lists,)g(w)n(e)f(observ)n(e:)2040
546 y Fg(prompt>)37 b(map2)g(\(+1\))f([1,2,3])2040 620
y([2)g(...])g(:)g([Int])2040 770 y(prompt>)h(map2)g(\(+1\))f(\(from)h
(1\))2040 845 y([2)f(...])g(:)g([Int])2040 994 y(prompt>)h(map1)g
(\(+1\))f([1,2,3])2040 1069 y([2,3,4])h(:)f([Int])2040
1218 y(prompt>)h(map1)g(\(+1\))f(\(from)h(1\))2040 1293
y(--)f(program)h(diverges)2115 1457 y Fl(First,)22 b
Fh(map2)g Fl(is)f(to)r(o)g(lazy)-6 b(.)32 b(When)20 b(applied)h(to)g(a)
f(list)i(without)e(an)n(y)2040 1544 y(em)n(b)r(edded)27
b(th)n(unks,)g(it)h(inserts)g(unnecessary)g(ones.)42
b(But)27 b Fh(map1)i Fl(is)2040 1631 y(equally)f(bad,)h(b)r(ecause)g
(when)f(applied)g(to)g(a)h(th)n(unk)d(guarding)j(an)2040
1718 y(in\014nite)35 b(computation,)j(it)d(rep)r(eatedly)g(forces)i
(eac)n(h)e(of)h(the)f(em-)2040 1806 y(b)r(edded)21 b(th)n(unks,)h(and)g
(hence)g(div)n(erges.)34 b(What)22 b(is)g(needed)g(is)h(some)2040
1893 y(b)r(eha)n(vior)j(in)f(b)r(et)n(w)n(een.)2115 1980
y(This)34 b(motiv)l(ates)f(a)h(need)e(for)i(a)g(second)f(laziness)i
(annotation.)2040 2067 y(This)23 b(annotation)f(is)g(implemen)n(ted)g
(b)n(y)f(the)g(\014rst)h(class)h(\(but)e(prim-)2040 2154
y(itiv)n(e\))h(function)g Fh(mimic)40 b(::)79 b(\(a)40
b(->)g(b\))f(->)h(a)f(->)h(b)p Fl(.)34 b(The)22 b(appli-)2040
2241 y(cation)k Fh(\(mimic)41 b(f)e(x\))27 b Fl(mimics)f(the)f
Fi(thunkiness)j Fl(of)e(the)g(argumen)n(t)2040 2329 y
Fh(x)p Fl(.)35 b(If)26 b Fh(x)g Fl(is)g(a)g(th)n(unk)e(it)i(creates)g
(a)g(new)g(th)n(unk)e(whic)n(h)i(will)h(apply)e Fh(f)2040
2416 y Fl(to)k Fh(x)f Fl(only)g(when)g(pulled)g(on.)43
b(If)28 b Fh(x)h Fl(is)f(just)h(an)f(ordinary)g(v)l(alue,)h(it)2040
2503 y(applies)e Fh(f)g Fl(to)f Fh(x)h Fl(and)f(returns)g(the)g
(resulting)h(v)l(alue.)37 b(Using)26 b Fh(mimic)2040
2590 y Fl(w)n(e)g(can)g(de\014ne)f(a)h(reasonable)h Fh(map)f
Fl(function.)2040 2742 y Fg(map)36 b(f)g([])g(=)f([])2040
2816 y(map)h(f)g(\(x:xs\))h(=)e(f)h(x)g(:)f(mimic)i(\(map)f(f\))g(xs)
2040 2966 y(prompt>)h(map)g(\(+1\))f([1,2,3])2040 3041
y([2,3,4])h(:)f([Int])2040 3190 y(prompt>)h(map)g(\(+1\))f(\(from)h
(1\))2040 3265 y([2)f(...])g(:)g([Int])2115 3429 y Fl(Using)e(only)g
(these)g(t)n(w)n(o)h(annotations,)i(it)e(is)f(p)r(ossible)i(to)e(pro-)
2040 3516 y(gram)f(a)f(wide)h(v)l(ariet)n(y)e(of)i(functions)f(that)g
(dep)r(end)f(crucially)i(on)2040 3603 y(laziness,)e(and)d(to)g
(indicate)h(exactly)f(where)g(laziness)i(is)f(required,)2040
3690 y(th)n(us)h(allo)n(wing)i(the)e(compiler)i(to)e(use)h(a)g(strict)g
(ev)l(aluation)f(order)2040 3777 y(ev)n(erywhere)k(else.)61
b(W)-6 b(e)34 b(illustrate)h(with)g(a)f(few)h(classical)i(exam-)2040
3865 y(ples.)45 b(De\014ning)28 b(in\014nite)g(lists)i(b)n(y)e(using)h
(recursiv)n(e)g(de\014nitions)g(is)2040 3952 y(p)r(ossible,)40
b(just)d(b)r(e)f(sure)g(and)g(guard)g(the)f(recursion)i(b)n(y)e(a)i
Fh(lazy)2040 4039 y Fl(annotation.)2040 4190 y Fg(ones)g(=)e(1)h(:)f
(\(lazy)i(ones\))2040 4340 y(expose)g(0)f(xs)g(=)f(xs)2040
4415 y(expose)i(n)f([])g(=)f([])2040 4489 y(expose)i(n)f(\(x:xs\))h(=)e
(x)h(:)f(expose)i(\(n-1\))g(xs)2040 4639 y(prompt>)g(expose)g(3)f(ones)
2040 4713 y([1,1,1)h(...])g(:)e([Int])2115 4877 y Fl(The)20
b(function)f Fh(expose)i Fl(exp)r(oses)f(an)f(arbitrary)h(pre\014x)f
(of)h(an)f(in\014-)2040 4965 y(nite)j(list,)j(but)c(preserv)n(es)i(the)
f(th)n(unk)f(of)i(the)f(tail.)34 b(Computing)23 b(the)2040
5052 y(in\014nite)j(list)i(of)f(Fib)r(onacci)h(n)n(um)n(b)r(ers)e(can)h
(use)g(the)f(same)i(pattern)2040 5139 y(as)j Fh(ones)p
Fl(:)45 b(exhibit)30 b(some)i(\014nite)e(pre\014x)f(\()p
Fh(0)39 b(:)h(1)f(:)h(_)p Fl(\))30 b(and)g(guard)2040
5226 y(the)25 b(recursion)i(b)n(y)d(lazy)-6 b(.)2040
5378 y Fg(fibs)37 b(=)e(0)h(:)f(1)h(:)f(\(lazy)i(\(zipWith)h(\(+\))e
(fibs)g(\(tail)h(fibs\)\)\))p eop
%%Page: 3 3
3 2 bop -152 6 a Fg(zipWith)38 b(f)d(\(x:xs\))i(\(y:ys\))g(=)-81
81 y(f)e(x)h(y)g(:)f(mimic)i(\(mimic)g(\(zipWith)g(f\))f(xs\))g(ys)-152
230 y(prompt>)i(expose)f(5)e(fibs)-152 305 y([0,1,1,2,3)j(...])f(:)e
([Int])-77 464 y Fl(Note)30 b(the)f(use)g(of)i Fh(mimic)f
Fl(t)n(wice)h(in)e Fh(zipWith)i Fl(since)f(it)g(recurses)-152
551 y(do)n(wn)24 b(t)n(w)n(o)h(lists)g(sim)n(ultaneously)-6
b(,)25 b(and)f(either)h(list)g(ma)n(y)e(ha)n(v)n(e)h(em-)-152
638 y(b)r(edded)h(th)n(unks.)-77 725 y(Computing)c(the)f(in\014nite)g
(list)h(of)g(primes)g(using)g(the)f(siev)n(e)h(of)g(Er-)-152
813 y(atosthenes)d(is)g(also)h(straigh)n(tforw)n(ard.)33
b(Just)18 b(b)r(e)f(sure)g(that)g Fh(iterate)-152 900
y Fl(and)26 b Fh(filter)h Fl(are)f(correctly)g(annotated.)-152
1046 y Fg(iterate)38 b(f)d(a)h(=)f(a)h(:)f(\(lazy)i(\(iterate)h(f)d
(\(f)h(a\)\)\))-152 1196 y(filter)h(p)f([])g(=)f([])-152
1270 y(filter)i(p)f(\(x:xs\))h(=)e(if)h(p)g(x)589 1345
y(then)h(x)e(:)h(mimic)h(\(filter)g(p\))f(xs)589 1420
y(else)h(mimic)f(\(filter)i(p\))e(xs)-152 1569 y(sieve)h(\(p:xs\))g(=)f
(filter)h(pred)f(xs)-81 1644 y(where)h(pred)f(y)g(=)f(rem)h(y)g(p)f(/=)
h(0)-152 1793 y(primes)h(=)f(map)g(head)g(\(iter)h(sieve)g(\(from)g
(2\)\))-152 1943 y(prompt>)h(take)e(10)g(primes)-152
2018 y([2,3,5,7,11,13,17,19,2)q(3,29)q(])41 b(:)36 b([Int])-77
2176 y Fl(A)25 b(commen)n(t)h(ab)r(out)f Fh(filter)i
Fl(is)f(in)f(order.)35 b(One)25 b(could)h(imagine)-152
2264 y(writing)36 b(the)e(test)g(part)g(of)i(the)e Fh(if)g
Fl(expression)h(as)g(\()p Fh(mimic)40 b(p)g(x)p Fl(\))-152
2351 y(in)32 b(an)n(ticipation)h(that)f(the)f(elemen)n(ts)h(of)h(the)f
(list,)i(as)f(w)n(ell)g(as)f(its)-152 2438 y(tail,)h(could)d(b)r(e)g(a)
h(lazy)f(computation.)49 b(W)-6 b(e)30 b(discuss)h(this)f(further)-152
2525 y(in)c(Section)g(4.)-77 2612 y(Our)31 b(last)i(annotation)g(is)g
(the)e Fh(strict)j Fl(annotation.)54 b(It)32 b(is)g(the)-152
2700 y(iden)n(tit)n(y)25 b(function)h(whic)n(h)g(forces)h(its)f
(argumen)n(t)f(if)i(it)f(is)g(a)g(th)n(unk.)-152 2846
y Fg(prompt>)38 b(tail)e(ones)-116 2921 y(...)g(:)f([Int])-152
3070 y(prompt>)j(id)d(\(tail)i(ones\))-116 3145 y(...)f(:)f([Int])-152
3294 y(prompt>)j(strict)f(\(tail)f(ones\))-152 3369 y([1)g(...])h(:)e
([Int])-77 3528 y Fl(Note)j(ho)n(w)g(the)f(tail)h(of)h
Fh(ones)f Fl(is)h(a)f(th)n(unk.)68 b(Also)38 b(note)g(that)-152
3615 y(applying)25 b(the)f Fh(id)g Fl(function)h(to)g
Fh(\(tail)40 b(ones\))25 b Fl(do)r(es)g(not)g(force)g(the)-152
3702 y(tail)37 b(since)g(id)f(is)g(not)g(strict)h(in)f(its)g(argumen)n
(t.)66 b(By)36 b(the)g(use)g(of)-152 3789 y Fh(strict)23
b Fl(w)n(e)e(can)g(force)i(this)e(computation)g(\(one)g(step)g(at)h
(least\).)33 b(In)-152 3877 y(this)c(sense)g Fh(strict)h
Fl(is)f(lik)n(e)f(Hask)n(ell's)i Fh(seq)f Fl(forcing)h(its)f(argumen)n
(t)-152 3964 y(in)24 b(to)f(some)i(form)f(of)g(head)g(normal)g(form)g
(\(i.e.)35 b(the)23 b(top)g(lev)n(el)h(part)-152 4051
y(of)h(the)f(returned)g(result)h(app)r(ears)g(as)g(a)f(v)l(alue,)h
(though)f(there)g(ma)n(y)-152 4138 y(b)r(e)i(th)n(unks)e(deep)r(er)i
(inside\).)-77 4225 y(F)-6 b(or)30 b(most)h(t)n(yp)r(es,)f(a)h(source)f
(lev)n(el)g(function)h(could)f(b)r(e)f(written)-152 4313
y(to)g(ha)n(v)n(e)f(the)g(same)h(e\013ect)f(since,)i(source)f(lev)n(el)
g(functions)g(ha)n(v)n(e)e(a)-152 4400 y(call)i(b)n(y)d(v)l(alue)h(ev)l
(aluation)h(order.)40 b(A)27 b(th)n(unk)f(can)h(b)r(e)h(forced)g(b)n(y)
e(a)-152 4487 y(gratuitous)31 b(insp)r(ection)g(\(or)g(pattern)e(matc)n
(h\).)48 b(F)-6 b(or)31 b(example,)h(at)-152 4574 y(the)26
b(t)n(yp)r(es)f Fh(Int)h Fl(and)f Fh([a])p Fl(,)i(w)n(e)f(could)g
(write:)-152 4721 y Fg(strictInt)38 b(x)e(=)f(x+0)-152
4870 y(strictList)j(\(x:xs\))f(=)f(x:xs)-77 5029 y Fl(But)23
b(since)g(a)h(single)g(function,)g(that)f(w)n(orks)g(at)h(all)g(t)n(yp)
r(es,)f(seems)-152 5116 y(preferable,)k(w)n(e)f(supply)f(it)h(as)g(a)g
(primitiv)n(e.)-77 5203 y(Finally)-6 b(,)30 b(w)n(e)e(exploit)h
(laziness)h(on)e(trees,)i(rather)e(than)g(lists,)j(to)-152
5290 y(sho)n(w)g(that)e(the)h(tec)n(hnique)f(can)h(b)r(e)f(generalized)
j(to)e(an)n(y)f(kind)g(of)-152 5378 y(data.)j(The)18
b(example)g(illustrated)h(\(whic)n(h)f(is)g(a)g(mo)r(di\014ed)g(v)n
(ersion)g(of)2040 -152 y
 15721840 9012101 7367557 7762247 23089397 16774348 startTexFig
 2040 -152 a
%%BeginDocument: graph.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - graph.ppt)
%%Version: 1 3
%%Creator: (Windows NT 4.0)
%%CreationDate: (D:20030517144059-07'00')
%%DocumentData: Clean7Bit
%%BoundingBox: 112 118 351 255
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
112 118 moveto 351 118 lineto 351 255 lineto 112 255 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Roman
[/N11/Times-Roman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
112 118 240 137 rectclip
[ 0 -1 1 0 -6.14279 366.13171 ] concat
false setSA
n
36.33 756.09 539.76 -719.76 re
1 setgray
f
1 J
0 j
0.720001 w
10 M
[] 0 d
n
114.33 354.33 132 -234 re
0  setgray
S
1 j
n
132.33 234.33 m
128.97 234.33 126.33 231.45 126.33 228.33 c
126.33 224.97 128.97 222.33 132.33 222.33 c
135.45 222.33 138.33 224.97 138.33 228.33 c
138.33 231.45 135.45 234.33 132.33 234.33 c
h
S
135.45 226.17 m
/N11 [0 9.12 -9.12 0 0 0] Tf
(1) show
n
186.33 318.33 m
182.97 318.33 180.33 315.45 180.33 312.33 c
180.33 308.97 182.97 306.33 186.33 306.33 c
189.45 306.33 192.33 308.97 192.33 312.33 c
192.33 315.45 189.45 318.33 186.33 318.33 c
h
S
189.45 310.17 m
(2) show
n
168.33 186.33 m
164.97 186.33 162.33 183.45 162.33 180.33 c
162.33 176.97 164.97 174.33 168.33 174.33 c
171.45 174.33 174.33 176.97 174.33 180.33 c
174.33 183.45 171.45 186.33 168.33 186.33 c
h
S
171.45 178.17 m
(3) show
n
228.33 240.33 m
224.97 240.33 222.33 237.45 222.33 234.33 c
222.33 230.97 224.97 228.33 228.33 228.33 c
231.45 228.33 234.33 230.97 234.33 234.33 c
234.33 237.45 231.45 240.33 228.33 240.33 c
h
S
231.45 232.17 m
(4) show
n
234.33 168.33 m
230.97 168.33 228.33 165.45 228.33 162.33 c
228.33 158.97 230.97 156.33 234.33 156.33 c
237.45 156.33 240.33 158.97 240.33 162.33 c
240.33 165.45 237.45 168.33 234.33 168.33 c
h
S
237.45 160.17 m
(5) show
n
135.21 222.33 m
164.25 184.89 l
156.33 188.73 m
164.49 185.13 l
162.57 193.53 l
S
0 J
2.16 w
n
132.33 234.33 m
181.77 307.05 l
S
1 J
n
180.09 294.33 m
181.77 307.05 l
170.49 300.81 l
S
0 J
n
187.05 305.61 m
170.49 186.33 l
S
1 J
n
166.65 198.81 m
170.73 186.57 l
177.93 197.13 l
S
0 J
n
173.61 183.69 m
224.49 229.05 l
S
1 J
n
219.69 217.05 m
224.49 229.29 l
212.01 225.69 l
S
0 J
n
173.85 178.89 m
228.81 164.49 l
S
1 J
n
216.33 161.85 m
228.81 164.49 l
219.21 173.13 l
S
0.720001 w
n
234.33 156.33 m
231.21 153.93 228.33 151.29 222.33 150.33 c
216.33 149.37 206.25 148.41 198.33 150.33 c
190.41 152.25 179.37 158.25 174.33 162.33 c
169.29 166.41 168.81 170.25 168.33 174.33 c
174.33 167.85 m
168.33 174.57 l
166.65 165.93 l
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%EOF

%%EndDocument

 endTexFig
 2040 1160 a Ff(Figure)50 b(1:)81 b(Graph)52 b(with)e(Sup)r(erimp)r
(osed)h(Depth-\014rst)2040 1247 y(Spanning)30 b(T)-7
b(ree.)2040 1493 y Fl(depth-\014rst)25 b(searc)n(h)i(from)h([7]\))f
(pro)r(duces)g(a)g(depth-\014rst)e(tree)i(that)2040 1580
y(spans)i(that)f(p)r(ortion)i(of)f(a)g(graph)g(reac)n(hable)g(from)h(a)
f(giv)n(en)f(ro)r(ot.)2040 1667 y(The)36 b(algorithm)i(pro)r(ceeds)e(b)
n(y)g(creating)h(an)f(\(p)r(ossibly\))g(in\014nite)2040
1754 y(tree)c(from)h(the)e(graph)h(and)g(ro)r(ot,)i(and)e(then)f
(pruning)g(a)n(w)n(a)n(y)h(the)2040 1842 y(redundan)n(t)24
b(parts)i(of)h(the)e(tree.)2040 1991 y Fg(data)37 b(Tree)f(=)g(Node)g
(Int)g([Tree])2040 2066 y(data)h(Graph)72 b(=)35 b(G)h([\(Int,[Int]\)])
2040 2215 y(expand)h(::)f(Graph)h(->)f(Int)g(->)g(Tree)2040
2290 y(expand)h(\(G)f(xs\))g(root)h(=)2287 2364 y(case)g(lookup)g(root)
f(xs)g(of)2358 2439 y(Just)g(children)i(->)2464 2514
y(Node)e(root)2640 2589 y(\(map)g(\(\\)g(w)g(->)g(lazy)g(\(expand)h
(\(G)f(xs\))g(w\)\))2816 2663 y(children\))2115 2825
y Fl(A)31 b Fh(Graph)i Fl(is)f(simply)g(a)f(list)i(of)f(no)r(de)g(iden)
n(ti\014ers)f(\()p Fh(Int)p Fl(\))h(paired)2040 2912
y(with)37 b(a)f(list)h(of)g(successor)h(no)r(de)e(iden)n(ti\014ers.)66
b(A)36 b Fh(Tree)h Fl(consists)2040 2999 y(of)32 b(a)g
Fh(Node)g Fl(with)f(an)h(iden)n(ti\014er)e(and)h(a)h(\(p)r(ossibly)g
(empt)n(y\))e(list)i(of)2040 3087 y(c)n(hildren)i(\(sub-trees\).)58
b(W)-6 b(e)33 b(can)h Fh(expand)h Fl(a)f Fh(Graph)h Fl(in)n(to)f(a)g
Fh(Tree)2040 3174 y Fl(b)n(y)25 b(building)h(a)g(tree)g(No)r(de)f(for)i
(the)e(ro)r(ot,)i(and)f(incorp)r(orating)h(the)2040 3261
y(recursiv)n(ely)j(constructed)f(trees)h(for)h(eac)n(h)f(successor)h
(of)f(the)g(ro)r(ot)2040 3348 y(as)c(the)g(c)n(hildren)f(of)i(the)e
Fh(Node)p Fl(.)2115 3435 y(Note)i(that)f(if)i(the)e(graph)h(is)g
(cyclic)h(then)e(the)g(tree)h(will)i(b)r(e)d(in\014-)2040
3522 y(nite.)34 b(T)-6 b(o)25 b(build)g(the)f(tree)h(on)g(demand,)g(w)n
(e)g(apply)f(the)h(lazy)g(anno-)2040 3610 y(tation)h(to)g(eac)n(h)g
(recursiv)n(e)g(call)g(to)g Fh(expand)p Fl(.)2115 3697
y(In)j(Figure)i(1)f(w)n(e)g(illustrate)h(a)f(small)h(cyclic)g(graph)f
(with)g(a)g(su-)2040 3784 y(p)r(erimp)r(osed)21 b(depth-\014rst)f
(spanning)g(tree.)34 b(W)-6 b(e)20 b(can)h(represen)n(t)f(this)2040
3871 y(graph)32 b(b)n(y)e(using)i(the)f Fh(Graph)h Fl(datat)n(yp)r(e)f
(constructor)h Fh(G)p Fl(.)f(W)-6 b(e)31 b(can)2040 3958
y(expand)25 b(it)h(in)n(to)f(a)h(tree,)g(and)g(observ)n(e)f(the)h
(structure)f(of)i(the)e(tree.)2040 4108 y Fg(g1)36 b(=)g(G)f([)h
(\(1,[2,3]\),\(2,[3]\),\(3,[4,)q(5]\),)q(\(4,[)q(]\),)q(\(5,[)q(3]\))42
b(])2040 4257 y(push)37 b(0)e(g)h(=)f(g)2040 4332 y(push)i(n)e(\(Node)i
(x)e(ys\))i(=)e(Node)i(x)e(\(map)i(\(push)f(\(n-1\)\))h(ys\))2040
4481 y(prompt>)g(expand)g(g1)f(1)2040 4556 y(\(Node)h(1)e([)h(...,)g
(...]\))h(:)f(Tree)2040 4705 y(prompt>)h(push)g(2)e(\(expand)j(g1)e
(1\))2040 4780 y(\(Node)h(1)e([\(Node)i(2)f([)g(...]\),\(Node)i(3)e([)f
(...,)h(...]\)]\))i(:)d(Tree)2115 4942 y Fl(Note)g(ho)n(w)g(the)f
(expanded)g(tree)h(has)g(th)n(unks)e(for)i(eac)n(h)g(c)n(hild.)2040
5029 y(The)28 b(function)g Fh(push)h Fl(whic)n(h)f(demands)g
Fh(n)g Fl(lev)n(els)h(of)g(a)f(tree,)h(forces)2040 5116
y(some)g(of)g(those)f(th)n(unks,)g(but)f(lea)n(v)n(es)i(undisturb)r(ed)
e(those)h(th)n(unks)2040 5203 y(b)r(elo)n(w)f(the)e Fh(n)h
Fl(threshold.)2115 5290 y(The)c(k)n(ey)f(to)h(the)f(algorithm)j(is)e
(the)f(function)h Fh(prune)p Fl(.)35 b(It)21 b(is)i(com-)2040
5378 y(pletely)f(oblivious)i(to)e(the)g(needed)g(laziness,)j(whic)n(h)d
(is)h(con\014ned)e(to)p eop
%%Page: 4 4
4 3 bop -152 -69 a Fl(just)31 b(the)f(de\014nition)g(of)h
Fh(expand)p Fl(.)50 b(The)31 b(function)g Fh(prune)g
Fl(b)r(eha)n(v)n(es)-152 19 y(lik)n(e)37 b(a)f(state)h(transformer.)68
b(T)-6 b(aking)36 b(as)h(input)f(a)g(list)h(of)h(no)r(des)-152
106 y(previously)25 b(visited,)g(a)g(list)h(of)f(p)r(ending)f(tree)h
(no)r(des)g(y)n(et)f(to)h(b)r(e)g(ex-)-152 193 y(plored,)37
b(and)c(returns)h(a)g(pair)g(of)h(the)e(trees)h(built,)i(and)e(another)
-152 280 y(\(augmen)n(ted\))25 b(list)i(of)f(visited)g(no)r(des.)-152
402 y Fg(prune)37 b(::)f([Int])h(->)e([Tree])i(->)f(\([Tree],[Int]\))
-152 477 y(prune)h(visited)g([])f(=)g(\([],visited\))-152
552 y(prune)h(visited)g(\(\(Node)g(n)f(cs\))g(:)g(ts\))g(=)-81
626 y(if)g(member)h(n)e(visited)25 701 y(then)h(prune)h(visited)g(ts)25
776 y(else)f(let)g(\(xs,vs\))i(=)d(prune)i(\(n)f(:)f(visited\))j(cs)342
850 y(\(ys,us\))g(=)d(prune)i(vs)f(ts)201 925 y(in)g(\(\(Node)h(n)f
(xs\))g(:)f(ys,)h(us\))-77 1060 y Fl(T)-6 b(o)23 b(build)e(a)i
(depth-\014rst)e(tree)h(that)g(spans)g(that)g(part)g(of)h(a)g(graph)
-152 1147 y(ro)r(oted)30 b(at)f(some)g(no)r(de,)h(\014rst)f(create)g
(an)g(in\014nite)f(tree,)i(and)e(then)-152 1234 y(w)n(alk)34
b(the)e(tree)i(in)e(depth)g(\014rst)h(order,)j(pruning)c(a)n(w)n(a)n(y)
h(an)n(y)g(sub-)-152 1321 y(trees,)24 b(whic)n(h)f(corresp)r(ond)g(to)f
(graph)h(no)r(des)f(visited)h(earlier)h(in)e(the)-152
1408 y(w)n(alk.)-152 1530 y Fg(dff)36 b(::)g(Graph)h(->)f(Int)g(->)g
([Tree])-152 1605 y(dff)g(g)g(root)g(=)g(fst\()g(prune)h([])f([expand)h
(g)f(root])h(\))-152 1755 y(prompt>)h(dff)e(g1)g(1)-152
1829 y([\(Node)h(1)f([\(Node)h(2)e([\(Node)i(3)f([\(Node)h(4)f([]\),)
836 1904 y(\(Node)h(5)f([]\)]\)]\)]\)])i(:)d([Tree])-152
2092 y Fm(3.)100 b(SEMANTICS)-77 2200 y Fl(In)23 b(order)i(to)f(think)f
(abstractly)i(ab)r(out)f(suc)n(h)f(a)i(system,)f(w)n(e)h(\014rst)-152
2287 y(devise)38 b(a)g(simple)g(small)h(step)e(seman)n(tics)h(whic)n(h)
g(describ)r(es)g(the)-152 2374 y(b)r(eha)n(vior)32 b(w)n(e)h(wish)g(to)
f(use.)53 b(Then)32 b(later,)j(w)n(e)d(write)h(a)f(monadic)-152
2461 y(in)n(terpreter)j(whic)n(h)f(implemen)n(ts)h(this)g(b)r(eha)n
(vior.)62 b(In)34 b(our)g(small)-152 2548 y(step)26 b(seman)n(tics)g(w)
n(e)h(ha)n(v)n(e)e(the)g(normal)h Fe(\014)1085 2556 y
Fd(v)1148 2548 y Fl(and)g Fi(c)l(ase)g Fl(rules)466 2737
y(\()p Fe(\025)21 b(x)g(:)h(e)p Fl(\))f Fe(v)293 b Fc(!)75
b Fe(e)p Fl([)p Fe(v)s(=x)p Fl(])250 2824 y Fh(case)22
b Fl(\()p Fe(C)27 b(v)s Fl(\))21 b Fh(of)h Fe(C)k(x)21
b Fh(->)h Fe(e)74 b Fc(!)h Fe(e)p Fl([)p Fe(v)s(=x)p
Fl(])-152 2943 y(Plus)26 b(the)e(follo)n(wing)k(rules)e(whic)n(h)f
(describ)r(e)g(the)g(in)n(teraction)h(with)-152 3030
y(the)g(laziness)h(annotations.)302 3219 y(\()p Fh(lazy)22
b Fe(e)546 3227 y Fb(1)580 3219 y Fl(\))f Fe(e)667 3227
y Fb(2)915 3219 y Fc(!)223 b Fe(e)1251 3227 y Fb(1)1307
3219 y Fe(e)1343 3227 y Fb(2)194 3306 y Fh(case)22 b
Fl(\()p Fh(lazy)g Fe(e)p Fl(\))f Fh(of)q Fe(:::)106 b
Fc(!)115 b Fh(case)23 b Fe(e)e Fh(of)p Fe(:::)236 3393
y Fh(strict)i Fl(\()p Fh(lazy)f Fe(e)p Fl(\))148 b Fc(!)286
b Fe(e)163 3481 y Fl(\()p Fh(mimic)22 b Fe(e)446 3489
y Fb(1)481 3481 y Fl(\))f(\()p Fh(lazy)h Fe(e)776 3489
y Fb(2)810 3481 y Fl(\))75 b Fc(!)f Fl(\()p Fh(lazy)23
b Fl(\()p Fe(e)1341 3489 y Fb(1)1396 3481 y Fe(e)1432
3489 y Fb(2)1466 3481 y Fl(\)\))315 3568 y(\()p Fh(mimic)f
Fe(e)p Fl(\))f Fe(v)229 b Fc(!)256 b Fe(e)21 b(v)-77
3686 y Fl(Th)n(us)g(w)n(e)g(see)h(that)f Fh(lazy)h Fl(computations)f
(are)h(forced)g(only)f(when)-152 3774 y(app)r(earing)29
b(in)e(one)h(of)g(three)f(con)n(texts:)38 b(the)27 b(function)h(part)f
(of)i(an)-152 3861 y(application,)38 b(the)33 b(scrutinee)h(of)h(a)f
(case,)j(or)d(the)g(argumen)n(t)g(of)g(a)-152 3948 y
Fh(strict)e Fl(annotation.)49 b(T)-6 b(o)30 b(giv)n(e)h(a)g(big)f(step)
g(seman)n(tics)h(w)n(e)g(use)f(a)-152 4035 y(simple)24
b(monadic)f(in)n(terpreter:)33 b Fh(eval)40 b(::)79 b(Env)40
b(->)f(Exp)h(->)g(M)f(V)p Fl(.)-152 4122 y(Where)17 b
Fh(V)h Fl(is)g(the)f(domain)g(of)h(v)l(alues,)h Fh(Env)f
Fl(maps)g(program)g(v)l(ariables)-152 4209 y(to)27 b(\(p)r(ossibly)f
(lazy\))g(v)l(alues,)h Fh(Exp)f Fl(represen)n(ts)h(programs,)g(and)f
Fh(M)g Fl(is)-152 4297 y(the)17 b(monad.)32 b(In)17 b(the)f(curren)n(t)
h(implemen)n(tation)h Fh(M)f Fl(is)h(the)f(IO)g(monad)-152
4384 y(with)26 b(exceptions.)-77 4471 y(V)-6 b(alues)28
b(include:)39 b(in)n(tegers,)29 b(pairs,)g(data)g(constructed)e(ob)t
(jects,)-152 4558 y(functions,)33 b(and)e(th)n(unks.)49
b(Th)n(unks)30 b(are)i(the)f(k)n(ey)f(to)h(the)g(explicit)-152
4645 y(laziness)26 b(and)d(are)i(implemen)n(ted)f(as)g
Fh(IORef)p Fl(s)h(so)g(that)f(they)f(can)h(b)r(e)-152
4733 y(o)n(v)n(erwritten)i(once)g(ev)l(aluated.)-152
4855 y Fg(type)37 b(Thunk)f(a)g(=)g(\(IORef)h(\(Either)g(\(M)f(a\))g
(a\)\))-152 5004 y(data)h(V)-81 5079 y(=)e(Vlit)i(Int)-81
5153 y(|)e(Vprod)i(V)f(V)-81 5228 y(|)f(Vfun)i(\(V)f(->)g(M)f(V\))-81
5303 y(|)g(Vcon)i(String)g([)e(V)h(])-81 5378 y(|)f(Vthunk)i(\(Thunk)g
(V\))2115 -69 y Fl(A)28 b(th)n(unk)g(\(implemen)n(ted)h(b)n(y)f
Fh(Vthunk)p Fl(\))i(is)g(either)f(a)g(susp)r(ended)2040
19 y(computation)g(\()p Fh(M)39 b(V)p Fl(\),)28 b(or)h(if)g(previously)
f(forced,)i(a)f(v)l(alue)f(\()p Fh(V)p Fl(\).)g(W)-6
b(e)2040 106 y(use)21 b(an)h(IORef)e(to)i(mo)r(del)g(sharing,)h(and)e
(to)g(ensure)h(that)f(a)g(compu-)2040 193 y(tation)27
b(is)h(only)e(ev)l(aluated)h(at)g(most)g(once)h(\(the)e(hallmark)h(of)h
(true)2040 280 y(laziness\).)48 b(This)30 b(w)n(orks)g(b)n(y)f
(initializing)i(the)f(reference)g(to)g(\()p Fh(Left)2040
367 y Fi(c)l(omputation)p Fl(\),)47 b(and)41 b(o)n(v)n(erwriting)h(the)
f(reference)h(with)g(\()p Fh(Right)2040 454 y Fi(value)p
Fl(\))26 b(after)h(it)e(has)h(b)r(een)g(forced.)2115
542 y(In)f(the)h(in)n(terpreter)g(all)h(access)g(to)f(th)n(unks)f(is)i
(mediated)f(b)n(y)f(the)2040 629 y(t)n(w)n(o)32 b(functions:)48
b Fh(thunk)40 b(::)79 b(M)40 b(V)f(->)h(M)f(V)32 b Fl(for)h(creating)g
(th)n(unks)2040 716 y(from)18 b(computations,)i(and)d
Fh(pullWith)41 b(::)79 b(\(V)39 b(->)h(M)f(a\))h(->)g(Thunk)2040
803 y(V)g(->)f(M)h(a)26 b Fl(for)g(forcing)h(and)e(o)n(v)n(erwriting)i
(th)n(unks.)2040 953 y Fg(thunk)37 b(::)f(M)f(V)h(->)g(M)f(V)2040
1028 y(thunk)i(c)e(=)h(do)g({)f(r)h(<-)g(newRef)h(\(Left)g(c\);)f
(return\(Vthunk)j(r\))c(})2115 1190 y Fl(Giv)n(en)h(a)i(computation)f
(that)g(should)f(b)r(e)h(susp)r(ended,)i Fh(thunk)2040
1278 y Fl(allo)r(cates)26 b(a)e(new)g(reference)h(cell,)g(stores)g(the)
e(computation)h(inside)2040 1365 y(the)h(reference)i(cell,)g(and)e
(returns)g(a)h(new)g(th)n(unk)e(v)l(alue.)2040 1515 y
Fg(pullWith)38 b(::)e(\(V)f(->)h(M)g(a\))g(->)g(Thunk)g(V)g(->)g(M)f(a)
2040 1589 y(pullWith)j(f)d(ref)h(=)g(do)g({)f(v)h(<-)g(down)g(ref;)h(f)
e(v)h(})2040 1739 y(down)h(::)e(Ref)i(V)e(->)h(FIO)g(V)2040
1814 y(down)h(ref)f(=)2111 1888 y(do)g({)f(x)h(<-)g(readRef)h(ref)2217
1963 y(;)e(case)i(x)e(of)2358 2038 y(Left)h(m)g(->)2428
2113 y(do)g({)g(v)f(<-)h(m)2534 2187 y(;)g(u)f(<-)h(case)h(v)e(of)2816
2262 y(Vthunk)i(r2)f(->)g(down)g(r2)2816 2337 y(u)g(->)g(return)h(u)
2534 2411 y(;)f(writeRef)h(ref)f(\(Right)h(u\))2534 2486
y(;)f(return)h(u)e(})2358 2561 y(Right)h(v)g(->)g(return)h(v)2217
2636 y(})2115 2798 y Fl(The)28 b(expression)g Fh(\(pullWith)42
b(f)d(ref\))29 b Fl(applies)g Fh(f)f Fl(to)g(the)g(v)l(alue)2040
2885 y(stored)d(in)f(the)h(reference)g Fh(ref)p Fl(.)35
b(F)-6 b(orcing)25 b(and)f(o)n(v)n(erwriting)i(it)e(with)2040
2972 y(its)31 b(v)l(alue)f(if)h(it)f(is)h(still)g(laten)n(t,)h(or)f
(directly)f(applying)g Fh(f)h Fl(if)g(it)f(has)2040 3060
y(b)r(een)17 b(previously)g(forced.)32 b(The)18 b(normal)g(pattern)e
(of)i(use)f(of)h Fh(pullWith)2040 3147 y Fl(is)26 b(as)h(follo)n(ws:)
2040 3297 y Fg(f:)36 b(V)g(->)f(M)h(a)2040 3372 y(f)g(\(Vthunk)h(ref\))
f(=)g(pullWith)i(f)d(ref)2040 3446 y(f)h(pattern)h(=)f(...)2115
3609 y Fl(Some)d(function)g Fh(f)p Fl(,)i(from)f(v)l(alue)f(to)g
(computation,)j(is)d(applied)2040 3696 y(to)d(a)g(v)l(alue.)47
b Fh(f)30 b Fl(has)g(sev)n(eral)h(clauses,)h(one)e(for)h(th)n(unks,)f
(and)f(oth-)2040 3783 y(ers)24 b(for)g(its)f(normal)h(op)r(eration.)35
b(Normal)24 b(op)r(eration)g(of)g Fh(f)f Fl(requires)2040
3870 y(insp)r(ecting)j(the)g(v)l(alue)f(\(often)h(b)n(y)f(some)h(sort)h
(of)f(pattern)g(matc)n(h\).)2040 3957 y(T)-6 b(o)36 b(p)r(erform)f
(this)g(insp)r(ection)h Fh(pullWith)h Fl(forces)f(the)f(th)n(unk)e(in-)
2040 4045 y(side)d Fh(ref)p Fl(,)i(o)n(v)n(erwrites)f(the)f(reference)h
(and)e(\(recursiv)n(ely\))h(applies)2040 4132 y Fh(f)i
Fl(to)g(the)f(resulting)i(v)l(alue.)52 b(The)32 b(forcing,)j(and)c(o)n
(v)n(erwriting)i(are)2040 4219 y(captured)25 b(in)h(the)f(function)h
Fh(down)p Fl(.)2115 4306 y(The)19 b(in)n(terpreter)f(is)i(a)f(standard)
g(in)n(terpreter)f(for)i(a)f(call)h(b)n(y)e(v)l(alue)2040
4393 y(language.)34 b(It)21 b(can)h(b)r(e)f(found)g(in)g(its)g(en)n
(tiret)n(y)g(in)g(App)r(endix)e(A.)33 b(W)-6 b(e)2040
4481 y(will)32 b(only)e(discuss)g(the)g(p)r(ertinen)n(t)g(parts)g(that)
g(relate)h(to)f(explicit)2040 4568 y(laziness,)e(as)e(ev)n(erything)f
(else)h(is)g(completely)h(standard.)2040 4721 y Fm(3.1)99
b(Interaction)26 b(with)f(Thunks)2115 4829 y Fl(Only)18
b(minor)i(accommo)r(dations)h(w)n(ere)f(made)f(to)g(handle)g(explicit)
2040 4916 y(laziness.)41 b(In)27 b(the)f(function)i(p)r(osition)g(of)g
(an)f(application,)j(a)d(func-)2040 5003 y(tion)f(v)l(alue)f(\()p
Fh(Vfun)40 b(f)p Fl(\))26 b(is)g(exp)r(ected,)g(but)e(a)i(th)n(unk)e
(ma)n(y)i(o)r(ccur.)2040 5153 y Fg(eval)37 b(env)f(\(App)g(f)g(x\))g(=)
2111 5228 y(do)g({)f(g)h(<-)g(eval)g(env)g(f)2217 5303
y(;)f(y)h(<-)g(eval)g(env)g(x)2217 5378 y(;)f(applyV)i(g)f(y)f(})p
eop
%%Page: 5 5
5 4 bop -77 -69 a Fl(The)19 b Fh(applyV)h Fl(function)f
Fh(applies)h Fl(the)e(function)h(v)l(alue)f(in)h(its)g(\014rst)-152
19 y(argumen)n(t,)31 b(to)f(its)f(second)h(argumen)n(t.)46
b(If)30 b(the)f(\014rst)g(argumen)n(t)g(is)-152 106 y(an)35
b(unexp)r(ected)e(th)n(unk,)i(the)f Fh(pullWith)i Fl(function)e
(handles)h(this)-152 193 y(complication)28 b(using)e(the)f(generic)h
(sc)n(heme)g(describ)r(ed)g(ab)r(o)n(v)n(e.)-152 358
y Fg(applyV)37 b(::)f(V)g(->)g(V)f(->)h(M)g(V)-152 433
y(applyV)h(\(Vthunk)h(m\))d(x)h(=)g(pullWith)h(\(\\)f(v)g(->)f(applyV)i
(v)f(x\))g(m)-152 507 y(applyV)h(\(Vfun)g(h\))f(x)f(=)71
b(h)36 b(x)-152 582 y(applyV)h(z)f(y)f(=)h(fail)g(\("Non)h(function)h
(in)e(application"\))-77 760 y Fl(The)d(only)f(other)g(accommo)r
(dation)j(for)e(th)n(unks)e(is)i(in)f(pattern)-152 847
y(matc)n(hing.)56 b(If)32 b(a)h(pattern)f(is)h(to)g(b)r(e)f(matc)n(hed)
h(against)g(a)g(th)n(unk,)-152 934 y(the)21 b(th)n(unk)f(m)n(ust)g(b)r
(e)h(forced)h(b)r(efore)g(matc)n(hing)g(can)f(pro)r(ceed.)34
b(The)-152 1021 y(meta-function)25 b Fh(mPat)g Fl(implemen)n(ts)f
(pattern)g(matc)n(hing)g(in)g(the)g(in-)-152 1108 y(terpreter.)53
b(It)31 b(p)r(erforms)i(a)f(sim)n(ultaneous)h(analysis)g(o)n(v)n(er)e
(a)h(pat-)-152 1195 y(tern)e(and)g(a)g(v)l(alue,)h(adding)f(bindings)g
(to)g(an)g(en)n(vironmen)n(t)f(frag-)-152 1283 y(men)n(t,)35
b(whic)n(h)f(consist)g(of)g(pairs)g(of)g(v)l(ariables)g(app)r(earing)g
(in)f(the)-152 1370 y(pattern)h(and)g(v)l(alues.)60 b(If)35
b(during)e(this)i(analysis)g(a)g(th)n(unk)d(v)l(alue)-152
1457 y(is)h(matc)n(hed)e(against,)k(the)d(function)g
Fh(pullWith)h Fl(handles)f(this)g(as)-152 1544 y(describ)r(ed)26
b(ab)r(o)n(v)n(e.)-152 1709 y Fg(mPat)37 b(::)f(Pat)g(->)g(V)f(->)h
(EnvFrag)h(->)f(M)g(\(Maybe)h(EnvFrag\))-152 1784 y(mPat)g(\(Pvar)f
(s\))g(v)g(es)g(=)f(return\(Just\(\(s,v\):es\)\))-152
1859 y(mPat)i(p)e(\(Vthunk)j(r\))d(es)h(=)g(pullWith)h(\(\\)f(v)g(->)g
(mPat)g(p)g(v)f(es\))h(r)-152 1933 y(mPat)h(p)e(...)h(--)g(additional)i
(cases)-77 2111 y Fl(Note)19 b(that)g(the)g(clause)h(for)g(matc)n(hing)
g(a)f(pattern)g(v)l(ariable)h(\()p Fh(mPat)-152 2198
y(\(Pvar)41 b(s\))e(v)h(es)g(=)f(...)p Fl(\))32 b(precedes)19
b(the)e(clause)i(for)g(th)n(unks)e(\()p Fh(mPat)-152
2285 y(p)40 b(\(Vthunk)h(r\))e(es)h(=)f(...)p Fl(\))48
b(as)31 b(a)f(v)l(ariable)h(can)f(b)r(e)g(b)r(ound)f(to)h(a)-152
2372 y(th)n(unk,)j(whic)n(h)g(need)f(only)g(b)r(e)h(\\pulled)f(on")h
(when)g(the)f(v)l(alue)g(of)-152 2460 y(the)26 b(v)l(ariable)g(is)g
(demanded.)-152 2622 y Fm(3.2)99 b(Implementing)26 b(the)g(Lazy)f
(Annotations)-77 2730 y Fl(There)k(are)f(three)g(laziness)i
(annotations.)42 b(One)28 b(language)h(con-)-152 2818
y(struct)i Fh(lazy)p Fl(,)i(and)e(t)n(w)n(o)g(primitiv)n(e)g(\014rst)f
(class)i(functions:)46 b Fh(mimic)-152 2905 y Fl(and)29
b Fh(strict)p Fl(.)45 b(The)29 b(language)h(construct)f
Fh(lazy)h Fl(annotates)f(those)-152 2992 y(parts)i(of)g(the)f(program)h
(that)f(should)h(b)r(e)f(ev)l(aluated)g(lazily)-6 b(.)50
b(The)-152 3079 y(annotation)27 b(is)g(implemen)n(ted)f(as)g(the)g
(case)h(in)f(the)g Fh(eval)h Fl(function)-152 3166 y(for)g(the)e
Fh(Lazy)i Fl(syn)n(tax)d(constructor.)-152 3331 y Fg(eval)37
b(env)f(\(Lazy)h(x\))e(=)h(thunk)h(\(eval)f(env)h(x\))-77
3509 y Fl(If)21 b(a)g(term)f Fh(x)h Fl(is)g(to)g(b)r(e)f(ev)l(aluated)h
(lazily)-6 b(,)22 b(wrap)f(the)f(computation)-152 3596
y(that)j(will)h(compute)e(it)h(\()p Fh(eval)40 b(env)g(x)p
Fl(\))23 b(up)f(in)g(a)h(th)n(unk)e(and)h(return)-152
3683 y(this)k(th)n(unk.)34 b(Here)26 b(w)n(e)g(use)g(the)g
(meta-function)g Fh(thunk)h Fl(describ)r(ed)-152 3770
y(in)f(Section)g(3.)-77 3858 y(The)k(other)g(t)n(w)n(o)g(annotations)h
(can)f(b)r(e)f(implemen)n(ted)h(as)g(func-)-152 3945
y(tions)c(whic)n(h)g(are)g(presen)n(t)g(in)f(the)h(initial)g(en)n
(vironmen)n(t.)-152 4110 y Fg(mimic)37 b(::)f(V)71 b(--)36
b(prim)g(mimic)h(::)f(\(a)f(->)h(b\))g(->)g(a)g(->)f(b)-152
4185 y(mimic)i(=)f(Vfun\(\\)h(f)e(->)h(return\(Vfun)i(\(g)e(f\)\)\))-81
4259 y(where)h(g)e(f)h(\(Vthunk)h(m\))f(=)f(thunk\(pullWith)40
b(\(g)c(f\))f(m\))131 4334 y(g)g(f)h(v)f(=)h(applyV)h(f)e(v)-77
4511 y Fl(Recall)29 b(that)f Fh(mimic)i Fl(tak)n(es)e(t)n(w)n(o)h
(argumen)n(ts,)h(hence)e(the)g(struc-)-152 4599 y(ture)21
b Fh(Vfun\(\\)41 b(f)e(->)h(return\(Vfun)i(\(g)d(f\)\)\))p
Fl(.)34 b(But)22 b(if)g(the)f(second)-152 4686 y(argumen)n(t)27
b(of)h Fh(mimic)g Fl(is)g(a)f(th)n(unk,)f(w)n(e)i(w)n(an)n(t)f(the)g
(result)g(of)h(mimic)-152 4773 y(to)21 b(b)r(e)f(a)g(th)n(unk)f(as)h(w)
n(ell.)34 b(If)21 b(the)e(second)i(argumen)n(t)f(is)h(not)f(a)g(th)n
(unk,)-152 4860 y(than)26 b(just)f(apply)h(the)f(\014rst)g(argumen)n(t)
h(to)g(the)f(second.)-77 4935 y(The)35 b(last)h(annotation)f
Fh(strict)h Fl(forces)h(its)e(argumen)n(t)g(if)g(its)g(a)-152
5010 y(th)n(unk.)-152 5153 y Fg(strict)i(::)f(V)-152
5228 y(strict)h(=)f(Vfun)g(f1)g(--)g(prim)g(strict)h(::)f(a)g(->)g(a)
-81 5303 y(where)h(f1)e(\(Vthunk)j(m\))e(=)f(pullWith)j(f1)e(m)131
5378 y(f1)f(v)h(=)g(return)h(v)2040 -69 y Fm(4.)99 b(DISCUSSION)2115
39 y Fl(This)19 b(pap)r(er)g(is)g(ab)r(out)g(a)g(rather)g(simple)g
(idea:)32 b(that)18 b(the)h(user)f(can)2040 126 y(use)31
b(explicit)f(laziness)i(annotations)g(to)e(indicate)h(where)g(laziness)
2040 214 y(is)22 b(necessary)-6 b(.)33 b(This)22 b(allo)n(ws)h(the)e
(implemen)n(tation)h(to)f(use)g(a)h(simple)2040 301 y(and)k(e\016cien)n
(t)g(strict)h(call-b)n(y-v)l(alue)e(default)i(ev)l(aluation)f(order)h
(on)2040 388 y(the)e(rest)h(of)h(the)e(program.)2115
475 y(While)17 b(our)g(implemen)n(tation)h(is)g(just)f(a)h(to)n(y)-6
b(,)18 b(this)f(strategy)h(should)2040 562 y(b)r(e)23
b(easy)h(to)f(implemen)n(t)g(on)g(top)g(of)h(the)f(run)n(time)g(system)
g(of)h(exist-)2040 649 y(ing)c(lazy)h(languages.)34 b(Suc)n(h)19
b(languages)i(m)n(ust)f(already)g(distinguish)2040 737
y(th)n(unks)26 b(from)j(v)l(alues,)g(and)f(force)h(them)e(when)h
(necessary)-6 b(.)41 b(Using)2040 824 y(explicit)c(laziness)g(requires)
f(the)g(same)h(run-time)f(system)g(as)h(an)2040 911 y(ordinary)g(lazy)g
(language,)k(but)36 b(needs)h(a)g(considerably)h(simpler)2040
998 y(compiler,)27 b(since)f(strictness)h(analysis)g(is)f(not)f
(required.)2115 1085 y(The)g(biggest)h(surprise)f(to)g(the)g(author)g
(w)n(as)h(ho)n(w)f(simple)h(it)f(w)n(as)2040 1173 y(to)32
b(write)h(programs)g(where)f(laziness)h(m)n(ust)e(b)r(e)h(explicitly)g
(anno-)2040 1260 y(tated.)59 b(The)34 b(k)n(ey)f(to)h(the)f(e\013ectiv)
n(e)h(use)f(of)i(explicit)f(annotation)2040 1347 y(w)n(as)h(the)f
(function)g Fh(mimic)i Fl(whic)n(h)e(main)n(tains)h(existing)g
(laziness.)2040 1434 y(W)-6 b(e)25 b(b)r(eliev)n(e)h
Fh(mimic)h Fl(is)f(original)i(to)e(this)f(w)n(ork.)2115
1521 y(Lastly)i(w)n(e)h(w)n(an)n(t)f(to)g(sa)n(y)g(a)g(w)n(ord)h(ab)r
(out)f(libraries.)40 b(One)26 b(could)2040 1608 y(imagine)33
b(that)e(library)h(writers)h(migh)n(t)f(rely)f(hea)n(vily)h(on)f(the)h
(use)2040 1696 y Fh(mimic)24 b Fl(b)r(ecause)g(they)e(do)i(not)f(kno)n
(w)g(whic)n(h)g(argumen)n(ts)g(migh)n(t)h(b)r(e)2040
1783 y(computations)h(rather)f(than)g(v)l(alues.)34 b(F)-6
b(or)24 b(example,)h(in)f(Section)g(2)2040 1870 y(w)n(e)h(suggested)g
(that)f(the)h Fh(filter)g Fl(function)g(migh)n(t)f(b)r(e)h(written)g
(as:)2040 2035 y Fg(filter)37 b(p)f([])g(=)f([])2040
2110 y(filter)i(p)f(\(x:xs\))h(=)e(if)h(mimic)h(p)e(x)2781
2184 y(then)i(x)e(:)h(mimic)g(\(filter)i(p\))d(xs)2781
2259 y(else)i(mimic)f(\(filter)h(p\))f(xs)2115 2437 y
Fl(An)n(ticipating)c(that)g(the)g(elemen)n(ts)h(of)g(the)f(list)h(migh)
n(t)g(also)h(b)r(e)2040 2524 y(lazy)-6 b(.)33 b(While)20
b(this)h(migh)n(t)f(b)r(e)g(the)g(case)h(in)f(other)g(library)h
(functions,)2040 2611 y(it)k(is)g(not)g(the)f(case)i(in)e
Fh(filter)p Fl(.)36 b(Note)25 b(that)f(the)g(elemen)n(t)h(m)n(ust)g(b)r
(e)2040 2698 y(fully)k(ev)l(aluated)g(if)h Fh(p)g Fl(is)f(to)h(return)e
(a)i Fh(Bool)p Fl(,)h(so)f(no)f Fh(mimic)h Fl(in)f(the)2040
2785 y(test)i(of)g(the)f Fh(if)g Fl(is)h(needed.)48 b(Of)30
b(course)h(other)g(library)f(functions)2040 2872 y(migh)n(t)25
b(not)f(b)r(e)h(so)g(straigh)n(t-forw)n(ard)h(so)f(w)n(e)g(exp)r(ect)f
(lib)r(eral)i(use)f(of)2040 2960 y Fh(mimic)32 b Fl(in)e(library)g
(functions.)49 b(The)31 b(cost)g(of)g(this)f(dep)r(ends)g(up)r(on)2040
3047 y(the)25 b(cost)h(of)h(using)e(the)h(mimic)g(function.)34
b(In)25 b(our)h(in)n(terpreter)f(the)2040 3134 y(cost)33
b(of)g(using)g(mimic)g(is)g(relativ)n(ely)g(c)n(heap,)h(only)e(sligh)n
(tly)h(more)2040 3221 y(costly)26 b(than)f(the)h(cost)g(of)g(using)g
(actual)h(application.)2040 3439 y Fm(5.)99 b(RELA)-9
b(TED)26 b(W)o(ORK)2115 3547 y Fl(A)32 b(summary)g(of)h(the)g(related)g
(w)n(ork)f(can)h(b)r(e)f(found)h(in)f(Figure)2040 3634
y(2)g(w)n(e)g(compare)g(a)g(n)n(um)n(b)r(er)f(of)h(systems)g(along)h(t)
n(w)n(o)f(dimensions.)2040 3721 y(The)23 b(First)g(dimension)g(is)g
(whether)f(or)h(not)f(the)g(system)h(requires)f(a)2040
3808 y(t)n(yp)r(e)g(distinction)h(b)r(et)n(w)n(een)g(lazy)g(and)g
(eagerly)h(ev)l(aluated)e(compu-)2040 3896 y(tations.)40
b(The)27 b(second)h(dimension)f(is)h(what)f(t)n(yp)r(e)g(of)h
(annotations)2040 3983 y(are)e(required)f(b)n(y)g(the)g(user.)2115
4070 y(The)31 b(use)g(of)h(a)g(t)n(yp)r(e)e(distinction)i(often)g(allo)
n(ws)h(more)e(e\016cien)n(t)2040 4157 y(implemen)n(tation)e(as)f
(dynamic)g(tests)h(to)f(distinguish)g(the)g(t)n(w)n(o)h(do)2040
4244 y(not)24 b(ha)n(v)n(e)g(to)h(b)r(e)f(p)r(erformed.)35
b(The)25 b(dra)n(wbac)n(k)f(of)i(this)e(distinction)2040
4332 y(is)38 b(that)f(it)h(is)f(harder)h(to)f(use.)70
b(The)37 b(programmer)i(m)n(ust)e(trac)n(k)2040 4419
y(these)32 b(t)n(yp)r(es,)i(and)e(m)n(ultiple)g(v)n(ersions)h(of)g
(some)g(functions)g(m)n(ust)2040 4506 y(b)r(e)h(written)h(to)f(accommo)
r(date)i(v)l(arying)e(degrees)h(of)g(laziness)h(in)2040
4593 y(their)26 b(argumen)n(ts.)35 b(W)-6 b(e)25 b(no)n(w)h(discuss)g
(some)h(individual)e(systems.)2115 4680 y Ff(Sp)r(eculativ)n(e)31
b(Ev)-5 b(aluation.)39 b Fl(Some)28 b(of)g(the)f(earliest)j(w)n(ork)e
(on)2040 4767 y(adding)d(strictness)h(to)f(a)h(lazy)f(language)i(w)n
(as)f(done)f(b)n(y)f(Karl-Filip)2040 4855 y(F)-6 b(axen)40
b([4,)45 b(5].)79 b(He)41 b(used)f(a)g Fi(whole-pr)l(o)l(gr)l(am)j
Fl(\015o)n(w)e(analysis)g(to)2040 4942 y(iden)n(tify)24
b(whic)n(h)h(computations)g(w)n(ould)g(alw)n(a)n(ys)g(b)r(e)f(needed,)h
(or)g(b)r(e)2040 5029 y(c)n(heap)j(to)g(compute.)42 b(The)28
b(compiler)h(then)f(arranges)h(to)f(sp)r(ecula-)2040
5116 y(tiv)n(ely)i(ev)l(aluate)g(suc)n(h)g(computations)h(eagerly)-6
b(.)49 b(The)30 b(dra)n(w)h(bac)n(k)2040 5203 y(with)21
b(this)g(approac)n(h)f(is)i(that)e(it)h(can)f(only)h(b)r(e)f(applied)h
(if)g(the)g(whole)2040 5290 y(program)i(is)g(a)n(v)l(ailable)g(for)g
(analysis,)i(and)c(sp)r(eculativ)n(e)i(ev)l(aluation)2040
5378 y(m)n(ust)i(b)r(e)h(decided)f(statically)-6 b(.)p
eop
%%Page: 6 6
6 5 bop -152 -152 a
 32496190 15656059 15919185 9735700 48415375 25391759 startTexFig
 -152 -152 a
%%BeginDocument: fig.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - graph.ppt)
%%Version: 1 3
%%Creator: (Windows NT 4.0)
%%CreationDate: (D:20030521082242-07'00')
%%DocumentData: Clean7Bit
%%BoundingBox: 242 148 736 386
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
242 148 moveto 736 148 lineto 736 386 lineto 242 386 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict/ct_EuroDict 10 dict put ct_EuroDict begin/ct_CopyFont{{1 index/FID ne
{def}{pop pop}ifelse}forall}def/ct_GetGlyphOutline{gsave initmatrix newpath
exch findfont dup length 1 add dict begin ct_CopyFont/Encoding Encoding dup
length array copy dup 4 -1 roll 0 exch put def currentdict end/ct_EuroFont
exch definefont 1000 scalefont setfont 0 0 moveto[<00>stringwidth<00>false
charpath pathbbox[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall grestore
counttomark 8 add}def/ct_MakeGlyphProc{]cvx/ct_PSBuildGlyph cvx]cvx}def
%stack: glyph Wx Wy llx lly urx ury proc 
/ct_PSBuildGlyph{gsave 8 -1 roll pop 7 1 roll 6 -2 roll ct_FontMatrix
transform 6 2 roll 4 -2 roll ct_FontMatrix transform 4 2 roll ct_FontMatrix
transform currentdict/PaintType 2 copy known{get 2 eq}{pop pop false}ifelse
dup 9 1 roll{currentdict/StrokeWidth 2 copy known{get 2 div 0 ct_FontMatrix
dtransform pop 5 1 roll 4 -1 roll 4 index sub 4 1 roll 3 -1 roll 4 index sub 3
1 roll exch 4 index add exch 4 index add 5 -1 roll pop}{pop pop}ifelse}if
setcachedevice ct_FontMatrix concat ct_PSPathOps begin exec end{currentdict
/StrokeWidth 2 copy known{get}{pop pop 0}ifelse setlinewidth stroke}{fill}
ifelse grestore}def/ct_PSPathOps 4 dict dup begin/m{moveto}def/l{lineto}def/c{
curveto}def/cp{closepath}def end def/ct_matrix1000[1000 0 0 1000 0 0]def
/ct_AddGlyphProc{2 index findfont dup length 4 add dict begin ct_CopyFont
/CharStrings CharStrings dup length 1 add dict copy begin 3 1 roll def
currentdict end def/ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix
def/ct_PSBuildGlyph/ct_PSBuildGlyph load def/ct_PSPathOps/ct_PSPathOps load
def currentdict end definefont pop}def systemdict/languagelevel known{
/ct_AddGlyphToPrinterFont{2 copy ct_GetGlyphOutline 3 add -1 roll restore
ct_MakeGlyphProc ct_AddGlyphProc}def}{/ct_AddGlyphToPrinterFont{pop pop
restore Adobe_CTFauxDict /$$$FONTNAME get
/Euro Adobe_CTFauxDict /$$$SUBSTITUTEBASE get ct_EuroDict exch get
ct_AddGlyphProc}def}ifelse/AdobeSansMM{556 0 24 -19 541 703{541 628 m 510 669
442 703 354 703 c 201 703 117 607 101 444 c 50 444 l 25 372 l 97 372 l 97 301
l 49 301 l 24 229 l 103 229 l 124 67 209 -19 350 -19 c 435 -19 501 25 509 32 c
509 131 l 492 105 417 60 343 60 c 267 60 204 127 197 229 c 406 229 l 430 301 l
191 301 l 191 372 l 455 372 l 479 444 l 194 444 l 201 531 245 624 348 624 c
433 624 484 583 509 534 c cp 556 0 m}ct_PSBuildGlyph}def/AdobeSerifMM{500 0 10
-12 484 692{347 298 m 171 298 l 170 310 170 322 170 335 c 170 362 l 362 362 l
374 403 l 172 403 l 184 580 244 642 308 642 c 380 642 434 574 457 457 c 481
462 l 474 691 l 449 691 l 433 670 429 657 410 657 c 394 657 360 692 299 692 c
204 692 94 604 73 403 c 22 403 l 10 362 l 70 362 l 69 352 69 341 69 330 c 69
319 69 308 70 298 c 22 298 l 10 257 l 73 257 l 97 57 216 -12 295 -12 c 364 -12
427 25 484 123 c 458 142 l 425 101 384 37 316 37 c 256 37 189 84 173 257 c 335
257 l cp 500 0 m}ct_PSBuildGlyph}def end
%%EndFile
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 9
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 6
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 12
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 le and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
BBox 0 get BBox 1 get
BBox 2 get BBox 0 get sub
BBox 3 get BBox 1 get sub
rectclip
} if
gsave
clippath
pathbbox
/BByMax exch def
/BBxMax exch def
/BByMin exch def
/BBxMin exch def
grestore
BBxMax BBxMin eq BByMax BByMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background L1setcolor gsave clippath fill grestore } if
/areaOfConcern
BBxMin BByMin BBxMax BByMax
BBxMin BByMin
BBxMax BBxMin sub 0
0 BByMax BByMin sub
BBxMin BBxMax sub 0
12 packedarray
< 0B 00 01 04 04 04 0A>
2 packedarray
def
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
r1 add
r2 sub
abs
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 5
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} load dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica-Narrow
[/N13/Helvetica-Narrow 1 TZ
%%IncludeResource Times-Roman
[/N10/Times-Roman 1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
242 148 494 237 rectclip
[ 0 -1 1 0 93.53181 627.42395 ] concat
false setSA
n
36.33 756.09 539.76 -719.76 re
1 setgray
f
1 J
0 j
0.720001 w
10 M
[] 0 d
1 j
0 J
2.16 w
1 J
0 J
1 J
0 J
1 J
0 J
1 J
0.720001 w
0  setgray
426.81 412.65 m
/N10 [0 7.92 -7.92 0 0 0] Tf
(F. Scheme \226No types)
[4.30611 1.88259 2.15979 4.56034 3.35956 4.0796 3.59953 6.24018 3.35956 1.91982 6.0002 
6.00008 3.86259 1.91982 2.39977 4.0796 3.86259 3.59953 2.98341 ] pdfys
426.81 220.65 m
(G.Wadler,MaQueen, andTaha\226efficient, noeval)
[5.76014 3.83966 7.43997 3.59956 4.05112 2.15982 3.35958 2.63972 4.07963 6.96007 3.60748 
5.76014 4.05112 3.60748 3.35958 4.07963 1.91985 1.91982 3.60748 4.05112 5.76026 5.04027 
3.60748 3.83966 5.52016 6.00023 3.60748 2.63972 2.63972 2.15982 3.60748 2.15982 3.60748 
3.84045 2.3998 1.91985 2.15979 3.83966 6.00023 3.60748 3.83966 3.60748 2.29288 ] pdfys
436.65 220.65 m
(check, no need for boxed types, but at most a constant )
[3.35954 4.08037 3.35954 3.35954 4.08037 2.15977 1.91982 4.06453 3.83961 2.15979 4.06453 
3.35954 3.6209 3.83961 2.15979 2.63967 3.8404 2.63967 2.15979 3.83961 4.06453 4.06453 
3.35954 4.06453 1.91982 2.39975 3.83961 4.06453 3.6209 2.87964 2.15977 1.91982 3.8404 
4.08037 2.39975 1.91982 3.6209 2.15977 2.15979 6.24016 4.07958 2.87964 2.15977 1.91982 
3.6209 2.15979 3.6209 3.83961 4.06453 3.11962 2.15977 3.59951 3.83961 2.39975 1.91982 
] pdfys
446.25 220.65 m
(improvement over E, but less convenient than E.)
[2.15741 6.24017 3.83962 2.87965 3.83962 4.08038 3.59952 6.24017 3.35954 4.07959 2.15741 
2.15982 3.84041 4.07959 3.35954 2.63968 1.91985 5.04023 1.91981 2.15982 3.83962 4.08038 
2.15741 2.15982 2.15741 3.59952 3.11963 2.87965 2.15982 3.59952 3.83962 4.07959 4.08038 
3.35954 4.08038 2.15741 3.59952 3.83962 2.39976 1.91985 2.39976 3.83962 3.59952 3.83962 
2.15982 4.79471 1.93565 ] pdfys
426.81 160.65 m
(Delay & force)
[5.76005 3.3595 2.15974 3.59948 4.08034 2.1597 6.00015 2.1597 2.39966 3.83957 2.87961 
3.59948 3.5583 ] pdfys
462.81 412.65 m
(H. Haskell \226with use of  \223seq\224)
[5.76005 1.91977 1.91982 5.76005 3.59948 2.87961 4.08034 3.59948 2.15974 2.39972 1.91982 
6.00015 5.76005 2.15974 2.39972 3.83957 1.91982 4.32032 3.11959 3.3595 2.15979 3.83957 
2.63964 1.91982 1.91982 3.83945 2.87961 3.59948 3.83957 3.5583 ] pdfys
462.81 160.65 m
(Just Force)
[3.10136 4.08034 2.8796 2.15973 2.1597 4.56029 3.83957 2.65784 3.59947 3.5369 ] pdfys
390.33 412.65 m
(E. This paper \226Convenient to use, possible asymptotic )
[4.80029 1.91984 1.91982 5.04026 3.84044 2.39979 3.11966 1.91982 3.84044 3.83953 3.83965 
3.35958 2.63971 1.91982 6.2402 5.52021 3.83965 4.08042 3.83965 3.59955 3.84044 2.39979 
3.63044 3.83965 2.15982 2.15979 2.15982 4.07963 1.91982 4.32039 2.87968 3.35958 2.15982 
1.91982 4.07408 4.07408 3.11966 3.11966 2.15982 4.07408 2.15982 3.35958 1.91982 3.83953 
3.11966 4.07408 6.00022 4.07408 2.15982 4.07408 2.15982 2.39979 3.35958 1.91982 ] pdfys
399.93 412.65 m
(improvements over A., plugs arbitrary large space leaks, Simplerto )
[2.15584 6.24018 3.84042 2.87967 3.83963 4.0804 3.59953 6.24018 3.35956 4.0804 2.39977 
2.87966 2.15982 3.83963 4.0804 3.35956 2.63969 2.15982 5.52013 2.1598 1.93408 2.15982 
3.83963 2.1598 4.0804 4.0804 3.11964 1.91985 3.60033 2.63969 3.83963 2.39977 2.15584 
2.63969 3.59953 2.63969 3.84042 2.15982 2.15584 3.59953 2.63969 3.83963 3.60033 2.15982 
2.87966 3.83963 3.8403 3.35956 3.35956 2.15982 2.15584 3.35956 3.59953 4.32037 2.87966 
1.91982 2.15982 4.56035 2.39977 6.0002 4.0804 2.15584 3.35956 6.72007 2.39977 3.83963 
2.15982 ] pdfys
409.53 412.65 m
(implement than B, C, or D. Requires programmer annotations.)
[2.16925 6.24013 3.84037 2.39972 3.59948 6.24013 3.35951 4.08035 2.16925 1.91982 2.39972 
3.84037 3.59948 4.08035 1.91982 5.25007 2.15975 1.91982 5.25007 2.15975 1.91982 3.83958 
2.87962 1.91982 5.76006 1.91977 2.15979 5.25007 3.59948 3.83958 4.08035 2.16925 2.87962 
3.60028 2.87961 2.15979 3.84037 2.63964 4.08035 3.83958 2.63964 3.60028 6.24013 6.24013 
3.35951 2.63964 1.91982 3.84025 3.83958 4.07955 3.84037 2.16925 3.59948 2.39972 2.15975 
4.07955 4.08035 2.87961 1.94749 ] pdfys
390.33 160.65 m
(Just delay)
[3.11961 4.08037 2.87964 2.15977 2.15982 4.08037 3.35953 2.15977 3.5995 3.99879 ] pdfys
275.611 412.65 m
(A. Haskell \226Lazy evaluation only)
[5.52008 2.15974 1.91982 5.76006 3.59948 2.87961 4.08034 3.60978 2.15974 2.39972 1.91982 
6.00015 4.80021 3.60978 3.60978 3.83958 2.15979 3.35951 3.83958 3.60978 2.15974 4.05342 
3.60978 2.15974 2.39972 4.05342 3.83958 2.15979 3.83958 4.08034 2.15974 4.05342 ] pdfys
298.651 412.65 m
(B. Faxen \226Requires whole program analysis.)
[5.28018 1.91979 2.15979 4.32034 3.5995 4.0661 3.35952 4.0661 1.91982 6.00017 5.52015 
3.35952 3.83959 4.0661 2.15976 2.87963 3.5995 2.87963 2.15979 5.76007 4.08036 3.83959 
2.15976 3.62247 1.91982 3.83959 2.87963 4.0661 3.83959 2.63965 3.5995 6.24014 1.91982 
3.62247 3.83959 3.62247 2.39974 4.0661 2.87963 2.39974 2.87963 2.08611 ] pdfys
321.691 412.65 m
(C. Maessen \226Uses dynamic information, significant slowdowns in )
[5.28026 1.91987 2.15982 6.96009 3.6273 3.6273 3.11969 3.11969 3.3596 4.07094 1.91985 
6.24023 5.76015 2.87971 3.59958 2.87971 2.15982 4.07094 3.83968 3.83968 3.84035 6.00025 
2.39982 3.3596 2.15982 2.15984 4.08044 2.63974 3.83968 2.87971 6.00025 3.6273 2.15984 
2.39982 4.08044 3.84047 1.91987 2.15982 3.11969 2.15984 4.07094 3.83968 2.39982 2.63974 
2.15984 3.3596 3.84035 3.83968 2.15984 2.15982 3.11969 2.15984 4.07094 5.76015 4.07094 
4.07094 5.52018 4.07094 3.11969 1.91985 2.39982 3.84047 2.15982 ] pdfys
331.291 454.65 m
(some programs.)
[3.11405 4.08035 6.00016 3.59949 1.91982 3.83958 2.87962 4.08035 3.84038 2.67053 3.59949 
6.19499 3.11405 2.01323 ] pdfys
354.331 412.65 m
(D. Ennals& Peyton Jones \226Uses better dynamic information. )
[5.76008 1.9198 1.91982 5.04022 3.83564 3.83564 3.59951 2.39975 5.28019 6.00018 2.15979 
4.27916 3.59951 3.83564 2.39975 4.07958 3.8396 1.91982 3.35959 3.8396 4.08037 3.59951 
2.87964 1.91982 6.24016 5.76008 3.11962 3.6003 2.87964 2.15979 3.83564 3.59951 2.15977 
2.39975 3.39201 2.63967 2.15979 3.83564 4.08037 3.83564 3.83949 6.00018 2.39975 3.39201 
1.91982 2.39975 4.08037 2.63967 3.8396 2.87964 6.00018 3.59951 2.15977 2.39975 3.8404 
4.07958 1.9198 1.91982 ] pdfys
363.931 454.65 m
(Asymptotic improvements over A in speed and size of )
[5.76014 3.11967 4.07963 6.00023 4.08042 2.15982 4.07963 2.15982 2.3998 3.35959 1.91985 
2.3998 6.24021 3.82936 2.87969 3.82936 4.08042 3.59956 6.24021 3.38572 4.08042 2.3998 
2.87969 2.15982 3.82936 4.08042 3.38572 2.63972 2.15982 5.76014 1.91985 2.3998 3.83966 
2.15982 3.11967 3.83966 3.59956 3.35959 4.08042 1.91985 3.59956 4.08042 3.82936 2.15982 
2.87969 2.3998 3.59956 3.35959 2.15982 3.82936 2.63972 2.15982 ] pdfys
373.53 454.65 m
(space leaks. Complicated to implement.)
[3.11964 3.83963 3.60349 3.35956 3.60349 1.91982 2.39977 3.35956 3.60349 4.04713 2.87966 
2.1598 1.91982 5.52019 4.0804 6.0002 4.0804 2.1598 2.39977 3.35956 3.59953 2.1598 
3.59953 3.83963 2.15979 2.1598 4.0804 1.91982 2.39977 6.24018 3.83963 2.39977 3.60349 
6.0002 3.60349 3.84042 2.39977 2.06713 ] pdfys
275.611 160.65 m
(No)
[5.76005 4.00193 ] pdfys
287.13 160.65 m
(Annotations)
[5.76008 3.8396 4.08037 3.8396 2.15976 3.5995 2.39974 2.15976 4.08037 4.08037 3.20118 
] pdfys
257.61 412.65 m
/N13 [0 7.91901 -7.91901 0 0 0] Tf
(No type distinction)
[4.79962 3.59987 1.9203 1.92028 3.35989 3.60304 3.60304 1.9203 3.60304 1.43322 3.35989 
1.92028 1.43322 3.60304 3.35989 1.92028 1.43322 3.60304 3.60304 ] pdfys
257.61 220.65 m
(Type distinction)
[4.07975 3.35989 3.60304 3.60304 1.9203 3.60304 1.43322 3.35989 1.92028 1.43322 3.60304 
3.35989 1.92028 1.43322 3.60304 3.60304 ] pdfys
2 J
2.16 w
n
246.33 153.21 m
246.33 639.21 l
S
0 J
0.960007 w
n
264.33 153.21 m
264.33 639.21 l
379.05 153.21 m
379.05 639.21 l
415.53 153.21 m
415.53 639.21 l
S
2 J
2.16 w
n
475.53 153.21 m
475.53 639.21 l
246.33 153.21 m
475.53 153.21 l
S
0 J
0.960007 w
n
246.33 213.21 m
475.53 213.21 l
246.33 405.21 m
475.53 405.21 l
S
2 J
2.16 w
n
246.33 639.21 m
475.53 639.21 l
S
0 J
0.960007 w
n
451.53 153.21 m
451.53 639.21 l
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Helvetica-Narrow
%%+ font Times-Roman
%%EOF

%%EndDocument

 endTexFig
 632 2002 a Ff(Figure)29 b(2:)39 b(Comparison)30 b(of)f(systems)g(with)
g(Mixed)f(ev)-5 b(aluation)29 b(Strategies.)-77 2249
y(Optimistic)41 b(Ev)-5 b(aluation.)66 b Fl(Recen)n(t)35
b(w)n(ork)h(b)n(y)g(Jan-Willem)-152 2336 y(Maessen)19
b([10,)h(11])e(and)f(Rob)r(ert)g(Ennals)g(and)g(Simon)g(P)n(eyton)g
(Jones)h([3])-152 2423 y(also)j(uses)e(a)g(h)n(ybrid)f(lazy-eager)i(ev)
l(aluation)f(strategy)g(that)g(relaxes)-152 2510 y(the)g(whole)h
(program)g(restriction)g(b)n(y)e(using)h(run-time)f(information)-152
2598 y(to)26 b(trigger)h(optimistic)g(ev)l(aluation.)-77
2685 y(The)32 b(basic)g(di\013erence)f(is)h(that)g(all)g(ev)l(aluation)
g(is)g(eager)h({)e(p)r(e-)-152 2772 y(rio)r(dic)37 b(susp)r(ends)e(are)
h(inserted)g(whic)n(h)f(return)g(ev)l(aluation)h(to)f(a)-152
2859 y(previous)24 b(con)n(text.)34 b(With)23 b(eager)i(ev)l(aluation)g
(great)g(care)f(m)n(ust)g(b)r(e)-152 2946 y(tak)n(en)29
b(not)g(to)g(ab)r(ort)g(to)r(o)h(often,)h(or)e(to)r(o)h(infrequen)n
(tly)-6 b(,)29 b(and)g(run-)-152 3033 y(time)38 b(information)h(is)f
(used)f(to)g(mak)n(e)h(these)f(decisions.)71 b(Addi-)-152
3121 y(tionally)-6 b(,)24 b(sp)r(ecial)g(care)f(m)n(ust)f(b)r(e)h(tak)n
(en)f(with)h(handling)f(computa-)-152 3208 y(tions)k(whic)n(h)g(raise)h
(errors)f(\(e.g.,)h(the)e(standard)h(Hask)n(ell)g(function)-152
3295 y Fh(error)p Fl(\):)44 b(a)30 b(new)h(kind)e(of)h(th)n(unk)e(m)n
(ust)i(b)r(e)g(in)n(tro)r(duced)f(that)h(can)-152 3382
y(b)r(e)c(forced)g(only)g(on)g(resumption)f(of)i(computation.)-77
3469 y(Maessen)34 b([10,)i(11])e(describ)r(es)g(imp)r(ortan)n(t)f(sp)r
(eedups)f(on)h(some)-152 3556 y(programs,)24 b(and)d(signi\014can)n(t)h
(slo)n(w)h(do)n(wns)e(on)h(others.)33 b(Rob)r(ert)21
b(En-)-152 3644 y(nals)37 b(and)e(Simon)g(P)n(eyton)h(Jones,)j(describ)
r(e)d(similar)i(results)e(b)n(y)-152 3731 y(ev)l(aluating)28
b(most)g(computations)g(eagerly)g(and)f(bac)n(king)g(o\013)h(only)-152
3818 y(when)37 b(computations)g(app)r(ear)f(to)h(b)r(e)f(div)n(erging)h
([3].)68 b(The)36 b(sys-)-152 3905 y(tem,)f(built)e(on)g(top)f(of)i
(the)f(GHC)g(compiler,)j(is)d(an)g(engineering)-152 3992
y(marv)n(el,)24 b(com)n(bining)g(a)f(n)n(um)n(b)r(er)e(of)j(dynamic)f
(tec)n(hniques)f(to)h(mea-)-152 4079 y(sure)j(and)g(detect)g(p)r(oten)n
(tial)g(div)n(ergence.)35 b(Measuremen)n(ts)27 b(on)f(the)-152
4167 y(system)39 b(measure)f(considerable)i(sp)r(eedups)d(on)i(sev)n
(eral)f(Hask)n(ell)-152 4254 y(b)r(enc)n(hmarks,)e(and)e(no)g(large)h
(slo)n(w)g(do)n(wns)g(on)f(an)n(y)f(program)i(in)-152
4341 y(the)f(b)r(enc)n(hmarks)g(tested.)61 b(They)35
b(attribute)f(this)g(impro)n(v)n(emen)n(t)-152 4428 y(o)n(v)n(er)29
b(Maessen)h(to)f(more)g(accurate)h(dynamic)e(information)i(b)r(eing)
-152 4515 y(used)j(when)h(\\bac)n(king-o\013".)58 b(The)34
b(cost)g(of)g(this)f(accurate)h(infor-)-152 4603 y(mation)e(is)g(large)
h(and)e(complicated)h(additions)g(to)g(the)f(compiler)-152
4690 y(and)22 b(run-time)f(systems,)i(whic)n(h)f(itself)h(adds)f
(signi\014can)n(t)g(o)n(v)n(erhead)-152 4777 y(\(though)35
b(of)h(a)g(di\013eren)n(t)e(kind\))h(to)g(the)g(system.)63
b(They)35 b(remain)-152 4864 y(optimistic)27 b(that)f(the)f(situation)h
(can)g(b)r(e)g(further)f(impro)n(v)n(ed.)-77 4951 y(Using)17
b(explicit)h(laziness)g(annotations)g(w)n(e)g(w)n(ould)f(exp)r(ect)g(a)
h(com-)-152 5038 y(piled)g(implemen)n(tation)f(to)h(attain)f(similar)i
(\(p)r(erhaps)e(b)r(etter\))g(sp)r(eedups)-152 5126 y(as)30
b(the)e(o)n(v)n(erhead)g(to)h(detect)g(div)n(ergence)g(is)g(not)g
(necessary)-6 b(.)44 b(The)-152 5213 y(solution)21 b(w)n(e)f(prop)r
(ose)g(here)g(is)g(m)n(uc)n(h)f(simpler.)33 b(It)19 b(requires)h
(neither)-152 5300 y(complicated)25 b(additions)f(to)f(the)h(run)n
(time)f(system,)h(nor)f(exp)r(ensiv)n(e)2040 2249 y(compile-time)g
(analysis)g(suc)n(h)e(as)i(strictness)g(or)f(\015o)n(w)g(analysis.)35
b(In-)2040 2336 y(stead,)f(w)n(e)e(rely)f(on)g(the)h(programmer's)h
(kno)n(wledge)f(of)g(her)f(o)n(wn)2040 2423 y(program)c(to)e(sp)r
(ecify)i(explicitly)f(where)g(laziness)h(is)f(essen)n(tial.)2115
2510 y Ff(Susp)r(ensions)44 b(in)f(Strict)i(Languages.)71
b Fl(Adding)37 b(laziness)2040 2598 y(to)24 b(a)g(strict)h(language)g
(is)f(not)g(new)g([6].)35 b(Most)25 b(approac)n(hes)f(in)n(v)n(olv)n(e)
2040 2685 y(adding)19 b(an)g(explicit)g Fi(for)l(c)l(e)g
Fl(and)f Fi(delay)h Fl(constructs)g(\(e.g.,)h([13,)i(8,)f(2]\).)2040
2772 y(The)26 b(expression)g Fh(delay)41 b Fa(e)25 b
Fl(dela)n(ys)h(the)g(ev)l(aluation)g(of)g(expression)2040
2859 y Fi(e)p Fl(,)g(usually)g(con)n(v)n(erting)g(it)f(in)n(to)h(an)g
(explicit)g(th)n(unk)e(t)n(yp)r(e:)2040 2985 y Fh(val)40
b(e)f(=)h(delay)g(\(2+3\))2040 3072 y(val)g(e)f(=)h(-)f(:)h(int)g
(suspension)2115 3198 y Fl(The)19 b(expression)h Fi(for)l(c)l(e)f
Fl(forces)i(the)e(ev)l(aluation)g(of)h(the)f(th)n(unk)e(ob-)2040
3285 y(taining)24 b(the)e(v)l(alue.)34 b(The)23 b(k)n(ey)f
(di\013erence)h(b)r(et)n(w)n(een)f(this)h(approac)n(h)2040
3373 y(and)36 b(the)g(curren)n(t)g(pap)r(er)g(is)h(the)f(t)n(yp)r(e)f
(constructor)i Fi(susp)l(ension)2040 3460 y Fl(whic)n(h)h(partitions)g
(lazy)g(computations)g(from)g(strict)g(ones,)j(and)2040
3547 y(the)34 b(need)g(to)h(explicitly)f(co)r(erce)i(lazy)e
(computations)h(in)n(to)g(ordi-)2040 3634 y(nary)25 b(ones)h(b)n(y)f
(use)h(of)g(the)g Fi(for)l(c)l(e)g Fl(function.)2115
3721 y(While)38 b(the)g(t)n(yp)r(e)g(distinction)h(is)f(incon)n(v)n
(enien)n(t)g(for)h(the)f(pro-)2040 3808 y(grammer,)25
b(requiring)e(the)g(insertion)h(of)g(explicit)g Fh(force)p
Fl(,)h(and)e(p)r(os-)2040 3896 y(sible)j(the)f(duplication)g(of)i
(library)e(functions)h(with)f(di\013eren)n(t)g(lazi-)2040
3983 y(ness)f(distinctions)h(in)f(their)g(parameters,)h(it)f(do)r(es)g
(allo)n(w)i(the)e(com-)2040 4070 y(piler)j(a)h(big)f(win.)38
b(Bo)n(xed)27 b(t)n(yp)r(es)f(are)h(nev)n(er)g(needed.)37
b(This)28 b(allo)n(ws)2040 4157 y(the)22 b(compiler)i(to)f(tak)n(e)f
(adv)l(an)n(tage)h(of)g(represen)n(tation)g(issues,)i(and)2040
4244 y(could)i(translate)h(in)n(to)f(a)g(considerable)h(adv)l(an)n
(tage)e(in)h(sp)r(eed)g(o)n(v)n(er)2040 4332 y(the)i(curren)n(t)g(prop)
r(osal,)j(for)e(a)f(mo)r(dest)h(loss)h(in)e(con)n(v)n(enience)g(and)
2040 4419 y(expressivit)n(y)-6 b(.)2115 4506 y(In)33
b(some)h(languages,)k(suc)n(h)33 b(as)i(Standard)e(ML,)h(it)g(is)g(p)r
(ossible)2040 4593 y(to)f(de\014ne)f(the)g(susp)r(ension)h(t)n(yp)r(e)f
(in)g(the)g(language)i(itself,)i(using)2040 4680 y(dumm)n(y)27
b(functions)j(that)e(do)h(not)f(examine)h(their)g(argumen)n(ts)g(for)
2040 4767 y(dela)n(ying)21 b(computation)h(and)e(references)i(to)f(a)n
(v)n(oid)g(rep)r(eated)h(com-)2040 4855 y(putation)37
b(of)g(dela)n(y)n(ed)g(v)l(alues.)68 b(The)37 b(tec)n(hnique)f(is)h
(fairly)h(stan-)2040 4942 y(dard)c([15],)k(but)33 b(can)h(b)r(e)g
(rather)g(a)n(wkw)n(ard)h(to)f(use,)i(as)f(the)e(user)2040
5029 y(m)n(ust)j(manage)h(all)g(the)e(lo)n(w-lev)n(el)i(mac)n(hinery)f
(needed)f(for)i(call-)2040 5116 y(b)n(y-need)21 b(ev)l(aluation)j
(explicitly)-6 b(,)23 b(with)g(no)g(linguistic)h(supp)r(ort,)g(for)2040
5203 y(eac)n(h)34 b(lazy)g(data-t)n(yp)r(e.)58 b(Chris)35
b(Ok)l(asaki)e(prop)r(osed)h(an)g(in)n(tuitiv)n(e)2040
5290 y(syn)n(tax)28 b(for)h(susp)r(ended)f(computations)h(in)g(strict)g
(languages)h([12,)2040 5378 y(13].)p eop
%%Page: 7 7
7 6 bop -77 -69 a Fl(A)24 b(more)h(extensiv)n(e)f(in)n(tegration)h(of)h
(lazy)f(features)g(in)n(to)g(a)f(strict)-152 19 y(language)32
b(w)n(as)f(incorp)r(orated)g(in)n(to)f(some)h(v)n(ersions)g(of)g(the)f
(Stan-)-152 106 y(dard)39 b(ML)h(of)h(New)e(Jersey)h(compiler)h(b)n(y)d
(W)-6 b(adler,)43 b(T)-6 b(aha,)44 b(and)-152 193 y(MacQueen)38
b([9].)69 b(They)37 b(\014rst)g(distinguish)g(b)r(et)n(w)n(een)g(t)n(w)
n(o)h(st)n(yles)-152 280 y(of)c(lazy)g(programming)h(in)e(a)h(strict)g
(language,)j(called)d Fi(o)l(dd)p Fl(,)i(and)-152 367
y Fi(even)p Fl(.)45 b(The)28 b(ev)n(en)g(st)n(yle)h(is)g(closer)h(to)f
(laziness)h(as)f(understo)r(o)r(d)g(b)n(y)-152 454 y(a)35
b(Hask)n(ell)f(user:)51 b(making)34 b(a)h(data-t)n(yp)r(e)e
Fh(T)h Fl(ev)n(en-lazy)f(means)i(to)-152 542 y(de\014ne)g(an)g
(auxiliary)g(data-t)n(yp)r(e)f Fh(T')p Fl(,)i(whic)n(h)f(is)h(the)f
(same)h(as)f Fh(T)p Fl(,)-152 629 y(except)21 b(that)h(the)f(recursiv)n
(e)g(the)h(sub-structures)e(are)i(dela)n(y)n(ed)f(\(us-)-152
716 y(ing)27 b(a)f Fh(suspension)i Fl(t)n(yp)r(e\).)34
b(Finally)-6 b(,)27 b(the)f(data-t)n(yp)r(e)f(corresp)r(ond-)-152
803 y(ing)i(to)f(the)g(original)i Fh(T)e Fl(is)h(the)f(susp)r(ension)h
(of)g Fh(T')p Fl(.)g(The)f(o)r(dd-st)n(yle,)-152 890
y(b)n(y)c(con)n(trast,)i(w)n(orks)g(with)f(the)f(c)n(hanged)h(data-t)n
(yp)r(e)f(de\014nition)g Fh(T')-152 977 y Fl(directly)-6
b(,)26 b(whic)n(h)f(ma)n(y)g(lead)g(to)h(to)r(o)g(m)n(uc)n(h)e
(strictness)i([9].)35 b(It's)26 b(rel-)-152 1065 y(ativ)n(e)d
(conciseness)h(in)f(programming)h(lead)f(to)g(its)g(wider)g(adoption)
-152 1152 y(than)j(the)f(o)r(dd)g(st)n(yle)h([1,)h(14,)f(13].)-77
1239 y(The)g(ev)n(en)e(st)n(yle,)i(while)g(more)g(in)n(tuitiv)n(ely)e
(lazy)-6 b(,)26 b(leads)g(to)f(more)-152 1326 y(elab)r(orate)30
b(and)e(less)h(clear)h(de\014nitions.)42 b(T)-6 b(o)29
b(remedy)f(this,)h(a)g(new)-152 1413 y(mo)r(di\014er)40
b(k)n(eyw)n(ord)e Fh(lazy)i Fl(is)g(added)f(to)g(SML.)h(F)-6
b(or)39 b(eac)n(h)g(func-)-152 1500 y(tion)25 b(de\014ned)e(with)i(the)
f(k)n(eyw)n(ord)f Fh(lazy)p Fl(,)j(t)n(w)n(o)f(functions)g(\(alterna-)
-152 1588 y(tiv)n(ely)-6 b(,)19 b(data-t)n(yp)r(es,)h
Fh(val)e Fl(declarations)i(and)e(so)g(on\))g(are)h(generated:)-152
1675 y(one)35 b(op)r(erating)g(on)f(a)h(top-lev)n(el)f(susp)r(ended)g
(computation,)j(and)-152 1762 y(the)24 b(other)h(op)r(erating)h(on)e(a)
h(lazy)g(computation)g(\\once)g(unrolled,")-152 1849
y(where)g(the)g(substructures)f(b)r(eing)h(de\014ned)e(are)i(again)h
(susp)r(ended.)-77 1936 y(The)20 b(user)h(need)e(not)h(see)h(the)e(t)n
(w)n(o)i(functions;)i(the)c(compiler)i(uses)-152 2023
y(t)n(yp)r(es)30 b(to)g(determine)h(whic)n(h)f(of)h(the)f(t)n(w)n(o)h
(v)n(ersions)f(to)h(use.)48 b(This)-152 2111 y(approac)n(h,)34
b(ho)n(w)n(ev)n(er,)g(seems)e(not)g(to)g(ha)n(v)n(e)f(gained)h(a)g
(signi\014can)n(t)-152 2198 y(p)r(opularit)n(y)c(among)h(the)e(users.)
42 b(One)27 b(of)i(the)e(reasons)i(is)g(p)r(erhaps)-152
2285 y(that)g(the)f(syn)n(tactic)g(prepro)r(cessing)i(of)f(lazy)g
(programs)h(do)r(es)f(not)-152 2372 y(in)n(teract)h(v)n(ery)f(w)n(ell)i
(with)f(error)g(rep)r(orting)g(and)g(in)n(tro)r(duces)g(new)-152
2459 y(names)c(to)g(the)g(program)g(of)h(whic)n(h)f(the)f(user)h(ma)n
(y)f(not)h(b)r(e)f(a)n(w)n(are.)-152 2547 y(By)35 b(con)n(trast,)j(the)
d(in)n(terface)h(to)f(lazy)g(v)l(alues)g(prop)r(osed)h(in)f(this)-152
2634 y(pap)r(er)j(is)g(explicit)f(in)g(creating)i(th)n(unks,)g(but)d
(implicitly)i(forces)-152 2721 y(them)20 b(when)f(demanded.)32
b(It)20 b(do)r(es)g(not)g(rely)f(on)h(an)n(y)f(prepro)r(cessing)-152
2808 y(or)j(other)f(source-to-source)i(transformation)g(of)f(the)f(co)r
(de)g(written)-152 2895 y(b)n(y)k(the)g(programmer.)-152
3108 y Fm(6.)100 b(CONCLUSION)-77 3216 y Fl(While)35
b(only)f(a)h(simple)h(though)n(t)d(exp)r(erimen)n(t,)k(tested)e(with)f
(a)-152 3304 y(simple)26 b(in)n(terpreter,)f(the)f(author)h(\014nds)f
(the)g(idea)h(of)h(explicit)f(lazi-)-152 3391 y(ness)c(comp)r(elling)i
(enough)d(to)h(merit)g(further)g(review,)i(and)d(encour-)-152
3478 y(ages)27 b(others)f(to)g(in)n(v)n(estigate)g(this)g(exciting)g
(new)g(approac)n(h.)-152 3691 y Fm(7.)100 b(A)-5 b(CKNO)g(WLEDGMENTS)
-77 3799 y Fl(The)35 b(w)n(ork)h(describ)r(ed)f(here)g(w)n(as)h(supp)r
(orted)e(b)n(y)g(NSF)h(Gran)n(t)-152 3886 y(CCR-0098126,)27
b(the)c(M.J.)i(Murdo)r(c)n(k)e(Charitable)h(T)-6 b(rust,)24
b(and)f(the)-152 3973 y(Departmen)n(t)i(of)i(Defense.)-152
4187 y Fm(8.)100 b(REFERENCES)-113 4307 y Fl([1])38 b(H.)26
b(Ab)r(elson)f(and)h(G.)g(J.)g(Sussman.)g Fi(The)i(Structur)l(e)i(and)5
4394 y(Interpr)l(etation)g(of)d(Computer)i(Pr)l(o)l(gr)l(ams)p
Fl(.)f(MIT)e(Press,)5 4481 y(1985.)-113 4576 y([2])38
b(W.)26 b(Clinger)h(and)e(J.)i(R.)e(\(editors\).)i(Revised)e(rep)r(ort)
h(on)f(the)5 4664 y(algorithmic)j(language)f(sc)n(heme.)f(T)-6
b(ec)n(hnical)26 b(Rep)r(ort)5 4751 y(AIM-848B,)h(MIT)f(Arti\014cial)g
(In)n(telligence)h(Lab)r(oratory)-6 b(,)5 4838 y(No)n(v.)25
b(6)h(1991.)-113 4933 y([3])38 b(R.)26 b(Ennals)g(and)f(S.)h(P)n(eyton)
f(Jones.)i(Optimistic)f(ev)l(aluation:)5 5021 y(an)g(adaptiv)n(e)f(ev)l
(aluation)h(strategy)g(for)h(non-strict)5 5108 y(programs.)g(2003.)h
(Submitted)c(to)i(ICFP'03.)-113 5203 y([4])38 b(K.-F.)26
b(F)-6 b(axen.)25 b(Optimizing)h(lazy)g(functional)h(programs)5
5290 y(using)f(\015o)n(w)g(inference.)h Fi(L)l(e)l(ctur)l(e)i(Notes)g
(in)e(Computer)5 5378 y(Scienc)l(e)p Fl(,)g(983:136{??,)j(1995.)2078
-69 y([5])39 b(K.-F.)26 b(F)-6 b(axen.)25 b(Cheap)h(eagerness:)36
b(sp)r(eculativ)n(e)26 b(ev)l(aluation)2197 19 y(in)g(a)g(lazy)f
(functional)i(language.)g(In)e Fi(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(the)2197 106 y(A)n(CM)g(Sigplan)h(International)g(Confer)l(enc)l
(e)h(on)f(F)-6 b(unctional)2197 193 y(Pr)l(o)l(gr)l(amming)28
b(\(ICFP-00\))p Fl(,)e(v)n(olume)f(35.9)i(of)f Fi(A)n(CM)h(Sigplan)2197
280 y(Notic)l(es)p Fl(,)f(pages)g(150{161,)i(N.Y.,)d(Sept.)50
b(18{21)27 b(2000.)f(A)n(CM)2197 367 y(Press.)2078 463
y([6])39 b(D.)26 b(P)-6 b(.)25 b(F)-6 b(riedman)26 b(and)f(D.)h(S.)f
(Wise.)i(CONS)e(should)h(not)2197 550 y(ev)l(aluate)g(its)g(argumen)n
(ts.)g(In)f(S.)h(Mic)n(haelson)h(and)2197 637 y(R.)e(Milner,)i
(editors,)g Fi(A)n(utomata,)h(L)l(anguages)i(and)2197
724 y(Pr)l(o)l(gr)l(amming)p Fl(,)d(pages)f(257{284.)j(Edin)n(burgh)c
(Univ)n(ersit)n(y)2197 811 y(Press,)i(1976.)2078 907
y([7])39 b(D.)26 b(J.)g(King)g(and)f(J.)h(Launc)n(h)n(bury)-6
b(.)24 b(Structuring)h(depth-\014rst)2197 994 y(searc)n(h)h(algorithms)
h(in)f(Hask)n(ell.)g(In)f(A)n(CM,)i(editor,)2197 1081
y Fi(Confer)l(enc)l(e)i(r)l(e)l(c)l(or)l(d)g(of)e(POPL)h('95,)f(22nd)h
(A)n(CM)2197 1168 y(SIGPLAN-SIGA)n(CT)g(Symp)l(osium)g(on)f(Principles)
h(of)2197 1256 y(Pr)l(o)l(gr)l(amming)g(L)l(anguages:)37
b(p)l(ap)l(ers)30 b(pr)l(esente)l(d)g(at)e(the)2197 1343
y(Symp)l(osium:)35 b(San)28 b(F)-6 b(r)l(ancisc)l(o,)29
b(California,)d(January)2197 1430 y(22{25,)i(1995)p Fl(,)f(pages)f
(344{354,)j(New)d(Y)-6 b(ork,)25 b(NY,)g(USA,)2197 1517
y(1995.)i(A)n(CM)f(Press.)2078 1613 y([8])39 b(X.)24
b(Lero)n(y)-6 b(.)24 b(The)g(Ob)t(jectiv)n(e)g(Caml)i(system:)33
b(Do)r(cumen)n(tation)2197 1700 y(and)25 b(user's)i(man)n(ual,)f(2000.)
h(With)f(Damien)g(Doligez,)2197 1787 y(Jacques)g(Garrigue,)h(Didier)f
(R)n(\023)-36 b(em)n(y)-6 b(,)25 b(and)g(J)n(\023)-36
b(er^)e(ome)27 b(V)-6 b(ouillon.)2197 1874 y(Av)l(ailable)26
b(from)g Fh(http://caml.inria.fr)p Fl(.)2078 1970 y([9])39
b(D.)26 b(B.)g(MacQueen,)g(P)-6 b(.)26 b(W)-6 b(adler,)26
b(and)f(W.)h(T)-6 b(aha.)26 b(Ho)n(w)g(to)2197 2057 y(add)f(laziness)i
(to)f(a)g(strict)g(language)h(withouth)f(ev)n(en)f(b)r(eing)2197
2144 y(o)r(dd.)h(In)f Fi(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)f(the)g(1998)g
(A)n(CM)f(Workshop)i(on)2197 2231 y(ML)p Fl(,)d(pages)g(24{30,)i(Sept.)
d(1998.)j(Baltimore,)g(MD.)2040 2327 y([10])39 b(J.-W.)26
b(Maessen.)h(Eager)g(hask)n(ell:)35 b(Resource-b)r(ounded)2197
2414 y(execution)25 b(yields)h(e\016cien)n(t)g(iteration.)h(In)e
Fi(The)j(Haskel)t(l)2197 2501 y(Workshop,)g(Pittsbur)l(g)i(2002)p
Fl(.)2040 2596 y([11])39 b(J.-W.)26 b(Maessen.)h Fi(Hybrid)h(Eager)h
(and)f(L)l(azy)h(Evaluation)f(for)2197 2684 y(E\016cient)g(Compilation)
f(of)g(Haskel)t(l)p Fl(.)f(PhD)f(thesis,)i(MIT,)2197
2771 y(2002.)2040 2866 y([12])39 b(C.)26 b(Ok)l(asaki.)g(F)-6
b(unctional)26 b(data)g(structures.)g Fi(L)l(e)l(ctur)l(e)j(Notes)2197
2953 y(in)e(Computer)i(Scienc)l(e)p Fl(,)e(1129:131{??,)j(1996.)2040
3049 y([13])39 b(C.)26 b(Ok)l(asaki.)g Fi(Pur)l(ely)i(F)-6
b(unctional)29 b(Data)f(Structur)l(es)p Fl(.)h(PhD)2197
3136 y(thesis,)d(Carnegie)i(Mellon)f(Univ)n(ersit)n(y)-6
b(,)24 b(1996.)k(Av)l(ailable)e(as)2197 3223 y(T)-6 b(ec)n(hnical)26
b(Rep)r(ort)g(CMU-CS-96-177.)2040 3319 y([14])39 b(L.)26
b(P)n(aulson.)h Fi(ML)g(for)g(the)i(Working)f(Pr)l(o)l(gr)l(ammer)p
Fl(.)2197 3406 y(Cam)n(bridge)e(Univ)n(ersit)n(y)f(Press,)i(1991.)2040
3501 y([15])39 b(C.)26 b(Reade.)g Fi(Elements)i(of)g(F)-6
b(unctional)28 b(Pr)l(o)l(gr)l(amming)p Fl(.)2197 3588
y(In)n(ternational)e(Computer)g(Science)g(Series.)2197
3676 y(Addison-W)-6 b(esley)g(,)25 b(1989.)i(P)n(ages)g(265{316.)2040
3895 y Fm(APPENDIX)2040 4045 y(A.)100 b(THE)25 b(INTERPRETER)2115
4153 y Fl(In)36 b(this)g(section)i(w)n(e)f(giv)n(e)g(the)f(complete)h
(co)r(de)g(of)h(the)e(in)n(ter-)2040 4240 y(preter.)2040
4406 y Fg(-----------------------)q(---)q(----)q(---)2040
4481 y(--)g(Syntax)2040 4630 y(data)h(Pat)2111 4705 y(=)e(Plit)i(Int)
389 b(--)36 b({)f(5)h(})2111 4780 y(|)f(Pvar)i(String)284
b(--)36 b({)f(x)h(})2111 4855 y(|)f(Pprod)i(Pat)f(Pat)213
b(--)36 b({)f(\(p1,p2\))i(})2111 4929 y(|)e(Pcon)i(String)g([Pat])72
b(--)36 b(data)g(constructors)j(like:)2852 5004 y(--)d(\(x:xs\))h(or)e
(\(Node)i(x)f(y\))2040 5153 y(data)h(Exp)2111 5228 y(=)e(Var)h(String)
320 b(--)36 b({)f(x)h(})2111 5303 y(|)f(Lit)h(Int)425
b(--)36 b({)f(5)h(})2111 5378 y(|)f(Prod)i(Exp)f(Exp)248
b(--)36 b({)f(\(e1,e2\))i(})p eop
%%Page: 8 8
8 7 bop -81 -69 a Fg(|)35 b(App)i(Exp)f(Exp)283 b(--)36
b({)f(f)h(x)f(})-81 6 y(|)g(Lam)i([Pat])f(Exp)213 b(--)36
b({)f(\\)h(p1)g(p2)g(->)f(e)h(})-81 81 y(|)f(Lazy)i(Exp)389
b(--)36 b({)f(\(lazy)i(e\))-81 156 y(|)e(Let)i(String)g(Exp)f(Exp)g(--)
g({)f(let)h(x)g(=)g(e)f(in)h(x+1)g(})-81 230 y(|)f(Case)i(Exp)f
([\(Pat,Exp\)])74 b(--)36 b({)f(case)i(e)e(of)h(m1;)g(m2)g(})-152
380 y(----------------------)q(----)q(---)q(----)q(---)q(---)-152
454 y(--)g(Values)-152 604 y(data)h(V)-81 679 y(=)e(Vlit)i(Int)389
b(--)36 b(Int)g(constants)-81 753 y(|)f(Vprod)i(V)f(V)353
b(--)36 b(products)-81 828 y(|)f(Vfun)i(\(V)f(->)g(M)f(V\))142
b(--)36 b(functions)-81 903 y(|)f(Vcon)i(String)g([)e(V)h(])71
b(--)36 b(data)g(like)h(\(Node)f(x)g(y\))-81 977 y(|)f(Vthunk)i
(\(Thunk)g(V\))177 b(--)36 b(thunks)-152 1127 y(----------------------)
q(----)q(---)q(----)q(---)q(---)-152 1202 y(--)g(Thunks)-152
1351 y(thunk)h(::)f(M)f(V)h(->)g(M)f(V)-152 1426 y(thunk)i(c)f(=)f(do)h
({)g(r)f(<-)h(newRef)h(\(Left)g(c\);)f(return\(Vthunk)j(r\))d(})-152
1575 y(pullWith)i(::)e(\(V)g(->)f(M)h(a\))g(->)g(Thunk)g(V)g(->)g(M)f
(a)-152 1650 y(pullWith)j(f)d(ref)i(=)e(do)h({)g(v)f(<-)h(down)g(ref;)h
(f)e(v)h(})-152 1799 y(down)h(::)f(Thunk)g(V)g(->)g(FIO)g(V)-152
1874 y(down)h(ref)f(=)-81 1949 y(do)g({)f(x)h(<-)g(readRef)h(ref)25
2023 y(;)e(case)i(x)e(of)166 2098 y(Left)h(m)g(->)236
2173 y(do)g({)g(v)f(<-)h(m)342 2248 y(;)g(u)f(<-)h(case)h(v)e(of)625
2322 y(Vthunk)i(r2)e(->)h(down)h(r2)625 2397 y(u)e(->)h(return)h(u)342
2472 y(;)f(writeRef)h(ref)g(\(Right)g(u\))342 2547 y(;)f(return)h(u)e
(})166 2621 y(Right)i(v)e(->)h(return)h(v)25 2696 y(})-152
2845 y(force)g(::)f(\(V)g(->)g(M)f(a\))h(->)g(V)f(->)h(M)g(a)-152
2920 y(force)h(f)f(\(Vthunk)h(m\))f(=)f(pullWith)j(f)d(m)-152
2995 y(force)i(f)f(v)f(=)h(f)f(v)-152 3219 y(----------------------)q
(----)q(---)q(----)-152 3294 y(--)h(Environments)-152
3443 y(data)h(Env)f(=)f(Env)i([\(String,V\)])-152 3518
y(type)g(EnvFrag)g(=)f([\(String,V\)])-152 3667 y(find)h(::)f(Monad)g
(a)g(=>)g(Env)g(->)g([Char])h(->)f(a)f(V)-152 3742 y(find)i(\(Env)f
(xs\))g(s)g(=)95 3817 y(case)h(lookup)g(s)e(xs)h(of)131
3891 y(Just)g(b)g(->)f(return)i(b)131 3966 y(Nothing)g(->)f(fail)g
(\("Unknown)i(var:)e("++s\))-152 4116 y(extendV)i(::)d(EnvFrag)j(->)e
(Env)g(->)g(Env)-152 4190 y(extendV)i(xs)d(\(Env)i(ys\))f(=)g(Env)g
(\(xs++ys\))-152 4340 y(----------------------)q(----)q(---)q(----)q
(---)-152 4415 y(--)g(The)g(interpreter)-152 4564 y(eval)h(::)f(Env)g
(->)g(Exp)g(->)g(M)f(V)-152 4639 y(eval)i(env)f(\(Var)g(s\))g(=)g(find)
g(env)g(s)-152 4713 y(eval)h(env)f(\(Lit)g(x\))g(=)g(return\(Vlit)i
(x\))-152 4788 y(eval)f(env)f(\(Prod)h(x)e(y\))h(=)-81
4863 y(do)g({)f(a)h(<-)g(eval)g(env)g(x)25 4938 y(;)f(b)h(<-)g(eval)g
(env)g(y)25 5012 y(;)f(return\(Vprod)k(a)d(b\))f(})-152
5087 y(eval)i(env)f(\(Lazy)h(x\))e(=)h(thunk)h(\(eval)f(env)h(x\))-152
5162 y(eval)g(env)f(\(App)g(f)g(x\))g(=)-81 5236 y(do)g({)f(g)h(<-)g
(eval)g(env)g(f)25 5311 y(;)f(y)h(<-)g(eval)g(env)g(x)2217
-69 y(;)f(applyV)i(g)f(y)f(})2040 6 y(eval)i(env)f(\(Lam)g(ps)g(e\))g
(=)f(try)i([])e(ps)107 b(where)2111 81 y(try)36 b(es)g([])g(=)f(eval)i
(\(extendV)g(es)f(env\))g(e)2111 156 y(try)g(es)g(\(p:ps\))h(=)e
(return)i(\(Vfun)g(h\))f(where)2252 230 y(h)f(v)h(=)g(do)f({)h(z)g(<-)f
(mPat)i(p)e(v)h(es)2569 305 y(;)g(case)g(z)g(of)2675
380 y(Just)h(es2)f(->)g(try)g(es2)g(ps)2675 454 y(Nothing)i(->)d(bad)i
(p)e(v)h(})2111 529 y(bad)g(p)f(v)h(=)g(fail)g(\("Pattern)i(does)e(not)
g(match)h(value"\))2040 604 y(eval)g(env)f(\(Let)g(s)g(e1)g(e2\))g(=)
2111 679 y(do)g({)f(v)h(<-)g(fixM)g(\(\\)g(u)f(->)h(eval)h(\(extendV)g
([\(s,u\)])g(env\))g(e1\))2217 753 y(;)e(eval)i(\(extendV)g([\(s,v\)])g
(env\))g(e2)f(})2040 828 y(eval)h(env)f(\(Case)g(x)g(ms\))g(=)2111
903 y(do)g({)f(v)h(<-)g(eval)g(env)g(x;)g(caseV)h(env)f(v)f(ms)h(})2075
977 y(where)h(caseV)g(env)f(v)g([])f(=)h(fail)g("value)h(doesn't)h
(match)e(any)g(pattern")2287 1052 y(caseV)h(env)f(v)g
(\(\(p,body\):ps\))j(=)2358 1127 y(do)d({)f(z)h(<-)g(mPat)g(p)g(v)f([])
2464 1202 y(;)g(case)i(z)e(of)2569 1276 y(Nothing)j(->)e(caseV)g(env)g
(v)g(ps)2569 1351 y(Just)h(es)f(->)g(eval)g(\(extendV)h(es)f(env\))h
(body)f(})2040 1500 y(-----------------------)q(---)q(----)q(---)q
(----)q(----)2040 1575 y(--)g(Manipulating)j(Values)e(\(which)g(might)f
(contain)i(thunks\))2040 1725 y(applyV)f(::)f(V)g(->)f(V)h(->)g(M)f(V)
2040 1799 y(applyV)i(\(Vthunk)g(m\))f(x)g(=)f(pullWith)j(\(\\)e(v)f(->)
h(applyV)h(v)f(x\))g(m)2040 1874 y(applyV)h(\(Vfun)g(h\))f(x)f(=)71
b(h)36 b(x)2040 1949 y(applyV)h(z)f(y)f(=)h(fail)g(\("Non)h(function)h
(in)d(application"\))2040 2098 y(mPat)i(::)e(Pat)i(->)e(V)h(->)g
(EnvFrag)h(->)f(M)g(\(Maybe)g(EnvFrag\))2040 2173 y(mPat)h(\(Pvar)f
(s\))g(v)g(es)g(=)f(return\(Just\(\(s,v\):es\)\))2040
2248 y(mPat)i(p)e(\(Vthunk)i(r\))f(es)g(=)g(pullWith)h(\(\\)f(v)g(->)f
(mPat)i(p)e(v)h(es\))g(r)2040 2322 y(mPat)h(\(Plit)f(x\))g(\(Vlit)h
(y\))f(es)g(=)2111 2397 y(if)g(x==y)g(then)g(return\(Just)j(es\))d
(else)g(return)h(Nothing)2040 2472 y(mPat)g(\(Pprod)g(x)e(y\))h
(\(Vprod)h(u)f(v\))f(es)h(=)2111 2547 y(do)g({)f(z)h(<-)g(mPat)g(x)g(u)
f(es)2217 2621 y(;)g(case)i(z)e(of)2322 2696 y(Just)i(es2)f(->)g(mPat)g
(y)g(v)f(es2)2322 2771 y(Nothing)j(->)e(return)h(Nothing})2040
2845 y(mPat)g(\(Pcon)f(n)g(ps\))g(\(Vcon)h(c)e(vs\))h(es)g(=)2111
2920 y(if)g(n==c)2217 2995 y(then)g(mPatL)h(ps)f(vs)f(es)2217
3070 y(else)h(return)h(Nothing)2040 3144 y(mPat)g(p)e(v)h(es)g(=)f
(fail)i(\("Pattern)g(does)g(not)f(match)h(value"\))2040
3294 y(mPatL)g(::)f([Pat])g(->)g([V])g(->)g(EnvFrag)i(->)d(M)h(\(Maybe)
h(EnvFrag\))2040 3368 y(mPatL)g([])f([])g(es)f(=)h(return\(Just)i(es\))
2040 3443 y(mPatL)f(\(p:ps\))g(\(v:vs\))g(es)f(=)2146
3518 y(do)g({)f(z)h(<-)g(mPat)g(p)g(v)f(es)2252 3593
y(;)g(case)i(z)e(of)2393 3667 y(Just)h(es2)h(->)e(mPatL)i(ps)f(vs)g
(es2)2393 3742 y(Nothing)h(->)f(return)h(Nothing})2040
3817 y(mPatL)g(_)e(_)h(es)g(=)f(return)i(Nothing)2040
3966 y(-----------------------)q(---)q(----)q(---)q(----)q(----)q(---)q
(----)q(-)2040 4041 y(--)f(primitives)2040 4190 y(mimic)h(::)f(V)71
b(--)35 b(prim)i(mimic)g(::)e(\(a)h(->)g(b\))g(->)g(a)f(->)h(b)2040
4265 y(mimic)h(=)e(Vfun\(\\)i(f)f(->)g(return\(Vfun)i(\(g)e(f\)\)\))
2111 4340 y(where)g(g)g(f)g(\(Vthunk)h(m\))f(=)f(thunk\(pullWith)k(\(g)
d(f\))g(m\))2322 4415 y(g)g(f)g(v)f(=)h(applyV)h(f)e(v)2040
4564 y(strict)i(::)f(V)2040 4639 y(strict)h(=)f(Vfun)g(f1)g(--)g(prim)g
(strict)h(::)f(a)g(->)f(a)2111 4713 y(where)h(f1)g(\(Vthunk)i(m\))d(=)h
(pullWith)i(f1)d(m)2322 4788 y(f1)h(v)g(=)f(return)i(v)2040
4938 y(plus)g(::)e(V)2040 5012 y(plus)i(=)e(Vfun)i(f1)106
b(--)36 b(prim)g(plus)h(::)f(Int)g(->)f(Int)i(->)e(Int)2111
5087 y(where)h(f1)g(\(Vthunk)i(ref\))e(=)g(pullWith)h(f1)f(ref)2322
5162 y(f1)g(\(Vlit)h(n\))f(=)f(return\(Vfun)k(\(f2)d(n\)\))2322
5236 y(f2)g(n)g(\(Vthunk)h(ref\))g(=)e(pullWith)j(\(f2)e(n\))g(ref)2322
5311 y(f2)g(n)g(\(Vlit)h(m\))177 b(=)35 b(return\(Vlit\(n+m\)\))p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
