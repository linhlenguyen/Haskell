


; define the 8 variables the define the (x,y) coordinates
; of the 4 queens. Q1 is at (Ax,Ay), etc.

(define Ax :: int)
(define Ay :: int)

(define Bx :: int)
(define By :: int)

(define Cx :: int)
(define Cy :: int)

(define Dx :: int)
(define Dy :: int)

; The variables are all in the ranges (1..4)

(assert (and (>= Ax 1) (<= Ax 4)))
(assert (and (>= Bx 1) (<= Bx 4)))
(assert (and (>= Cx 1) (<= Cx 4)))
(assert (and (>= Dx 1) (<= Dx 4)))
(assert (and (>= Ay 1) (<= Ay 4)))
(assert (and (>= By 1) (<= By 4)))
(assert (and (>= Cy 1) (<= Cy 4)))
(assert (and (>= Dy 1) (<= Dy 4)))

; The variables are all distinct

(assert (and (/= Ax Bx) (/= Ax Cx) (/= Ax Dx) (/= Bx Cx) (/= Bx Dx) (/= Cx Dx)))
(assert (and (/= Ay By) (/= Ay Cy) (/= Ay Dy) (/= By Cy) (/= By Dy) (/= Cy Dy)))

; Define what its means to on the same diagonal

(define abs::(-> int int) (lambda (x::int) (if (< x 0) (- 0 x) x)))
(define diag::(-> int int int int bool) 
              (lambda (x::int y::int i::int j::int) (= (abs (- x i)) (abs (- y j)))))

; No two queens are on the same diagonal              
(assert (and (not (diag Ax Ay Bx By))   
             (not (diag Ax Ay Cx Cy))  
             (not (diag Ax Ay Dx Dy))  
             (not (diag Bx By Cx Cy))  
             (not (diag Bx By Dx Dy))  
             (not (diag Cx Cy Dx Dy))))

; to run interactively             
; /cygdrive/d/FreyaDownloads/yices/yices-2.2.2/bin/yices --mode=interactive queens.ys     

; to run in batch mode
; add the two lines below, then redirect output
;(check)
;(show-model)
; /cygdrive/d/FreyaDownloads/yices/yices-2.2.2/bin/yices queens.ys >> sol.sol