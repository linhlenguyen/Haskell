%!PS-Adobe-2.0
%%Creator: dvips 5.54 Copyright 1986, 1994 Radical Eye Software
%%Title: paper.dvi
%%CreationDate: Tue Jul 19 21:36:55 1994
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: /usr/local/tex/bin/sun4/dvips paper.dvi
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1994.07.19:2136
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]{
ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}if nn
/base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup length 1
sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{cc 1 add D
}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin 0 0
moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul add
.99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1993/3/12. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
pathforall z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 eq y 0 eq and { /x 1 def /y 1 def } if [ y x ] 1 a
sub y mul setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap n { currentstrokeadjust == x1 y1 moveto x2 y1 L
stroke /y1 y1 a add def } repeat grestore } def
/LineFill { abs CLW add /a ED gsave clip pathbbox a Div ceiling /y2 ED
/x2 ED a Div floor /y1 ED /x1 ED /n y2 y1 sub 1 add cvi def /y1 a y1 mul
def newpath 2 setlinecap systemdict /currentstrokeadjust known {
currentstrokeadjust } { false } ifelse { /t { } def } { /t { transform
0.25 sub round 0.25 add exch 0.25 sub round 0.25 add exch itransform }
bind def } ifelse n { x1 y1 t moveto x2 y1 t L stroke /y1 y1 a add def }
repeat grestore } def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } pathforall ] cvx newpath 3 1 roll T exec } def
/SD { 0 360 arc fill } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { /a 4 string def /b ED /d ED /n ED cvi dup 1 lt { pop 1 } if /c ED
c div dup 0 eq { pop 1 } if /cy ED c div dup 0 eq { pop 1 } if /cx ED cy
div cvi /y ED cx div cvi /x ED cy div cvi /y2 ED cx div cvi /x2 ED cy
div cvi /y1 ED cx div cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse
def /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2
div add def /Helvetica findfont b scalefont setfont /b b .95 mul CLW 2
div add def } if gsave n 0 gt { 1 setlinecap [ 0 cy n div ] 0 setdash }
{ 2 setlinecap } ifelse /c x1 def /i 500 w mul x1 add def /e y cy mul
def /f y1 cy mul def /g y2 cy mul def x1 cx mul 0 T { newpath 0 e moveto
b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1} {z1 z2
add neg} ifelse h 0 gt {b neg} {z1} ifelse rmoveto show grestore } if 0
f moveto 0 g L stroke cx w mul 0 T c x2 eq c i eq or {exit} if /c c w
add def } loop grestore gsave n 0 gt { 1 setlinecap [ 0 cx n div ] 0
setdash } { 2 setlinecap } ifelse /c y1 def /i 500 h mul y1 add def /e x
cx mul def /f x1 cx mul def /g x2 cx mul def 0 y1 cy mul T { newpath e 0
moveto b 0 gt { gsave d c a cvs dup stringwidth pop /z2 ED w 0 gt {z1 z2
add neg} {z1} ifelse h 0 gt {z1} {b neg} ifelse rmoveto show grestore }
if f 0 moveto g 0 L stroke 0 cy h mul T c y2 eq c i eq or {exit} if /c c
h add def } loop grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /lmtrx [ tx@Dict /lmtrx known { lmtrx aload pop } if CM ] def
CP 4 2 roll T moveto } def
/PutEnd { CP /lmtrx [ lmtrx aload pop setmatrix ] def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { CP OLUnit T
moveto /IfVisible true def } if } { IfVisible { CP OLUnit NET moveto
/IfVisible false def } if } ifelse } def
/InitOL { /OLUnit [ gsave CM STV 2890.79999 dup moveto setmatrix CP
grestore ] cvx def /BOL { BeginOL } def /IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: pst-node.pro
% PostScript prologue for pst-node.tex.
% Created 1993/3/12. Source file was pst-node.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@NodeDict 200 dict def tx@NodeDict begin
/NewNode { gsave /next ED dict dup 3 -1 roll ED begin tx@Dict begin STV
CP T exec end /NodeMtrx CM def next end grestore } def
/InitPnode { /Y ED /X ED /NodePos { Nodesep Cos mul Nodesep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { Nodesep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r Nodesep add def } { /dx l Nodesep sub def
} ifelse Sin 0 gt { /dy u Nodesep add def } { /dy d Nodesep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /r ED r mul neg /l ED /r r l add def /X l neg def { neg /d
ED /u ED /Y 0 def } { neg /Y ED Y sub /u ED u mul neg /d ED /u u d add
def /Y Y d sub def } ifelse /NodePos { GetRnodePos } def } def
/InitRNode { /Y ED /X ED /r ED /X r 2 div X add def /r r X sub def /l X
neg def Y add neg /d ED Y sub /u ED /NodePos { GetRnodePos } def } def
/GetOnodePos { /ww w Nodesep add def /hh h Nodesep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/GetAngle { nodeA GetCenter nodeB GetCenter 3 -1 roll sub 3 1 roll sub
neg Atan  } def
/GetEdge { begin /Nodesep ED dup 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED NodePos Y add exch X add exch
NodeMtrx transform CM itransform end 4 2 roll 1 index 0 eq { pop pop } {
2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse } def
/GetPos { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED OffsetB
AngleB NodesepB nodeB GetEdge /y2 ED /x2 ED } def
/InitNC { /nodeB ED /nodeA ED /NodesepB ED /NodesepA ED /OffsetB ED
/OffsetA ED tx@NodeDict nodeA known tx@NodeDict nodeB known and dup {
/nodeA nodeA load def /nodeB nodeB load def } if } def
/LineMP { 4 copy 1 t sub mul exch t mul add 3 1 roll 1 t sub mul exch t
mul add exch 6 2 roll sub 3 1 roll sub Atan  } def
/NCCoor { GetAngle /AngleA ED /AngleB AngleA 180 add def GetPos /LPutVar
[ x2 x1 y2 y1 ] cvx def /LPutPos { LPutVar LineMP } def x1 y1 x2 y2 }
def
/NCLine { NCCoor tx@Dict begin ArrowB 4 2 roll ArrowA lineto end } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan } def
/GetArms { /x1a armA AngleA cos mul x1 add def /y1a armA AngleA sin mul
y1 add def /x2a armB AngleB cos mul x2 add def /y2a armB AngleB sin mul
y2 add def } def
/NCCurve { GetPos x1 x2 sub y1 y2 sub Pyth 2 div dup 3 -1 roll mul /armA
ED mul /armB ED GetArms x1a y1a x1 y1 tx@Dict begin ArrowA end x2a y2a
x2 y2 tx@Dict begin ArrowB end curveto /LPutVar [ x1 y1 x1a y1a x2a y2a
x2 y2 ] cvx def /LPutPos { t LPutVar BezierMidpoint } def } def
/AnglesMP { LPutVar t 3 gt { /t t 3 sub def } { t 2 gt { /t t 2 sub def
10 -2 roll } { t 1 gt { /t t 1 sub def 10 -4 roll } { 10 4 roll } ifelse
} ifelse } ifelse 6 { pop } repeat 3 -1 roll exch LineMP  } def
/NCAngles { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform exch pop mtrx itransform /y0 ED /x0
ED mark armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1a y1a armA 0 ne { x1 y1 }
if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a y2a x0 y0 x1a y1a
x1 y1 ] cvx def /LPutPos { AnglesMP } def } def
/NCAngle { GetPos /x2a armB AngleB cos mul x2 add def /y2a armB AngleB
sin mul y2 add def /mtrx AngleA matrix rotate def x2a y2a mtrx transform
pop x1 y1 mtrx transform exch pop mtrx itransform /y0 ED /x0 ED mark
armB 0 ne { x2 y2 } if x2a y2a x0 y0 x1 y1 tx@Dict begin false Line end
/LPutVar [ x2 y2 x2 y2 x2a y2a x0 y0 x1 y1 ] cvx def /LPutPos { AnglesMP
} def } def
/NCBar { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform pop x2a y2a mtrx transform pop sub dup 0 mtrx itransform 3 -1
roll 0 gt { /y2a exch y2a add def /x2a exch x2a add def } { /y1a exch
neg y1a add def /x2a exch neg x2a add def } ifelse mark x2 y2 x2a y2a
x1a y1a x1 y1 tx@Dict begin false Line end /LPutVar [ x2 y2 x2 y2 x2a
y2a x1a y1a x1 y1 ] cvx def /LPutPos { LPutVar AnglesMP } def } def
/NCDiag { GetPos GetArms mark x2 y2 x2a y2a x1a y1a x1 y1 tx@Dict begin
false Line end /LPutVar [ x2 y2 x2 y2 x2a y2a x1a y1a x1 y1 ] cvx def
/LPutPos { AnglesMP } def } def
/NCDiagg { OffsetA AngleA NodesepA nodeA GetEdge /y1 ED /x1 ED /x1a armA
AngleA cos mul x1 add def /y1a armA AngleA sin mul y1 add def nodeB
GetCenter y1a sub exch x1a sub Atan 180 add /AngleB ED OffsetB AngleB
NodesepB nodeB GetEdge /y2 ED /x2 ED mark x2 y2 x1a y1a x1 y1 tx@Dict
begin false Line end /LPutVar [ x2 y2 x2 y2 x2 y2 x1a y1a x1 y1] cvx def
/LPutPos { AnglesMP } def } def
/LoopMP { /t t abs def [ LPutVar ] length 2 div 1 sub dup t lt { /t ED }
{ pop } ifelse mark LPutVar t cvi { /t t 1 sub def pop pop } repeat
counttomark 1 add 4 roll cleartomark 3 -1 roll exch LineMP  } def
/NCLoop { GetPos GetArms /mtrx AngleA matrix rotate def x1a y1a mtrx
transform loopsize add /y1b ED /x1b ED /x2b x2a y2a mtrx transform pop
def x2b y1b mtrx itransform /y2b ED /x2b ED x1b y1b mtrx itransform /y1b
ED /x1b ED mark armB 0 ne { x2 y2 } if x2a y2a x2b y2b x1b y1b x1a y1a
armA 0 ne { x1 y1 } if tx@Dict begin false Line end /LPutVar [ x2 y2 x2a
y2a x2b y2b x1b y1b x1a y1a x1 y1 ] cvx def /LPutPos { LoopMP } def }
def
/NCCircle { nodeA GetCenter 0 0 NodesepA nodeA GetEdge pop 3 1 roll /Y ED
/X ED X sub 2 div dup 2 exp r r mul sub abs sqrt atan 2 mul /a ED r
AngleA 90 add PtoC Y add exch X add exch 2 copy /LPutVar [ 4 2 roll r a
] def /LPutPos { LPutVar aload pop t 360 mul add dup 5 1 roll 90 sub
PtoC 3 -1 roll add 3 1 roll add exch 3 -1 roll } def r AngleA 90 sub a
add AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c
57.2957 r Div def /y ED /x ED } def
/LPutCoor { tx@NodeDict /LPutPos known { gsave LPutPos tx@Dict begin
/langle ED CM 3 1 roll STV CP 3 -1 roll sub neg 3 1 roll sub exch moveto
setmatrix CP end grestore } { 0 0 tx@Dict /langle 0 def end } ifelse }
def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale false def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 300 300
(/export/users/grad/gnik/Papers/Dfs/paper.dvi) @start
/Fa 1 60 df<40E06020202040408003097D820A>59 D E /Fb 1
4 df<040004000400C460F5E03F800E003F80F5E0C4600400040004000B0D7E8D11>3
D E /Fc 5 111 df<0020004000C003C00CC00180018001800180030003000300030006
000600060006000C00FFC00B137C9212>49 D<040C0FF00BC00800080010001000178018
6020200030003000304060C06080C0808043003C000E137C9212>53
D<02060000000000384C4C8C98181830323264643807147D930B>105
D<001800100000000000000000000001C002600430046008600060006000C000C000C000
C001800180018001800300C300C60078000D1A81930B>I<30F05B184C189C1898181818
18183030303230323064606460380F0D7D8C13>110 D E /Fd 3
117 df<03900C70187030303060606060606060C0C0C0C840C841C862D01C700D0E7C8D
12>97 D<7C0018001800180018003000300030003000678068C070406060C060C060C060
C06080C080C08180C10046003C000B177C9610>I<060006000C000C000C000C00FF8018
0018001800300030003000300060006100610062006400380009147D930C>116
D E /Fe 1 51 df<01FF8007FF800E0000180000300000600000600000600000C00000C0
0000FFFF80FFFF80C00000C000006000006000006000003000001800000E000007FF8001
FF8011167D9218>50 D E /Ff 1 51 df<7FFFFCFFFFFEC00006C00006C00006C00006C0
0006C00006C00006C00006C00006C00006C00006C00006C00006C00006C00006C00006C0
0006C00006C00006FFFFFEFFFFFE17177D991F>50 D E /Fg 23
122 df<003FC00001F0300003C0380007C07C000F807C000F807C000F8038000F800000
0F8000000F8000000F800000FFFFFC00FFFFFC000F807C000F807C000F807C000F807C00
0F807C000F807C000F807C000F807C000F807C000F807C000F807C000F807C000F807C00
0F807C007FE1FF807FE1FF80191D809C1B>12 D<03F8000F1E001C07003C078038038078
03C07803C07803C0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F8
03E0F803E0F803E07803C07803C03803803C07801C07000F1E0003F800131B7E9A18>48
D<00600001E0000FE000FFE000F3E00003E00003E00003E00003E00003E00003E00003E0
0003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E00003E0
0003E0007FFF807FFF80111B7D9A18>I<07F8001FFE00383F80780FC0FC07C0FC07E0FC
03E0FC03E07803E00007E00007C00007C0000F80001F00001E0000380000700000E00001
80600300600600600800E01FFFC03FFFC07FFFC0FFFFC0FFFFC0131B7E9A18>I<07F800
1FFE003C1F003C0F807C07C07E07C07C07C03807C0000F80000F80001E00003C0003F800
001E00000F800007C00007C00007E03007E07807E0FC07E0FC07E0FC07C0780F80781F00
1FFE0007F800131B7E9A18>I<000180000380000780000F80001F80003F80006F8000CF
80008F80018F80030F80060F800C0F80180F80300F80600F80C00F80FFFFF8FFFFF8000F
80000F80000F80000F80000F80000F8000FFF800FFF8151B7F9A18>I<3801803FFF003F
FE003FFC003FF8003FC00030000030000030000030000031F800361E00380F8030078000
07C00007E00007E00007E07807E0F807E0F807E0F807C0F007C0600F80381F001FFE0007
F000131B7E9A18>I<007E0003FF000781800F03C01E07C03C07C07C0380780000780000
F80000F8F800FB0E00FA0780FC0380FC03C0F803E0F803E0F803E0F803E07803E07803E0
7803C03C03C03C07801E0F0007FE0003F800131B7E9A18>I<6000007FFFE07FFFE07FFF
C07FFF807FFF80E00300C00600C00C00C0180000300000300000600000E00000E00001E0
0001C00003C00003C00003C00003C00007C00007C00007C00007C00007C00007C0000380
00131C7D9B18>I<FFFFF800FFFFFF000FC01FC00FC007E00FC001F00FC001F80FC000F8
0FC000FC0FC0007C0FC0007C0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E0FC0007E
0FC0007E0FC0007E0FC0007C0FC0007C0FC0007C0FC000F80FC000F80FC001F00FC007E0
0FC01FC0FFFFFF00FFFFF8001F1C7E9B25>68 D<FFFFF800FFFFFE000FC03F800FC00F80
0FC007C00FC007E00FC007E00FC007E00FC007E00FC007E00FC007C00FC007C00FC00F80
0FC03F000FFFFC000FC000000FC000000FC000000FC000000FC000000FC000000FC00000
0FC000000FC000000FC000000FC00000FFFC0000FFFC00001B1C7E9B21>80
D<7FFFFFE07FFFFFE0781F81E0701F80E0601F8060E01F8070C01F8030C01F8030C01F80
30C01F8030001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F80
00001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F800007FFFE
0007FFFE001C1C7E9B21>84 D<03FC000F07001C03803C01C07801C07801E0F801E0F801
E0FFFFE0F80000F80000F800007800007800603C00601E00C00F038001FC0013127F9116
>101 D<007F0001E38003C7C00787C00F87C00F83800F80000F80000F80000F80000F80
00FFF800FFF8000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80
000F80000F80000F80000F80007FF0007FF000121D809C0F>I<FF0000FF00001F00001F
00001F00001F00001F00001F00001F00001F00001F00001F0FC01F31E01F40F01F80F81F
80F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8FF
E7FFFFE7FF181D7F9C1B>104 D<1E003F003F003F003F001E0000000000000000000000
00007F007F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFC0
FFC00A1E7F9D0E>I<FF0FC07E00FF31E18F001F40F207801F80FC07C01F80FC07C01F00
F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F8
07C01F00F807C01F00F807C01F00F807C0FFE7FF3FF8FFE7FF3FF825127F9128>109
D<FF0FC0FF31E01F40F01F80F81F80F81F00F81F00F81F00F81F00F81F00F81F00F81F00
F81F00F81F00F81F00F81F00F8FFE7FFFFE7FF18127F911B>I<01FC000F07801C01C03C
01E07800F07800F0F800F8F800F8F800F8F800F8F800F8F800F87800F07800F03C01E01E
03C00F078001FC0015127F9118>I<FF3F80FFE1E01F80F01F00781F007C1F003C1F003E
1F003E1F003E1F003E1F003E1F003E1F003C1F007C1F00781F80F01FC1E01F3F001F0000
1F00001F00001F00001F00001F0000FFE000FFE000171A7F911B>I<FE3E00FE47001E8F
801E8F801E8F801F07001F00001F00001F00001F00001F00001F00001F00001F00001F00
001F0000FFE000FFE00011127F9114>114 D<0300030003000300070007000F000F003F
FCFFFC1F001F001F001F001F001F001F001F001F001F0C1F0C1F0C1F0C0F08079803F00E
1A7F9913>116 D<FFC1FCFFC1FC1F00601F80600F80C00F80C007C18007C18003E30003
E30003F70001F60001FE0000FC0000FC00007800007800003000003000006000706000F8
E000F8C000F980007300003E0000161A7F9119>121 D E /Fh 40
122 df<000FF000007FFC0001F80E0003E01F0007C03F000F803F000F803F000F801E00
0F800C000F8000000F8000000F8000000F800000FFFFFF00FFFFFF000F801F000F801F00
0F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F00
0F801F000F801F000F801F000F801F000F801F000F801F000F801F007FF0FFE07FF0FFE0
1B237FA21F>12 D<FFFCFFFCFFFCFFFC0E047F8C13>45 D<387CFEFEFE7C3807077C8610
>I<00180000780001F800FFF800FFF80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001
F80001F80001F80001F80001F80001F80001F8007FFFE07FFFE013207C9F1C>49
D<03FC000FFF003C1FC07007E07C07F0FE03F0FE03F8FE03F8FE01F87C01F83803F80003
F80003F00003F00007E00007C0000F80001F00003E0000380000700000E01801C0180380
180700180E00380FFFF01FFFF03FFFF07FFFF0FFFFF0FFFFF015207D9F1C>I<00FE0007
FFC00F07E01E03F03F03F03F81F83F81F83F81F81F03F81F03F00003F00003E00007C000
1F8001FE0001FF000007C00001F00001F80000FC0000FC3C00FE7E00FEFF00FEFF00FEFF
00FEFF00FC7E01FC7801F81E07F00FFFC001FE0017207E9F1C>I<0000E00001E00003E0
0003E00007E0000FE0001FE0001FE00037E00077E000E7E001C7E00187E00307E00707E0
0E07E00C07E01807E03807E07007E0E007E0FFFFFFFFFFFF0007E00007E00007E00007E0
0007E00007E00007E000FFFF00FFFF18207E9F1C>I<3000203E01E03FFFC03FFF803FFF
003FFE003FF80033C00030000030000030000030000031FC0037FF003E0FC03807E03003
E00003F00003F00003F80003F83803F87C03F8FE03F8FE03F8FC03F0FC03F07007E03007
C03C1F800FFF0003F80015207D9F1C>I<001F8000FFE003E07007C0F00F01F81F01F83E
01F83E01F87E00F07C00007C0000FC0800FC7FC0FCFFE0FD80F0FF00F8FE007CFE007CFC
007EFC007EFC007EFC007E7C007E7C007E7C007E3C007C3E007C1E00F80F00F00783E003
FFC000FF0017207E9F1C>I<6000007800007FFFFE7FFFFE7FFFFC7FFFF87FFFF87FFFF0
E00060E000C0C00180C00300C00300000600000C00001C00001800003800007800007800
00F00000F00000F00001F00001F00001F00003F00003F00003F00003F00003F00003F000
03F00001E00017227DA11C>I<000070000000007000000000F800000000F800000000F8
00000001FC00000001FC00000003FE00000003FE00000003FE000000067F000000067F00
00000C7F8000000C3F8000000C3F800000181FC00000181FC00000301FE00000300FE000
00700FF000006007F000006007F00000C007F80000FFFFF80001FFFFFC00018001FC0001
8001FC00030001FE00030000FE00070000FF000600007F000600007F00FFE007FFF8FFE0
07FFF825227EA12A>65 D<FFFFFF8000FFFFFFF00007F001F80007F000FC0007F0007E00
07F0007E0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007
F000FE0007F000FC0007F003F80007FFFFF00007FFFFF00007F001FC0007F0007E0007F0
003F0007F0003F8007F0001F8007F0001FC007F0001FC007F0001FC007F0001FC007F000
1FC007F0001FC007F0003F8007F0003F8007F0007F0007F001FE00FFFFFFF800FFFFFFC0
0022227EA128>I<0003FE0080001FFF818000FF01E38001F8003F8003E0001F8007C000
0F800F800007801F800007803F000003803F000003807F000001807E000001807E000001
80FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000
FE000000007E000000007E000001807F000001803F000001803F000003801F800003000F
8000030007C000060003F0000C0001F800380000FF00F000001FFFC0000003FE00002122
7DA128>I<FFFFFF8000FFFFFFF00007F003FC0007F0007E0007F0003F0007F0001F8007
F0000FC007F00007E007F00007E007F00007F007F00003F007F00003F007F00003F007F0
0003F807F00003F807F00003F807F00003F807F00003F807F00003F807F00003F807F000
03F807F00003F807F00003F007F00003F007F00003F007F00007E007F00007E007F0000F
C007F0001F8007F0003F0007F0007E0007F003FC00FFFFFFF000FFFFFF800025227EA12B
>I<FFFFFFF8FFFFFFF807F001F807F0007807F0003807F0001807F0001C07F0001C07F0
000C07F0000C07F0180C07F0180C07F0180007F0180007F0380007F0780007FFF80007FF
F80007F0780007F0380007F0180007F0180007F0180007F0180007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F00000FFFFC000FFFFC0001E227EA123>
70 D<0003FE0040001FFFC0C0007F00F1C001F8003FC003F0000FC007C00007C00FC000
03C01F800003C03F000001C03F000001C07F000000C07E000000C07E000000C0FE000000
00FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE000FFFFC
7E000FFFFC7F00001FC07F00001FC03F00001FC03F00001FC01F80001FC00FC0001FC007
E0001FC003F0001FC001FC003FC0007F80E7C0001FFFC3C00003FF00C026227DA12C>I<
FFFFFF00FFFFFFE007F007F007F001FC07F000FC07F0007E07F0007E07F0007F07F0007F
07F0007F07F0007F07F0007F07F0007E07F0007E07F000FC07F001FC07F007F007FFFFE0
07FFFF0007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F00000
07F0000007F0000007F0000007F0000007F00000FFFF8000FFFF800020227EA126>80
D<01FE0207FF861F01FE3C007E7C001E78000E78000EF80006F80006FC0006FC0000FF00
00FFE0007FFF007FFFC03FFFF01FFFF80FFFFC03FFFE003FFE0003FE00007F00003F0000
3FC0001FC0001FC0001FE0001EE0001EF0003CFC003CFF00F8C7FFE080FF8018227DA11F
>83 D<7FFFFFFF807FFFFFFF807E03F80F807803F807807003F803806003F80180E003F8
01C0E003F801C0C003F800C0C003F800C0C003F800C0C003F800C00003F800000003F800
000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F800000003F800000003F800000003F8000000
03F800000003F800000003F800000003F8000001FFFFF00001FFFFF00022227EA127>I<
0FFC003FFF807E07C07E03E07E01E07E01F03C01F00001F00001F0003FF003FDF01FC1F0
3F01F07E01F0FC01F0FC01F0FC01F0FC01F07E02F07E0CF81FF87F07E03F18167E951B>
97 D<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0FE0001F3FF8001FE07C001F803E001F
001F001F000F801F000F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F
000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C3FF800180FC0001A
237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC0000
FC0000FC0000FC0000FC00007C00007E00007E00003E00181F00300FC06007FFC000FF00
15167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E0000
003E0000003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE001F
007E003E003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC
003E00FC003E00FC003E007C003E007C003E003E007E001F00FE000F83BE0007FF3FC001
FC3FC01A237EA21F>I<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00
F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003FF
C000FF0015167E951A>I<001FC0007FE000F1F001E3F003E3F007C3F007C1E007C00007
C00007C00007C00007C00007C000FFFE00FFFE0007C00007C00007C00007C00007C00007
C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007C00007
C0003FFC003FFC00142380A211>I<01FE0F0007FFBF800F87C7801F03E7801E01E0003E
01F0003E01F0003E01F0003E01F0003E01F0001E01E0001F03E0000F87C0000FFF800009
FE000018000000180000001C0000001FFFE0000FFFF80007FFFE001FFFFF003C003F0078
000F80F0000780F0000780F0000780F000078078000F003C001E001F007C000FFFF80001
FFC00019217F951C>I<FF000000FF0000001F0000001F0000001F0000001F0000001F00
00001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF8001F30
7C001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1
FFC0FFE1FFC01A237EA21F>I<1C003E007F007F007F003E001C00000000000000000000
0000000000FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F00FFE0FFE00B247EA310>I<FF00FF001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F00FFE0FFE00B237EA210>108 D<FF07F007F000FF1FFC
1FFC001F303E303E001F403E403E001F801F801F001F801F801F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>I<FF07E000FF1FF8001F307C001F40
3C001F803E001F803E001F003E001F003E001F003E001F003E001F003E001F003E001F00
3E001F003E001F003E001F003E001F003E001F003E001F003E001F003E00FFE1FFC0FFE1
FFC01A167E951F>I<00FE0007FFC00F83E01E00F03E00F87C007C7C007C7C007CFC007E
FC007EFC007EFC007EFC007EFC007EFC007E7C007C7C007C3E00F81F01F00F83E007FFC0
00FE0017167E951C>I<FF0FE000FF3FF8001FE07C001F803E001F001F001F001F801F00
1F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F00
1F801F001F801F803F001FC03E001FE0FC001F3FF8001F0FC0001F0000001F0000001F00
00001F0000001F0000001F0000001F0000001F000000FFE00000FFE000001A207E951F>
I<FE1F00FE3FC01E67E01EC7E01E87E01E87E01F83C01F00001F00001F00001F00001F00
001F00001F00001F00001F00001F00001F00001F00001F0000FFF000FFF00013167E9517
>114 D<0FF3003FFF00781F00600700E00300E00300F00300FC00007FE0007FF8003FFE
000FFF0001FF00000F80C00780C00380E00380E00380F00700FC0E00EFFC00C7F0001116
7E9516>I<0180000180000180000180000380000380000780000780000F80003F8000FF
FF00FFFF000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80000F81800F81800F81800F81800F81800F830007C30003FE0000F80011207F9F16>I<
FF01FE00FF01FE001F003E001F003E001F003E001F003E001F003E001F003E001F003E00
1F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F007E00
1F00FE000F81BE0007FF3FC001FC3FC01A167E951F>I<FFE01FE0FFE01FE01F8007000F
8006000FC00E0007C00C0007E00C0003E0180003E0180001F0300001F0300000F8600000
F86000007CC000007CC000007FC000003F8000003F8000001F0000001F0000000E000000
0E00001B167F951E>I<FFE07FC0FFE07FC00F801C0007C0380003E0700003F0600001F8
C00000F98000007F8000003F0000001F0000001F8000003FC0000037C0000063E00000C1
F00001C0F8000380FC0007007E000E003E00FF80FFE0FF80FFE01B167F951E>120
D<FFE01FE0FFE01FE01F8007000F8006000FC00E0007C00C0007E00C0003E0180003E018
0001F0300001F0300000F8600000F86000007CC000007CC000007FC000003F8000003F80
00001F0000001F0000000E0000000E0000000C0000000C00000018000078180000FC3800
00FC300000FC60000069C000007F8000001F0000001B207F951E>I
E /Fi 16 120 df<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C83
0C>I<0000038000000F0000003C000000F0000003C000000F0000003C000000F0000003
C000000F0000003C000000F0000000F00000003C0000000F00000003C0000000F0000000
3C0000000F00000003C0000000F00000003C0000000F000000038019187D9520>I<0001
0003000600060006000C000C000C0018001800180030003000300060006000C000C000C0
018001800180030003000300060006000C000C000C001800180018003000300030006000
60006000C000C00010297E9E15>I<01E3000717000C0F00180F00380E00300E00700E00
700E00E01C00E01C00E01C00E01C00E03880E03880E038806078803199001E0E0011127E
9116>97 D<3F00070007000E000E000E000E001C001C001C001C0039E03A303C18381870
18701C701C701CE038E038E038E030E070E060E0C061C023001E000E1D7E9C12>I<01F0
030C0C0C1C1E383C301870007000E000E000E000E000E000E0046008601030601F800F12
7E9112>I<0007E00000E00000E00001C00001C00001C00001C000038000038000038000
038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E01C00E0
1C00E03880E03880E038806078803199001E0E00131D7E9C16>I<01F007080C08180438
08300870307FC0E000E000E000E000E000E0046008601030600F800E127E9113>I<0001
E0000630000E78000EF0001C60001C00001C00001C00001C0000380000380003FFC00038
0000380000700000700000700000700000700000E00000E00000E00000E00000E00001C0
0001C00001C00001C00001C000018000038000038000630000F30000F60000E400007800
0015257E9C14>I<0038C000C5C00183C00303C00703800603800E03800E03801C07001C
07001C07001C07001C0E001C0E001C0E000C1E00047C00039C00001C00001C0000380060
3800F03000F07000E0C0007F0000121A809114>I<0FC00001C00001C000038000038000
0380000380000700000700000700000700000E3E000EC3000F03800E03801E03801C0380
1C03801C0380380700380700380700380E00700E20700E20701C20701C40E00C80600700
131D7E9C18>I<01C003C003C001800000000000000000000000001C0027004700470087
0087000E000E001C001C001C003800388038807080710032001C000A1C7E9B0E>I<0007
000F000F00060000000000000000000000000078009C010C020C021C041C001C001C0038
003800380038007000700070007000E000E000E000E001C061C0F180F300E6007C001024
809B11>I<1C03270747074703870187010E010E011C021C021C021C041804180818081C
100C2007C010127E9114>118 D<1C00C0802701C1C04701C1C04701C0C0870380408703
80400E0380400E0380401C0700801C0700801C0700801C07010018060100180601001C0E
02001C0F04000E13080003E1F0001A127E911E>I E /Fj 9 118
df<038003800380038003800380FFFEFFFEFFFE0380038003800380038003800F0F7F91
12>43 D<038007C007C006C006C00EE00EE00EE00EE00C601C701C701C701FF01FF03838
38383838FC7EFC7E0F147F9312>65 D<1FC0003FF000383800101C00001C0007FC003FFC
00781C00E01C00E01C00E01C00703C003FFF801FCF80110E7F8D12>97
D<07F01FF8383870106000E000E000E000E0006000703838381FF007E00D0E7E8D12>99
D<F9E0FFF03E383C3838383838383838383838383838383838FE3EFE3E0F0E7F8D12>
110 D<0F803FE038E07070E038E038E038E038E038F078707038E03FE00F800D0E7E8D12
>I<1FF03FF06070C070E0007F003FE00FF000786018E018F030FFE0DFC00D0E7E8D12>
115 D<06000E000E000E007FF8FFF80E000E000E000E000E000E000E000E1C0E1C0E1C07
F801E00E127F9112>I<F8F8F8F838383838383838383838383838383838383838781FFE
0FBE0F0E7F8D12>I E /Fk 33 122 df<0102040C1818303070606060E0E0E0E0E0E0E0
E0E0E060606070303018180C04020108227D980E>40 D<8040203018180C0C0E06060607
0707070707070707070606060E0C0C18183020408008227E980E>I<60F0F07010102020
4040040A7D830A>44 D<60F0F06004047D830A>46 D<001000003800003800003800005C
00005C00005C00008E00008E00008E0001070001070002038002038002038007FFC00401
C00401C00800E00800E01800F03800F0FE03FE17177F961A>65 D<FF83FE1C00701C0070
1C00701C00701C00701C00701C00701C00701C00701C00701FFFF01C00701C00701C0070
1C00701C00701C00701C00701C00701C00701C0070FF83FE17177F961A>72
D<FC00FE1E00381F001017001013801011C01011C01010E010107010103810103810101C
10100E10100F101007101003901001D01001D01000F0100070100030380030FE00101717
7F961A>78 D<7FFFF8603818403808403808803804803804803804003800003800003800
003800003800003800003800003800003800003800003800003800003800003800003800
03FF8016177F9619>84 D<FF07FC3F803C00E00E001C00E004001C00E004001C01700400
0E017008000E017008000E023808000702381000070238100007041C100003841C200003
841C200003880E200001C80E400001C80E400001D007400000F007800000F007800000F0
07800000E00380000060030000006003000021177F9624>87 D<3FC07060703020380038
03F81E3830387038E039E039E07970FF1F1E100E7F8D12>97 D<F8000038000038000038
000038000038000038000038000038000039F0003E0C0038060038070038030038038038
0380380380380380380300380700380600361C0021F00011177F9614>I<07F018383038
70106000E000E000E000E000600070083008183007C00D0E7F8D10>I<003E00000E0000
0E00000E00000E00000E00000E00000E00000E0007CE001C3E00300E00700E00600E00E0
0E00E00E00E00E00E00E00600E00700E00301E00182E0007CF8011177F9614>I<0FC018
6030307038E018FFF8E000E000E000600070083010183007C00D0E7F8D10>I<03E00670
0E701C201C001C001C001C001C00FF801C001C001C001C001C001C001C001C001C001C00
1C001C007F800C1780960B>I<0F9E18E33060707070707070306018C02F80200060003F
E03FF83FFC600EC006C006C006600C38380FE010157F8D12>I<F8000038000038000038
000038000038000038000038000038000038F8003B1C003C0E00380E00380E00380E0038
0E00380E00380E00380E00380E00380E00380E00FE3F8011177F9614>I<307878300000
000000F8383838383838383838383838FE07177F960A>I<F80038003800380038003800
380038003800383E383838303840388039803FC039E038E038F03878383C383CFE7F1017
7F9613>107 D<F8383838383838383838383838383838383838383838FE07177F960A>I<
F8F83E003B1CC7003C0F0380380E0380380E0380380E0380380E0380380E0380380E0380
380E0380380E0380380E0380380E0380FE3F8FE01B0E7F8D1E>I<F8F8003B1C003C0E00
380E00380E00380E00380E00380E00380E00380E00380E00380E00380E00FE3F80110E7F
8D14>I<07C018303018600C600CE00EE00EE00EE00EE00E701C3018183007C00F0E7F8D
12>I<F9F0003E1C00380600380700380300380380380380380380380380380300380700
380E003E1C0039F000380000380000380000380000380000FE000011147F8D14>I<07C2
001C2600381E00700E00600E00E00E00E00E00E00E00E00E00600E00700E00301E001C2E
0007CE00000E00000E00000E00000E00000E00003F8011147F8D13>I<F9E03A703C7038
20380038003800380038003800380038003800FF000C0E7F8D0E>I<1F4060C0C040C040
E000FF007F801FC001E080608060C060E0C09F000B0E7F8D0E>I<080008000800180018
003800FFC0380038003800380038003800380038403840384038401C800F000A147F930E
>I<F83E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0038
1E001C2E0007CF80110E7F8D14>I<FE1F380E3C0C1C081C080E100E100720072007E003
C003C001800180100E7F8D13>I<FEFE7C383838383810383C101C3C201C4C201E4E600E
CE400E8740078780070380070380030300020100160E7F8D19>I<FE3F3C1C1C100E2007
4007C0038001C002E004F008701838383CFC7F100E7F8D13>I<FE1F380E3C0C1C081C08
0E100E100720072007E003C003C00180018001000100E200E200A400780010147F8D13>
I E /Fl 4 53 df<187898181818181818181818181818FF08107D8F0F>49
D<1F00618040C08060C0600060006000C00180030006000C00102020207FC0FFC00B107F
8F0F>I<1F00218060C060C000C0008001001F00008000400060C060C060804060801F00
0B107F8F0F>I<01800180038005800D801980118021804180C180FFE001800180018001
800FE00B107F8F0F>I E /Fm 12 85 df<02040818103020604040C0C0C0C0C0C0C0C0C0
C040406020301018080402071E7D950D>40 D<804020301018080C040406060606060606
06060604040C08181030204080071E7E950D>I<0C001C00EC000C000C000C000C000C00
0C000C000C000C000C000C000C000C000C000C00FFC00A137D9211>49
D<1F0060C06060F070F030603000700070006000C001C00180020004000810101020207F
E0FFE00C137E9211>I<0FC030707038703870380038003000E00FC0007000380018001C
601CF01CF018E03860701FC00E137F9211>I<006000E000E00160026006600C60086010
6020606060C060FFFC0060006000600060006003FC0E137F9211>I<60607FC07F804400
4000400040004F0070C040E0006000700070E070E070E06040E021C01F000C137E9211>
I<07C00C201070207060006000C000CF00D0C0E060C020C030C030C03040306020206010
C00F000C137E9211>I<40007FFC7FF84010803080200040008001000100030002000600
06000E000E000E000E000E0004000E147E9311>I<0FC0107020186018601870183C303F
600F800FE031F06078C01CC00CC00CC00C601830300FC00E137F9211>I<0F0030806040
4060C020C030C030C0304030607030B00F30003000200060E040E08041003E000C137E92
11>I<7FFFF0607030407010407010807008807008807008007000007000007000007000
00700000700000700000700000700000700000700000700007FF0015147F9318>84
D E /Fn 16 104 df<FFFFFF80FFFFFF8019027D8A20>0 D<03C00FF01FF83FFC7FFE7F
FEFFFFFFFFFFFFFFFF7FFE7FFE3FFC1FF80FF003C010107E9115>15
D<000001800000078000001E00000078000001E00000078000001E00000078000001E000
00078000001E00000078000000E0000000780000001E0000000780000001E00000007800
00001E0000000780000001E0000000780000001E00000007800000018000000000000000
0000000000000000000000000000000000000000007FFFFF00FFFFFF8019227D9920>20
D<C0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C0
000000F00000003C0000000F000000038000000F0000003C000000F0000003C000000F00
00003C000000F0000003C000000F0000003C00000070000000C000000000000000000000
0000000000000000000000000000000000000000007FFFFF00FFFFFF8019227D9920>I<
00C00000000180000000018000000001800000000300000000030000000006000000000C
000000001C000000003000000000FFFFFFFFF0FFFFFFFFF030000000001C000000000C00
00000006000000000300000000030000000001800000000180000000018000000000C000
000024167D942A>32 D<00000030000000001800000000180000000018000000000C0000
00000C0000000006000000000300000000038000000000C0FFFFFFFFF8FFFFFFFFF80000
0000C00000000380000000030000000006000000000C000000000C000000001800000000
18000000001800000000300025167E942A>I<00060000000006000000000C000000001C
00000000180000000030000000007FFFFFF000FFFFFFF8038000000007000000003C0000
0000F0000000003C000000000E000000000300000000018000000000FFFFFFF8007FFFFF
F000300000000018000000000C000000000C0000000006000000000600000025187E952A
>40 D<000003000000000300000000018000000001C000000000C00000000060007FFFFF
F000FFFFFFF8000000000E00000000070000000001E0000000007800000001E000000003
8000000006000000000C00FFFFFFF8007FFFFFF0000000006000000000C0000000018000
00000180000000030000000003000025187E952A>I<0018003000003000180000300018
000060000C000060000C0000C000060001FFFFFF0003FFFFFF8006000000C00C00000060
3800000038F00000001E780000003C1C000000700E000000E0030000018001FFFFFF0000
FFFFFE0000C00006000060000C0000300018000030001800001800300000180030002718
7F952A>44 D<007FF801FFF80780000E0000180000300000300000600000600000C00000
C00000C00000FFFFF8FFFFF8C00000C00000C00000600000600000300000300000180000
0E000007800001FFF8007FF8151A7D961C>50 D<400004C0000C60001860001860001830
00303000303000301800601800601FFFE00FFFC00C00C00C00C006018006018003030003
030003030001860001860001860000CC0000CC0000CC0000780000780000780000300000
3000161E809C17>56 D<FFFFC0FFFFC00000C00000C00000C00000C00000C00000C00000
C00000C00000C00000C00000C03FFFC07FFFC00000C00000C00000C00000C00000C00000
C00000C00000C00000C00000C00000C00000C0FFFFC0FFFFC0121D7E9C17>I<00100000
3800003800006C00006C00006C0000C60000C6000183000183000301800301800600C006
00C00600C00C00600C006018003018003030001830001830001860000C60000CC00006C0
0002171A7E981C>94 D<C00002C0000660000C60000C3000183000183000181800301800
300C00600C00600600C00600C00600C003018003018001830001830000C60000C600006C
00006C00006C00003800003800001000171A7E981C>I<003C00E001C001800380038003
800380038003800380038003800380038003800380030007001C00F0001C000700030003
80038003800380038003800380038003800380038003800380018001C000E0003C0E297D
9E15>102 D<F0001C000700030003800380038003800380038003800380038003800380
03800380018001C000E0003C00E001C00180038003800380038003800380038003800380
0380038003800380030007001C00F0000E297D9E15>I E /Fo 46
125 df<0000FE000003018000060180000C0380001C0180001C00000018000000380000
00380000003800000038000003FFFE0000700E0000700E0000700E0000701C0000701C00
00E01C0000E01C0000E0380000E0380000E0380001C0380001C0720001C0720001C07200
01C07200038034000380180003800000030000000300000007000000C6000000E6000000
CC000000780000001925819C17>12 D<FFC0FFC0FFC00A037D890F>45
D<3078F06005047C830D>I<0004000C00180038007807B8007000700070007000E000E0
00E000E001C001C001C001C0038003800380038007000700070007000F00FFF00E1C7B9B
15>49 D<003E000041800080C00100C00200E00440E00440E00840E00840E00840E01081
C01081C01103800E0300000600000C000018000060000080000300000400000800401000
802000802001007F070043FE0081FC00807800131D7D9B15>I<001F000060C00080C001
00600200600240600440E00440E00440E00481C00301C000038000070000FC00001C0000
0600000600000700000700000700000700700700E00E00800E00801C0040180040300020
E0001F8000131D7D9B15>I<00806001FFC001FF8001FE00010000020000020000020000
02000004000004F800050C000606000C0600080600000600000700000600000E00000E00
700E00700C00E01C0080180080380040300040600021C0001F0000131D7C9B15>53
D<0000180000001800000038000000380000007800000078000000B80000013800000138
0000023C0000021C0000041C00000C1C0000081C0000101C0000101C0000201C0000201C
00007FFC0000C01C0000801C0001001C0001001E0002000E0002000E0004000E000C000E
001C001E00FF00FFC01A1D7E9C1F>65 D<0003F020001E0C60003002E000E003C001C001
C0038001C0070000C00E0000801E0000801C0000803C0000803C00000078000000780000
0078000000F0000000F0000000F0000000F0000000F0000400F0000400F0000400F00008
00700008007000100038002000180040000C0180000706000001F800001B1E7A9C1E>67
D<01FFFFF0003C00F0003800300038002000380020003800200070002000700020007008
200070080000E0100000E0100000E0300000FFF00001C0200001C0200001C0200001C020
0003804080038000800380008003800100070001000700030007000200070006000E003C
00FFFFFC001C1C7E9B1C>69 D<01FFFFF0003C00F0003800300038002000380020003800
200070002000700020007008200070080000E0100000E0100000E0300000FFF00001C020
0001C0200001C0200001C020000380400003800000038000000380000007000000070000
0007000000070000000F000000FFF000001C1C7E9B1B>I<0003F020001E0C60003002E0
00E003C001C001C0038001C0070000C00E0000801E0000801C0000803C0000803C000000
780000007800000078000000F0000000F0000000F001FF80F0001E00F0001C00F0001C00
F0001C00F0001C00700038007000380038003800180078000C0090000707100001F80000
1B1E7A9C20>I<03FF0078007000700070007000E000E000E000E001C001C001C001C003
8003800380038007000700070007000E000E000E000E001E00FFC0101C7D9B10>73
D<003FF80003C0000380000380000380000380000700000700000700000700000E00000E
00000E00000E00001C00001C00001C00001C00003800003800003800003800607000E070
00C0600080E00081C0004380003E0000151D7C9B16>I<01FFC0003C0000380000380000
380000380000700000700000700000700000E00000E00000E00000E00001C00001C00001
C00001C00003800203800203800203800407000407000C0700180700380E00F0FFFFF017
1C7E9B1A>76 D<01FE0001FE003E0001E0002E0003C0002E0005C0002E0005C0002E0009
C0004E000B80004E001380004E0023800047002380008700470000870047000087008700
00870107000107010E000107020E000107040E000107040E000207081C000203881C0002
03901C000203A01C000403A038000403C038000403C038000C038038001C03007800FF83
07FF00271C7E9B25>I<01FC00FF80001C001C00002E001800002E001000002E00100000
2700100000470020000043002000004380200000438020000081C040000081C040000081
C040000080E040000100E080000100708000010070800001007080000200390000020039
0000020039000002001D000004001E000004000E000004000E00000C000E00001C000400
00FF80040000211C7E9B1F>I<0007F000001C1C0000700E0000E0070001C00380038003
80070003800E0003C01E0003C01C0003C03C0003C03C0003C0780003C0780003C0780003
C0F0000780F0000780F0000780F0000F00F0000F00F0000E00F0001E00F0003C00700038
00700070007800E0003801C0001C0380000E0E000003F800001A1E7A9C20>I<01FFFE00
003C0380003801C0003800E0003800E0003800E0007001E0007001E0007001E0007001C0
00E003C000E0038000E0070000E01C0001FFF00001C0000001C0000001C0000003800000
038000000380000003800000070000000700000007000000070000000F000000FFE00000
1B1C7E9B1C>I<000F8400304C00403C0080180100180300180300180600100600100600
0007000007000003E00003FC0001FF00007F800007C00001C00001C00000C00000C02000
C02000C0600180600180600300600200F00400CC180083E000161E7D9C17>83
D<FF801FC03C0007001C0004001C0004001C0008001C0010001C0010001C0020001C0020
001C0040001C0080001C0080000E0100000E0100000E0200000E0400000E0400000E0800
000E0800000E1000000E2000000F20000007400000074000000780000007000000070000
0006000000060000001A1D779B1F>86 D<01E307170C0F180F380E300E700E700EE01CE0
1CE01CE01CE039E039E0396079319A1E0C10127C9115>97 D<3F00070007000E000E000E
000E001C001C001C001C0039E03A183C0C380C700C700E700E700EE01CE01CE01CE018E0
38E030E06060C031801E000F1D7C9C13>I<00F803040E041C0E181C300070007000E000
E000E000E000E000E0046008601030600F800F127C9113>I<0007E00000E00000E00001
C00001C00001C00001C000038000038000038000038001E7000717000C0F00180F00380E
00300E00700E00700E00E01C00E01C00E01C00E01C00E03900E03900E03900607900319A
001E0C00131D7C9C15>I<00F807040C0418023804300470087FF0E000E000E000E000E0
0060046008301030600F800F127C9113>I<0003C0000670000C70001C60001C00001C00
00380000380000380000380000380003FF8000700000700000700000700000700000E000
00E00000E00000E00000E00001C00001C00001C00001C00001C000038000038000038000
030000030000070000C60000E60000CC00007800001425819C0D>I<0078C001C5C00303
C00603C00E03800C03801C03801C0380380700380700380700380700380E00380E00380E
00181E000C7C00079C00001C00001C00003800003800C03000E07000C1C0007F0000121A
7E9113>I<0FC00001C00001C00003800003800003800003800007000007000007000007
00000E3E000EC3000F03800E03801E03801C03801C03801C038038070038070038070038
0E00700E40700E40701C40701C80E00C80600700121D7E9C15>I<018003800100000000
00000000000000000000001C002600470047008E008E000E001C001C001C003800380071
0071007100720072003C00091C7C9B0D>I<000300070003000000000000000000000000
00000078008C010C020C021C041C001C001C0038003800380038007000700070007000E0
00E000E000E001C001C0C180E300C60078001024819B0D>I<0FC00001C00001C0000380
000380000380000380000700000700000700000700000E07800E08800E11C00E21C01C41
801C80001D00001E00003FC00038E000387000387000707100707100707100707200E032
00601C00121D7E9C13>I<1F800380038007000700070007000E000E000E000E001C001C
001C001C0038003800380038007000700070007000E200E200E200E40064003800091D7D
9C0B>I<1C1E0780266318C04683A0E04703C0E08E0380E08E0380E00E0380E00E0380E0
1C0701C01C0701C01C0701C01C070380380E0388380E0388380E0708380E0710701C0320
300C01C01D127C9122>I<383E004CC3004D03804E03809E03809C03801C03801C038038
0700380700380700380E00700E40700E40701C40701C80E00C8060070012127C9117>I<
00F800030C000E06001C0300180300300300700380700380E00700E00700E00700E00E00
E00E00E01C0060180060300030E0000F800011127C9115>I<03878004C86004D03004E0
3009C03009C03801C03801C0380380700380700380700380600700E00700C00701800783
000E86000E78000E00000E00001C00001C00001C00001C0000380000FF0000151A809115
>I<1C3C2642468747078E068E000E000E001C001C001C001C0038003800380038007000
300010127C9112>114 D<01F006080C080C1C18181C001F001FC00FF007F00078003860
30E030C030806060C01F000E127D9111>I<03000700070007000E000E000E000E00FFE0
1C001C001C0038003800380038007000700070007000E080E080E100E100660038000B1A
7C990E>I<1C01802E03804E03804E03808E07008E07001C07001C0700380E00380E0038
0E00380E00301C80301C80301C80383C80184D000F860011127C9116>I<1C062E0E4E06
4E068E028E021C021C023804380438043808300830083010382018400F800F127C9113>
I<1E01832703874703874703838707018707010E07010E07011C0E021C0E021C0E021C0E
04180C04181C04181C081C1E080C263007C3C018127C911C>I<0387800CC8400870E010
70E020E0C020E00000E00000E00001C00001C00001C00001C000038100638100E38200C5
820085840078780013127E9113>I<1C01802E03804E03804E03808E07008E07001C0700
1C0700380E00380E00380E00380E00301C00301C00301C00383C001878000FB800003800
003000007000E06000E0C0008180004300003C0000111A7C9114>I<FFFFFFFFF825017B
8B2A>124 D E /Fp 38 122 df<0001FF0000001FFFC000007F81E00000FC01E00001F8
07F00003F807F00007F007F00007F007F00007F007F00007F007F00007F001C00007F000
000007F000000007F000000007F03FF800FFFFFFF800FFFFFFF800FFFFFFF80007F003F8
0007F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007F003F800
07F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007
F003F80007F003F80007F003F80007F003F80007F003F80007F003F8007FFF3FFF807FFF
3FFF807FFF3FFF80212A7FA925>12 D<FFFF80FFFF80FFFF80FFFF80FFFF80FFFF801106
7F9016>45 D<000E00001E00007E0007FE00FFFE00FFFE00F8FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE00
00FE0000FE00FFFFFEFFFFFEFFFFFE17277BA622>49 D<00FF800007FFF0000FFFFC001E
03FE003800FF807C003F80FE003FC0FF001FC0FF001FE0FF000FE0FF000FE07E000FE03C
001FE000001FE000001FC000001FC000003F8000003F0000007E000000FC000000F80000
01F0000003E00000078000000F0000001E0000003C00E0007000E000E000E001C001C003
8001C0060001C00FFFFFC01FFFFFC03FFFFFC07FFFFFC0FFFFFF80FFFFFF80FFFFFF801B
277DA622>I<007F800003FFF00007FFFC000F81FE001F007F003F807F003F803F803F80
3F803F803F801F803F801F003F8000007F0000007F0000007E000000FC000001F8000007
F00000FFC00000FFC0000001F80000007E0000003F0000003F8000001FC000001FC00000
1FE000001FE03C001FE07E001FE0FF001FE0FF001FE0FF001FC0FF003FC0FE003F807C00
7F003F01FE001FFFFC0007FFF00000FF80001B277DA622>I<00000F0000000F0000001F
0000003F0000007F000000FF000001FF000001FF000003BF0000073F00000E3F00001C3F
00003C3F0000383F0000703F0000E03F0001C03F0003803F0007803F0007003F000E003F
001C003F0038003F0070003F00F0003F00FFFFFFF8FFFFFFF8FFFFFFF800007F0000007F
0000007F0000007F0000007F0000007F0000007F0000007F00001FFFF8001FFFF8001FFF
F81D277EA622>I<180003001F801F001FFFFE001FFFFC001FFFF8001FFFF0001FFFC000
1FFF00001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C7FC000
1DFFF8001F80FC001E003F0008003F0000001F8000001FC000001FC000001FE000001FE0
18001FE07C001FE0FE001FE0FE001FE0FE001FE0FE001FC0FC001FC078003F8078003F80
3C007F001F01FE000FFFFC0003FFF00000FF80001B277DA622>I<0007F800003FFE0000
FFFF0001FC078003F00FC007C01FC00F801FC01F801FC01F001FC03F000F803F0000007E
0000007E0000007E000000FE020000FE1FF000FE3FFC00FE603E00FE801F00FF801F80FF
000FC0FF000FC0FE000FE0FE000FE0FE000FE0FE000FE07E000FE07E000FE07E000FE07E
000FE03E000FE03F000FC01F000FC01F001F800F801F0007E07E0003FFFC0001FFF80000
3FC0001B277DA622>I<380000003E0000003FFFFFF03FFFFFF03FFFFFF07FFFFFE07FFF
FFC07FFFFF807FFFFF0070000E0070000E0070001C00E0003800E0007000E000E0000001
C0000001C000000380000007800000070000000F0000001F0000001E0000003E0000003E
0000007E0000007C0000007C000000FC000000FC000000FC000000FC000001FC000001FC
000001FC000001FC000001FC000001FC000001FC000000F80000007000001C297CA822>
I<003FC00001FFF00003FFFC0007C07E000F003F001E001F001E000F803E000F803E000F
803F000F803F800F803FC00F003FF01F001FFC1E001FFE3C000FFFF80007FFE00003FFF0
0001FFFC0001FFFE0007FFFF000F0FFF801E07FFC03E01FFC07C007FE07C001FE0F8000F
E0F80007E0F80003E0F80003E0F80003E0F80003C07C0003C07E0007803F000F001FC03F
000FFFFC0003FFF800007FC0001B277DA622>I<007F800001FFF00007FFF8000FC0FC00
1F803E003F001F007E001F807E001F807E000F80FE000FC0FE000FC0FE000FC0FE000FE0
FE000FE0FE000FE0FE000FE0FE000FE07E001FE07E001FE03F003FE01F002FE00F80CFE0
07FF8FE001FF0FE000080FE000000FC000000FC000000FC000001F803E001F807F001F80
7F003F007F003E007F007E007E00FC003E03F8001FFFE0000FFF800001FE00001B277DA6
22>I<00000780000000000780000000000FC0000000000FC0000000000FC0000000001F
E0000000001FE0000000003FF0000000003FF0000000003FF00000000077F80000000077
F800000000F7FC00000000E3FC00000000E3FC00000001C1FE00000001C1FE00000003C1
FF0000000380FF0000000380FF00000007007F80000007007F8000000F007FC000000E00
3FC000000E003FC000001C001FE000001C001FE000003FFFFFF000003FFFFFF000003FFF
FFF00000700007F80000700007F80000F00007FC0000E00003FC0001E00003FE0001C000
01FE0001C00001FE0003C00001FF00FFFE003FFFFCFFFE003FFFFCFFFE003FFFFC2E297E
A833>65 D<FFFFFFFC0000FFFFFFFF8000FFFFFFFFE00003FC001FF80003FC0003FC0003
FC0000FE0003FC00007F0003FC00003F8003FC00001FC003FC00001FC003FC00000FE003
FC00000FE003FC000007F003FC000007F003FC000007F003FC000007F003FC000007F803
FC000007F803FC000007F803FC000007F803FC000007F803FC000007F803FC000007F803
FC000007F803FC000007F803FC000007F803FC000007F003FC000007F003FC000007F003
FC00000FE003FC00000FE003FC00000FC003FC00001FC003FC00003F8003FC00007F0003
FC0000FF0003FC0003FC0003FC001FF800FFFFFFFFF000FFFFFFFF8000FFFFFFFC00002D
297EA834>68 D<FFFFF0FFFFF0FFFFF003FC0003FC0003FC0003FC0003FC0003FC0003FC
0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC
0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC0003FC
0003FC0003FC0003FC0003FC00FFFFF0FFFFF0FFFFF014297EA819>73
D<FFFE0000003FFF80FFFE0000003FFF80FFFF0000007FFF8003FF0000007FE00003FF00
00007FE00003BF800000EFE00003BF800000EFE000039FC00001CFE000039FC00001CFE0
00038FE000038FE000038FE000038FE000038FE000038FE0000387F000070FE0000387F0
00070FE0000383F8000E0FE0000383F8000E0FE0000381FC001C0FE0000381FC001C0FE0
000381FC001C0FE0000380FE00380FE0000380FE00380FE00003807F00700FE00003807F
00700FE00003803F80E00FE00003803F80E00FE00003803F80E00FE00003801FC1C00FE0
0003801FC1C00FE00003800FE3800FE00003800FE3800FE000038007F7000FE000038007
F7000FE000038007F7000FE000038003FE000FE000038003FE000FE000038001FC000FE0
00038001FC000FE000038000F8000FE000FFFE00F803FFFF80FFFE00F803FFFF80FFFE00
7003FFFF8039297DA840>77 D<FFFFFFE00000FFFFFFFE0000FFFFFFFF800003FC003FE0
0003FC000FF00003FC0007F80003FC0003FC0003FC0001FC0003FC0001FE0003FC0001FE
0003FC0001FE0003FC0001FE0003FC0001FE0003FC0001FE0003FC0001FC0003FC0003F8
0003FC0007F80003FC000FE00003FC003FC00003FFFFFE000003FFFFFE000003FC00FF80
0003FC003FC00003FC001FE00003FC000FF00003FC0007F80003FC0007F80003FC0007F8
0003FC0007F80003FC0007F80003FC0007F80003FC0007F80003FC0007F80003FC0007F8
0003FC0007F80E03FC0007F80E03FC0003F80E03FC0001FC1CFFFFF000FE1CFFFFF0007F
F8FFFFF0000FE02F297EA832>82 D<03FF80000FFFF0001F01FC003F80FE003F807F003F
803F003F803F801F003F8000003F8000003F8000003F8000003F80003FFF8001FC3F800F
E03F801F803F803F003F807E003F80FC003F80FC003F80FC003F80FC003F80FC005F807E
00DF803F839FFC1FFE0FFC03FC03FC1E1B7E9A21>97 D<FFE00000FFE00000FFE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE000000FE1FE000FEFFF800FFE07E00FF803F00FF001F80FE000FC0F
E000FC0FE0007E0FE0007E0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0F
E0007F0FE0007F0FE0007E0FE0007E0FE0007E0FE000FC0FE000FC0FF001F80FF803F00F
9C0FE00F0FFF800E01FC00202A7EA925>I<003FF00001FFFC0003F03E000FC07F001F80
7F003F007F003F007F007F003E007E0000007E000000FE000000FE000000FE000000FE00
0000FE000000FE000000FE0000007E0000007E0000007F0000003F0003803F8003801F80
07000FE00E0003F83C0001FFF800003FC000191B7E9A1E>I<00007FF000007FF000007F
F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007
F0000007F0000007F0000007F0003F87F001FFF7F007F03FF00FC00FF01F8007F03F0007
F03F0007F07E0007F07E0007F07E0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007
F0FE0007F0FE0007F0FE0007F07E0007F07E0007F03F0007F03F0007F01F800FF00FC01F
F007E07FFF01FFE7FF007F87FF202A7EA925>I<003FC00001FFF00003E07C000F803E00
1F801F001F001F003F000F807E000F807E000FC07E000FC0FE0007C0FE0007C0FFFFFFC0
FFFFFFC0FE000000FE000000FE0000007E0000007E0000007F0000003F0001C01F0001C0
0F80038007C0070003F01E0000FFFC00003FE0001A1B7E9A1F>I<0007F8003FFC007E3E
01FC7F03F87F03F07F07F07F07F03E07F00007F00007F00007F00007F00007F00007F000
FFFFC0FFFFC0FFFFC007F00007F00007F00007F00007F00007F00007F00007F00007F000
07F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F000
7FFF807FFF807FFF80182A7EA915>I<00FF80F003FFE3F80FC1FE1C1F007C7C3F007E7C
3E003E107E003F007E003F007E003F007E003F007E003F007E003F003E003E003F007E00
1F007C000FC1F8000BFFE00018FF80001800000038000000380000003C0000003FFFF800
3FFFFF001FFFFFC00FFFFFE007FFFFF01FFFFFF03C0007F07C0001F8F80000F8F80000F8
F80000F8F80000F87C0001F07C0001F03F0007E00FC01F8007FFFF00007FF0001E287E9A
22>I<FFE00000FFE00000FFE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE07E000FE1FF800F
E30FC00FE40FE00FE807E00FF807F00FF007F00FF007F00FE007F00FE007F00FE007F00F
E007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00F
E007F00FE007F00FE007F00FE007F0FFFE3FFFFFFE3FFFFFFE3FFF202A7DA925>I<0700
0F801FC03FE03FE03FE01FC00F8007000000000000000000000000000000FFE0FFE0FFE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE0FFFEFFFEFFFE0F2B7EAA12>I<FFE00000FFE00000FFE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE000000FE01FFC0FE01FFC0FE01FFC0FE007800FE00F000FE01E000FE03C000F
E078000FE0E0000FE3C0000FE7C0000FEFE0000FFFF0000FFFF8000FF3F8000FE1FC000F
C0FE000FC07F000FC07F000FC03F800FC01FC00FC00FE00FC00FE00FC007F0FFFC1FFFFF
FC1FFFFFFC1FFF202A7FA923>107 D<FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2A7EA912>I<FF
C07F001FC000FFC1FFC07FF000FFC307E0C1F8000FC407F101FC000FC803F200FC000FD8
03FE00FE000FD003FC00FE000FD003FC00FE000FE003F800FE000FE003F800FE000FE003
F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F8
00FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800
FE000FE003F800FE000FE003F800FE000FE003F800FE00FFFE3FFF8FFFE0FFFE3FFF8FFF
E0FFFE3FFF8FFFE0331B7D9A38>I<FFC07E00FFC1FF80FFC30FC00FC40FE00FC807E00F
D807F00FD007F00FD007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00F
E007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00F
E007F0FFFE3FFFFFFE3FFFFFFE3FFF201B7D9A25>I<003FE00001FFFC0003F07E000FC0
1F801F800FC03F0007E03F0007E07E0003F07E0003F07E0003F0FE0003F8FE0003F8FE00
03F8FE0003F8FE0003F8FE0003F8FE0003F8FE0003F87E0003F07E0003F03F0007E03F00
07E01F800FC00FC01F8007F07F0001FFFC00003FE0001D1B7E9A22>I<FFE1FE00FFEFFF
80FFFE0FE00FF803F00FF001F80FE001FC0FE000FC0FE000FE0FE000FE0FE0007F0FE000
7F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007E0FE000FE0FE000
FE0FE000FC0FE001FC0FF001F80FF807F00FFC0FE00FEFFF800FE1FC000FE000000FE000
000FE000000FE000000FE000000FE000000FE000000FE000000FE00000FFFE0000FFFE00
00FFFE000020277E9A25>I<FFC1F0FFC7FCFFC63E0FCC7F0FD87F0FD07F0FD07F0FF03E
0FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000
0FE0000FE0000FE0000FE000FFFF00FFFF00FFFF00181B7F9A1B>114
D<03FE300FFFF03E03F07800F07000F0F00070F00070F80070FE0000FFE0007FFF007FFF
C03FFFE01FFFF007FFF800FFF80007FC0000FCE0007CE0003CF0003CF00038F80038FC00
70FF01E0E7FFC0C1FF00161B7E9A1B>I<00E00000E00000E00000E00001E00001E00001
E00003E00003E00007E0000FE0001FFFE0FFFFE0FFFFE00FE0000FE0000FE0000FE0000F
E0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0700FE0700FE0700F
E0700FE0700FE0700FE07007F0E003F0C001FF80007F0014267FA51A>I<FFE07FF0FFE0
7FF0FFE07FF00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE0
07F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE0
07F00FE007F00FE00FF00FE00FF007E017F003F067FF01FFC7FF007F87FF201B7D9A25>
I<FFFC7FFC1FFCFFFC7FFC1FFCFFFC7FFC1FFC0FE00FE001C007F007E0038007F007E003
8007F807F0078003F807F0070003F80FF8070003FC0FF80F0001FC0FF80E0001FC1FFC0E
0000FE1CFC1C0000FE1CFE1C0000FF387E3C00007F387E3800007F787F3800003FF03F70
00003FF03FF000003FE01FF000001FE01FE000001FE01FE000000FC00FC000000FC00FC0
00000F8007C0000007800780000007800780002E1B7F9A31>119
D<FFFC1FFEFFFC1FFEFFFC1FFE07F0038003F8078003FC0F0001FE1E0000FE3C00007F38
00007FF800003FF000001FE000000FE000000FF0000007F800000FF800001FFC00003CFE
000038FF0000787F0000F03F8001E01FC003C01FE003800FE0FFF03FFFFFF03FFFFFF03F
FF201B7F9A23>I<FFFC03FFFFFC03FFFFFC03FF0FF000F007F000E007F800E003F801C0
03F801C003FC03C001FC038001FE078000FE070000FF0700007F0E00007F0E00007F9E00
003F9C00003FFC00001FF800001FF800000FF000000FF000000FF0000007E0000007E000
0003C0000003C000000380000003800000078000380700007C0F0000FE0E0000FE1E0000
FE1C0000FE38000074F000003FE000000F80000020277F9A23>I
E /Fq 63 125 df<60F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0600000000060F0F060041977
9816>33 D<30787C3C1C1C1C1C3878F0E040060D789816>39 D<00E001E0038007000E00
1C001C0038003800700070007000E000E000E000E000E000E000E000E000E00070007000
7000380038001C001C000E000700038001E000E00B217A9C16>I<C000E000700038001C
000E000E000700070003800380038001C001C001C001C001C001C001C001C001C0038003
800380070007000E000E001C0038007000E000C0000A217B9C16>I<00E00000E00000E0
0000E00000E00000E00000E00000E000FFFFE0FFFFE0FFFFE000E00000E00000E00000E0
0000E00000E00000E00000E00013137F9516>43 D<387C7E7E3E0E1E1C78F060070B7984
16>I<FFFF80FFFF80FFFF8011037E8D16>I<70F8F8F8700505788416>I<03E0000FF800
1FFC001E3C00380E00780F00700700700700E00380E00380E00380E00380E00380E00380
E00380E00380F00780700700700700780F003C1E001E3C001FFC000FF80003E00011197E
9816>48 D<0300070007000F001F00FF00FF00E700070007000700070007000700070007
00070007000700070007000700FFF8FFF8FFF80D197B9816>I<07E0001FF8003FFC0078
3E00E00700F00780F00380600380000380000380000700000700000E00001C0000380000
700000E00001C0000380000F00001E03803803807FFF80FFFF807FFF8011197E9816>I<
007C0000FC0000DC0001DC00039C00039C00071C000F1C000E1C001E1C003C1C00381C00
781C00F01C00FFFFE0FFFFE0FFFFE0001C00001C00001C00001C00001C0001FFC001FFC0
01FFC013197F9816>52 D<3FFE007FFE007FFE0070000070000070000070000070000070
000070000077F0007FFC007FFE00780F00300700000380000380600380F00380F00380E0
0700781E003FFC001FF80007E00011197E9816>I<07F0001FFC003FFE007C1F00F00780
E00380E00380E003807007007C1F001FFC0007F0001FFC003C1E00700700F00780E00380
E00380E00380F007807007007C1F003FFE001FFC0007F00011197E9816>56
D<70F8F8F870000000000000000070F8F8F8700512789116>58 D<000180000780001F80
003E0000F80001F00007C0000F80003E0000FC0000F00000FC00003E00000F800007C000
01F00000F800003E00001F8000078000018011157E9616>60 D<7FFFC0FFFFE0FFFFE000
0000000000000000000000000000FFFFE0FFFFE07FFFC0130B7F9116>I<C00000F00000
FC00003E00000F800007C00001F00000F800003E00001F80000780001F80003E0000F800
01F00007C0000F80003E0000FC0000F00000C0000011157E9616>I<00F80003FC0007FE
000F07001C3B8038FF8079FF8073C7C07383C0E701C0E701C0E701C0E701C0E701C0E701
C0E701C073838073C78079FF0038FE001C38000F03C007FFC003FF0000FC0012197E9816
>64 D<00E00001F00001F00001B00001B00003B80003B80003B800031800071C00071C00
071C00071C00071C000E0E000E0E000FFE000FFE001FFF001C07001C07001C07007E0FC0
FF1FE07E0FC013197F9816>I<7FF800FFFE007FFF001C07001C07801C03801C03801C03
801C03801C07001FFF001FFE001FFE001C1F001C03801C03C01C01C01C01C01C01C01C01
C01C03C01C07807FFF80FFFF007FFC0012197F9816>I<01F18007FB800FFF801F0F803C
0780380380700380700380F00000E00000E00000E00000E00000E00000E00000E00000F0
00007003807003803803803C07001F0F000FFE0007FC0001F00011197E9816>I<7FFFC0
FFFFC07FFFC01C01C01C01C01C01C01C01C01C00001C00001C1C001C1C001FFC001FFC00
1FFC001C1C001C1C001C00001C00E01C00E01C00E01C00E01C00E07FFFE0FFFFE07FFFE0
13197F9816>69 D<7FFFE0FFFFE07FFFE01C00E01C00E01C00E01C00E01C00001C00001C
1C001C1C001FFC001FFC001FFC001C1C001C1C001C00001C00001C00001C00001C00001C
00007F8000FFC0007F800013197F9816>I<01F18007FB800FFF801F0F803C0780380380
700380700380F00000E00000E00000E00000E00000E01FC0E01FE0E01FC0F00380700380
7007803807803C07801E0F800FFF8007FB8001F38013197F9816>I<7FFCFFFE7FFC0380
038003800380038003800380038003800380038003800380038003800380038003800380
7FFCFFFE7FFC0F197D9816>73 D<FC07E0FE0FE0FE0FE03A0B803B1B803B1B803B1B803B
1B803B1B803BBB8039B38039B38039B38039B38039F38038E38038E38038038038038038
0380380380380380FE0FE0FE0FE0FE0FE013197F9816>77 D<7E07F0FF0FF87F07F01D81
C01D81C01D81C01DC1C01CC1C01CE1C01CE1C01C61C01C71C01C71C01C71C01C31C01C39
C01C39C01C19C01C1DC01C0DC01C0DC01C0DC07F07C0FF87C07F03C01519809816>I<1F
FC003FFE007FFF00780F00F00780E00380E00380E00380E00380E00380E00380E00380E0
0380E00380E00380E00380E00380E00380E00380F00780F00780780F007FFF003FFE001F
FC0011197E9816>I<07E3001FFF003FFF00781F00F00700E00700E00700E00000F00000
7800003F80001FF00007FC0000FE00000F00000700000380000380600380E00380E00700
F80F00FFFE00FFFC00C7F00011197E9816>83 D<7FFFE0FFFFE0FFFFE0E0E0E0E0E0E0E0
E0E0E0E0E000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00007FC000FFE0007FC0013197F9816>I<FE0FE0FE0FE0
FE0FE03803803C07801C07001C07001C07001E0F000E0E000E0E000E0E000E0E00071C00
071C00071C00071C0003180003B80003B80003B80001B00001F00001F00000E00013197F
9816>86 D<FFF0FFF0FFF0E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000FFF0FFF0FFF00C2078
9C16>91 D<C00000E00000E000007000007000003800003800001C00001C00000E00000E
000007000007000003800003800001C00001C00000E00000E00000700000700000380000
3800001C00001C00000E00000E0000070000070000038000038000018011207E9C16>I<
FFF0FFF0FFF0007000700070007000700070007000700070007000700070007000700070
00700070007000700070007000700070007000700070FFF0FFF0FFF00C207F9C16>I<FF
FF80FFFF80FFFF8011037E7E16>95 D<081C3C7870E0E0E0E0F0F87830060D789B16>I<
1FE0003FF0007FF800783C00300E00000E00000E0003FE001FFE003E0E00700E00E00E00
E00E00E00E00783E007FFFE03FE7E00F83E013127E9116>I<FC0000FC0000FC00001C00
001C00001C00001C00001C7C001DFE001FFF001F07801E03C01C01C01C00E01C00E01C00
E01C00E01C00E01C00E01C01C01E03C01F07801FFF001DFE000C780013197F9816>I<03
F80FFC1FFE3C1E780C7000E000E000E000E000E000F000700778073E0E1FFC0FF803F010
127D9116>I<003F00003F00003F0000070000070000070000070003C7000FF7001FFF00
3C1F00780F00700700E00700E00700E00700E00700E00700E00700700F00780F003C1F00
1FFFE00FF7E007C7E013197F9816>I<03F0000FFC001FFE003C0F00780700700380E003
80FFFF80FFFF80FFFF80E00000E000007003807803803E07801FFF0007FE0001F8001112
7E9116>I<001E00007F0001FF8001C7800383000380000380007FFF00FFFF00FFFF0003
80000380000380000380000380000380000380000380000380000380000380000380007F
FC00FFFE007FFC0011197F9816>I<03E3C007F7E00FFFE01C1CC0380E00380E00380E00
380E00380E001C1C000FF8001FF0001BE0003800001800001FFC001FFF003FFF807003C0
E000E0E000E0E000E0E000E07001C07C07C03FFF800FFE0003F800131C7F9116>I<FC00
00FC0000FC00001C00001C00001C00001C00001C78001DFC001FFE001F0F001E07001C07
001C07001C07001C07001C07001C07001C07001C07001C07001C0700FF8FE0FF9FE0FF8F
E013197F9816>I<03000780078003000000000000000000FF80FF80FF80038003800380
038003800380038003800380038003800380FFFCFFFEFFFC0F1A7C9916>I<0030007800
78003000000000000000000FF81FF80FF800380038003800380038003800380038003800
380038003800380038003800380038003800386070F0F0FFE07FC03F800D237E9916>I<
7E0000FE00007E00000E00000E00000E00000E00000E7FE00E7FE00E7FE00E0F000E1E00
0E3C000E78000EF0000FF0000FF8000FBC000F1E000E0E000E07000E07807F87F0FFCFF0
7F87F01419809816>I<7FC000FFC0007FC00001C00001C00001C00001C00001C00001C0
0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
0001C0007FFF00FFFF807FFF0011197E9816>I<F9C380FFEFC0FFFFE03C78E03C78E038
70E03870E03870E03870E03870E03870E03870E03870E03870E03870E0FE7CF8FE7CF8FE
7CF81512809116>I<FC7800FDFC00FFFE001F0F001E07001C07001C07001C07001C0700
1C07001C07001C07001C07001C07001C0700FF8FE0FF9FE0FF8FE013127F9116>I<03E0
000FF8001FFC003C1E00780F00700700E00380E00380E00380E00380E00380F007807007
00780F003C1E001FFC000FF80003E00011127E9116>I<FC7C00FDFE00FFFF001F07801E
03C01C01C01C00E01C00E01C00E01C00E01C00E01C00E01C01C01E03C01F07801FFF001D
FE001C78001C00001C00001C00001C00001C00001C0000FF8000FF8000FF8000131B7F91
16>I<7F0FC0FF3FE07F7FE007F04007C000078000078000070000070000070000070000
0700000700000700000700007FFC00FFFC007FFC0013127F9116>114
D<0FEC3FFC7FFCF03CE01CE01C70007F801FF007F8003C600EE00EF00EF81EFFFCFFF8C7
E00F127D9116>I<0300000700000700000700000700007FFF00FFFF00FFFF0007000007
000007000007000007000007000007000007010007038007038007038007870003FE0001
FC0000F80011177F9616>I<FC3F00FC3F00FC3F001C07001C07001C07001C07001C0700
1C07001C07001C07001C07001C07001C07001C1F001FFFE00FF7E007C7E013127F9116>
I<7F1FC0FF9FE07F1FC01C07001C07000E0E000E0E000E0E00071C00071C00071C00071C
0003B80003B80003B80001F00001F00000E00013127F9116>I<FF1FE0FF1FE0FF1FE038
038038038038038038038039F38039F38019F30019B30019B30019B3001DB7001D17001F
1F000F1E000E0E0013127F9116>I<7F1FC07F3FC07F1FC00F1E00073C0003B80003F000
01F00000E00001E00001F00003B800073C00071C000E0E007F1FC0FF3FE07F1FC013127F
9116>I<7F1FC0FF9FE07F1FC01C07000E07000E0E000E0E00070E00071C00071C00039C
00039C0003980001B80001B80000F00000F00000F00000E00000E00000E00001C00079C0
007BC0007F80007F00003C0000131B7F9116>I<3FFFC07FFFC07FFFC0700780700F0070
1E00003C0000780001F00003E0000780000F00001E01C03C01C07801C0FFFFC0FFFFC0FF
FFC012127F9116>I<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
E0E0E0E0E00320779C16>124 D E /Fr 88 128 df<007E1F0001C1B1800303E3C00703
C3C00E03C1800E01C0000E01C0000E01C0000E01C0000E01C0000E01C000FFFFFC000E01
C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01
C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0007F87FC001A1D809C18>
11 D<007E0001C1800301800703C00E03C00E01800E00000E00000E00000E00000E0000
FFFFC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C07F87F8151D809C17>I<007FC001C1C00303C00703
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C0FFFFC00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C07FCFF8151D809C17>I<003F07E00001C09C18000380F018000701F03C000E01E03C00
0E00E018000E00E000000E00E000000E00E000000E00E000000E00E00000FFFFFFFC000E
00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00
E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E0
1C000E00E01C007FC7FCFF80211D809C23>I<FC001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C00FF8009127F910C>16 D<0E0E1E3870E0800707
779C15>19 D<6060F0F0F8F86868080808080808101010102020404080800D0C7F9C15>
34 D<0F0000C0188000C030600380703807006027FB00E0100600E0100C00E0100C00E0
101800E0101800E0103000E0106000602060007020C00030418000188180000F0303C000
06062000060C10000C1C08001818080018380400303804006038040060380400C0380400
C03804018038040300180803001C0806000C100C000620040003C01E217E9E23>37
D<00E000000310000006080000060800000E0800000E0800000E0800000E0800000E1000
000E1000000E2000000740000007403FE007800F8007800600038004000780040009C008
0011C0100030E0100020F0200060702000E0384000E03C8000E01C8000E00F0020E00700
20700780403009C0401830E1800FC03F001B1F7E9D20>I<60F0F8680808081010204080
050C7C9C0C>I<00800100020006000C000C001800180030003000300060006000600060
00E000E000E000E000E000E000E000E000E000E000E000E0006000600060006000300030
003000180018000C000C000600020001000080092A7C9E10>I<80004000200030001800
18000C000C00060006000600030003000300030003800380038003800380038003800380
038003800380038003000300030003000600060006000C000C0018001800300020004000
8000092A7E9E10>I<000600000006000000060000000600000006000000060000000600
00000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE0000600
000006000000060000000600000006000000060000000600000006000000060000000600
000006000000060000000600001B1C7E9720>43 D<60F0F0701010101020204080040C7C
830C>I<FFE0FFE00B0280890E>I<60F0F06004047C830C>I<0001000300060006000600
0C000C000C0018001800180030003000300060006000C000C000C0018001800180030003
000300060006000C000C000C00180018001800300030003000600060006000C000C00010
297E9E15>I<03C00C301818300C300C700E60066006E007E007E007E007E007E007E007
E007E007E007E007E007E00760066006700E300C300C18180C3007E0101D7E9B15>I<01
0007003F00C7000700070007000700070007000700070007000700070007000700070007
0007000700070007000700070007000700FFF80D1C7C9B15>I<07C01830201C400C400E
F00FF80FF807F8077007000F000E000E001C001C00380070006000C00180030006010C01
180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E781E381E001C00
1C00180030006007C00030001C001C000E000F000F700FF80FF80FF80FF00E401C201C18
3007C0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000DC00009C00011C
00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C01C00FFFFC0001C
00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C3FF83FF03F
C020002000200020002000200023E02C303018301C200E000E000F000F000F600FF00FF0
0FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C04040C0E181E301E300C
700070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760077006300E
300C18180C3003E0101D7E9B15>I<4000007FFF807FFF007FFF00400200800400800400
80080000100000100000200000600000400000C00000C00001C000018000018000038000
038000038000038000078000078000078000078000078000078000030000111D7E9B15>
I<03E00C301008200C200660066006700670067C0C3E183FB01FE007F007F818FC307E60
1E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>I<03C00C301818
300C700C600EE006E006E007E007E007E007E0076007700F300F18170C2707C700060006
000E300C780C78187018203010C00F80101D7E9B15>I<60F0F060000000000000000000
0060F0F06004127C910C>I<60F0F0600000000000000000000060F0F070101010102020
4080041A7C910C>I<7FFFFFC0FFFFFFE000000000000000000000000000000000000000
00000000000000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61
D<0FE03038401CE00EF00EF00EF00E000C001C0030006000C00080018001000100010001
00010001000000000000000000000003000780078003000F1D7E9C14>63
D<000600000006000000060000000F0000000F0000000F000000178000001780000037C0
000023C0000023C0000043E0000041E0000041E0000080F0000080F0000080F000010078
000100780001FFF80002003C0002003C0002003C0004001E0004001E000C001F000C000F
001E001F00FF00FFF01C1D7F9C1F>65 D<FFFFC0000F0078000F003C000F001E000F000E
000F000F000F000F000F000F000F000F000F000E000F001E000F003C000F00F8000FFFF0
000F003C000F001E000F000F000F0007000F0007800F0007800F0007800F0007800F0007
800F000F000F000F000F001E000F007800FFFFE000191C7F9B1D>I<001F808000E06180
01801980070007800E0003801C0003801C00018038000180780000807800008070000080
F0000000F0000000F0000000F0000000F0000000F0000000F0000000F000000070000080
7800008078000080380000801C0001001C0001000E000200070004000180080000E03000
001FC000191E7E9C1E>I<FFFFC0000F00F0000F003C000F000E000F0007000F0007000F
0003800F0003C00F0001C00F0001C00F0001E00F0001E00F0001E00F0001E00F0001E00F
0001E00F0001E00F0001E00F0001C00F0001C00F0003C00F0003800F0007800F0007000F
000E000F001C000F007000FFFFC0001B1C7E9B20>I<FFFFFC0F003C0F000C0F00040F00
040F00060F00020F00020F01020F01000F01000F01000F03000FFF000F03000F01000F01
000F01000F01010F00010F00020F00020F00020F00060F00060F000C0F003CFFFFFC181C
7E9B1C>I<FFFFF80F00780F00180F00080F00080F000C0F00040F00040F01040F01000F
01000F01000F03000FFF000F03000F01000F01000F01000F01000F00000F00000F00000F
00000F00000F00000F00000F0000FFF800161C7E9B1B>I<001F808000E0618001801980
070007800E0003801C0003801C00018038000180780000807800008070000080F0000000
F0000000F0000000F0000000F0000000F0000000F000FFF0F0000F807000078078000780
78000780380007801C0007801C0007800E00078007000B800180118000E06080001F8000
1C1E7E9C21>I<FFF0FFF00F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000FFFFF000F000F000F000F000F
000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F
000F000F000F00FFF0FFF01C1C7F9B1F>I<FFF00F000F000F000F000F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
FFF00C1C7F9B0F>I<07FF80007C00003C00003C00003C00003C00003C00003C00003C00
003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00
703C00F83C00F83C00F8380070780040700030E0000F8000111D7F9B15>I<FFF01FE00F
0007800F0006000F0004000F0008000F0010000F0020000F0040000F0080000F0100000F
0200000F0600000F0F00000F1780000F2780000F43C0000F81E0000F01E0000F00F0000F
0078000F0078000F003C000F003E000F001E000F000F000F000F800F000FC0FFF03FF01C
1C7F9B20>I<FFF8000F80000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00080F00080F00080F0018
0F00180F00100F00300F00700F01F0FFFFF0151C7E9B1A>I<FF8000FF800F8000F8000F
8000F8000BC00178000BC00178000BC001780009E002780009E002780008F004780008F0
04780008F0047800087808780008780878000878087800083C107800083C107800083C10
7800081E207800081E207800081E207800080F407800080F407800080780780008078078
00080780780008030078001C03007800FF8307FF80211C7E9B26>I<FF001FF00F800380
0FC001000BC0010009E0010008F0010008F0010008780100083C0100083E0100081E0100
080F0100080F8100080781000803C1000801E1000801F1000800F1000800790008007D00
08003D0008001F0008001F0008000F0008000700080003001C000300FF8001001C1C7F9B
1F>I<003F800000E0E0000380380007001C000E000E001C0007003C0007803800038078
0003C0780003C0700001C0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E0F0
0001E0F00001E0700001C0780003C0780003C0380003803C0007801C0007000E000E0007
001C000380380000E0E000003F80001B1E7E9C20>I<FFFF800F00E00F00780F003C0F00
1C0F001E0F001E0F001E0F001E0F001E0F001C0F003C0F00780F00E00FFF800F00000F00
000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000FFF000171C
7E9B1C>I<003F800000E0E0000380380007001C000E000E001C0007003C000780380003
80780003C0780003C0700001C0F00001E0F00001E0F00001E0F00001E0F00001E0F00001
E0F00001E0F00001E0700001C0780003C0780003C0380003803C0E07801C1107000E208E
0007205C0003A0780000F0E020003FE0200000602000003060000038E000003FC000003F
C000001F8000000F001B257E9C20>I<FFFF00000F01E0000F0078000F003C000F001C00
0F001E000F001E000F001E000F001E000F001C000F003C000F0078000F01E0000FFF0000
0F01E0000F0070000F0078000F003C000F003C000F003C000F003C000F003C000F003C00
0F003C100F003C100F001C100F001C10FFF00E20000003C01C1D7E9B1F>I<07E0801C19
80300580300380600180E00180E00080E00080E00080F00000F800007C00007FC0003FF8
001FFE0007FF0000FF80000F800007C00003C00001C08001C08001C08001C0C00180C001
80E00300D00200CC0C0083F800121E7E9C17>I<7FFFFFC0700F01C0600F00C0400F0040
400F0040C00F0020800F0020800F0020800F0020000F0000000F0000000F0000000F0000
000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000
000F0000000F0000000F0000000F0000001F800003FFFC001B1C7F9B1E>I<FFF01FF00F
0003800F0001000F0001000F0001000F0001000F0001000F0001000F0001000F0001000F
0001000F0001000F0001000F0001000F0001000F0001000F0001000F0001000F0001000F
0001000F0001000F00010007000200078002000380040001C0040000E018000070600000
0F80001C1D7F9B1F>I<FFE00FF01F0003C01F0001800F0001000F000100078002000780
020007C0020003C0040003C0040003E00C0001E0080001E0080000F0100000F0100000F8
10000078200000782000003C4000003C4000003C4000001E8000001E8000001F8000000F
0000000F00000006000000060000000600001C1D7F9B1F>I<FFE1FFC0FF1F003E003C1E
003C00180F001E00100F001E00100F001E001007801F002007801F002007801F002003C0
27804003C027804003C027804001E043C08001E043C08001E043C08000F081E10000F081
E10000F081E10000F900F300007900F200007900F200007E007E00003E007C00003E007C
00003C003C00001C003800001C00380000180018000008001000281D7F9B2B>I<FFF003
FC0F8001E0078000C007C0008003C0010003E0030001E0020000F0040000F80400007808
00007C1800003C1000003E2000001F2000000F4000000FC0000007800000078000000780
000007800000078000000780000007800000078000000780000007800000078000007FF8
001E1C809B1F>89 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>91 D<0808101020204040404080808080
8080B0B0F8F8787830300D0C7A9C15>I<FEFE0606060606060606060606060606060606
0606060606060606060606060606060606060606FEFE0729809E0C>I<08102040408080
80B0F87830050C7D9C0C>96 D<1FC000307000783800781C00301C00001C00001C0001FC
000F1C00381C00701C00601C00E01C40E01C40E01C40603C40304E801F870012127E9115
>I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C
7C001D87001E01801C00C01C00E01C00601C00701C00701C00701C00701C00701C00701C
00601C00E01C00C01E018019070010FC00141D7F9C17>I<03F80C0C181E301E700C6000
E000E000E000E000E000E00060007002300218040C1803E00F127F9112>I<001F800003
8000038000038000038000038000038000038000038000038000038003F3800E0B801807
80300380700380600380E00380E00380E00380E00380E00380E003806003807003803003
801807800E1B8003E3F0141D7F9C17>I<07E00C301818300C700E6006E006FFFEE000E0
00E000E00060007002300218040C1803E00F127F9112>I<00F8018C071E061E0E0C0E00
0E000E000E000E000E00FFE00E000E000E000E000E000E000E000E000E000E000E000E00
0E000E000E000E007FE00F1D809C0D>I<00038007C4C01C78C0383880301800701C0070
1C00701C00701C003018003838001C700027C0002000002000003000003FF8001FFF001F
FF802003806001C0C000C0C000C0C000C06001803003001C0E0007F800121C7F9215>I<
FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C7C00
1C87001D03001E03801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C03801C03801C0380FF9FF0141D7F9C17>I<18003C003C001800000000000000
0000000000000000FC001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C00FF80091D7F9C0C>I<00C001E001E000C000000000000000000000000000
0007E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E060E0F0C0F1C061803E000B25839C0D>I<FC00001C00001C00001C0000
1C00001C00001C00001C00001C00001C00001C00001C0FE01C07801C06001C0C001C1000
1C20001C40001CE0001DE0001E70001C78001C38001C3C001C1C001C0E001C0F001C0F80
FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00FF80091D7F9C
0C>I<FC7E07E0001C838838001D019018001E01E01C001C01C01C001C01C01C001C01C0
1C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C
001C01C01C001C01C01C001C01C01C00FF8FF8FF8021127F9124>I<FC7C001C87001D03
001E03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C0380FF9FF014127F9117>I<03F0000E1C00180600300300700380600180E0
01C0E001C0E001C0E001C0E001C0E001C06001807003803003001806000E1C0003F00012
127F9115>I<FC7C001D87001E01801C01C01C00E01C00E01C00701C00701C00701C0070
1C00701C00701C00E01C00E01C01C01E01801D07001CFC001C00001C00001C00001C0000
1C00001C00001C0000FF8000141A7F9117>I<03E0800E19801805803807807003807003
80E00380E00380E00380E00380E00380E003807003807003803807801807800E1B8003E3
80000380000380000380000380000380000380000380001FF0141A7F9116>I<FCE01D38
1E781E781C301C001C001C001C001C001C001C001C001C001C001C001C00FFC00D127F91
10>I<1F9020704030C010C010E010F8007F803FE00FF000F880388018C018C018E010D0
608FC00D127F9110>I<04000400040004000C000C001C003C00FFE01C001C001C001C00
1C001C001C001C001C001C101C101C101C101C100C100E2003C00C1A7F9910>I<FC1F80
1C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C03801C0380
1C03801C07800C07800E1B8003E3F014127F9117>I<FF07E03C03801C01001C01000E02
000E02000F060007040007040003880003880003C80001D00001D00000E00000E00000E0
0000400013127F9116>I<FF3FC7E03C0703C01C0701801C0701001C0B01000E0B82000E
0B82000E1182000711C4000711C4000720C40003A0E80003A0E80003C0680001C0700001
C0700001803000008020001B127F911E>I<FF0FE01E07001C06000E0400070800039000
03B00001E00000E00000F00001F000013800021C00041C000C0E001807003C0780FE1FF0
14127F9116>I<FF07E03C03801C01001C01000E02000E02000F06000704000704000388
0003880003C80001D00001D00000E00000E00000E000004000004000008000008000F080
00F10000F30000660000380000131A7F9116>I<7FFC70386038407040F040E041C003C0
038007000F040E041C043C0C380870087038FFF80E127F9112>I<FFFFF01401808B15>I<
FFFFFFFFFF802901808B2A>I<6060F0F0F0F060600C047C9C15>127
D E /Fs 18 122 df<70F8F8F87005057C840E>46 D<FFFFF0000F801E00078007000780
0380078001C0078000E0078000F007800078078000780780007C0780003C0780003C0780
003C0780003E0780003E0780003E0780003E0780003E0780003E0780003E0780003E0780
003E0780003C0780003C0780007C0780007807800078078000F0078000E0078001E00780
03C0078007000F801E00FFFFF0001F227EA125>68 D<03FFE0001F00000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00000F00000F00700F00F80F00F80F
00F80E00F01E00401C0020380018700007C00013237EA119>74 D<FFFC00FF800FC0007C
000780003000078000200007800040000780008000078001000007800200000780040000
078008000007801000000780200000078040000007808000000781C000000783E0000007
85E000000788F000000790F0000007A078000007C03C000007803C000007801E00000780
0F000007800F00000780078000078007C000078003C000078001E000078001E000078000
F000078000F8000FC000FC00FFFC07FF8021227EA126>I<FFFC001F80000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00010F00010F00010F00010F00030F0003
0F00020F00060F00060F001E1F007EFFFFFE18227DA11E>I<1FE000303800780C00780E
0030070000070000070000070000FF0007C7001E07003C0700780700700700F00708F007
08F00708F00F087817083C23900FC1E015157E9418>97 D<0E0000FE00001E00000E0000
0E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E1F000E61C0
0E80600F00300E00380E003C0E001C0E001E0E001E0E001E0E001E0E001E0E001E0E001E
0E001C0E003C0E00380F00700C80600C41C0083F0017237FA21B>I<01FE000703000C07
801C0780380300780000700000F00000F00000F00000F00000F00000F00000F000007000
007800403800401C00800C010007060001F80012157E9416>I<0000E0000FE00001E000
00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E001F8E007
04E00C02E01C01E03800E07800E07000E0F000E0F000E0F000E0F000E0F000E0F000E0F0
00E07000E07800E03800E01801E00C02E0070CF001F0FE17237EA21B>I<00007003F198
0E1E181C0E183807003807007807807807807807807807803807003807001C0E001E1C00
33F0002000002000003000003800003FFE001FFFC00FFFE03000F0600030C00018C00018
C00018C000186000306000303800E00E038003FE0015217F9518>103
D<0E0000FE00001E00000E00000E00000E00000E00000E00000E00000E00000E00000E00
000E00000E00000E1F800E60C00E80E00F00700F00700E00700E00700E00700E00700E00
700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7FF1823
7FA21B>I<1C003E003E003E001C00000000000000000000000000000000000E007E001E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FF
C00A227FA10E>I<0E1F80FE60C01E80E00F00700F00700E00700E00700E00700E00700E
00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E0070FFE7FF18
157F941B>110 D<01FC000707000C01801800C03800E0700070700070F00078F00078F0
0078F00078F00078F00078F000787000707800F03800E01C01C00E038007070001FC0015
157F9418>I<0E3CFE461E8F0F0F0F060F000E000E000E000E000E000E000E000E000E00
0E000E000E000E000F00FFF010157F9413>114 D<0E0070FE07F01E00F00E00700E0070
0E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00700E00F0
0E00F006017003827800FC7F18157F941B>117 D<FF80FE1E00781E00300E00200E0020
0700400700400780C003808003808001C10001C10000E20000E20000E200007400007400
00380000380000380000100017157F941A>I<FF80FE1E00781E00300E00200E00200700
400700400780C003808003808001C10001C10000E20000E20000E2000074000074000038
00003800003800001000001000002000002000002000004000F04000F08000F180004300
003C0000171F7F941A>121 D E /Ft 22 118 df<FFFF80FFFF80FFFF8011037F9016>
45 D<00000300000000000300000000000300000000000780000000000780000000000F
C0000000000FC0000000000FC00000000017E00000000013E00000000013E00000000023
F00000000021F00000000021F00000000040F80000000040F80000000040F80000000080
7C00000000807C00000001007E00000001003E00000001003E00000002003F0000000200
1F00000002001F00000004000F80000004000F80000004000F800000080007C000000800
07C00000180007E000001FFFFFE000001FFFFFE00000200003F00000200001F000002000
01F00000400000F80000400000F80000400000F800008000007C00008000007C00018000
007E00010000003E00010000003E00030000003F00030000001F00070000001F001F8000
003F80FFE00001FFFCFFE00001FFFC2E327EB132>65 D<FFFFFFE00000FFFFFFFC000007
E0007F000003E0000F800003E00003C00003E00001E00003E00000F00003E00000780003
E000003C0003E000001E0003E000001E0003E000000F0003E000000F0003E000000F8003
E00000078003E0000007C003E0000007C003E0000003C003E0000003C003E0000003E003
E0000003E003E0000003E003E0000003E003E0000003E003E0000003E003E0000003E003
E0000003E003E0000003E003E0000003E003E0000003E003E0000003C003E0000003C003
E0000007C003E0000007C003E00000078003E00000078003E000000F8003E000000F0003
E000001F0003E000001E0003E000003C0003E00000780003E00000F80003E00001F00003
E00003E00003E0000F800007E0003F0000FFFFFFFC0000FFFFFFE000002B317CB033>68
D<FFFFFFFFE0FFFFFFFFE007E0000FE003E00001E003E00000F003E000007003E0000030
03E000003003E000001003E000001003E000001003E000001003E000000803E000000803
E000000803E000400803E000400003E000400003E000400003E000400003E000C00003E0
00C00003E003C00003FFFFC00003FFFFC00003E003C00003E000C00003E000C00003E000
400003E000400003E000400003E000400003E000400003E000000003E000000003E00000
0003E000000003E000000003E000000003E000000003E000000003E000000003E0000000
03E000000003E000000003E000000007F0000000FFFFC00000FFFFC0000025317DB02B>
70 D<FFFF807FFFC0FFFF807FFFC007F00003F80003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003FFFF
FFF00003FFFFFFF00003E00001F00003E00001F00003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00003E00001F00003E000
01F00003E00001F00003E00001F00003E00001F00003E00001F00007F00003F800FFFF80
7FFFC0FFFF807FFFC02A317CB032>72 D<007F802001FFE02007C078600F001C601E0006
E03C0003E0380001E0780000E0700000E070000060F0000060F0000060F0000020F00000
20F0000020F8000020F80000007C0000007E0000003F0000003FC000001FF800000FFF80
0007FFF00003FFFC0000FFFF00000FFF800000FFC000001FE0000007E0000003F0000001
F0000000F0000000F8000000F88000007880000078800000788000007880000078C00000
78C0000070E00000F0E00000E0F00000E0F80001C0EC000380C7000700C1F01E00807FFC
00800FF0001D337CB125>83 D<00FE00000303C0000C00E00010007000100038003C003C
003E001C003E001E003E001E0008001E0000001E0000001E0000001E00000FFE0000FC1E
0003E01E000F801E001F001E003E001E003C001E007C001E00F8001E04F8001E04F8001E
04F8003E04F8003E0478003E047C005E043E008F080F0307F003FC03E01E1F7D9E21>97
D<001FC00000F0300001C00C00078002000F0002000E000F001E001F003C001F003C001F
007C00040078000000F8000000F8000000F8000000F8000000F8000000F8000000F80000
00F8000000F8000000780000007C0000003C0000003C0000801E0000800E0001000F0001
000780020001C00C0000F03000001FC000191F7E9E1D>99 D<003F800000E0E000038038
0007003C000E001E001E001E001C000F003C000F007C000F0078000F8078000780F80007
80F8000780FFFFFF80F8000000F8000000F8000000F8000000F8000000F8000000780000
007C0000003C0000003C0000801E0000800E0001000F0002000700020001C00C0000F030
00001FC000191F7E9E1D>101 D<000000F0007F030801C1C41C0380E81C070070080F00
78001E003C001E003C003E003E003E003E003E003E003E003E003E003E003E003E001E00
3C001E003C000F007800070070000780E00009C1C000087F000018000000180000001800
000018000000180000001C0000000E0000000FFFF80007FFFF0003FFFF800E000FC01800
01E0300000F070000070E0000038E0000038E0000038E0000038E0000038700000707000
0070380000E01C0001C00700070001C01C00003FE0001E2F7E9F21>103
D<0780000000FF80000000FF800000000F80000000078000000007800000000780000000
078000000007800000000780000000078000000007800000000780000000078000000007
8000000007800000000780000000078000000007800000000780FE00000783078000078C
03C000079001E00007A001E00007A000F00007C000F00007C000F000078000F000078000
F000078000F000078000F000078000F000078000F000078000F000078000F000078000F0
00078000F000078000F000078000F000078000F000078000F000078000F000078000F000
078000F000078000F000078000F000078000F0000FC001F800FFFC1FFF80FFFC1FFF8021
327EB125>I<0F001F801F801F801F800F00000000000000000000000000000000000000
0000000007807F807F800F80078007800780078007800780078007800780078007800780
0780078007800780078007800780078007800780078007800FC0FFF8FFF80D307EAF12>
I<07800000FF800000FF8000000F80000007800000078000000780000007800000078000
000780000007800000078000000780000007800000078000000780000007800000078000
000780000007800FFE07800FFE078003F007800380078003000780060007800800078010
000780200007804000078080000781800007838000078FC0000793C00007A1E00007C1F0
000780F0000780780007807C0007803C0007803E0007801F0007800F0007800F80078007
C0078003C0078003E00FC007F8FFFC0FFFFFFC0FFF20327EB123>107
D<0780FF80FF800F80078007800780078007800780078007800780078007800780078007
800780078007800780078007800780078007800780078007800780078007800780078007
80078007800780078007800780078007800780078007800FC0FFFCFFFC0E327EB112>I<
0780FE001FC000FF83078060F000FF8C03C18078000F9001E2003C0007A001E4003C0007
A000F4001E0007C000F8001E0007C000F8001E00078000F0001E00078000F0001E000780
00F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000
F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F0
001E00078000F0001E00078000F0001E00078000F0001E00078000F0001E00078000F000
1E00078000F0001E00078000F0001E000FC001F8003F00FFFC1FFF83FFF0FFFC1FFF83FF
F0341F7E9E38>I<0780FE0000FF83078000FF8C03C0000F9001E00007A001E00007A000
F00007C000F00007C000F000078000F000078000F000078000F000078000F000078000F0
00078000F000078000F000078000F000078000F000078000F000078000F000078000F000
078000F000078000F000078000F000078000F000078000F000078000F000078000F00007
8000F0000FC001F800FFFC1FFF80FFFC1FFF80211F7E9E25>I<001FC00000F0780001C0
1C00070007000F0007801E0003C01C0001C03C0001E03C0001E0780000F0780000F07800
00F0F80000F8F80000F8F80000F8F80000F8F80000F8F80000F8F80000F8F80000F87800
00F07C0001F03C0001E03C0001E01E0003C01E0003C00F00078007800F0001C01C0000F0
7800001FC0001D1F7E9E21>I<0781FC0000FF86078000FF8801C0000F9000E00007A000
700007C00078000780003C000780003E000780001E000780001F000780001F000780000F
000780000F800780000F800780000F800780000F800780000F800780000F800780000F80
0780000F000780001F000780001F000780001E000780003E000780003C0007C000780007
A000700007A000E000079803C00007860F00000781F80000078000000007800000000780
000000078000000007800000000780000000078000000007800000000780000000078000
000007800000000FC0000000FFFC000000FFFC000000212D7E9E25>I<0783E0FF8418FF
887C0F907C07A07C07A03807C00007C00007C00007800007800007800007800007800007
800007800007800007800007800007800007800007800007800007800007800007800007
80000780000FC000FFFE00FFFE00161F7E9E19>114 D<01FC100E03301800F030007060
0030E00030E00010E00010E00010F00010F800007E00003FF0001FFF000FFFC003FFE000
3FF00001F80000F880003C80003C80001CC0001CC0001CE0001CE00018F00038F00030CC
0060C301C080FE00161F7E9E1A>I<00400000400000400000400000400000C00000C000
00C00001C00001C00003C00007C0000FC0001FFFE0FFFFE003C00003C00003C00003C000
03C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C00003C000
03C01003C01003C01003C01003C01003C01003C01003C01001C02001E02000E0400078C0
001F00142C7FAB19>I<078000F000FF801FF000FF801FF0000F8001F000078000F00007
8000F000078000F000078000F000078000F000078000F000078000F000078000F0000780
00F000078000F000078000F000078000F000078000F000078000F000078000F000078000
F000078000F000078000F000078000F000078001F000078001F000078001F000038002F0
0003C004F00001C008F800007030FF80001FC0FF80211F7E9E25>I
E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 179 151 a Ft(Structuring)22 b(Depth-First)g(Searc)n(h)f
(Algorithms)g(in)g(Hask)n(ell)261 271 y Fs(Da)o(vid)16
b(J.)g(King)98 387 y Fr(Departmen)o(t)e(of)f(Computing)f(Science)212
445 y(Univ)o(ersit)o(y)i(of)g(Glasgo)o(w)198 504 y(Glasgo)o(w)e(G12)h
(8QQ,)h(UK)216 562 y Fq(gnik@dcs.gla.ac.)o(uk)1145 271
y Fs(John)j(Launc)o(h)o(bury)874 387 y Fr(Departmen)o(t)c(of)g
(Computer)h(Science)h(and)f(Engineering)860 445 y(Oregon)h(Graduate)f
(Institute)g(of)g(Science)h(&)f(T)m(ec)o(hnology)996
504 y(Bea)o(v)o(erton,)g(Oregon)g(97006{1999,)d(USA)1179
562 y Fq(jl@cse.ogi.edu)-142 724 y Fp(Abstract)-142 843
y Fr(Depth-\014rst)i(searc)o(h)f(is)g(the)g(k)o(ey)f(to)h(a)f(wide)g(v)
n(ariet)o(y)g(of)g(graph)g(algo-)-142 893 y(rithms.)17
b(In)12 b(this)g(pap)q(er)h(w)o(e)f(express)i(depth-\014rst)g(searc)o
(h)f(in)f(a)f(lazy)-142 942 y(functional)20 b(language,)i(obtaining)e
(a)h(linear-time)e(implemen)o(ta-)-142 992 y(tion.)d(Unlik)o(e)9
b(traditional)f(imp)q(erativ)o(e)g(presen)o(tations,)j(w)o(e)f(use)g
(the)-142 1042 y(structuring)i(metho)q(ds)e(of)h(functional)f
(languages)g(to)g(construct)j(al-)-142 1092 y(gorithms)i(from)g
(individual)f(reusable)k(comp)q(onen)o(ts.)25 b(This)17
b(st)o(yle)-142 1142 y(of)11 b(algorithm)f(construction)i(turns)h(out)f
(to)f(b)q(e)i(quite)f(amenable)e(to)-142 1192 y(formal)k(pro)q(of,)j
(whic)o(h)f(w)o(e)h(exemplify)e(through)i(a)f(calculational-)-142
1241 y(st)o(yle)d(pro)q(of)e(of)h(a)g(far)f(from)g(ob)o(vious)g
(strongly-connected)i(comp)q(o-)-142 1291 y(nen)o(ts)i(algorithm.)-142
1397 y(Classi\014cations:)h(Computing)8 b(P)o(aradigms)g(\(functional)h
(program-)-142 1447 y(ming\);)29 b(En)o(vironmen)o(ts,)d(Implemen)o
(tations,)f(and)g(Exp)q(erience)-142 1496 y(\(programming,)10
b(graph)k(algorithms\).)-142 1671 y Fp(1)67 b(In)n(tro)r(duction)-142
1790 y Fr(The)14 b(imp)q(ortance)e(of)h(depth-\014rst)i(searc)o(h)f
(\(DFS\))f(for)g(graph)g(algo-)-142 1840 y(rithms)j(w)o(as)h
(established)g(t)o(w)o(en)o(t)o(y)g(y)o(ears)g(ago)f(b)o(y)h(T)m(arjan)
f(\(1972\))-142 1890 y(and)10 b(Hop)q(croft)g(and)f(T)m(arjan)g
(\(1973\))f(in)i(their)g(seminal)d(w)o(ork.)17 b(They)-142
1939 y(demonstrated)e(ho)o(w)f(depth-\014rst)i(searc)o(h)g(could)f(b)q
(e)g(used)g(to)g(con-)-142 1989 y(struct)k(a)e(v)n(ariet)o(y)f(of)h
(e\016cien)o(t)h(graph)f(algorithms.)25 b(In)17 b(practice,)-142
2039 y(this)h(is)f(done)g(b)o(y)g(em)o(b)q(edding)f(co)q(de-fragmen)o
(ts)h(necessary)i(for)e(a)-142 2089 y(particular)12 b(algorithm)c(in)o
(to)j(a)g(DFS)h(pro)q(cedure)h(sk)o(eleton)f(in)f(order)-142
2139 y(to)j(compute)f(relev)n(an)o(t)g(information)e(while)i(the)h
(searc)o(h)g(pro)q(ceeds.)-142 2188 y(While)j(this)g(is)g(quite)g
(elegan)o(t)g(it)g(has)g(a)g(n)o(um)o(b)q(er)g(of)f(dra)o(wbac)o(ks.)
-142 2238 y(Firstly)m(,)10 b(the)h(DFS)g(co)q(de)g(b)q(ecomes)g(in)o
(tert)o(wined)g(with)f(the)h(co)q(de)g(for)-142 2288
y(the)k(particular)f(algorithm,)e(resulting)i(in)g(monolithic)e
(programs.)-142 2338 y(The)k(co)q(de)g(is)f(not)g(built)f(b)o(y)h
(re-use,)h(and)f(there)h(is)f(no)g(separation)-142 2388
y(b)q(et)o(w)o(een)f(logically)d(distinct)i(phases.)18
b(Secondly)m(,)13 b(in)f(order)h(to)g(rea-)-142 2437
y(son)i(ab)q(out)g(suc)o(h)g(DFS)f(algorithms)f(w)o(e)i(ha)o(v)o(e)f
(to)h(reason)g(ab)q(out)f(a)-142 2487 y(dynamic)g Fo(pr)n(o)n(c)n(ess)p
Fr(|what)h(happ)q(ens)h(and)g(when|and)f(suc)o(h)i(rea-)-142
2537 y(soning)d(is)f(complex.)-142 2612 y(Occasionally)m(,)f(the)i
Fo(depth-\014rst)h(for)n(est)d Fr(is)i(in)o(tro)q(duced)g(in)f(order)h
(to)-142 2662 y(pro)o(vide)k(a)f Fo(static)h Fr(v)n(alue)f(to)h(aid)f
(reasoning.)30 b(W)m(e)17 b(build)g(on)h(this)-142 2711
y(idea.)g(If)13 b(ha)o(ving)f(an)h(explicit)g(depth-\014rst)i(forest)f
(is)f(go)q(o)q(d)g(for)g(rea-)-142 2761 y(soning)g(then,)g(so)g(long)f
(as)h(the)h(o)o(v)o(erheads)g(are)f(not)g(unacceptable,)-142
2811 y(it)19 b(is)g(go)q(o)q(d)g(for)f(programming.)30
b(In)19 b(this)h(pap)q(er,)g(w)o(e)g(presen)o(t)g(a)972
724 y(wide)11 b(v)n(ariet)o(y)f(of)h(DFS)g(algorithms)e(as)i(com)o
(binations)e(of)i(standard)972 774 y(comp)q(onen)o(ts,)k(passing)i
(explicit)e(in)o(termediate)h(v)n(alues)g(from)e(one)972
824 y(to)h(the)i(other.)25 b(The)17 b(result)f(is)g(quite)g(di\013eren)
o(t)h(from)e(traditional)972 874 y(presen)o(tations)i(of)e(these)i
(algorithms,)c(and)j(w)o(e)g(obtain)f(a)g(greater)972
924 y(degree)g(of)e(mo)q(dularit)o(y)f(than)h(is)h(usually)f(seen.)972
998 y(Of)k(course,)h(the)g(idea)f(of)f(splitting)g(algorithms)f(in)o
(to)h(man)o(y)g(sep-)972 1048 y(arate)h(phases)i(connected)g(b)o(y)e
(in)o(termediate)f(data)i(structures)h(is)972 1098 y(not)i(new.)42
b(T)m(o)21 b(some)g(exten)o(t)i(it)e(o)q(ccurs)i(in)e(all)g(programmi)o
(ng)972 1148 y(paradigms,)i(and)h(is)f(esp)q(ecially)h(common)d(in)i
(functional)g(lan-)972 1198 y(guages.)17 b(What)10 b(is)g(new,)h(ho)o
(w)o(ev)o(er,)h(is)e(applying)f(the)j(idea)e(to)g(graph)972
1247 y(algorithms.)32 b(The)20 b(di\016cult)o(y)e(is)h(alw)o(a)o(ys)g
(to)g(\014nd)g(a)g(su\016cien)o(tly)972 1297 y(\015exible)f(in)o
(termediate)g(v)n(alue)g(whic)o(h)g(allo)o(ws)f(a)h(wide)h(v)n(ariet)o
(y)f(of)972 1347 y(algorithms)11 b(to)j(b)q(e)g(expressed)j(in)c(terms)
h(of)f(it.)972 1422 y(There)e(is)g(another)g(c)o(hallenge)g(here,)h(ho)
o(w)o(ev)o(er.)17 b(Graph)11 b(algorithms)972 1472 y(ha)o(v)o(e)k(long)
g(b)q(een)i(p)q(o)q(orly)f(handled)g(in)f(functional)g(languages.)24
b(It)972 1521 y(has)19 b(not)g(b)q(een)h(at)e(all)g(clear)i(ho)o(w)e
(to)h(express)i(suc)o(h)f(algorithms)972 1571 y(without)11
b(using)g(side)i(e\013ects)g(to)f(ac)o(hiev)o(e)g(e\016ciency)m(,)g
(and)g(lazy)f(lan-)972 1621 y(guages)i(b)o(y)h(their)g(nature)h(ha)o(v)
o(e)e(to)h(prohibit)f(side-e\013ects.)20 b(So,)14 b(for)972
1671 y(example,)e(man)o(y)g(texts)j(pro)o(vide)f(implemen)o(tations)d
(of)j(searc)o(h)h(al-)972 1721 y(gorithms)f(whic)o(h)i(are)g(quadratic)
g(in)f(the)i(size)f(of)g(the)g(graph)g(\(see)972 1771
y(P)o(aulson)i(\(1991\),)g(Holy)o(er)g(\(1991\),)h(or)f(Harrison)h
(\(1993\)\),)g(com-)972 1820 y(pared)f(with)g(the)h(standard)g(linear)f
(implem)o(en)o(tations)e(giv)o(en)i(for)972 1870 y(imp)q(erativ)o(e)12
b(languages)g(\(see)j(Man)o(b)q(er)f(\(1989\),)e(or)i(Corman)d
Fo(et)k(al.)972 1920 y Fr(\(1990\)\).)972 1995 y(In)k(our)h(w)o(ork)f
(there)i(is)f(one)g(place)g(where)h(w)o(e)f(do)f(need)i(to)e(use)972
2045 y(destructiv)o(e)i(up)q(date)g(in)f(order)g(to)g(gain)f(the)i
(same)e(complexit)o(y)972 2094 y(\(within)14 b(a)i(constan)o(t)g
(factor\))f(as)h(imp)q(erativ)o(e)e(graph)h(algorithms.)972
2144 y(W)m(e)10 b(mak)o(e)f(use)i(of)f(recen)o(t)i(adv)n(ances)f(in)f
(lazy)g(functional)g(languages)972 2194 y(whic)o(h)20
b(use)i(monads)e(to)g(pro)o(vide)h(up)q(datable)g(state,)i(as)e(imple-)
972 2244 y(men)o(ted)11 b(within)h(the)h(Glasgo)o(w)e(Hask)o(ell)h
(compiler.)k(The)d(compiler)972 2294 y(pro)o(vides)k(extensions)h(to)f
(the)h(language)e(Hask)o(ell)h(\(Hudak)g Fo(et)h(al.)972
2343 y Fr(1992\))13 b(pro)o(viding)f(up)q(datable)i(arra)o(ys)g
(\(Launc)o(h)o(bury)g(and)g(P)o(eyton)972 2393 y(Jones)h(1994\),)d(and)
i(allo)o(ws)f(these)j(state-based)f(actions)f(to)g(b)q(e)h(en-)972
2443 y(capsulated)h(so)f(that)g(their)h(external)g(b)q(eha)o(viour)f
(is)h(purely)f(func-)972 2493 y(tional.)27 b(Consequen)o(tly)18
b(w)o(e)g(obtain)f(linear)g(algorithms)f(and)h(y)o(et)972
2543 y(retain)c(the)g(abilit)o(y)e(to)i(p)q(erform)f(purely)h
(functional)f(reasoning)g(on)972 2592 y(all)g(but)i(one)g(\014xed)h
(and)e(reusable)i(comp)q(onen)o(t.)972 2667 y(Most)i(of)f(the)i(metho)q
(ds)f(in)f(this)h(pap)q(er)h(apply)e(equally)h(to)f(strict)972
2717 y(and)c(lazy)g(languages.)17 b(The)c(exception)h(is)e(in)g(the)i
(case)f(when)g(DFS)972 2767 y(is)j(b)q(eing)h(used)h(for)e(a)g(true)i
Fo(se)n(ar)n(ch)f Fr(rather)g(than)g(for)f(a)h(complete)940
2936 y(1)p eop
%%Page: 2 2
2 1 bop -142 18 a Fo(tr)n(aversal)18 b Fr(of)g(the)i(graph.)33
b(In)19 b(this)g(case,)i(the)e(co-routining)g(b)q(e-)-142
68 y(ha)o(viour)c(of)g(lazy)g(ev)n(aluation)g(allo)o(ws)f(the)i(searc)o
(h)h(to)e(ab)q(ort)h(early)-142 118 y(without)g(needing)h(to)f(add)g
(additional)f(mec)o(hanisms)f(lik)o(e)i(excep-)-142 167
y(tions.)i(W)m(e)c(giv)o(e)f(an)h(example)e(of)h(this)h(in)g(Section)g
(6.)-142 242 y(In)g(summary)e(the)i(main)e(con)o(tributions)i(of)f
(this)h(pap)q(er)g(are:)-100 352 y Fn(\017)20 b Fr(W)m(e)14
b(pro)o(vide)f(implemen)o(tations)e(of)i(DFS)h(algorithms)e(in)h(lin-)
-59 402 y(ear)f(time)f(in)g(Hask)o(ell.)17 b(W)m(e)11
b(are)h(careful)g(to)f(pro)o(vide)h(real)f(co)q(de)-59
452 y(throughout,)j(and)f(a)o(v)o(oid)g(resorting)h(to)g(pseudo-co)q
(de.)-100 538 y Fn(\017)20 b Fr(W)m(e)j(construct)i(the)e(algorithms)e
(using)i(reusable)g(comp)q(o-)-59 588 y(nen)o(ts,)c(pro)o(viding)d(a)h
(greater)h(lev)o(el)f(of)f(mo)q(dularit)o(y)f(than)i(is)-59
638 y(t)o(ypical)c(in)h(other)g(presen)o(tations.)-100
725 y Fn(\017)20 b Fr(W)m(e)j(pro)o(vide)f(examples)g(of)g(correctness)
k(pro)q(ofs.)44 b(Again,)-59 775 y(these)13 b(are)f(quite)f(di\013eren)
o(t)i(from)d(traditional)f(pro)q(ofs,)j(largely)-59 824
y(b)q(ecause)18 b(they)f(are)f(not)g(based)g(up)q(on)h(reasoning)e(ab)q
(out)h(the)-59 874 y(dynamic)22 b Fo(pr)n(o)n(c)n(ess)g
Fr(of)h(DFS,)f(but)i(rather)g(ab)q(out)f(a)g(static)-59
924 y Fo(value)p Fr(.)-142 1034 y(This)17 b(pap)q(er)g(is)f(organised)h
(as)f(follo)o(ws.)25 b(Section)16 b(2)h(in)o(tro)q(duces)g(a)-142
1084 y(data)i(t)o(yp)q(e)h(for)f(graphs)h(and)f(some)g(standard)h
(functions)f(whic)o(h)-142 1133 y(will)i(b)q(e)h(used)h(in)e(subsequen)
o(t)i(algorithms.)40 b(Section)22 b(3)g(in)o(tro-)-142
1183 y(duces)g(depth-\014rst)f(searc)o(h.)37 b(Section)20
b(4)g(describ)q(es)i(the)f(Hask)o(ell)-142 1233 y(implemen)o(tation)16
b(of)k(sev)o(eral)g(algorithms)d(that)j(use)h(depth-\014rst)-142
1283 y(searc)o(h)i(whic)o(h)e(includes:)33 b(top)q(ological)19
b(sorting,)k(strongly)e(con-)-142 1333 y(nected)e(comp)q(onen)o(ts,)d
(as)h(w)o(ell)f(as)h(others.)28 b(Section)17 b(5)g(describ)q(es)-142
1382 y(the)h(linear)e(implemen)o(tation)e(of)i(depth-\014rst)i(searc)o
(h)g(in)f(Hask)o(ell.)-142 1432 y(Section)c(6)g(describ)q(es)i(some)d
(more)f(complex)h(algorithms)e(that)j(use)-142 1482 y(depth-\014rst)19
b(searc)o(h,)g(including)e(edge)h(classi\014cation)f(and)g(bicon-)-142
1532 y(nected)i(comp)q(onen)o(ts.)26 b(Section)17 b(7)g(discusses)h
(the)g(complexit)o(y)d(of)-142 1582 y(the)g(algorithms.)g(Finally)m(,)d
(Section)i(8)g(discusses)i(related)e(w)o(ork.)-142 1748
y Fp(2)67 b(Represen)n(ting)23 b(graphs)-142 1865 y Fr(In)16
b(order)h(to)f(meet)f(our)h(goal)f(of)g(not)h(resorting)g(to)g
(pseudo-co)q(de,)-142 1914 y(w)o(e)d(need)g(to)f(b)q(egin)h(with)f
(some)f(b)q(oring)h(details.)18 b(There)13 b(are)g(man)o(y)-142
1964 y(w)o(a)o(ys)j(to)f(represen)o(t)k(\(directed\))e(graphs.)24
b(F)m(or)16 b(our)f(purp)q(oses,)j(w)o(e)-142 2014 y(use)i(an)f(arra)o
(y)f(of)h(adjacency)g(lists.)33 b(The)19 b(arra)o(y)g(is)g(indexed)g(b)
o(y)-142 2064 y(v)o(ertices,)d(and)e(eac)o(h)i(comp)q(onen)o(t)e(of)g
(the)h(arra)o(y)f(is)h(a)f(list)g(of)g(those)-142 2114
y(v)o(ertices)e(reac)o(hable)f(along)f(a)g(single)h(edge.)17
b(This)11 b(adjacency)g(struc-)-142 2163 y(ture)18 b(is)f(linear)g(in)g
(the)g(size)h(of)f(the)h(graph,)f(that)g(is,)h(the)f(sum)g(of)-142
2213 y(the)i(n)o(um)o(b)q(er)f(of)g(v)o(ertices)i(and)e(the)h(n)o(um)o
(b)q(er)f(of)g(edges.)33 b(By)19 b(us-)-142 2263 y(ing)e(an)g(indexed)i
(structure)g(w)o(e)f(are)g(able)f(to)h(b)q(e)g(explicit)f(ab)q(out)-142
2313 y(the)g(sharing)g(that)f(o)q(ccurs)i(in)e(the)h(graph.)26
b(Another)17 b(alternativ)o(e)-142 2363 y(w)o(ould)e(ha)o(v)o(e)g(b)q
(een)i(to)e(use)i(a)e(recursiv)o(e)i(tree)g(structure)h(and)d(rely)-142
2413 y(on)d(cycles)i(within)d(the)i(heap.)18 b(Ho)o(w)o(ev)o(er,)12
b(the)h(sharing)f(of)f(no)q(des)i(in)-142 2462 y(the)g(graph)g(w)o
(ould)f(then)h(b)q(e)g(implicit)d(making)g(a)j(n)o(um)o(b)q(er)e(of)h
(tasks)-142 2512 y(harder.)-142 2587 y(So)e(w)o(e)f(will)g(just)g(use)i
(a)e(standard)h(Hask)o(ell)f(imm)o(utabl)o(e)e(arra)o(y)m(.)16
b(This)-142 2637 y(giv)o(es)j(constan)o(t)g(time)f(access)i(\(but)g
(not)e(up)q(date|these)j(arra)o(ys)-142 2687 y(ma)o(y)12
b(b)q(e)j(shared)g(arbitrarily\).)-142 2761 y(W)m(e)20
b(can)g(use)i(the)e(same)g(mec)o(hanism)d(to)k(represen)o(t)h
Fo(undir)n(e)n(cte)n(d)-142 2811 y Fr(graphs)c(as)g(w)o(ell,)g(simply)e
(b)o(y)i(ensuring)g(that)g(w)o(e)h(ha)o(v)o(e)e(edges)i(in)972
18 y(b)q(oth)g(directions.)33 b(An)19 b(undirected)i(graph)d(is)h(a)g
(symmetric)e(di-)972 68 y(rected)i(graph.)28 b(W)m(e)17
b(could)g(also)f(represen)o(t)k Fo(multi-e)n(dge)n(d)d
Fr(graphs)972 118 y(b)o(y)c(a)h(simple)e(extension,)i(but)g(will)f(not)
h(consider)g(them)f(here.)972 192 y(Graphs,)f(therefore,)j(ma)o(y)c(b)q
(e)j(though)o(t)e(of)h(as)g(a)g(table)g(indexed)g(b)o(y)972
242 y(v)o(ertices.)972 317 y Fq(type)21 b(Table)f(a)i(=)f(Array)g
(Vertex)g(a)972 367 y(type)g(Graph)64 b(=)21 b(Table)g([Vertex])972
441 y Fr(The)13 b(t)o(yp)q(e)g Fq(Vertex)f Fr(ma)o(y)f(b)q(e)i(an)o(y)f
(t)o(yp)q(e)i(b)q(elonging)e(to)g(the)i(Hask)o(ell)972
491 y(index)23 b(class)h Fq(Ix)p Fr(,)h(whic)o(h)e(includes)h
Fq(Int)p Fr(,)h Fq(Char)o Fr(,)h(tuples)e(of)f(in-)972
541 y(dices,)12 b(and)g(more.)17 b(Hask)o(ell)11 b(arra)o(ys)i(come)e
(with)h(indexing)f(\()p Fq(!)p Fr(\))h(and)972 591 y(the)k(functions)f
Fq(indices)f Fr(\(returning)i(a)f(list)g(of)g(the)h(indices\))g(and)972
641 y Fq(bounds)d Fr(\(returning)i(a)f(pair)g(of)g(the)h(least)f(and)g
(greatest)i(indices\).)972 690 y(W)m(e)d(pro)o(vide)h
Fq(vertices)f Fr(as)h(an)g(alternativ)o(e)f(for)h Fq(indices)o
Fr(,)f(whic)o(h)972 740 y(returns)i(a)f(list)f(of)g(all)g(the)h(v)o
(ertices)i(in)d(a)h(graph.)972 815 y Fq(vertices)20 b(::)h(Graph)g(->)g
([Vertex])972 865 y(vertices)f(=)h(indices)972 939 y
Fr(Sometimes)15 b(it)i(is)g(con)o(v)o(enien)o(t)h(to)g(extract)g(a)g
(list)f(of)f(edges)j(from)972 989 y(the)13 b(graph,)g(this)g(is)g(done)
g(with)g(the)g(function)g Fq(edges)o Fr(.)18 b(An)13
b(edge)g(is)972 1039 y(a)g(pair)h(of)f(v)o(ertices.)972
1114 y Fq(type)21 b(Edge)f(=)i(\(Vertex,Vertex\))972
1213 y(edges)e(::)i(Graph)e(->)i([Edge])972 1263 y(edges)e(g)i(=)f([)h
(\(v,w\))f(|)g(v)h(<-)f(vertices)g(g,)g(w)g(<-)h(g!v])972
1338 y Fr(T)m(o)27 b(manipulate)e(tables)k(\(including)e(graphs\))h(w)o
(e)g(pro)o(vide)g(a)972 1388 y(generic)17 b(function)f
Fq(mapT)f Fr(whic)o(h)i(applies)f(its)g(function)g(argumen)o(t)972
1438 y(to)d(ev)o(ery)i(table)f(index/en)o(try)g(pair,)f(and)h(builds)f
(a)h(new)g(table.)972 1512 y Fq(mapT)21 b(::)g(\(Vertex)f(->)i(a)f(->)h
(b\))f(->)g(Table)g(a)h(->)f(Table)g(b)972 1562 y(mapT)g(f)g(t)h(=)f
(array)g(\(bounds)f(t\))1364 1612 y([\(v,)h(f)g(v)h(\(t!v\)\))f(|)g
(v<-indices)f(t])972 1687 y Fr(The)13 b(Hask)o(ell)f(function)h
Fq(array)f Fr(tak)o(es)h(lo)o(w)f(and)h(high)f(b)q(ounds)h(and)972
1736 y(a)k(list)h(of)g(index/v)n(alue)f(pairs)1454 1721
y Fm(1)1472 1736 y Fr(,)i(and)f(builds)g(the)g(corresp)q(onding)972
1786 y(arra)o(y)d(in)h(linear)f(time.)23 b(Because)18
b(w)o(e)e(are)h(using)e(an)h(arra)o(y-based)972 1836
y(implem)o(en)o(tation)c(w)o(e)j(often)g(need)h(to)f(pro)o(vide)g(a)g
(pair)f(of)h(v)o(ertices)972 1886 y(as)f(arra)o(y)f(b)q(ounds.)19
b(So)13 b(for)h(con)o(v)o(enience)h(w)o(e)f(de\014ne,)972
1961 y Fq(type)21 b(Bounds)f(=)i(\(Vertex,Vertex\))972
2035 y Fr(Using)13 b Fq(mapT)g Fr(w)o(e)h(could)g(de\014ne,)972
2110 y Fq(outdegree)19 b(::)j(Graph)f(->)g(Table)g(Int)972
2160 y(outdegree)e(g)j(=)g(mapT)f(numEdges)f(g)1015 2210
y(where)43 b(numEdges)20 b(v)h(ws)h(=)f(length)g(ws)972
2284 y Fr(whic)o(h)15 b(builds)g(a)g(table)g(detailing)f(the)i(n)o(um)o
(b)q(er)f(of)g(edges)h(lea)o(ving)972 2334 y(eac)o(h)e(v)o(ertex.)972
2409 y(T)m(o)f(build)g(up)h(a)f(graph)h(from)e(a)i(list)f(of)g(edges)i
(w)o(e)f(de\014ne)h Fq(buildG)o Fr(.)972 2484 y Fq(buildG)20
b(::)h(Bounds)g(->)g([Edge])g(->)g(Graph)972 2534 y(buildG)f(bnds)h(es)
g(=)h(accumArray)e(\(flip)h(\(:\)\))f([])i(bnds)f(es)972
2608 y Fr(Lik)o(e)15 b Fq(array)g Fr(the)i(Hask)o(ell)e(function)h
Fq(accumArray)e Fr(builds)i(an)f(ar-)972 2658 y(ra)o(y)c(from)g(a)h
(list)g(of)f(index/v)n(alue)g(pairs,)h(with)g(the)h(di\013erence)h
(that)p 972 2733 429 2 v 1018 2760 a Fl(1)1035 2772 y
Fk(Actually)h(Hask)o(ell)i(uses)f(the)g Fj(Assoc)f Fk(t)o(yp)q(e,)i
(whic)o(h)f(is)h(equiv)n(alen)o(t,)e(but)972 2811 y(in)o(tro)q(duces)8
b(an)j(unnecessary)e(new)i(notation.)940 2936 y Fr(2)p
eop
%%Page: 3 3
3 2 bop -142 18 a Fq(accumArray)12 b Fr(accepts)k(p)q(ossibly)e(man)o
(y)e(v)n(alues)i(for)g(eac)o(h)h(indexed)-142 68 y(lo)q(cation,)c(whic)
o(h)f(are)i(com)o(bined)e(using)h(the)g(function)g(pro)o(vided)g(as)
-142 118 y Fq(accumArray)n Fr('s)k(\014rst)g(argumen)o(t.)k(Here)d(w)o
(e)f(simply)d(build)i(lists)h(of)-142 167 y(all)d(the)h(v)n(alues)f
(asso)q(ciated)h(with)f(eac)o(h)h(index.)18 b(Again,)11
b(construct-)-142 217 y(ing)h(the)i(arra)o(y)e(tak)o(es)h(linear)f
(time)g(with)g(resp)q(ect)j(to)e(the)g(length)g(of)-142
267 y(the)f(adjacency)g(list.)17 b(So)11 b(in)f(linear)h(time,)f(w)o(e)
i(can)f(con)o(v)o(ert)h(a)f(graph)-142 317 y(de\014ned)18
b(in)d(terms)h(of)g(edges)h(to)g(the)f(v)o(ertex)i(table)e(based)h
(graph.)-142 367 y(F)m(or)d(example,)-98 441 y Fq(graph)21
b(=)g(buildG)g(\('a','j'\))207 491 y([\('a','j'\),\('a',')o(g'\),\()o
('b',')o(i'\),)229 541 y(\('b','a'\),\('c',')o(h'\),\()o('c',')o(e'\),)
229 591 y(\('e','j'\),\('e',')o(h'\),\()o('e',')o(d'\),)229
641 y(\('f','i'\),\('g',')o(f'\),\()o('g',')o(b'\)])-142
715 y Fr(will)15 b(pro)q(duce)i(the)g(arra)o(y)f(represen)o(tation)i
(for)e(the)h(graph)f(sho)o(wn)-142 765 y(in)e(Figure)g(1.)33
1311 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 6.59525 0.0
false .5 3.44513 InitRnode  } NewNode end end
 33 1311 a Fi(i)264 1308 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeE 16 { .5 6.94444 1.94444
false .5 5.97226 InitRnode  } NewNode end end
 264 1308 a Fi(f)149
1076 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 6.94444 0.0
false .5 4.29166 InitRnode  } NewNode end end
 149 1076 a Fi(b)384 1067 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 4.30554 1.94444
false .5 5.12846 InitRnode  } NewNode end end
 384 1067 a Fi(g)265
834 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 4.30554 0.0
false .5 5.28589 InitRnode  } NewNode end end
 265 834 a Fi(a)739 834 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeG 16 { .5 4.30554 0.0
false .5 4.32756 InitRnode  } NewNode end end
 739 834 a Fi(c)503 835
y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeF 16 { .5 6.59525 1.94444
false .5 4.69049 InitRnode  } NewNode end end
 503 835 a Fi(j)621 1070 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeH 16 { .5 4.30554 0.0
false .5 4.65627 InitRnode  } NewNode end end
 621 1070 a Fi(e)737 1312
y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeJ 16 { .5 6.94444 0.0
false .5 5.76158 InitRnode  } NewNode end end
 737 1312 a Fi(h)501 1312 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeI 16 { .5 6.94444 0.0
false .5 5.20486 InitRnode  } NewNode end end
 501 1312 a Fi(d)40 1298
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeF InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeC InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40
1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeE InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeA InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeD InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298
a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE /TheNodeD InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeG /TheNodeH InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeG /TheNodeJ InitNC
{ GetAngle dup 8.  add /AngleA ED 8.  sub 180 add /AngleB ED 0.67 
0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 40
1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeF InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeJ InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 40 1298
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeI InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 40 1298 a 149 1397 a Fr(Figure)g(1:)k(A)c(directed)h(graph)-142
1491 y(Then,)d(to)g(\014nd)g(the)g(immedia)o(te)e(successors)k(to)e
Fq('e')o Fr(,)g(sa)o(y)m(,)f(w)o(e)g(com-)-142 1541 y(pute:)33
1616 y Fq(graph)20 b(!)i('e')-142 1690 y Fr(whic)o(h)14
b(returns)h Fq(['d',)21 b('h',)g('j'])o Fr(.)-142 1765
y(Com)o(bining)12 b(the)i(functions)g Fq(edges)g Fr(and)g
Fq(buildG)e Fr(giv)o(es)i(us)h(a)f(w)o(a)o(y)-142 1815
y(to)j(rev)o(erse)i(all)c(the)j(edges)g(in)e(a)g(graph)h(giving)e(the)j
Fo(tr)n(ansp)n(ose)f Fr(of)-142 1865 y(the)e(graph:)-142
1939 y Fq(transposeG)20 b(::)h(Graph)g(->)h(Graph)-142
1989 y(transposeG)e(g)i(=)f(buildG)g(\(bounds)f(g\))h(\(reverseE)f(g\))
-142 2089 y(reverseE)g(::)i(Graph)f(->)g([Edge])-142
2139 y(reverseE)f(g)i(=)g([)f(\(w,v\))g(|)h(\(v,w\))e(<-)i(edges)e(g])
-142 2213 y Fr(W)m(e)14 b(extract)h(the)g(edges)g(from)e(the)i
(original)d(graph,)h(rev)o(erse)k(their)-142 2263 y(direction,)g(and)f
(rebuild)h(a)f(graph)g(with)g(the)h(new)g(edges.)27 b(Then,)-142
2313 y(for)14 b(example,)33 2388 y Fq(\(transposeG)19
b(graph\))i(!)g('e')-142 2462 y Fr(will)11 b(return)i
Fq(['c'])o Fr(.)k(No)o(w)12 b(b)o(y)g(using)g Fq(transposeG)e
Fr(w)o(e)i(can)g(imme-)-142 2512 y(diately)h(de\014ne)i(an)f(indegree)h
(table)f(for)f(v)o(ertices:)-142 2587 y Fq(indegree)20
b(::)i(Graph)f(->)g(Table)g(Int)-142 2637 y(indegree)f(g)i(=)g
(outdegree)e(\(transposeG)f(g\))-142 2711 y Fr(This)12
b(example)f(giv)o(es)h(a)g(\014rst)h(feel)f(for)g(the)g(approac)o(h)g
(w)o(e)h(adv)o(o)q(cate)-142 2761 y(in)h(this)g(pap)q(er.)20
b(Rather)14 b(than)g(de\014ning)g Fq(indegree)e Fr(from)h(scratc)o(h)
-142 2811 y(b)o(y)m(,)g(for)h(example,)f(building)g(an)h(arra)o(y)g
(incremen)o(tally)e(as)j(w)o(e)f(tra-)972 18 y(v)o(erse)19
b(the)f(graph,)h(w)o(e)f(simply)e(reuse)j(previously)f(de\014ned)h
(func-)972 68 y(tions,)13 b(com)o(bining)f(them)h(in)h(a)f(fresh)i(w)o
(a)o(y)m(.)j(The)c(result)h(is)f(shorter)972 118 y(and)k(clearer,)i
(though)e(p)q(oten)o(tially)g(more)f(exp)q(ensiv)o(e)j(\(an)e(in)o
(ter-)972 167 y(mediate)13 b(arra)o(y)h(is)h(constructed\).)22
b(There)16 b(are)f(t)o(w)o(o)f(things)g(to)g(sa)o(y)972
217 y(ab)q(out)f(this)h(additional)f(cost.)19 b(Firstly)m(,)13
b(the)h(additional)e(cost)j(only)972 267 y(in)o(tro)q(duces)c(a)f
(constan)o(t)h(factor)f(in)o(to)g(the)h(complexit)o(y)e(measure,)h(so)
972 317 y(the)15 b(essence)j(of)d(the)h(algorithm)c(is)j(preserv)o(ed.)
25 b(Secondly)m(,)15 b(recen)o(t)972 367 y(w)o(ork)j(in)f(the)i
(automatic)e(remo)o(v)n(al)f(of)h(in)o(termediate)h(structures)972
416 y(\(deforestation\))13 b(comes)f(a)g(long)g(w)o(a)o(y)f(to)i(remo)o
(ving)d(this)j(problem.)972 662 y Fp(3)66 b(Depth-\014rst)24
b(searc)n(h)972 794 y Fr(The)19 b(traditional)f(view)i(of)f
(depth-\014rst)i(searc)o(h)f(is)g(as)f(a)g(pro)q(cess)972
844 y(whic)o(h)14 b(ma)o(y)e(lo)q(osely)h(b)q(e)i(describ)q(ed)h(as)e
(follo)o(ws.)k(Initially)m(,)11 b(all)i(the)972 894 y(v)o(ertices)i(of)
f(the)h(graph)f(are)h(deemed)g(\\un)o(visited",)e(so)i(w)o(e)f(c)o(ho)q
(ose)972 944 y(one)h(and)h(explore)f(an)h(edge)g(leading)f(to)g(a)g
(new)h(v)o(ertex.)24 b(No)o(w)15 b(w)o(e)972 993 y(start)g(at)f(this)g
(v)o(ertex)i(and)e(explore)h(an)f(edge)h(leading)f(to)g(another)972
1043 y(new)k(v)o(ertex.)30 b(W)m(e)17 b(con)o(tin)o(ue)h(in)g(this)f
(fashion)g(un)o(til)g(w)o(e)h(reac)o(h)h(a)972 1093 y(v)o(ertex)14
b(whic)o(h)g(has)g(no)g(edges)h(leading)e(to)h(un)o(visited)g(v)o
(ertices.)19 b(A)o(t)972 1143 y(this)11 b(p)q(oin)o(t)g(w)o(e)h(bac)o
(ktrac)o(k,)g(and)f(con)o(tin)o(ue)h(from)d(the)j(latest)g(v)o(ertex)
972 1193 y(whic)o(h)h(do)q(es)i(lead)f(to)f(new)i(un)o(visited)e(v)o
(ertices.)972 1267 y(Ev)o(en)o(tually)g(w)o(e)i(will)e(reac)o(h)j(a)e
(p)q(oin)o(t)g(where)i(ev)o(ery)f(v)o(ertex)h(reac)o(h-)972
1317 y(able)10 b(from)f(the)i(initial)e(v)o(ertex)i(has)g(b)q(een)h
(visited.)17 b(If)10 b(there)i(are)f(an)o(y)972 1367
y(un)o(visited)k(v)o(ertices)i(left,)e(w)o(e)g(c)o(ho)q(ose)i(one)e
(and)h(b)q(egin)f(the)h(searc)o(h)972 1417 y(again,)d(un)o(til)i
(\014nally)f(ev)o(ery)i(v)o(ertex)g(has)f(b)q(een)i(visited)e(once,)g
(and)972 1467 y(ev)o(ery)f(edge)h(has)f(b)q(een)h(examined.)1057
1939 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 6.59525 0.0
false .5 3.44513 InitRnode  } NewNode end end
 1057 1939 a Fi(i)1174 1822 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 6.94444 0.0
false .5 4.29166 InitRnode  } NewNode end end
 1174 1822 a Fi(b)1290
1694 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 4.30554 1.94444
false .5 5.12846 InitRnode  } NewNode end end
 1290 1694 a Fi(g)1406 1818 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeE 16 { .5 6.94444 1.94444
false .5 5.97226 InitRnode  } NewNode end end
 1406 1818 a Fi(f)1408
1580 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 4.30554 0.0
false .5 5.28589 InitRnode  } NewNode end end
 1408 1580 a Fi(a)1527 1699 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeF 16 { .5 6.59525 1.94444
false .5 4.69049 InitRnode  } NewNode end end
 1527 1699 a Fi(j)1823
1757 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeH 16 { .5 4.30554 0.0
false .5 4.65627 InitRnode  } NewNode end end
 1823 1757 a Fi(e)1938 1940 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeJ 16 { .5 6.94444 0.0
false .5 5.76158 InitRnode  } NewNode end end
 1938 1940 a Fi(h)1703
1940 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeI 16 { .5 6.94444 0.0
false .5 5.20486 InitRnode  } NewNode end end
 1703 1940 a Fi(d)1823 1580 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeG 16 { .5 4.30554 0.0
false .5 4.32756 InitRnode  } NewNode end end
 1823 1580 a Fi(c)120
1985 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeF InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeC InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120
1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeE InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeD InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120
1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeG /TheNodeH InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeI InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeJ InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 120
1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeA InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 120 1985 a 120 1985 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 120 1985 a 105
1999 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 10.08336 9.83331 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial Fr(B)120
1985 y
 tx@Dict begin PutEnd  end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE /TheNodeD InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 120 1985 a 120 1985 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 120
1985 a 105 1999 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 10.22223 9.83331 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial
Fr(C)120 1985 y
 tx@Dict begin PutEnd  end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeF InitNC
{ GetAngle dup 30.  add /AngleA ED 30.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 120 1985 a 120
1985 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 120 1985 a 105 1999 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 10.22223 9.83331 .5 Frame  gsave 1. setgray fill  grestore end


@endspecial Fr(C)120 1985 y
 tx@Dict begin PutEnd  end
 120 1985 a 120 1985 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeG /TheNodeJ InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 120
1985 a 120 1985 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 120 1985 a 106 1999 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 9.5278 9.83331 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial Fr(F)120 1985 y
 tx@Dict begin PutEnd  end
 120 1985 a 1124
2025 a Fr(Figure)f(2:)k(A)c(depth-\014rst)h(forest)f(of)g(the)g(graph)
972 2163 y(In)g(this)g(pap)q(er)g(w)o(e)h(will)d(concen)o(trate)k(on)e
(depth)g(\014rst)h(searc)o(h)g(as)g(a)972 2213 y(sp)q(eci\014cation)e
(for)e(a)h Fo(value)p Fr(,)h(namely)d(the)j Fo(sp)n(anning)i(for)n(est)
c Fr(de\014ned)972 2263 y(b)o(y)k(a)g(depth-\014rst)i(tra)o(v)o(ersal)e
(of)g(a)g(graph.)23 b(Suc)o(h)15 b(a)h(forest)g(for)f(the)972
2313 y(graph)g(in)f(Figure)i(1)f(is)g(depicted)h(in)f(Figure)h(2.)22
b(The)15 b(\(solid\))g(tree)972 2363 y(edges)c(are)g(those)h(graph)e
(edges)i(whic)o(h)f(lead)f(to)h(un)o(visited)f(v)o(ertices.)972
2413 y(The)17 b(remaining)d(graph)i(edges)i(are)f(also)f(sho)o(wn,)h
(but)f(in)h(dashed)972 2462 y(lines.)g(These)e(edges)g(are)f
(classi\014ed)g(according)g(to)f(their)h(relation-)972
2512 y(ship)c(with)f(the)i(tree,)h(namely)m(,)c Fo(forwar)n(d)i(e)n
(dges)g Fr(\(whic)o(h)g(connect)i(an-)972 2562 y(cestors)h(in)f(the)h
(tree)g(to)f(descendan)o(ts\),)j Fo(b)n(ack)e(e)n(dges)g
Fr(\(the)g(rev)o(erse\),)972 2612 y(and)f Fo(cr)n(oss)i(e)n(dges)g
Fr(\(whic)o(h)f(connect)h(no)q(des)g(across)g(the)g(forest,)f(but)972
2662 y(alw)o(a)o(ys)k(from)g(righ)o(t)h(to)g(left\).)32
b(This)18 b(standard)h(classi\014cation)f(is)972 2711
y(useful)13 b(for)f(thinking)g(ab)q(out)h(a)g(n)o(um)o(b)q(er)f(of)g
(algorithms)f(and)i(later,)972 2761 y(in)j(Section)h(6,)g(w)o(e)g(giv)o
(e)g(an)f(algorithm)e(for)j(classifying)f(edges)i(in)972
2811 y(this)13 b(w)o(a)o(y)m(.)940 2936 y(3)p eop
%%Page: 4 4
4 3 bop -142 18 a Fh(3.1)56 b(Sp)r(eci\014cation)17 b(of)i
(depth-\014rst)f(searc)n(h)-142 119 y Fr(As)i(the)g(approac)o(h)f(to)h
(DFS)f(algorithms)e(whic)o(h)i(w)o(e)h(explore)f(in)-142
169 y(this)c(pap)q(er)g(is)f(to)h(manipulate)d(the)j(depth-\014rst)h
(forest)f Fo(explicitly)p Fr(,)-142 219 y(the)d(\014rst)h(step,)f
(therefore,)h(is)e(to)g(construct)j(the)e(depth-\014rst)g(forest)-142
269 y(from)g(a)h(graph.)18 b(T)m(o)12 b(do)h(this)h(w)o(e)f(need)i(an)e
(appropriate)g(de\014nition)-142 319 y(of)h(trees)h(and)f(forests.)-142
393 y(A)k(forest)g(is)f(a)g(list)g(of)f(trees,)k(and)d(a)g(tree)h(is)f
(a)g(no)q(de)h(con)o(taining)-142 443 y(some)c(v)n(alue,)h(together)h
(with)e(a)h(forest)h(of)e(sub-trees.)24 b(Both)15 b(trees)-142
493 y(and)i(forests)g(are)g(p)q(olymorphic)e(in)h(the)h(t)o(yp)q(e)g
(of)f(data)g(they)h(ma)o(y)-142 543 y(con)o(tain.)-142
618 y Fq(data)k(Tree)g(a)65 b(=)22 b(Node)f(a)h(\(Forest)e(a\))-142
667 y(type)h(Forest)g(a)g(=)h([Tree)f(a])-142 742 y Fr(A)14
b(depth-\014rst)h(searc)o(h)f(of)f(a)g(graph)g(tak)o(es)h(a)f(graph)h
(and)f(an)g(initial)-142 792 y(ordering)d(of)g(v)o(ertices.)18
b(All)9 b(graph)h(v)o(ertices)i(in)d(the)i(initial)d(ordering)-142
842 y(will)13 b(b)q(e)h(in)g(the)g(returned)i(forest.)-142
916 y Fq(dfs)21 b(::)h(Graph)f(->)g([Vertex])f(->)h(Forest)g(Vertex)
-142 991 y Fr(This)e(function)f(is)h(the)g(piv)o(ot)f(of)h(this)f(pap)q
(er.)34 b(F)m(or)18 b(no)o(w)g(w)o(e)h(re-)-142 1041
y(strict)d(ourselv)o(es)f(to)g(considering)g(its)g(prop)q(erties,)h
(and)e(will)f(lea)o(v)o(e)-142 1091 y(its)h(Hask)o(ell)g(implem)o(en)o
(tation)d(un)o(til)i(Section)h(5.)-142 1166 y(Sometimes)e(the)j
(initial)d(ordering)i(of)g(v)o(ertices)h(is)f(not)g(imp)q(ortan)o(t.)
-142 1215 y(When)g(this)g(is)g(the)h(case)f(w)o(e)g(use)h(the)g
(related)f(function)-142 1290 y Fq(dff)21 b(::)h(Graph)f(->)g(Forest)g
(Vertex)-142 1340 y(dff)g(g)h(=)g(dfs)f(g)g(\(vertices)f(g\))-142
1415 y Fr(What)12 b(are)h(the)g(prop)q(erties)h(of)e(depth-\014rst)h
(forests?)19 b(They)13 b(can)f(b)q(e)-142 1464 y(completely)h(c)o
(haracterised)j(b)o(y)d(the)i(follo)o(wing)c(t)o(w)o(o)i(conditions.)
-123 1563 y(\(i\))20 b(The)h(depth-\014rst)h(forest)f(of)e(a)h(graph)h
(is)f(a)g(spanning)g(sub-)-59 1613 y(graph,)13 b(that)h(is,)e(it)h(has)
h(the)g(same)e(v)o(ertex)j(set,)f(but)f(the)h(edge)-59
1663 y(set)h(is)f(a)f(subset)j(of)d(the)h(graph)g(edge)h(set.)-135
1741 y(\(ii\))20 b(The)g(graph)f(con)o(tains)g(no)f(left-righ)o(t)h
(cross-edges)i(with)d(re-)-59 1791 y(sp)q(ect)e(to)d(the)i(forest.)-142
1890 y(Later)e(on)f(in)f(the)i(pap)q(er,)g(w)o(e)f(\014nd)g(it)g(con)o
(v)o(enien)o(t)g(to)g(talk)g(in)f(terms)-142 1940 y(of)18
b Fo(p)n(aths)h Fr(rather)h(than)f(single)f(edges:)29
b(a)19 b(path)g(b)q(eing)f(made)g(up)-142 1989 y(of)i(zero)h(or)f(more)
f(edges)i(joined)f(end)h(to)f(end.)37 b(W)m(e)20 b(will)f(write)-142
2039 y Fo(v)d Fn(\000)-6 b(!)-39 2045 y Fq(g)-4 2039
y Fo(w)19 b Fr(to)d(mean)e(that)i(there)h(is)e(a)h(path)f(from)f
Fi(v)j Fr(to)f Fi(w)g Fr(in)f(the)-142 2089 y(graph)e
Fq(g)p Fr(.)18 b(Where)c(there)g(will)e(b)q(e)i(no)f(confusion)g(w)o(e)
g(will)f(drop)h(the)-142 2139 y(graph)h(subscript.)-142
2214 y(The)i(ban)f(on)f(left-righ)o(t)h(cross)h(edges)g(translates)g
(in)o(to)e(paths.)22 b(A)o(t)-142 2263 y(the)11 b(top)f(lev)o(el,)g(it)
g(implies)f(that)h(there)h(is)g(no)f(path)g(from)e(an)o(y)i(v)o(ertex)
-142 2313 y(in)15 b(one)h(tree)h(to)e(an)o(y)g(v)o(ertex)i(in)e(a)g
(tree)i(that)f(o)q(ccurs)h(later)e(in)g(the)-142 2363
y(forest.)k(Th)o(us)80 2348 y Fm(2)99 2363 y Fr(,)-142
2444 y Fg(Prop)q(ert)o(y)14 b(1)-142 2494 y Fr(If)g Fq(\(ts++us=dff)19
b(g\))p Fr(,)13 b(then)i Fn(8)p Fo(v)h Fn(2)11 b Fq(ts)k
Fi(:)f Fn(8)p Fo(w)i Fn(2)11 b Fq(us)j Fi(:)h Fo(v)39
b Fi(=)-44 b Fn(\000)-7 b(!)11 b Fo(w)60 b Ff(2)-142
2574 y Fr(Deep)q(er)20 b(within)d(eac)o(h)i(tree)g(of)e(the)i(forest,)g
(there)g Fo(c)n(an)g Fr(b)q(e)g(paths)-142 2624 y(whic)o(h)c(tra)o(v)o
(erse)h(a)f(tree)h(from)d(left)i(to)g(righ)o(t,)f(but)h(the)h(absence)h
(of)p -142 2654 429 2 v -96 2681 a Fl(2)-78 2693 y Fk(W)m(e)12
b(use)f(the)h(notation)d Fj(ts++us)h Fk(to)i(indicate)d(an)o(y)i
(division)f(of)i(the)f(list)h(of)-142 2732 y(trees)f(in)g(the)h
(forest,)e(suc)o(h)h(that)f(the)i(order)e(of)h(the)g(trees)g(is)h
(preserv)o(ed.)i(Note)-142 2772 y(that)f(either)f Fj(ts)h
Fk(or)h Fj(us)f Fk(could)f(b)q(e)i(empt)o(y)m(.)20 b(Also,)14
b(w)o(e)g(use)f Fe(2)h Fk(to)f(indicate)f(list)-142 2811
y(mem)o(b)q(ership)c(and)j(not)g(purely)f(for)h(set)g(mem)o(b)q(ership)
o(.)972 18 y Fr(an)o(y)i(graph)h(edges)i(whic)o(h)e(cross)h(the)g(tree)
h(structure)g(from)c(left)i(to)972 68 y(righ)o(t)f(implies)e(that)j
(the)g(path)g(has)f(to)h(follo)o(w)e(the)i(tree)h(structure.)972
118 y(That)e(is:)972 201 y Fg(Prop)q(ert)o(y)g(2)972
250 y Fr(If)h(the)h(tree)h Fq(\(Node)21 b(x)h(\(ts++us\)\))13
b Fr(is)h(a)h(subtree)h(o)q(ccurring)g(an)o(y-)972 300
y(where)f(within)e Fq(dff)21 b(g)p Fr(,)13 b(then)1147
391 y Fn(8)p Fo(v)j Fn(2)11 b Fq(ts)k Fi(:)f Fn(8)p Fo(w)i
Fn(2)11 b Fq(us)k Fi(:)f Fo(v)i Fn(\000)-7 b(!)11 b Fo(w)16
b Fn(\))11 b Fo(v)16 b Fn(\000)-7 b(!)12 b Fo(x)2012
483 y Ff(2)972 566 y Fr(So)i(the)i(only)e(w)o(a)o(y)g(to)h(get)g(from)e
Fo(v)20 b Fr(to)15 b Fo(w)k Fr(is)14 b(via)g(\(an)h(ancestor)h(of)s(\))
972 616 y Fo(x)5 b Fr(,)15 b(the)g(p)q(oin)o(t)g(at)g(whic)o(h)g(the)g
(forests)i(that)e(con)o(tain)f Fo(v)20 b Fr(and)15 b
Fo(w)k Fr(are)972 665 y(com)o(bined)10 b(\(otherwise)j(there)g(w)o
(ould)e(b)q(e)h(a)g(left-righ)o(t)f(cross)i(edge\).)972
715 y(Th)o(us)h(there)h(is)f(also)f(a)g(path)h(from)e
Fo(v)19 b Fr(to)14 b Fo(x)5 b Fr(.)972 790 y(The)12 b(last)f(prop)q
(ert)o(y)i(w)o(e)f(pic)o(k)f(out)h(fo)q(cusses)h(on)f
Fq(dfs)o Fr(,)g(and)f(pro)o(vides)972 840 y(a)16 b(relationship)g(b)q
(et)o(w)o(een)i(the)f(initial)e(order,)i(and)g(the)g(structure)972
889 y(of)c(the)h(forest)1190 874 y Fm(3)1210 889 y Fr(.)972
972 y Fg(Prop)q(ert)o(y)f(3)972 1022 y Fr(Let)18 b Fo(a)j
Fr(and)d Fo(b)j Fr(b)q(e)e(an)o(y)e(t)o(w)o(o)h(v)o(ertices.)32
b(W)m(rite)17 b Fn(\000)-7 b(!)18 b Fr(for)g(edges)h(in)972
1072 y(the)d(graph)g Fq(g)o Fr(,)g(and)g Fn(\024)g Fr(for)f(the)h
(ordering)g(induced)h(b)o(y)e(the)i(list)e(of)972 1122
y(v)o(ertices)g Fq(vs)o Fr(.)j(Then)1204 1202 y Fn(9)p
Fo(t)e Fn(2)11 b Fq(dfs)21 b(g)h(vs)14 b Fi(:)g Fo(a)h
Fn(2)c Fo(t)i Fn(^)c Fo(b)15 b Fn(2)c Fo(t)1121 1252
y Fn(,)41 b(9)p Fo(c)18 b Fi(:)c Fo(c)g Fn(\000)-7 b(!)11
b Fo(a)28 b Fn(^)c Fo(c)14 b Fn(\000)-7 b(!)11 b Fo(b)18
b Fn(^)1264 1302 y Fr(\()p Fn(8)p Fo(d)h Fi(:)c Fo(d)h
Fn(\000)-7 b(!)11 b Fo(a)28 b Fn(_)23 b Fo(d)16 b Fn(\000)-6
b(!)11 b Fo(b)29 b Fn(\))d Fo(c)14 b Fn(\024)d Fo(d)t
Fr(\))2012 1381 y Ff(2)972 1464 y Fr(This)i(Prop)q(ert)o(y)i(sa)o(ys)f
(that:)992 1572 y Fn(\))21 b Fr(giv)o(en)16 b(t)o(w)o(o)g(v)o(ertices)j
(whic)o(h)d(o)q(ccur)i(within)f(a)f(single)h(depth-)1055
1622 y(\014rst)g(tree)h(\(tak)o(en)f(from)e(the)j(forest\),)g(then)f
(there)h(is)f(a)g(pre-)1055 1671 y(decessor)22 b(of)d(b)q(oth)h(\(with)
f(resp)q(ect)k(to)c Fn(\000)-6 b(!)o Fr(\))20 b(whic)o(h)g(o)q(ccurs)
1055 1721 y(earlier)c(in)g Fq(vs)g Fr(than)g(an)o(y)g(other)h
(predecessor)i(of)d(either.)26 b(\(If)1055 1771 y(this)15
b(w)o(ere)i(not)f(the)h(case,)f(then)h Fo(a)i Fr(and)d
Fo(b)i Fr(w)o(ould)d(end)i(up)f(in)1055 1821 y(di\013eren)o(t)e
(trees\).)992 1904 y Fn(\()21 b Fr(if)16 b(the)i(earliest)g
(predecessor)i(of)c(either)i Fo(a)j Fr(or)c Fo(b)j Fr(is)d(a)g(prede-)
1055 1954 y(cessor)d(of)f(them)f(b)q(oth,)h(then)g(they)h(will)d(end)j
(up)f(in)g(the)g(same)1055 2004 y(tree)i(\(ro)q(oted)f(b)o(y)g(this)g
(predecessor\).)972 2111 y(These)j(three)g(prop)q(erties)g(are)g
(certainly)f(true)h(of)e(DFS)h(spanning)972 2161 y(forests,)22
b(but)e(w)o(e)g(mak)o(e)e(no)i(claim)e(ab)q(out)i(their)g
(completeness.)972 2211 y(There)15 b(are)f(other)g(useful)g(prop)q
(erties)i(not)e(deriv)n(able)f(from)f(these.)972 2373
y Fp(4)66 b(Depth-\014rst)24 b(searc)n(h)e(algorithms)972
2497 y Fh(Algorithm)16 b(1.)25 b(Depth-\014rst)18 b(searc)n(h)h(n)n(um)
n(b)r(ering)972 2599 y Fr(Ha)o(ving)14 b(sp)q(eci\014ed)i(DFS)f(\(at)g
(least)h(partly\))e(w)o(e)i(turn)f(to)g(consider)972
2649 y(ho)o(w)d(it)h(ma)o(y)e(b)q(e)j(used.)19 b(The)14
b(\014rst)g(algorithm)c(is)j(straigh)o(tforw)o(ard.)972
2698 y(W)m(e)g(wish)g(to)h(assign)g(to)f(eac)o(h)h(v)o(ertex)h(a)e(n)o
(um)o(b)q(er)g(whic)o(h)h(indicates)p 972 2733 V 1018
2760 a Fl(3)1035 2772 y Fk(W)m(e)g(further)e(o)o(v)o(erload)f(the)i
Fe(2)g Fk(notation,)e(to)j(mean)e(that)g(b)q(oth)g Fd(a)17
b Fk(and)c Fd(b)972 2811 y Fk(o)q(ccur)d(within)g(the)h(tree)g
Fd(t)s Fk(.)940 2936 y Fr(4)p eop
%%Page: 5 5
5 4 bop -142 18 a Fr(where)18 b(that)e(v)o(ertex)h(came)f(in)g(the)h
(searc)o(h.)27 b(A)16 b(n)o(um)o(b)q(er)g(of)f(other)-142
68 y(algorithms)g(mak)o(e)h(use)i(of)f(this)g Fo(depth-\014rst)h(se)n
(ar)n(ch)g(numb)n(er)p Fr(,)g(in-)-142 118 y(cluding)10
b(the)h(biconnected)h(comp)q(onen)o(ts)e(algorithm)e(that)i(app)q(ears)
-142 167 y(later,)k(for)f(example.)-142 242 y(W)m(e)c(can)h(express)h
(depth-\014rst)g(ordering)f(of)f(a)g(graph)g Fq(g)h Fr(most)e(simply)
-142 292 y(b)o(y)13 b(\015attening)h(the)g(depth-\014rst)g(forest)g(in)
f Fo(pr)n(e)n(or)n(der)p Fr(.)k(Preorder)e(on)-142 342
y(trees)21 b(and)e(forests)h(places)g(ancestors)g(b)q(efore)g
(descendan)o(ts)h(and)-142 392 y(left)14 b(subtrees)i(b)q(efore)f(righ)
o(t)e(subtrees)464 376 y Fm(4)485 392 y Fr(:)-142 466
y Fq(preorder)20 b(::)i(Tree)f(a)g(->)h([a])-142 516
y(preorder)e(\(Node)h(a)h(ts\))f(=)h([a])f(++)g(preorderF)f(ts)-142
616 y(preorderF)g(::)i(Forest)e(a)i(->)f([a])-142 666
y(preorderF)f(ts)i(=)f(concat)g(\(map)g(preorder)f(ts\))-142
740 y Fr(No)o(w)14 b(obtaining)e(a)i(list)f(of)h(v)o(ertices)h(in)e
(depth-\014rst)j(order)e(is)g(easy:)-142 815 y Fq(preOrd)21
b(::)g(Graph)g(->)g([Vertex])-142 865 y(preOrd)g(g)g(=)h(preorderF)e
(\(dff)h(g\))-142 939 y Fr(Ho)o(w)o(ev)o(er,)13 b(it)f(is)h(often)f
(con)o(v)o(enien)o(t)h(to)f(translate)h(suc)o(h)g(an)g(ordered)-142
989 y(list)g(in)o(to)f(actual)g(n)o(um)o(b)q(ers.)18
b(F)m(or)12 b(this)h(w)o(e)g(could)g(use)h(the)f(function)-142
1039 y Fq(tabulate)o Fr(:)-142 1114 y Fq(tabulate)20
b(::)i(Bounds)e(->)i([Vertex])e(->)h(Table)g(Int)-142
1164 y(tabulate)f(bnds)h(vs)h(=)f(array)g(bnds)g(\(zip)g(vs)g([1..]\))
-142 1238 y Fr(whic)o(h)c(zips)g(the)h(v)o(ertices)g(together)g(with)f
(the)g(p)q(ositiv)o(e)g(in)o(tegers)-142 1288 y Fo(1)6
b Fi(;)21 b Fo(2)6 b Fi(;)22 b Fo(3)6 b Fi(;)h(:)g(:)g(:)m
Fr(,)18 b(and)f(\(in)g(linear)g(time\))f(builds)h(an)h(arra)o(y)f(of)g
(these)-142 1338 y(n)o(um)o(b)q(ers,)c(indexed)i(b)o(y)e(the)i(v)o
(ertices.)-142 1413 y(W)m(e)f(can)g(pac)o(k)n(age)f(these)j(up)e(in)o
(to)f(a)g(function)h(as)g(follo)o(ws:)-142 1487 y Fq(preArr)21
b(::)g(Bounds)g(->)g(Forest)g(Vertex)f(->)i(Table)e(Int)-142
1537 y(preArr)h(bnds)g(ts)g(=)h(tabulate)e(bnds)h(\(preorderF)f(ts\))
-142 1612 y Fr(\(it)d(turns)i(out)e(to)g(b)q(e)h(con)o(v)o(enien)o(t)g
(for)f(later)h(algorithms)d(if)h(suc)o(h)-142 1662 y(functions)e(tak)o
(e)f(the)h(depth-\014rst)h(forest)f(as)g(an)f(argumen)o(t,)f(rather)
-142 1712 y(than)i(construct)i(the)e(forest)h(themselv)o(es.\))-142
1867 y Fh(Algorithm)i(2.)24 b(T)-5 b(op)r(ological)18
b(sorting)-142 1972 y Fr(The)f(dual)e(to)h(preorder)i(is)e(p)q
(ostorder,)h(and)f(unsurprisingly)g(this)-142 2022 y(turns)k(out)e(to)h
(b)q(e)g(useful)f(in)g(its)h(o)o(wn)f(righ)o(t.)32 b(P)o(ostorder)19
b(places)-142 2071 y(descendan)o(ts)f(b)q(efore)e(ancestors)h(and)e
(left)g(subtrees)i(b)q(efore)f(righ)o(t)-142 2121 y(subtrees:)-142
2196 y Fq(postorder)k(::)i(Tree)f(a)g(->)h([a])-142 2246
y(postorder)e(\(Node)h(a)h(ts\))f(=)g(postorderF)f(ts)h(++)h([a])-142
2395 y(postorderF)e(::)h(Forest)g(a)h(->)f([a])-142 2445
y(postorderF)f(ts)h(=)h(concat)f(\(map)f(postorder)g(ts\))-142
2520 y Fr(So,)13 b(lik)o(e)h(with)f(preorder,)i(w)o(e)f(de\014ne,)-142
2594 y Fq(postOrd)21 b(::)g(Graph)g(->)g([Vertex])-142
2644 y(postOrd)g(g)g(=)h(postorderF)e(\(dff)g(g\))p -142
2694 429 2 v -96 2720 a Fl(4)-78 2732 y Fk(The)10 b(use)g(of)g(rep)q
(eated)e(app)q(ends)g(\()p Fj(++)o Fk(\))j(caused)e(b)o(y)h
Fj(concat)e Fk(in)o(tro)q(duces)g(an)-142 2772 y(extra)g(logarithmi)o
(c)e(factor)h(here,)h(but)g(this)g(is)h(easily)f(remo)o(v)o(ed)e(using)
i(standard)-142 2811 y(transformatio)o(ns.)972 18 y Fr(The)19
b(lac)o(k)g(of)f(left-righ)o(t)g(cross)j(edges)f(in)e(DFS)h(forests)h
(leads)f(to)972 68 y(a)14 b(pleasan)o(t)i(prop)q(ert)o(y)g(when)f(a)g
(DFS)g(forest)h(is)f(\015attened)h(in)f(p)q(os-)972 118
y(torder.)j(T)m(o)c(express)h(this)f(w)o(e)g(need)h(a)f(de\014nition.)
972 205 y Fg(De\014niti)o(on)972 255 y Fr(A)i(linear)g(ordering)g
Fn(\024)h Fr(on)f(v)o(ertices)i(is)e(a)g Fo(p)n(ost-or)n(dering)g
Fr(with)g(re-)972 304 y(sp)q(ect)f(to)f(a)f(graph)h Fq(g)g
Fr(exactly)g(when,)1073 379 y Fo(v)i Fn(\024)11 b Fo(w)29
b Fn(^)23 b Fo(v)16 b Fn(\000)-6 b(!)11 b Fo(w)30 b Fn(\))c(9)p
Fo(u)19 b Fi(:)14 b Fo(v)i Fn( )-7 b(!)11 b Fo(u)27 b
Fn(^)d Fo(w)16 b Fn(\024)11 b Fo(u)2012 454 y Ff(2)972
541 y Fr(\(where)h Fo(v)k Fn( )-7 b(!)10 b Fo(u)15 b
Fr(means)10 b Fo(v)16 b Fn(\000)-7 b(!)11 b Fo(u)j Fr(and)d
Fo(u)k Fn(\000)-7 b(!)11 b Fo(v)5 b Fr(\).)17 b(In)11
b(w)o(ords,)g(this)972 591 y(de\014nition)i(states)i(that,)e(if)g(from)
f(some)h(v)o(ertex)i Fo(v)j Fr(there)d(is)f(a)f(path)972
641 y(to)g(a)g(v)o(ertex)i(later)e(in)g(the)i(ordering,)e(then)h(there)
h(is)e(also)g(a)g(v)o(ertex)972 691 y Fo(u)18 b Fr(whic)o(h)d(o)q
(ccurs)h(no)f(earlier)g(than)g Fo(w)k Fr(and)c(whic)o(h,)g(lik)o(e)f
Fo(w)19 b Fr(is)c(also)972 740 y(reac)o(hable)g(b)o(y)g(a)g(path)g
(from)e Fo(v)5 b Fr(.)22 b(In)15 b(addition,)f(ho)o(w)o(ev)o(er,)h
(there)h(is)972 790 y(also)d(a)g(path)h(from)e Fo(u)18
b Fr(to)13 b Fo(v)5 b Fr(.)972 865 y(This)14 b(prop)q(ert)o(y)i(is)e
(so-named)g(b)q(ecause)i(p)q(ost)g(order)f(\015attening)g(of)972
915 y(depth)f(\014rst)h(forests)g(ha)o(v)o(e)e(this)h(prop)q(ert)o(y)m
(.)972 1002 y Fg(Theorem)g(4)972 1052 y Fr(If)h Fq(vs=postOrd)20
b(g)p Fr(,)c(then)h(the)g(order)g(in)f(whic)o(h)g(the)h(v)o(ertices)h
(ap-)972 1102 y(p)q(ear)c(in)f Fq(vs)h Fr(is)g(a)f(p)q(ost-ordering)i
(with)e(resp)q(ect)j(to)e Fq(g)p Fr(.)972 1189 y Fg(Pro)q(of)972
1239 y Fr(If)i Fo(v)21 b Fr(comes)c(b)q(efore)h Fo(w)i
Fr(in)d(a)f(p)q(ost)i(order)f(\015attening)g(of)g(a)f(forest,)972
1289 y(then)g(either)g Fo(w)j Fr(is)c(an)g(ancestor)i(of)e
Fo(v)t Fr(,)g(or)h Fo(w)j Fr(is)c(to)g(the)h(righ)o(t)f(of)g
Fo(v)972 1338 y Fr(in)d(the)i(forest.)19 b(In)13 b(the)h(\014rst)g
(case,)g(tak)o(e)f Fo(w)k Fr(as)d Fo(u)s Fr(.)k(F)m(or)13
b(the)h(second,)972 1388 y(note)g(that)f(as)h Fo(v)i
Fn(\000)-6 b(!)11 b Fo(w)t Fr(,)i(b)o(y)g(Prop)q(ert)o(y)i(1,)e
Fo(v)18 b Fr(and)c Fo(w)k Fr(cannot)13 b(b)q(e)i(in)972
1438 y(di\013eren)o(t)e(trees)i(of)d(the)h(forest.)18
b(Then)c(b)o(y)e(Prop)q(ert)o(y)i(2,)e(the)h(lo)o(w)o(est)972
1488 y(common)e(ancestor)k(of)e Fo(v)18 b Fr(and)c Fo(w)k
Fr(will)12 b(do.)365 b Ff(2)972 1575 y Fr(W)m(e)14 b(can)h(apply)g(all)
f(this)h(to)g(top)q(ological)e(sorting.)21 b(A)15 b(top)q(ological)972
1625 y(sort)h(is)f(an)g(arrangemen)o(t)g(of)g(the)h(v)o(ertices)h(of)e
(a)g(directed)i(acyclic)972 1675 y(graph)e(in)o(to)f(a)h(linear)f
(sequence)k Fo(v)1521 1681 y Fc(1)1544 1675 y Fi(;)7
b(:)g(:)g(:)e(;)i Fo(v)1656 1681 y Fc(n)1694 1675 y Fr(suc)o(h)16
b(that)f(there)i(are)972 1725 y(no)h(edges)i(from)d Fo(v)1272
1731 y Fc(j)1308 1725 y Fr(to)h Fo(v)1382 1731 y Fc(i)1417
1725 y Fr(where)i Fo(i)15 b Fi(<)d Fo(j)6 b Fr(.)32 b(This)19
b(problem)f(arises)972 1774 y(quite)c(frequen)o(tly)m(,)f(where)i(a)f
(set)g(of)g(tasks)g(need)h(to)f(b)q(e)g(sc)o(heduled,)972
1824 y(suc)o(h)h(that)f(ev)o(ery)i(task)e(can)h(only)f(b)q(e)h(p)q
(erformed)f(after)h(the)g(tasks)972 1874 y(it)e(dep)q(ends)j(on)d(are)i
(p)q(erformed.)972 1949 y(W)m(e)e(de\014ne,)972 2023
y Fq(topSort)20 b(::)h(Graph)g(->)g([Vertex])972 2073
y(topSort)f(g)h(=)h(reverse)e(\(postOrd)h(g\))972 2148
y Fr(Wh)o(y)f(is)h(this)g(correct?)41 b(If)21 b Fo(w)k
Fr(comes)20 b(b)q(efore)i Fo(v)j Fr(in)c(the)g(result)972
2198 y(of)i Fq(topSort)e(g)p Fr(,)26 b(then)f Fo(v)k
Fr(comes)c(b)q(efore)g Fo(w)j Fr(in)c(the)i(result)f(of)972
2248 y Fq(postOrd)20 b(g)p Fr(.)29 b(Th)o(us,)18 b(b)o(y)g(Theorem)f
(4,)h(there)h(exists)f(a)f(v)o(ertex)i Fo(u)972 2297
y Fr(no)d(earlier)h(than)g Fo(w)k Fr(whic)o(h)c(is)g(in)g(a)f(cycle)i
(with)f Fo(v)t Fr(.)28 b(But,)18 b(b)o(y)e(as-)972 2347
y(sumption,)9 b(the)j(graph)g(is)f(acyclic,)g(so)h(no)f(suc)o(h)h(edge)
g Fo(v)k Fn(\000)-7 b(!)11 b Fr(exists.)972 2507 y Fh(Algorithm)16
b(3.)25 b(Connected)18 b(comp)r(onen)n(ts)972 2612 y
Fr(Tw)o(o)10 b(v)o(ertices)i(in)f(an)g(undirected)h(graph)f(are)g
Fo(c)n(onne)n(cte)n(d)h Fr(if)e(there)i(is)972 2662 y(a)i(path)g(from)f
(the)i(one)g(to)f(the)h(other.)20 b(In)15 b(a)f(directed)i(graph,)e(t)o
(w)o(o)972 2711 y(v)o(ertices)20 b(are)g(connected)h(if)e(they)h(w)o
(ould)e(b)q(e)i(connected)i(in)d(the)972 2761 y(graph)e(made)g(b)o(y)g
(viewing)g(eac)o(h)h(edge)h(as)f(undirected.)31 b(Finally)m(,)972
2811 y(with)12 b(an)g(undirected)i(graph,)e(eac)o(h)h(tree)h(in)e(the)h
(depth-\014rst)h(span-)940 2936 y(5)p eop
%%Page: 6 6
6 5 bop -142 18 a Fr(ning)13 b(forest)i(will)d(con)o(tain)i(exactly)f
(those)i(v)o(ertices)g(whic)o(h)f(consti-)-142 68 y(tute)h(a)e(single)h
(comp)q(onen)o(t.)-142 142 y(W)m(e)e(can)g(translate)g(this)g(directly)
g(in)o(to)g(a)f(program.)16 b(The)c(function)-142 192
y Fq(components)c Fr(tak)o(es)j(a)e(graph)h(and)g(pro)q(duces)i(a)d
(forest,)i(where)g(eac)o(h)-142 242 y(tree)k(represen)o(ts)i(a)d
(connected)h(comp)q(onen)o(t.)-142 317 y Fq(components)20
b(::)h(Graph)g(->)h(Forest)e(Vertex)-142 367 y(components)g(g)i(=)f
(dff)g(\(undirected)f(g\))-142 441 y Fr(where)15 b(a)f(graph)g(is)f
(made)g(undirected)i(b)o(y:)-142 516 y Fq(undirected)20
b(::)h(Graph)g(->)h(Graph)-142 566 y(undirected)e(g)i(=)f(buildG)g
(\(bounds)f(g\))338 616 y(\(edges)g(g)i(++)f(reverseE)f(g\))-142
690 y Fr(The)e(undirected)h(graph)e(w)o(e)g(actually)f(searc)o(h)j(ma)o
(y)c(ha)o(v)o(e)i(dupli-)-142 740 y(cate)i(edges,)i(but)d(this)h(has)f
(no)h(e\013ect)h(on)e(the)h(structure)i(of)c(the)-142
790 y(comp)q(onen)o(ts.)-142 1092 y Fh(Algorithm)28 b(4.)56
b(Strongly)29 b(connected)f(comp)r(o-)-142 1150 y(nen)n(ts)-142
1284 y Fr(Tw)o(o)11 b(v)o(ertices)i(in)e(a)g(directed)i(graph)f(are)g
(said)f(to)g(b)q(e)h Fo(str)n(ongly)h(c)n(on-)-142 1333
y(ne)n(cte)n(d)j Fr(if)e(eac)o(h)h(is)g(reac)o(hable)h(from)d(the)j
(other.)22 b(A)15 b(strongly)g(con-)-142 1383 y(nected)e(comp)q(onen)o
(t)d(is)g(a)h(maxim)o(al)c(subgraph,)k(where)h(all)d(the)j(v)o(er-)-142
1433 y(tices)j(are)f(strongly)f(connected)j(with)d(eac)o(h)h(other.)19
b(This)13 b(problem)-142 1483 y(is)j(w)o(ell)f(kno)o(wn)h(to)f
(compiler)g(writers)i(as)f(the)g(dep)q(endency)i(anal-)-142
1533 y(ysis)f(problem|separating)f(pro)q(cedures/functions)j(in)o(to)d
(m)o(utu-)-142 1582 y(ally)21 b(recursiv)o(e)i(groups.)41
b(W)m(e)22 b(implem)o(en)o(t)e(the)i(double)f(depth-)-142
1632 y(\014rst)11 b(searc)o(h)h(algorithm)c(of)h(Kosara)r(ju)i
(\(unpublished\),)g(and)f(Sharir)-142 1682 y(\(1981\).)-142
1757 y Fq(scc)21 b(::)h(Graph)f(->)g(Forest)g(Vertex)-142
1807 y(scc)g(g)h(=)g(dfs)f(\(transposeG)e(g\))j(\(reverse)e(\(postOrd)g
(g\)\))-142 1881 y Fr(The)g(v)o(ertices)g(of)e(a)h(graph)f(are)h
(ordered)i(using)d Fq(postOrd)o Fr(.)33 b(The)-142 1931
y(rev)o(erse)20 b(of)e(this)g(ordering)g(is)g(used)h(as)f(the)g
(initial)e(v)o(ertex)j(order)-142 1981 y(for)g(a)h(depth-\014rst)h(tra)
o(v)o(ersal)e(on)h(the)g(transp)q(ose)h(of)d(the)j(graph.)-142
2031 y(The)c(result)g(is)f(a)g(forest,)i(where)f(eac)o(h)g(tree)g
(constitutes)h(a)e(single)-142 2081 y(strongly)e(connected)i(comp)q
(onen)o(t.)-142 2155 y(The)d(algorithm)d(is)j(simply)d(stated,)j(but)g
(its)g(correctness)i(is)e(not)f(at)-142 2205 y(all)h(ob)o(vious.)k(Ho)o
(w)o(ev)o(er,)d(it)g(ma)o(y)d(b)q(e)k(pro)o(v)o(ed)f(as)g(follo)o(ws.)
-142 2280 y Fg(Theorem)h(5)-142 2330 y Fr(Let)g Fo(a)i
Fr(and)d Fo(b)i Fr(b)q(e)f(an)o(y)e(t)o(w)o(o)g(v)o(ertices)j(of)d
Fq(g)p Fr(.)18 b(Then)23 2496 y(\()p Fn(9)p Fo(t)d Fn(2)c
Fq(scc)22 b(g)14 b Fi(:)h Fo(a)g Fn(2)c Fo(t)i Fn(^)c
Fo(b)14 b Fn(2)d Fo(t)t Fr(\))26 b Fn(,)g Fo(a)15 b Fn( )-7
b(!)11 b Fo(b)-142 2662 y Fg(Pro)q(of)-142 2711 y Fr(The)20
b(pro)q(of)g(pro)q(ceeds)h(b)o(y)f(calculation.)34 b(W)m(e)20
b(write)g Fq(g)758 2696 y Fm(T)803 2711 y Fr(for)f(the)-142
2761 y(transp)q(ose)h(of)e Fq(g)p Fr(.)32 b(Edges)20
b Fn(\000)-7 b(!)18 b Fr(in)h Fq(g)f Fr(will)f(b)q(e)j(edges)f
Fn( )-7 b(\000)19 b Fr(in)f Fq(g)893 2746 y Fm(T)919
2761 y Fr(.)-142 2811 y(F)m(urther,)e(let)g Fn(\024)f
Fr(b)q(e)h(the)g(p)q(ost-ordering)g(de\014ned)g(b)o(y)f
Fq(postOrd)21 b(g)p Fr(.)972 18 y(Then)14 b(its)g(rev)o(ersal)g
(induces)h(the)g(ordering)f Fn(\025)p Fr(.)k(No)o(w,)1137
92 y Fn(9)p Fo(t)d Fn(2)c Fq(scc)21 b(g)15 b Fi(:)f Fo(a)h
Fn(2)d Fo(t)g Fn(^)d Fo(b)15 b Fn(2)c Fo(t)1054 142 y
Fn(,)68 b(f)14 b Fr(De\014nition)f(of)g Fq(scc)h Fn(g)1137
192 y(9)p Fo(t)h Fn(2)c Fq(dfs)j(g)1330 177 y Fm(T)1371
192 y Fq(\(reverse)20 b(\(postOrd)g(g\)\))14 b Fi(:)h
Fo(a)s Fi(;)7 b Fo(b)14 b Fn(2)d Fo(t)1054 241 y Fn(,)68
b(f)14 b Fr(By)g(Prop)q(ert)o(y)h(3)f Fn(g)1137 291 y(9)p
Fo(c)j Fi(:)d Fo(c)g Fn( )-7 b(\000)12 b Fo(a)27 b Fn(^)d
Fo(c)14 b Fn( )-7 b(\000)11 b Fo(b)18 b Fn(^)1166 341
y Fr(\()p Fn(8)p Fo(d)i Fi(:)14 b Fo(d)i Fn( )-7 b(\000)12
b Fo(a)27 b Fn(_)d Fo(d)16 b Fn( )-7 b(\000)11 b Fo(b)30
b Fn(\))25 b Fo(c)14 b Fn(\025)e Fo(d)t Fr(\))1054 391
y Fn(,)41 b(9)p Fo(c)17 b Fi(:)d Fo(a)h Fn(\000)-6 b(!)11
b Fo(c)26 b Fn(^)e Fo(b)14 b Fn(\000)-6 b(!)11 b Fo(c)17
b Fn(^)1166 441 y Fr(\()p Fn(8)p Fo(d)j Fi(:)14 b Fo(a)h
Fn(\000)-6 b(!)11 b Fo(d)28 b Fn(_)c Fo(b)14 b Fn(\000)-6
b(!)11 b Fo(d)31 b Fn(\))25 b Fo(d)16 b Fn(\024)c Fo(c)r
Fr(\))972 516 y(F)m(rom)g(here)j(on)e(w)o(e)h(construct)i(a)e(lo)q(op)f
(of)g(implications.)1158 590 y Fn(9)p Fo(c)k Fi(:)d Fo(a)h
Fn(\000)-6 b(!)11 b Fo(c)26 b Fn(^)e Fo(b)14 b Fn(\000)-7
b(!)12 b Fo(c)17 b Fn(^)1187 639 y Fr(\()p Fn(8)p Fo(d)j
Fi(:)14 b Fo(a)h Fn(\000)-7 b(!)12 b Fo(d)28 b Fn(_)c
Fo(b)14 b Fn(\000)-7 b(!)12 b Fo(d)30 b Fn(\))c Fo(d)16
b Fn(\024)c Fo(c)r Fr(\))1075 689 y Fn(\))68 b(f)14 b
Fr(Consider)g Fi(d)d Fr(=)h Fi(a)i Fr(and)g Fi(d)d Fr(=)h
Fi(b)27 b Fn(g)1158 739 y(9)p Fo(c)17 b Fi(:)d Fo(a)h
Fn(\000)-6 b(!)11 b Fo(c)26 b Fn(^)e Fo(a)15 b Fn(\024)d
Fo(c)26 b Fn(^)e Fo(b)14 b Fn(\000)-6 b(!)11 b Fo(c)26
b Fn(^)e Fo(b)14 b Fn(\024)e Fo(c)17 b Fn(^)1187 789
y Fr(\()p Fn(8)p Fo(d)j Fi(:)14 b Fo(a)h Fn(\000)-7 b(!)12
b Fo(d)28 b Fn(_)c Fo(b)14 b Fn(\000)-7 b(!)12 b Fo(d)30
b Fn(\))c Fo(d)16 b Fn(\024)c Fo(c)r Fr(\))1075 839 y
Fn(\))68 b(f)14 b(\024)g Fr(is)g(a)f(p)q(ost-ordering)i
Fn(g)1158 888 y(9)p Fo(c)i Fi(:)d Fr(\()p Fn(9)p Fo(e)19
b Fi(:)14 b Fo(a)h Fn( )-7 b(!)10 b Fo(e)28 b Fn(^)c
Fo(c)14 b Fn(\024)d Fo(e)s Fr(\))16 b Fn(^)1187 938 y
Fr(\()p Fn(9)p Fo(f)24 b Fi(:)14 b Fo(b)g Fn( )-7 b(!)11
b Fo(f)33 b Fn(^)23 b Fo(c)14 b Fn(\024)e Fo(f)d Fr(\))15
b Fn(^)1187 988 y Fr(\()p Fn(8)p Fo(d)20 b Fi(:)14 b
Fo(a)h Fn(\000)-7 b(!)12 b Fo(d)28 b Fn(_)c Fo(b)14 b
Fn(\000)-7 b(!)12 b Fo(d)30 b Fn(\))c Fo(d)16 b Fn(\024)c
Fo(c)r Fr(\))1075 1038 y Fn(\))68 b(f)14 b Fi(e)e Fr(=)f
Fi(c)j Fr(and)g Fi(f)i Fr(=)c Fi(c)i Fr(using)g(\()p
Fn(8)p Fi(d)7 b(:)g(:)g(:)n Fr(\))14 b Fn(g)1158 1088
y(9)p Fo(c)j Fi(:)d Fo(a)h Fn( )-7 b(!)11 b Fo(c)26 b
Fn(^)e Fo(b)14 b Fn( )-7 b(!)11 b Fo(c)1075 1137 y Fn(\))68
b(f)14 b Fr(T)m(ransitivit)o(y)e Fn(g)1158 1187 y Fo(a)i
Fn( )-7 b(!)11 b Fo(b)972 1262 y Fr(whic)o(h)i(giv)o(es)h(us)g(one)g
(direction.)19 b(But)14 b(to)g(complete)f(the)i(lo)q(op:)1117
1336 y Fo(a)g Fn( )-7 b(!)10 b Fo(b)1034 1386 y Fn(\))69
b(f)13 b Fr(There)i(is)f(a)f(latest)i(v)o(ertex)g(reac)o(hable)f(from)e
Fi(a)i Fr(or)g Fi(b)f Fn(g)1117 1436 y Fo(a)i Fn( )-7
b(!)10 b Fo(b)27 b Fn(^)d(9)p Fo(c)17 b Fi(:)e Fr(\()p
Fo(a)g Fn(\000)-7 b(!)11 b Fo(c)27 b Fn(_)c Fo(b)15 b
Fn(\000)-7 b(!)11 b Fo(c)r Fr(\))16 b Fn(^)1117 1486
y Fr(\()p Fn(8)p Fo(d)j Fi(:)c Fo(a)g Fn(\000)-7 b(!)11
b Fo(d)29 b Fn(_)23 b Fo(b)15 b Fn(\000)-7 b(!)11 b Fo(d)31
b Fn(\))26 b Fo(d)16 b Fn(\024)c Fo(c)r Fr(\))1034 1535
y Fn(\))69 b(f)13 b Fr(T)m(ransitivit)o(y)f(of)i Fn(\000)-7
b(!)13 b(g)1117 1585 y(9)p Fo(c)k Fi(:)e Fo(a)g Fn(\000)-7
b(!)11 b Fo(c)26 b Fn(^)e Fo(b)14 b Fn(\000)-6 b(!)11
b Fo(c)17 b Fn(^)1117 1635 y Fr(\()p Fn(8)p Fo(d)i Fi(:)c
Fo(a)g Fn(\000)-7 b(!)11 b Fo(d)29 b Fn(_)23 b Fo(b)15
b Fn(\000)-7 b(!)11 b Fo(d)31 b Fn(\))26 b Fo(d)16 b
Fn(\024)c Fo(c)r Fr(\))972 1710 y(as)i(required,)g(and)g(so)g(the)g
(theorem)g(is)f(pro)o(v)o(ed.)276 b Ff(2)972 1790 y Fr(T)m(o)13
b(the)j(b)q(est)g(of)e(our)h(kno)o(wledge,)f(this)h(is)f(the)h(\014rst)
h(calculational)972 1840 y(pro)q(of)e(of)h(this)g(algorithm.)20
b(T)m(raditional)13 b(pro)q(ofs)i(\(see)i(Corman)c Fo(et)972
1890 y(al.)e Fr(\(1990\),)h(for)g(example\))f(t)o(ypically)g(tak)o(e)i
(man)o(y)d(pages)j(of)e(w)o(ordy)972 1939 y(argumen)o(t.)30
b(In)19 b(con)o(trast,)h(b)q(ecause)g(w)o(e)f(are)g(reusing)g(an)f
(earlier)972 1989 y(algorithm,)c(w)o(e)j(are)g(able)f(to)h(reuse)h(its)
f(prop)q(erties)h(also,)f(and)f(so)972 2039 y(obtain)j(a)i(compact)e
(pro)q(of.)38 b(Similarly)l(,)19 b(w)o(e)i(b)q(eliev)o(e)g(that)f(it)g
(is)972 2089 y(b)q(ecause)h(w)o(e)f(are)g(using)g(the)h(DFS)e(forest)i
(as)f(the)g(basis)g(of)f(our)972 2139 y(program)d(that)i(our)g(pro)q
(ofs)f(are)i(simpli\014ed)d(as)i(they)g(are)g(pro)q(ofs)972
2188 y(ab)q(out)13 b(v)n(alues)h(rather)h(than)f(ab)q(out)f(pro)q
(cesses.)972 2263 y(A)i(minor)f(v)n(ariation)g(on)i(this)g(algorithm)d
(is)i(to)h(rev)o(erse)i(the)e(roles)972 2313 y(of)d(the)h(original)e
(and)i(transp)q(osed)h(graphs:)972 2388 y Fq(scc')21
b(::)g(Graph)g(->)g(Forest)g(Vertex)972 2437 y(scc')g(g)g(=)h(dfs)f(g)g
(\(reverse)g(\(postOrd)f(\(transposeG)f(g\)\)\))972 2512
y Fr(The)i(adv)n(an)o(tage)f(no)o(w)h(is)g(that)g(not)g(only)g(do)q(es)
g(the)h(result)g(ex-)972 2562 y(press)d(the)g(strongly)e(connected)j
(comp)q(onen)o(ts,)e(but)h(it)e(is)h(also)g(a)972 2612
y(v)n(alid)d(depth-\014rst)k(forest)f(for)f(the)h(original)d(graph)i
(\(rather)h(than)972 2662 y(for)g(the)h(transp)q(osed)h(graph\).)33
b(This)19 b(alternativ)o(e)f(w)o(orks)h(as)g(the)972
2711 y(strongly)14 b(connected)i(comp)q(onen)o(ts)e(in)h(a)f(graph)g
(are)h(the)g(same)f(as)972 2761 y(the)h(strongly)f(connected)j(comp)q
(onen)o(ts)d(in)g(the)i(transp)q(ose)g(of)e(the)972 2811
y(graph.)940 2936 y(6)p eop
%%Page: 7 7
7 6 bop -142 18 a Fp(5)67 b(Implemen)n(ting)24 b(depth-\014rst)h(searc)
n(h)-142 134 y Fr(In)20 b(order)g(to)g(translate)g(a)f(graph)g(in)o(to)
g(a)g(depth-\014rst)i(spanning)-142 184 y(tree)15 b(w)o(e)f(mak)o(e)e
(use)i(of)f(a)h(tec)o(hnique)g(common)d(in)i(lazy)g(functional)-142
233 y(programming:)20 b(generate)e(then)g(prune.)27 b(Giv)o(en)16
b(a)g(graph)h(and)f(a)-142 283 y(list)f(of)g(v)o(ertices)h(\(a)f(ro)q
(ot)h(set\),)g(w)o(e)f(\014rst)i(generate)f(a)f(\(p)q(oten)o(tially)
-142 333 y(in\014nite\))20 b(forest)h(consisting)f(of)f(all)g(the)i(v)o
(ertices)g(and)f(edges)h(in)-142 383 y(the)e(graph,)g(and)g(then)g
(prune)g(this)f(forest)h(in)f(order)i(to)e(remo)o(v)o(e)-142
433 y(rep)q(eats.)i(The)14 b(c)o(hoice)g(of)e(pruning)i(pattern)g
(determines)g(whether)-142 482 y(the)f(forest)h(ends)f(up)g(b)q(eing)f
(depth-\014rst)j(\(tra)o(v)o(erse)f(in)e(a)g(left-most,)-142
532 y(top-most)h(fashion\))h(or)h(breadth-\014rst)h(\(top-most,)d
(left-most\),)g(or)-142 582 y(p)q(erhaps)i(some)e(com)o(bination)f(of)h
(the)h(t)o(w)o(o.)-142 723 y Fh(5.1)56 b(Generating)-142
825 y Fr(W)m(e)11 b(de\014ne)h(a)e(function)h Fq(generate)e
Fr(whic)o(h,)i(giv)o(en)f(a)g(graph)h Fq(g)g Fr(and)f(a)-142
875 y(v)o(ertex)k Fq(v)e Fr(builds)g(a)h(tree)h(ro)q(oted)f(at)f
Fq(v)g Fr(con)o(taining)g(all)f(the)j(v)o(ertices)-142
924 y(in)g Fq(g)f Fr(reac)o(hable)i(from)d Fq(v)p Fr(.)-142
999 y Fq(generate)20 b(::)i(Graph)f(->)g(Vertex)f(->)i(Tree)f(Vertex)
-142 1049 y(generate)f(g)i(v)g(=)f(Node)g(v)h(\(map)f(\(generate)f(g\))
h(\(g!v\)\))-142 1124 y Fr(Unless)d Fq(g)f Fr(happ)q(ens)g(to)g(b)q(e)h
(a)e(tree)i(an)o(yw)o(a)o(y)m(,)e(the)i(generated)g(tree)-142
1174 y(will)e(con)o(tain)h(rep)q(eated)i(subtrees.)30
b(F)m(urther,)18 b(if)f Fq(g)f Fr(is)i(cyclic,)f(the)-142
1223 y(generated)e(tree)h(will)c(b)q(e)j(in\014nite)e(\(though)h
(rational\).)-142 1298 y(Of)f(course,)i(as)e(the)h(tree)h(is)e
(generated)h(on)f(demand,)f(only)h(a)g(\014nite)-142
1348 y(p)q(ortion)k(will)f(b)q(e)i(generated.)30 b(The)18
b(parts)g(that)f Fq(prune)f Fr(discards)-142 1398 y(will)d(nev)o(er)h
(b)q(e)h(constructed.)-142 1539 y Fh(5.2)56 b(Pruning)-142
1640 y Fr(The)17 b(goal)e(of)h(pruning)g(the)i(\(in\014nite\))e(forest)
h(is)f(to)h(discard)g(sub-)-142 1690 y(trees)h(whose)e(ro)q(ots)g(ha)o
(v)o(e)g(o)q(ccurred)h(previously)m(.)23 b(Th)o(us)16
b(w)o(e)g(need)-142 1740 y(to)f(main)o(tain)e(a)h(set)i(of)f(v)o
(ertices)h(\(traditionally)e(called)g(\\marks"\))-142
1790 y(of)19 b(those)i(v)o(ertices)g(to)e(b)q(e)i(discarded.)36
b(The)20 b(set-op)q(erations)h(w)o(e)-142 1840 y(require)16
b(are)e(initialisation)e(\(the)j(empt)o(y)e(set\),)j(mem)o(b)q(ership)c
(test,)-142 1890 y(and)f(addition)f(of)g(a)h(singleton.)17
b(While)10 b(w)o(e)h(are)h(prepared)g(to)f(sp)q(end)-142
1939 y(linear)16 b(time)e(in)h(generating)h(the)g(empt)o(y)f(set)i
(\(as)f(it)f(is)h(only)f(done)-142 1989 y(once\),)h(it)e(is)h(essen)o
(tial)g(that)g(the)g(other)h(op)q(erations)f(ma)o(y)e(b)q(e)i(p)q(er-)
-142 2039 y(formed)e(in)g(constan)o(t)i(time.)-142 2114
y(The)23 b(easiest)g(w)o(a)o(y)e(to)h(ac)o(hiev)o(e)g(this)g(is)g(to)g
(mak)o(e)f(use)i(of)e Fo(state)-142 2163 y(tr)n(ansformers)p
Fr(,)12 b(and)h(mimi)o(c)e(the)j(imp)q(erativ)o(e)d(tec)o(hnique)k(of)d
(main-)-142 2213 y(taining)27 b(an)g(arra)o(y)g(of)g(b)q(o)q(oleans,)j
(indexed)e(b)o(y)f(the)h(set)h(ele-)-142 2263 y(men)o(ts.)47
b(This)24 b(is)g(what)g(w)o(e)g(do.)47 b(W)m(e)23 b(pro)o(vide)h(an)g
(explana-)-142 2313 y(tion)e(of)f(state-transformers)i(in)e(the)i(App)q
(endix,)h(but)e(as)g(they)-142 2363 y(ha)o(v)o(e)15 b(already)f(b)q
(een)h(describ)q(ed)i(in)d(a)g(n)o(um)o(b)q(er)g(of)f(pap)q(ers)j
(\(Moggi)-142 2413 y(1989,)10 b(W)m(adler)g(1990,)g(P)o(eyton)h(Jones)h
(and)f(W)m(adler)f(1993,)g(Launc)o(h-)-142 2462 y(bury)20
b(1993,)e(Launc)o(h)o(bury)i(and)g(P)o(eyton)g(Jones)h(1994\),)e(and)h
(al-)-142 2512 y(ready)15 b(b)q(een)h(implemen)o(ted)c(in)i(more)g
(than)h(one)f(Hask)o(ell)h(v)n(arian)o(t,)-142 2562 y(w)o(e)f(a)o(v)o
(oid)f(cluttering)h(the)h(main)c(text.)-142 2637 y(The)k(implem)o(en)o
(tation)c(of)i(v)o(ertex)i(sets)g(is)f(easy:)-142 2711
y Fq(type)21 b(Set)g(s)h(=)g(MutArr)e(s)i(Vertex)e(Bool)-142
2811 y(mkEmpty)h(::)g(Bounds)g(->)g(ST)g(s)h(\(Set)f(s\))972
18 y(mkEmpty)f(bnds)h(=)g(newArr)g(bnds)g(False)972 118
y(contains)f(::)h(Set)g(s)h(->)f(Vertex)g(->)g(ST)h(s)f(Bool)972
167 y(contains)f(m)h(v)h(=)f(readArr)g(m)g(v)972 267
y(include)f(::)h(Set)g(s)h(->)f(Vertex)g(->)g(ST)h(s)f(\(\))972
317 y(include)f(m)h(v)h(=)g(writeArr)e(m)h(v)h(True)972
392 y Fr(Using)13 b(these,)i(w)o(e)f(de\014ne)h Fq(prune)e
Fr(as)h(follo)o(ws.)972 466 y Fq(prune)20 b(::)i(Bounds)e(->)i(Forest)e
(Vertex)h(->)g(Forest)g(Vertex)972 516 y(prune)f(bnds)h(ts)1015
566 y(=)h(runST)e(\(mkEmpty)h(bnds)g(`thenST`)f(\\m)h(->)1211
616 y(chop)g(m)h(ts\))972 690 y Fr(The)h Fq(prune)e Fr(function)i(b)q
(egins)g(b)o(y)f(in)o(tro)q(ducing)h(a)f(fresh)h(state)972
740 y(thread,)12 b(then)h(generates)h(an)e(empt)o(y)f(set)i(within)e
(that)i(thread)f(and)972 790 y(calls)h Fq(chop)o Fr(.)19
b(The)c(\014nal)e(result)i(of)f Fq(prune)f Fr(is)h(the)g(v)n(alue)g
(generated)972 840 y(b)o(y)f Fq(chop)o Fr(,)h(the)g(\014nal)f(state)i
(b)q(eing)f(discarded.)972 915 y Fq(chop)21 b(::)g(Set)g(s)h(->)f
(Forest)g(Vertex)1146 964 y(->)g(ST)h(s)f(\(Forest)g(Vertex\))972
1014 y(chop)g(m)g([])g(=)h(returnST)e([])972 1064 y(chop)h(m)g(\(Node)g
(v)g(ts)h(:)f(us\))1015 1114 y(=)h(contains)e(m)h(v)44
b(`thenST`)20 b(\\visited)g(->)1059 1164 y(if)h(visited)f(then)1102
1213 y(chop)h(m)h(us)1059 1263 y(else)1102 1313 y(include)f(m)g(v)153
b(`thenST`)20 b(\\_)43 b(->)1102 1363 y(chop)21 b(m)h(ts)196
b(`thenST`)20 b(\\as)h(->)1102 1413 y(chop)g(m)h(us)196
b(`thenST`)20 b(\\bs)h(->)1102 1463 y(returnST)f(\(\(Node)h(v)h(as\))f
(:)g(bs\))972 1537 y Fr(When)13 b(c)o(hopping)g(a)h(list)f(of)g(trees,)
h(the)g(ro)q(ot)g(of)f(the)h(\014rst)g(is)g(exam-)972
1587 y(ined.)19 b(If)14 b(it)g(has)h(o)q(ccurred)h(b)q(efore,)f(the)g
(whole)f(tree)i(is)e(discarded.)972 1637 y(If)f(not,)h(the)h(v)o(ertex)
g(is)f(added)h(to)f(the)h(set)g(represen)o(ted)i(b)o(y)d
Fq(m)p Fr(,)f(and)972 1687 y(t)o(w)o(o)g(further)i(calls)e(to)h
Fq(chop)f Fr(are)h(made)f(in)g(sequence.)972 1761 y(The)j(\014rst,)g
(namely)m(,)e Fq(chop)21 b(m)g(ts)p Fr(,)16 b(prunes)h(the)f(forest)g
(of)g(descen-)972 1811 y(dan)o(ts)h(of)f Fq(v)p Fr(,)h(adding)f(all)g
(these)j(to)e(the)g(set)h(of)f(mark)o(ed)e(v)o(ertices.)972
1861 y(Once)k(this)e(is)h(complete,)g(the)g(pruned)h(subforest)g(is)f
(named)e Fq(as)p Fr(,)972 1911 y(and)i(the)g(remainder)g(of)f(the)i
(original)d(forest)j(is)f(c)o(hopp)q(ed.)32 b(The)972
1961 y(result)14 b(of)f(this)g(is,)g(in)g(turn,)h(named)e
Fq(bs)p Fr(,)h(and)g(the)h(resulting)g(forest)972 2010
y(is)f(constructed)j(from)c(the)j(t)o(w)o(o.)972 2085
y(All)g(this)h(is)g(done)h(lazily)m(,)d(on)i(demand.)24
b(The)17 b(state)g(com)o(binators)972 2135 y(force)f(the)g(computation)
e(to)h(follo)o(w)f(a)h(predetermined)i(linear)e(se-)972
2185 y(quence,)k(but)f(exactly)g(where)h(in)e(that)h(sequence)h(the)g
(computa-)972 2235 y(tion)12 b(is,)g(is)h(determined)g(b)o(y)g
(external)g(demand.)k(Th)o(us)c(if)f(only)h(the)972 2284
y(top-most)j(left-most)g(v)o(ertex)j(w)o(ere)g(demanded)e(then)i(that)f
(is)f(all)972 2334 y(that)h(w)o(ould)g(b)q(e)h(pro)q(duced.)33
b(On)18 b(the)h(other)g(hand,)g(if)f(only)g(the)972 2384
y(\014nal)f(tree)i(of)e(the)i(forest)f(is)g(demanded,)g(then)g(b)q
(ecause)i(the)e(set)972 2434 y(of)g(marks)f(is)i(single-threaded,)h
(all)d(the)i(previous)g(trees)h(will)e(b)q(e)972 2484
y(pro)q(duced.)30 b(Ho)o(w)o(ev)o(er,)18 b(this)f(is)h(demanded)f(b)o
(y)g(the)h(v)o(ery)g(nature)972 2534 y(of)c(DFS)h(an)o(yw)o(a)o(y)m(,)e
(so)i(it)f(is)h(not)g(as)g(restrictiv)o(e)h(as)f(it)g(ma)o(y)e(at)h
(\014rst)972 2583 y(seem.)972 2658 y(A)o(t)d(this)h(p)q(oin)o(t)g(one)g
(ma)o(y)d(w)o(onder)k(whether)g(an)o(y)e(b)q(ene\014t)i(has)f(b)q(een)
972 2708 y(gained)j(b)o(y)h(using)g(a)g(functional)f(language.)23
b(After)17 b(all,)e(the)h(co)q(de)972 2758 y(lo)q(oks)i(fairly)f(imp)q
(erativ)o(e.)32 b(T)m(o)18 b(some)g(exten)o(t)h(suc)o(h)h(a)e(commen)o
(t)972 2807 y(w)o(ould)9 b(b)q(e)i(justi\014ed,)f(but)h(it)e(is)h(imp)q
(ortan)o(t)f(to)h(note)g(that)g(this)h(is)f(the)940 2936
y(7)p eop
%%Page: 8 8
8 7 bop -142 18 a Fo(only)18 b Fr(place)g(in)f(the)h(dev)o(elopmen)o(t)
e(that)i(destructiv)o(e)h(op)q(erations)-142 68 y(ha)o(v)o(e)e(to)f(b)q
(e)i(used)f(to)g(gain)f(e\016ciency)m(.)26 b(W)m(e)17
b(ha)o(v)o(e)f(the)i(\015exibilit)o(y)-142 118 y(to)e(gain)f(the)i(b)q
(est)g(of)e(b)q(oth)h(w)o(orlds:)22 b(where)17 b(destructiv)o(e)g(up)q
(date)-142 167 y(is)e(vital)f(w)o(e)i(use)g(it,)e(where)j(it)d(is)h
(not)g(vital)f(w)o(e)i(use)g(the)f(p)q(o)o(w)o(erful)-142
217 y(mo)q(dularit)o(y)d(options)h(pro)o(vided)h(b)o(y)g(lazy)f
(functional)g(languages.)-142 366 y Fh(5.3)56 b(DFS)-142
469 y Fr(The)21 b(comp)q(onen)o(ts)g(of)f(generate)i(and)e(prune)i(are)
f(com)o(bined)e(to)-142 518 y(pro)o(vide)14 b(the)g(de\014nition)g(of)f
(DFS.)-142 593 y Fq(dfs)21 b(g)h(vs)f(=)h(prune)f(\(bounds)f(g\))h
(\(map)g(\(generate)f(g\))i(vs\))-142 668 y Fr(The)13
b(argumen)o(t)f Fq(vs)g Fr(is)h(a)f(list)g(of)g(v)o(ertices,)i(so)f
(the)g Fq(generate)e Fr(func-)-142 718 y(tion)19 b(is)h(mapp)q(ed)e
(across)j(this)f(\(ha)o(ving)e(b)q(een)j(giv)o(en)e(the)h(graph)-142
767 y Fq(g)p Fr(\).)27 b(The)17 b(resulting)g(forest)g(is)g(pruned)g
(in)g(a)f(left-most)f(top-most)-142 817 y(fashion)e(b)o(y)h(prune.)-142
892 y(If)d(pa)o(ying)f(an)h(extra)h(logarithmic)c(factor)j(is)g
(acceptable,)i(then)e(it)g(is)-142 942 y(p)q(ossible)g(to)f(disp)q
(ense)i(completely)e(with)g(the)h(imp)q(erativ)o(e)e(features)-142
992 y(used)16 b(in)e Fq(prune)o Fr(,)g(and)g(to)h(use)g(an)g(implem)o
(en)o(tation)d(of)h(sets)j(based)-142 1041 y(up)q(on)e(balanced)g
(trees,)h(for)f(example.)-142 1211 y Fp(6)67 b(More)22
b(algorithms)-142 1336 y Fh(Algorithm)17 b(5.)24 b(Classifying)19
b(edges)-142 1439 y Fr(W)m(e)9 b(ha)o(v)o(e)h(already)f(seen)i(the)f(v)
n(alue)f(of)g(classifying)f(the)j(graph)e(edges)-142
1489 y(with)16 b(resp)q(ect)j(to)d(a)g(giv)o(en)g(depth-\014rst)i
(searc)o(h.)26 b(Here)18 b(w)o(e)e(co)q(dify)-142 1539
y(the)d(idea)f(b)o(y)f(building)g(subgraphs)h(of)g(the)g(original)e
(con)o(taining)h(all)-142 1589 y(the)k(same)e(v)o(ertices,)i(but)f
(only)f(a)g(particular)h(kind)f(of)h(edge.)-142 1664
y(T)m(ree)21 b(edges)h(are)f(easiest,)h(these)g(are)f(just)f(the)h
(edges)h(that)e(ap-)-142 1713 y(p)q(ear)14 b(explicitly)e(in)g(the)h
(spanning)g(forest.)18 b(The)c(other)f(edges)h(ma)o(y)-142
1763 y(b)q(e)19 b(distinguished)f(b)o(y)g(comparing)e(preorder)k
(and/or)e(p)q(ostorder)-142 1813 y(n)o(um)o(b)q(ers)d(of)f(the)h(v)o
(ertices)h(of)e(an)g(edge.)21 b(W)m(e)14 b(can)h(summarise)d(the)-142
1863 y(situation)h(in)h(the)g(follo)o(wing)e(diagram:)6
2065 y(preorder:)19 b(......)260 2065 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 4.30554 0.0
false .5 5.20601 InitRnode  } NewNode end end
 260 2065 a Fi(v)o
Fr(........)o(..)o(..)o(..)o(..)o(...)o(..)o(..)o(.)559
2065 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 4.30554 0.0
false .5 7.42825 InitRnode  } NewNode end end
 559 2065 a Fi(w)n Fr(......)-142 2409 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -142 2409
a -142 2409 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 -142 2409 a -171 2423 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 16.75003 9.83331 .5 Frame  gsave 1. setgray fill  grestore end


@endspecial Fr(TF)-142 2409 y
 tx@Dict begin PutEnd  end
 -142 2409 a -142 2409
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeA InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -142 2409 a -142 2409 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 -142 2409 a -172 2423 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 17.30559 9.83331 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial Fr(BC)-142 2409 y
 tx@Dict begin PutEnd  end
 -142 2409
a -4 2301 a Fr(p)q(ostorder:)g(......)270 2301 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 4.30554 0.0
false .5 5.20601 InitRnode  } NewNode end end
 270
2301 a Fi(v)o Fr(........)o(..)o(..)o(..)o(..)o(..)o(..)o(...)o(.)569
2301 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 4.30554 0.0
false .5 7.42825 InitRnode  } NewNode end end
 569 2301 a Fi(w)m Fr(......)-142 2409 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end
 -142 2409
a -142 2409 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 -142 2409 a -157 2423 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 10.08336 9.83331 .5 Frame  gsave 1. setgray fill  grestore end


@endspecial Fr(B)-142 2409 y
 tx@Dict begin PutEnd  end
 -142 2409 a -142 2409 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeA InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke
 grestore  grestore end

-142 2409 a -142 2409 a
 tx@Dict begin tx@NodeDict begin /t 0.5  def LPutCoor end PutBegin
 end
 -142 2409 a -185 2423 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1. setgray  0. true 3.0 neg 3.0
neg 23.69447 9.83331 .5 Frame  gsave 1. setgray fill  grestore end
 
@endspecial Fr(TF)o(C)-142 2409 y
 tx@Dict begin PutEnd  end
 -142 2409
a 103 x Fr(The)d(ab)q(o)o(v)o(e)g(diagram)d(expresses)18
b(the)e(relationship)f(b)q(et)o(w)o(een)i(the)-142 2562
y(four)d(t)o(yp)q(es)i(of)d(edge)i(\(tree)h(edges)f(\(T\),)g(forw)o
(ard)e(edges)j(\(F\),)e(bac)o(k)-142 2612 y(edges)j(\(B\),)e(and)g
(cross)h(edges)h(\(C\)\))e(and)g(the)h(preorder)h(and)e(p)q(os-)-142
2662 y(torder)i(n)o(um)o(b)q(ers.)23 b(Only)16 b(bac)o(k)f(edges)i(go)e
(from)f(lo)o(w)o(er)i(p)q(ostorder)-142 2711 y(n)o(um)o(b)q(ers)c(to)h
(higher,)f(whereas)i(only)d(cross)j(edges)f(go)f(from)f(higher)-142
2761 y(to)18 b(lo)o(w)o(er)g(in)g Fo(b)n(oth)g Fr(orderings.)32
b(F)m(orw)o(ard)18 b(edges,)i(whic)o(h)e(are)g(the)-142
2811 y(comp)q(osition)9 b(of)h(tree)i(edges,)g(cannot)f(b)q(e)g
(distinguished)g(from)e(tree)972 18 y(edges)k(b)o(y)g(this)g(means|b)q
(oth)e(tree)j(edges)g(and)f(forw)o(ard)f(edges)i(go)972
68 y(from)h(lo)o(w)o(er)h(preorder)i(n)o(um)o(b)q(ers)f(to)f(higher)h
(\(and)g(con)o(v)o(ersely)h(in)972 118 y(p)q(ostorder\)|but)12
b(as)f(w)o(e)h(can)g(already)f(determine)g(whic)o(h)g(are)h(tree)972
167 y(edges)20 b(there)h(is)e(no)h(problem.)33 b(The)20
b(implemen)o(tatio)o(n)d(of)i(these)972 217 y(principles)14
b(is)f(no)o(w)h(immedia)o(te)e(and)i(presen)o(ted)i(in)d(Figure)h(3.)
972 292 y(T)m(o)c(classify)g(an)h(edge)h(w)o(e)f(generate)h(the)g
(depth-\014rst)g(spanning)f(for-)972 342 y(est,)17 b(and)g(use)h(this)e
(to)h(pro)q(duce)h(preorder)g(and)f(p)q(ostorder)h(n)o(um-)972
392 y(b)q(ers.)g(W)m(e)9 b(then)i(ha)o(v)o(e)f(all)f(the)h(information)
e(required)j(to)f(construct)972 441 y(the)k(appropriate)g(subgraph.)972
589 y Fh(Algorithm)i(6.)25 b(Finding)18 b(reac)n(hable)h(v)n(ertices)
972 692 y Fr(Finding)g(all)h(the)h(v)o(ertices)h(that)f(are)g(reac)o
(hable)g(from)e(a)i(single)972 742 y(v)o(ertex)13 b Fq(v)g
Fr(demonstrates)g(that)h(the)f Fq(dfs)f Fr(do)q(esn't)i(ha)o(v)o(e)f
(to)f(tak)o(e)h(all)972 792 y(the)i(v)o(ertices)h(as)f(its)g(second)h
(argumen)o(t.)k(Comm)o(encing)13 b(a)h(searc)o(h)972
842 y(at)20 b Fq(v)g Fr(will)f(construct)k(a)d(tree)i(con)o(taining)d
(all)h(of)f Fq(v)p Fr('s)i(reac)o(hable)972 891 y(v)o(ertices.)e(W)m(e)
13 b(then)i(\015atten)f(this)g(with)g(preorder)h(to)f(pro)q(duce)h(the)
972 941 y(desired)g(list.)972 1016 y Fq(reachable)k(::)j(Graph)f(->)g
(Vertex)g(->)g([Vertex])972 1066 y(reachable)e(g)j(v)g(=)f(preorderF)f
(\(dfs)h(g)h([v]\))972 1141 y Fr(One)12 b(application)f(of)g(this)h
(algorithm)e(is)h(to)h(test)h(for)f(the)g(existence)972
1190 y(of)h(a)g(path)h(b)q(et)o(w)o(een)i(t)o(w)o(o)d(v)o(ertices:)972
1265 y Fq(path)21 b(::)g(Graph)g(->)g(Vertex)g(->)g(Vertex)g(->)g(Bool)
972 1315 y(path)g(g)g(v)h(w)f(=)h(w)f(`elem`)g(\(reachable)f(g)h(v\))
972 1390 y Fr(The)16 b Fq(elem)f Fr(test)j(is)e(lazy:)22
b(it)16 b(returns)i Fq(True)d Fr(as)h(so)q(on)g(as)h(a)e(matc)o(h)972
1439 y(is)f(found.)k(Th)o(us)d(the)g(result)g(of)e Fq(reachable)g
Fr(is)h(demanded)g(lazily)m(,)972 1489 y(and)i(so)h(only)f(pro)q(duced)
i(lazily)m(.)24 b(As)18 b(so)q(on)e(as)h(the)g(required)h(v)o(er-)972
1539 y(tex)d(is)f(found)g(the)i(generation)f(of)f(the)h(DFS)f(forest)i
(ceases.)22 b(Th)o(us)972 1589 y Fq(dfs)17 b Fr(implemen)o(ts)f(a)i
(true)h Fo(se)n(ar)n(ch)f Fr(and)g(not)g(merely)g(a)g(complete)972
1639 y Fo(tr)n(aversal)p Fr(.)972 1787 y Fh(Algorithm)e(7.)25
b(Biconnected)17 b(comp)r(onen)n(ts)972 1890 y Fr(W)m(e)26
b(end)h(b)o(y)g(programmi)o(ng)d(a)i(more)g(complex)f(algorithm|)972
1939 y(\014nding)12 b Fo(bic)n(onne)n(cte)n(d)j(c)n(omp)n(onents)p
Fr(.)j(An)13 b(undirected)h(graph)f(is)g(bi-)972 1989
y(connected)h(if)f(the)g(remo)o(v)n(al)e(of)h(an)o(y)h(v)o(ertex)h(lea)
o(v)o(es)f(the)g(remaining)972 2039 y(subgraph)i(connected.)24
b(This)15 b(has)g(a)g(b)q(earing)g(in)g(the)h(problem)e(of)972
2089 y Fo(r)n(eliability)f Fr(in)h(comm)o(unication)e(net)o(w)o(orks.)
22 b(F)m(or)14 b(example,)g(if)g(y)o(ou)972 2139 y(w)o(an)o(t)d(to)g(a)
o(v)o(oid)g(driving)g(through)g(a)h(particular)f(to)o(wn,)h(is)f(there)
i(an)972 2188 y(alternativ)o(e)g(route?)972 2263 y(If)d(a)h(graph)g(is)
f(not)h(biconnected)h(the)g(v)o(ertices)g(whose)g(remo)o(v)n(al)d(dis-)
972 2313 y(connects)k(the)f(graph)g(are)g(kno)o(wn)f(as)h
Fo(articulation)g(p)n(oints)p Fr(.)17 b(Lo)q(cat-)972
2363 y(ing)11 b(articulation)g(p)q(oin)o(ts)i(allo)o(ws)e(a)h(graph)g
(to)g(b)q(e)h(partitioned)f(in)o(to)972 2413 y(biconnected)i(comp)q
(onen)o(ts)e(\(actually)h(a)f(partition)g(of)h(the)g
Fo(e)n(dges)p Fr(\).)972 2462 y(In)g(Figure)g(4)g(v)o(ertices)h(that)f
(are)h(articulation)e(p)q(oin)o(ts)h(are)g(mark)o(ed)972
2512 y(with)k(an)h(asterisk.)31 b(The)18 b(na)-5 b(\177)-16
b(\020v)o(e,)18 b(brute)h(force)g(metho)q(d)e(requires)972
2562 y Fo(O)t Fr(\()p Fo(V)7 b Fr(\()p Fo(V)17 b Fr(+)9
b Fo(E)c Fr(\)\))17 b(time)e(\(where)j(the)f(problem)e(graph)h(has)g
Fo(V)24 b Fr(v)o(er-)972 2612 y(tices)15 b(and)f Fo(E)19
b Fr(edges\).)h(A)14 b(more)f(e\016cien)o(t)i(algorithm)c(is)j(describ)
q(ed)972 2662 y(b)o(y)e(T)m(arjan)f(\(1972\),)h(where)i(biconnected)g
(comp)q(onen)o(ts)e(are)h(found)972 2711 y(during)e(the)i(course)h(of)e
(a)g(depth-\014rst)h(searc)o(h)h(in)d Fo(O)t Fr(\()p
Fo(V)17 b Fr(+)10 b Fo(E)5 b Fr(\))12 b(time.)972 2761
y(Here)h(w)o(e)f(apply)f(the)i(same)e(theory)h(as)h(T)m(arjan,)d(but)j
(express)g(it)f(via)972 2811 y(explicit)h(in)o(termediate)g(v)n(alues.)
940 2936 y(8)p eop
%%Page: 9 9
9 8 bop -142 -9 2186 2 v -98 39 a Fq(tree)21 b(::)g(Bounds)g(->)g
(Forest)g(Vertex)f(->)i(Graph)-98 88 y(tree)f(bnds)g(ts)g(=)h(buildG)e
(bnds)h(\(concat)g(\(map)g(flat)g(ts\)\))-55 138 y(where)-11
188 y(flat)g(\(Node)g(v)g(ts\))h(=)f([)h(\(v,w\))e(|)i(Node)f(w)h(us)f
(<-)g(ts])h(++)f(concat)f(\(map)h(flat)g(ts\))-98 288
y(back)g(::)g(Graph)g(->)g(Table)g(Int)g(->)h(Graph)-98
337 y(back)f(g)g(post)g(=)h(mapT)f(select)f(g)-55 387
y(where)43 b(select)21 b(v)g(ws)h(=)f([)h(w)f(|)h(w)f(<-)h(ws,)f
(post!v<post!w)e(])-98 487 y(cross)i(::)g(Graph)g(->)g(Table)g(Int)g
(->)g(Table)g(Int)g(->)h(Graph)-98 537 y(cross)f(g)g(pre)g(post)g(=)h
(mapT)f(select)f(g)-55 587 y(where)43 b(select)21 b(v)g(ws)h(=)f([)h(w)
f(|)h(w)f(<-)h(ws,)f(post!v>post!w,)e(pre!v>pre!w])-98
686 y(forward)h(::)i(Graph)e(->)i(Graph)e(->)i(Table)f(Int)g(->)g
(Graph)-98 736 y(forward)f(g)i(tree)f(pre)g(=)h(mapT)e(select)h(g)-55
786 y(where)43 b(select)21 b(v)g(ws)h(=)f([)h(w)f(|)h(w)f(<-)h(ws,)f
(pre!v<pre!w])e(\\\\)j(tree!v)602 885 y Fr(Figure)14
b(3:)k(Classi\014cation)13 b(of)g(graph)h(edges)p -142
909 V 31 1009 a
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 4.30554 0.0
false .5 4.32756 InitRnode  } NewNode end end
 31 1009 a Fi(c)258 1014 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 6.94444 0.0
false .5 8.88889 InitRnode  } NewNode end end
 258 1014 a
Fi(b)276 999 y Fb(\003)492 1014 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 6.88586 0.0
false .5 9.88312 InitRnode  } NewNode end end
 492 1014 a Fi(a)514
999 y Fb(\003)29 1250 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 6.94444 0.0
false .5 5.20486 InitRnode  } NewNode end end
 29 1250 a Fi(d)257 1250 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeE 16 { .5 6.88586 0.0
false .5 9.2535 InitRnode  } NewNode end end
 257
1250 a Fi(e)276 1235 y Fb(\003)500 1250 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeH 16 { .5 6.94444 0.0
false .5 5.76158 InitRnode  } NewNode end end
 500 1250 a
Fi(h)741 1250 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeI 16 { .5 6.59525 0.0
false .5 3.44513 InitRnode  } NewNode end end
 741 1250 a Fi(i)264 1483 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeF 16 { .5 6.94444 1.94444
false .5 5.97226 InitRnode  } NewNode end end
 264 1483 a
Fi(f)502 1477 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeG 16 { .5 4.30554 1.94444
false .5 5.12846 InitRnode  } NewNode end end
 502 1477 a Fi(g)40 1472 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA
/TheNodeB InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40
1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA
/TheNodeE InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA
/TheNodeH InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA
/TheNodeI InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472
a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB
/TheNodeC InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB
/TheNodeD InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC
/TheNodeD InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40
1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE
/TheNodeF InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE
/TheNodeG InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE
/TheNodeH InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeF
/TheNodeG InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 40 1472 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH
/TheNodeI InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap
stroke  grestore  grestore end
 40 1472 a 115
1572 a Fr(Figure)g(4:)j(An)d(undirected)i(graph)-142
1715 y(T)m(arjan's)d(metho)q(d)g(is)h(based)g(on)g(the)h(follo)o(wing)c
(theorem:)-142 1790 y Fg(Theorem)k(6)-142 1840 y Fr(Giv)o(en)h(a)f
(depth-\014rst)j(spanning)e(forest)g(of)g(a)g(graph,)g
Fo(v)k Fr(is)c(an)g(ar-)-142 1890 y(ticulation)f(p)q(oin)o(t)h(in)f
(the)h(graph)g(if)f(and)h(only)f(if:)21 b(\(i\))16 b
Fo(v)21 b Fr(is)15 b(a)h(ro)q(ot)-142 1940 y(with)d(more)g(than)g(one)g
(c)o(hild;)g(or)g(\(ii\))g Fo(v)18 b Fr(is)13 b(not)g(a)g(ro)q(ot,)g
(and)g(for)g(all)-142 1989 y(prop)q(er)h(descendan)o(ts)h
Fo(w)h Fr(of)c Fo(v)17 b Fr(there)d(are)f(no)g(edges)g(to)g(an)o(y)f
(prop)q(er)-142 2039 y(ancestors)k(of)d Fo(v)5 b Fr(.)-142
2114 y(W)m(e)16 b(apply)g(this)h(theorem)f(b)o(y)h(asso)q(ciating)f(a)g
Fo(low)h(p)n(oint)g Fr(n)o(um)o(b)q(er)-142 2164 y(with)10
b(ev)o(ery)h(v)o(ertex.)18 b(The)11 b(lo)o(w)e(p)q(oin)o(t)h(n)o(um)o
(b)q(er)f(of)h Fo(v)k Fr(is)c(the)h(smallest)-142 2214
y(DFS)g(n)o(um)o(b)q(ered)h(v)o(ertex)g(that)f(can)h(b)q(e)g(reac)o
(hed)g(b)o(y)f(follo)o(wing)e(zero)-142 2263 y(or)14
b(more)f(tree)i(edges,)g(and)e(then)i(along)e(a)g(single)h(graph)f
(edge.)-142 2338 y(W)m(e)e(calculate)g(lo)o(w)f(p)q(oin)o(t)g(n)o(um)o
(b)q(ers)h(b)o(y)f(tra)o(v)o(ersing)h(the)h(DFS)e(trees)-142
2388 y(b)q(ottom-up,)15 b(and)i(asso)q(ciating)e(eac)o(h)i(v)o(ertex)h
(with)e(its)g(lo)o(w)f(p)q(oin)o(t)-142 2438 y(n)o(um)o(b)q(er.)i(The)
11 b(function)g Fq(label)f Fr(\(see)i(Figure)f(6\))g(annotates)g(a)g
(tree)-142 2488 y(with)k(b)q(oth)h(depth-\014rst)h(n)o(um)o(b)q(ers)e
(and)g(lo)o(w-p)q(oin)o(t)f(n)o(um)o(b)q(ers.)23 b(A)o(t)-142
2537 y(an)o(y)14 b(v)o(ertex,)g(the)h(lo)o(w)d(p)q(oin)o(t)i(n)o(um)o
(b)q(er)f(is)h(the)g(minim)n(um)c(of:)-112 2656 y(1.)20
b(the)15 b(DFS)e(n)o(um)o(b)q(er)h(of)f(the)h(v)o(ertex;)-112
2761 y(2.)20 b(the)f(DFS)f(n)o(um)o(b)q(ers)g(of)g(the)h(v)o(ertices)h
(reac)o(hed)f(b)o(y)f(a)g(single)-59 2811 y(edge;)c(and)1002
1033 y(3.)20 b(the)e(lo)o(w)e(p)q(oin)o(t)h(n)o(um)o(b)q(ers)h(of)f
(the)h(v)o(ertex's)g(descendan)o(ts)i(in)1055 1083 y(the)14
b(tree.)972 1192 y(F)m(or)e(example,)f(the)j(result)f(of)f(running)h
Fq(label)f Fr(on)g(the)i(DFS)e(span-)972 1242 y(ning)17
b(tree)i(pro)q(duced)h(from)c(the)j(graph)f(in)f(Figure)h(4,)h(giv)o
(es)f(the)972 1292 y(annotated)c(tree)h(depicted)g(in)e(Figure)h(5.)
1107 1721 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 6.94444 3.55557
false .5 22.30215 InitRnode  } NewNode end end
 1107 1721 a Fi(d)1129 1728 y Fm(\(4)p Fa(;)p
Fm(2\))1227 1598 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 4.30554 3.55557
false .5 21.42485 InitRnode  } NewNode end end
 1227 1598 a Fi(c)1245 1605 y Fm(\(3)p
Fa(;)p Fm(2\))1344 1716 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeG 16 { .5 4.30554 3.55557
false .5 21.86697 InitRnode  } NewNode end end
 1344 1716 a Fi(g)1364 1723
y Fm(\(7)p Fa(;)p Fm(5\))1345 1485 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 6.94444 3.55557
false .5 21.38895 InitRnode  } NewNode end end
 1345 1485 a Fi(b)1363
1492 y Fm(\(2)p Fa(;)p Fm(1\))1462 1603 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeF 16 { .5 6.94444 3.55557
false .5 21.99315 InitRnode  } NewNode end end
 1462 1603 a
Fi(f)1482 1610 y Fm(\(6)p Fa(;)p Fm(5\))1461 1361 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 4.30554 3.55557
false .5 22.38318 InitRnode  } NewNode end end
 1461
1361 a Fi(a)1483 1368 y Fm(\(1)p Fa(;)p Fm(1\))1580 1480
y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeE 16 { .5 4.30554 3.55557
false .5 21.75356 InitRnode  } NewNode end end
 1580 1480 a Fi(e)1599 1487 y Fm(\(5)p Fa(;)p Fm(1\))1696
1603 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeH 16 { .5 6.94444 3.55557
false .5 22.85887 InitRnode  } NewNode end end
 1696 1603 a Fi(h)1720 1610 y Fm(\(8)p Fa(;)p Fm(1\))1819
1720 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeI 16 { .5 6.59525 3.55557
false .5 20.54242 InitRnode  } NewNode end end
 1819 1720 a Fi(i)1833 1727 y Fm(\(9)p Fa(;)p Fm(1\))208
1950 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeE InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeB /TheNodeC InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208
1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeD InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE /TheNodeF InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208
1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeE /TheNodeH InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeF /TheNodeG InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeH /TheNodeI InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 208
1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeD /TheNodeB InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 208 1950 a 208 1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeG /TheNodeE InitNC
{ GetAngle dup 45.  add /AngleA ED 45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 208 1950 a 208
1950 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeI /TheNodeA InitNC
{ GetAngle dup -45.  add /AngleA ED -45.  sub 180 add /AngleB ED 0.67
 0.67  NCCurve  } if end gsave 0.8 SLW 0. setgray 5.0 3.0 -2 0 add
DashLine  grestore  grestore end
 208 1950 a 993 1813 a Fr(Figure)g(5:)k(The)c(depth-\014rst)h
(forest)g(for)e(the)i(undirected)g(graph)972 1914 y(Dashed)21
b(lines)f(are)i(the)f(imp)q(ortan)o(t)e(bac)o(k)i(edges)h(used)f(for)g
(cal-)972 1964 y(culating)d(lo)o(w)g(p)q(oin)o(ts.)35
b(T)m(ree)20 b(no)q(des)g(are)f(triples,)i(for)e(instance,)972
2014 y Fo(e)991 2021 y Fm(\()p Fc(5)t Fa(;)p Fc(1)t Fm(\))1071
2014 y Fr(,)14 b(represen)o(ts)k(the)d(triple)g(\()p
Fo(e)s Fi(;)7 b Fo(5)f Fi(;)h Fo(1)f Fr(\))o(,)14 b(where)i
Fo(5)k Fr(is)14 b(the)i(depth-)972 2064 y(\014rst)e(n)o(um)o(b)q(er)f
(and)h Fo(1)20 b Fr(the)14 b(lo)o(w)f(p)q(oin)o(t)h(n)o(um)o(b)q(er)f
(of)g(v)o(ertex)i Fo(e)s Fr(.)972 2139 y(No)o(w)g(that)h(w)o(e)g(ha)o
(v)o(e)g(lo)o(w)f(p)q(oin)o(ts)h(for)g(v)o(ertices)h(w)o(e)f(can)g
(calculate)972 2188 y(articulation)c(p)q(oin)o(ts.)18
b(By)c(part)g(\(ii\))f(of)g(Theorem)g(6)h(if)e(the)j(depth-)972
2238 y(\014rst)e(n)o(um)o(b)q(er)g(of)f Fo(v)18 b Fr(is)13
b(less)h(than)f(or)g(equal)g(to)g(the)h(lo)o(w)e(p)q(oin)o(t)h(of)f
Fo(w)972 2288 y Fr(then)i Fo(v)k Fr(is)c(an)g(articulation)f(p)q(oin)o
(t.)972 2363 y(The)19 b(function)g Fq(collect)e Fr(coalesces)k(eac)o(h)
e(DFS)g(tree)i(in)o(to)d(a)h Fo(bi-)972 2413 y(c)n(onne)n(cte)n(d)e(tr)
n(e)n(e)p Fr(,)d(that)i(is,)f(a)g(tree)h(where)h(the)f(no)q(de)g
(elemen)o(ts)f(are)972 2462 y(biconnected)g(comp)q(onen)o(ts.)i(A)o(t)d
(eac)o(h)g(no)q(de)h(the)f(DFS)f(n)o(um)o(b)q(er)g(is)972
2512 y(compared)g(with)h(the)h(lo)o(w-p)q(oin)o(t)d(n)o(um)o(b)q(er)i
(of)g(all)f(the)h(c)o(hildren.)20 b(If)972 2562 y(the)13
b(c)o(hild's)g(lo)o(w-p)q(oin)o(t)f(n)o(um)o(b)q(er)g(is)h(strictly)h
(less)g(than)f(the)h(no)q(de's)972 2612 y(DFS)h(n)o(um)o(b)q(er,)g
(then)h(the)g(comp)q(onen)o(t)f(in)o(v)o(olving)e(that)j(v)o(ertex)g
(is)972 2662 y(not)c(completed.)18 b(On)13 b(the)h(other)f(hand,)g(if)f
(the)i(no)q(de's)f(DFS)g(n)o(um-)972 2711 y(b)q(er)18
b(is)g(less)h(than)f(or)g(equal)f(to)h(the)h(c)o(hild's)e(lo)o(w-p)q
(oin)o(t)f(n)o(um)o(b)q(er,)972 2761 y(then)10 b(that)g(comp)q(onen)o
(t)f(is)h(completed)f(once)h(the)h(no)q(de)f(is)g(included.)972
2811 y(The)15 b(function)f Fq(bicomps)f Fr(handles)i(the)h(sp)q(ecial)f
(case)g(of)f(the)i(ro)q(ot.)940 2936 y(9)p eop
%%Page: 10 10
10 9 bop -142 -9 2186 2 v -98 42 a Fq(bcc)21 b(::)g(Graph)g(->)h
(Forest)e([Vertex])-98 92 y(bcc)h(g)h(=)f(\(concat)g(.)g(map)g(bicomps)
g(.)g(map)g(\(label)g(g)h(dnum\)\))e(forest)-55 142 y(where)43
b(forest)21 b(=)g(dff)g(g)98 191 y(dnum)g(=)h(preArr)e(\(bounds)g(g\))i
(forest)-98 291 y(label)f(::)g(Graph)g(->)g(Table)g(Int)g(->)g(Tree)g
(Vertex)g(->)g(Tree)g(\(Vertex,Int,Int\))-98 341 y(label)g(g)g(dnum)g
(\(Node)g(v)h(ts\))f(=)g(Node)g(\(v,dnum!v,lv\))e(us)-33
391 y(where)43 b(us)21 b(=)h(map)f(\(label)f(g)i(dnum\))f(ts)120
441 y(lv)g(=)h(minimum)e(\([dnum!v]++[)f(dnum!w)i(|)h(w)f(<-)h(g!v])468
490 y(++[)g(lu)f(|)h(Node)f(\(u,dw,lu\))f(xs)h(<-)g(us]\))-98
590 y(bicomps)f(::)i(Tree)f(\(Vertex,Int,Int)o(\))e(->)i(Forest)g
([Vertex])-98 640 y(bicomps)f(\(Node)h(\(v,dv,lv\))f(ts\))33
690 y(=)h([)h(Node)f(\(v:vs\))f(us)i(|)f(\(l,)g(Node)g(vs)h(us\))f(<-)g
(map)h(collect)e(ts])-98 789 y(collect)g(::)i(Tree)f(\(Vertex,Int,Int)o
(\))e(->)i(\(Int,)g(Tree)g([Vertex]\))-98 839 y(collect)f(\(Node)h
(\(v,dv,lv\))f(ts\))h(=)h(\(lv,)f(Node)g(\(v:vs\))f(cs\))-55
889 y(where)43 b(collected)20 b(=)i(map)f(collect)f(ts)98
939 y(vs)h(=)h(concat)f([)g(ws)g(|)h(\(lw,)f(Node)g(ws)g(us\))h(<-)f
(collected,)f(lw<dv])98 988 y(cs)h(=)h(concat)f([)g(if)g(lw<dv)g(then)g
(us)h(else)f([Node)f(\(v:ws\))h(us])468 1038 y(|)h(\(lw,)f(Node)g(ws)g
(us\))h(<-)f(collected])541 1138 y Fr(Figure)14 b(6:)j(Biconnected)f
(comp)q(onen)o(ts)e(algorithm)p -142 1161 V -142 1286
a(Finally)m(,)e Fq(bcc)h Fr(ties)h(all)f(the)h(other)h(functions)f
(together.)-142 1360 y(Coalescing)d(the)h(tree)h(from)d(Figure)i(5)f
(will)f(pro)q(duce)i(the)h(follo)o(wing)-142 1410 y(forest)i(con)o
(taining)e(t)o(w)o(o)g(trees.)176 1488 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeA 16 { .5 7.5 2.5 false
.5 19.57753 InitRnode  } NewNode end end
 176 1488 a Fr([)p
Fi(a;)7 b(b)p Fr(])40 1606 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeB 16 { .5 7.5 2.5 false
.5 28.26848 InitRnode  } NewNode end end
 40 1606 a Fr([)p Fi(b;)g(d;)g(c)p
Fr(])492 1488 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeC 16 { .5 7.5 2.5 false
.5 38.03767 InitRnode  } NewNode end end
 492 1488 a Fr([)p Fi(a;)g(e;)g(h;)g(i)p
Fr(])628 1606 y
 tx@Dict begin tx@NodeDict begin {  } /TheNodeD 16 { .5 7.5 2.5 false
.5 29.64583 InitRnode  } NewNode end end
 628 1606 a Fr([)p Fi(e;)g(f)r(;)g(g)q
Fr(])99 1596 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeA /TheNodeB InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 99 1596 a 99 1596 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow false 0.4 1.4 2.0 3. Arrow  EndArrow  }
def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0 /TheNodeC /TheNodeD InitNC
{ NCLine  } if end gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore
 grestore end
 99 1596 a 104 1695
a Fr(Figure)14 b(7:)j(The)e(biconnected)g(trees)-142
1796 y(While)20 b(this)g(algorithm)e(is)i(complex,)g(again)g(it)g(is)g
(made)f(up)i(of)-142 1846 y(individual)15 b(comp)q(onen)o(ts)h(whose)g
(correctness)k(ma)o(y)14 b(\(p)q(oten)o(tially)-142 1896
y(at)h(least\))h(b)q(e)g(established)f(indep)q(enden)o(tly)h(of)f(the)h
(other)f(comp)q(o-)-142 1946 y(nen)o(ts.)k(This)14 b(is)g(quite)g
(unlik)o(e)f(t)o(ypical)g(imp)q(erativ)o(e)g(presen)o(tations)-142
1996 y(where)18 b(the)g(b)q(ones)f(of)f(the)i(recursiv)o(e)g(DFS)f(pro)
q(cedure)h(are)f(\014lled)-142 2045 y(out)f(with)g(the)h(other)f(comp)q
(onen)o(ts)g(of)g(the)g(algorithm,)e(resulting)-142 2095
y(in)g(a)f(single)h(monolithic)d(pro)q(cedure.)-142 2260
y Fp(7)67 b(Analysis)23 b(of)f(depth-\014rst)i(searc)n(h)-142
2385 y Fh(7.1)56 b(Complexit)n(y)-142 2487 y Fr(Mo)q(dels)11
b(for)e(complexit)o(y)f(analysis)i(of)f(imp)q(erativ)o(e)g(languages)g
(ha)o(v)o(e)-142 2537 y(b)q(een)j(established)e(for)g(man)o(y)e(y)o
(ears,)j(and)f(v)o(eri\014ed)h(with)f(resp)q(ect)i(to)-142
2587 y(realit)o(y)g(across)g(man)o(y)e(implemen)o(tations.)15
b(Using)c(these)j(mo)q(dels)c(it)-142 2637 y(is)15 b(p)q(ossible)g(to)g
(sho)o(w)f(that)h(traditional)f(implem)o(en)o(tations)e(of)i(the)-142
2687 y(v)n(arious)i(DFS)g(algorithms)d(are)k(linear)f(in)f(the)i(size)g
(of)e(the)i(graph)-142 2736 y(\(that)d(is,)g(run)g(in)f
Fo(O)t Fr(\()p Fo(V)k Fr(+)9 b Fo(E)c Fr(\))14 b(time\).)-142
2811 y(Corresp)q(onding)21 b(mo)q(dels)e(for)h(lazy)f(functional)h
(languages)f(ha)o(v)o(e)972 1286 y(not)13 b(b)q(een)i(dev)o(elop)q(ed)g
(to)e(the)i(same)e(lev)o(el,)g(and)g(where)i(they)f(ha)o(v)o(e)972
1335 y(b)q(een)j(dev)o(elop)q(ed)f(there)i(has)e(not)g(y)o(et)g(b)q
(een)h(the)g(same)e(extensiv)o(e)972 1385 y(v)o(eri\014cation.)34
b(Using)19 b(these)i(mo)q(dels,)e(\(see)i(for)e(example)f(Sands)972
1435 y(\(1993\)\))i(w)o(e)h(b)q(eliev)o(e)g(our)g(implemen)o(tatio)o(n)
d(of)j(the)g(DFS)g(algo-)972 1485 y(rithms)10 b(to)h(b)q(e)h(linear,)f
(but)h(b)q(ecause)h(these)g(mo)q(dels)d(ha)o(v)o(e)i(not)f(b)q(een)972
1535 y(fully)h(tested,)j(w)o(e)f(also)f(ran)h(empirical)e(tests)k
(ourselv)o(es.)2189 2315 y
 tx@Dict begin -90 Rot  end
 2189 2315 a 1244 3665 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 2267 @rwi @setspecial
%%BeginDocument: graph.ps
/gnudict 40 dict def
gnudict begin
/Color false def
/gnulinewidth 5.000 def
/vshift -40 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke moveto
  0 vshift rmoveto show } def
/Rshow { currentpoint stroke moveto
  dup stringwidth pop neg vshift rmoveto show } def
/Cshow { currentpoint stroke moveto
  dup stringwidth pop -2 div vshift rmoveto show } def
/DL { Color {setrgbcolor [] 0 setdash pop}
 {pop pop pop 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/M {moveto} def
/L {lineto} def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub moveto
  0 currentlinewidth rlineto  stroke } def
/D { stroke [] 0 setdash  2 copy  vpt add moveto
  hpt neg vpt neg rlineto  hpt vpt neg rlineto
  hpt vpt rlineto  hpt neg vpt rlineto  closepath  stroke
  P  } def
/A { stroke [] 0 setdash  vpt sub moveto  0 vpt2 rlineto
  currentpoint stroke moveto
  hpt neg vpt neg rmoveto  hpt2 0 rlineto stroke
  } def
/B { stroke [] 0 setdash  2 copy  exch hpt sub exch vpt add moveto
  0 vpt2 neg rlineto  hpt2 0 rlineto  0 vpt2 rlineto
  hpt2 neg 0 rlineto  closepath  stroke
  P  } def
/C { stroke [] 0 setdash  exch hpt sub exch vpt add moveto
  hpt2 vpt2 neg rlineto  currentpoint  stroke  moveto
  hpt2 neg 0 rmoveto  hpt2 vpt2 rlineto stroke  } def
/T { stroke [] 0 setdash  2 copy  vpt 1.12 mul add moveto
  hpt neg vpt -1.62 mul rlineto
  hpt 2 mul 0 rlineto
  hpt neg vpt 1.62 mul rlineto  closepath  stroke
  P  } def
/S { 2 copy A C} def
end
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
/Times-Roman findfont 120 scalefont setfont
newpath
LTb
LT0
LT0
%6570 4556 M
%("data.3d") Rshow
%6642 4556 M
%6858 4556 L
4220 2023 M
4390 2151 L
4390 2151 M
4560 2328 L
4560 2328 M
4729 2484 L
4729 2484 M
4899 2644 L
4899 2644 M
5069 2792 L
5069 2792 M
5238 2973 L
5238 2973 M
5408 3133 L
5408 3133 M
5578 3306 L
5578 3306 M
5747 3503 L
5747 3503 M
5917 3683 L
3894 1996 M
4064 2148 L
4064 2148 M
4233 2305 L
4233 2305 M
4403 2477 L
4403 2477 M
4573 2641 L
4573 2641 M
4742 2813 L
4742 2813 M
4912 2966 L
4912 2966 M
5082 3130 L
5082 3130 M
5251 3311 L
5251 3311 M
5421 3488 L
5421 3488 M
5590 3664 L
3568 2009 M
3737 2141 L
3737 2141 M
3907 2314 L
3907 2314 M
4076 2478 L
4076 2478 M
4246 2634 L
4246 2634 M
4416 2794 L
4416 2794 M
4585 2955 L
4585 2955 M
4755 3132 L
4755 3132 M
4925 3292 L
4925 3292 M
5094 3461 L
5094 3461 M
5264 3654 L
3242 1990 M
3412 2150 L
3412 2150 M
3581 2311 L
3581 2311 M
3750 2476 L
3750 2476 M
3920 2647 L
3920 2647 M
4089 2804 L
4089 2804 M
4259 2952 L
4259 2952 M
4429 3113 L
4429 3113 M
4598 3297 L
4598 3297 M
4768 3462 L
4768 3462 M
4937 3631 L
2915 1995 M
3085 2144 L
3085 2144 M
3255 2308 L
3255 2308 M
3424 2469 L
3424 2469 M
3594 2632 L
3594 2632 M
3763 2781 L
3763 2781 M
3932 2949 L
3932 2949 M
4102 3114 L
4102 3114 M
4272 3287 L
4272 3287 M
4441 3451 L
4441 3451 M
4611 3620 L
2589 1988 M
2759 2141 L
2759 2141 M
2928 2305 L
2928 2305 M
3098 2482 L
3098 2482 M
3268 2613 L
3268 2613 M
3437 2782 L
3437 2782 M
3606 2951 L
3606 2951 M
3776 3123 L
3776 3123 M
3945 3288 L
3945 3288 M
4115 3460 L
4115 3460 M
4285 3617 L
2263 1994 M
2432 2142 L
2432 2142 M
2602 2307 L
2602 2307 M
2771 2463 L
2771 2463 M
2941 2611 L
2941 2611 M
3111 2775 L
3111 2775 M
3280 2948 L
3280 2948 M
3450 3120 L
3450 3120 M
3619 3281 L
3619 3281 M
3788 3450 L
3788 3450 M
3958 3610 L
1936 1979 M
2106 2135 L
2106 2135 M
2275 2304 L
2275 2304 M
2445 2460 L
2445 2460 M
2615 2620 L
2615 2620 M
2784 2776 L
2784 2776 M
2954 2945 L
2954 2945 M
3124 3110 L
3124 3110 M
3293 3278 L
3293 3278 M
3463 3439 L
3463 3439 M
3632 3595 L
1610 1980 M
1779 2144 L
1779 2144 M
1949 2293 L
1949 2293 M
2118 2457 L
2118 2457 M
2288 2605 L
2288 2605 M
2458 2774 L
2458 2774 M
2627 2934 L
2627 2934 M
2797 3099 L
2797 3099 M
2967 3275 L
2967 3275 M
3136 3428 L
3136 3428 M
3306 3580 L
1283 1997 M
1453 2146 L
1453 2146 M
1622 2306 L
1622 2306 M
1792 2467 L
1792 2467 M
1962 2626 L
1962 2626 M
2131 2787 L
2131 2787 M
2301 2951 L
2301 2951 M
2471 3108 L
2471 3108 M
2640 3268 L
2640 3268 M
2810 3441 L
2810 3441 M
2980 3606 L
5917 3683 M
5590 3664 L
5590 3664 M
5264 3654 L
5264 3654 M
4937 3631 L
4937 3631 M
4611 3620 L
4611 3620 M
4285 3617 L
4285 3617 M
3958 3610 L
3958 3610 M
3632 3595 L
3632 3595 M
3306 3580 L
3306 3580 M
2980 3606 L
5747 3503 M
5421 3488 L
5421 3488 M
5094 3461 L
5094 3461 M
4768 3462 L
4768 3462 M
4441 3451 L
4441 3451 M
4115 3460 L
4115 3460 M
3788 3450 L
3788 3450 M
3463 3439 L
3463 3439 M
3136 3428 L
3136 3428 M
2810 3441 L
5578 3306 M
5251 3311 L
5251 3311 M
4925 3292 L
4925 3292 M
4598 3297 L
4598 3297 M
4272 3287 L
4272 3287 M
3945 3288 L
3945 3288 M
3619 3281 L
3619 3281 M
3293 3278 L
3293 3278 M
2967 3275 L
2967 3275 M
2640 3268 L
5408 3133 M
5082 3130 L
5082 3130 M
4755 3132 L
4755 3132 M
4429 3113 L
4429 3113 M
4102 3114 L
4102 3114 M
3776 3123 L
3776 3123 M
3450 3120 L
3450 3120 M
3124 3110 L
3124 3110 M
2797 3099 L
2797 3099 M
2471 3108 L
5238 2973 M
4912 2966 L
4912 2966 M
4585 2955 L
4585 2955 M
4259 2952 L
4259 2952 M
3932 2949 L
3932 2949 M
3606 2951 L
3606 2951 M
3280 2948 L
3280 2948 M
2954 2945 L
2954 2945 M
2627 2934 L
2627 2934 M
2301 2951 L
5069 2792 M
4742 2813 L
4742 2813 M
4416 2794 L
4416 2794 M
4089 2804 L
4089 2804 M
3763 2781 L
3763 2781 M
3437 2782 L
3437 2782 M
3111 2775 L
3111 2775 M
2784 2776 L
2784 2776 M
2458 2774 L
2458 2774 M
2131 2787 L
4899 2644 M
4573 2641 L
4573 2641 M
4246 2634 L
4246 2634 M
3920 2647 L
3920 2647 M
3594 2632 L
3594 2632 M
3268 2613 L
3268 2613 M
2941 2611 L
2941 2611 M
2615 2620 L
2615 2620 M
2288 2605 L
2288 2605 M
1962 2626 L
4729 2484 M
4403 2477 L
4403 2477 M
4076 2478 L
4076 2478 M
3750 2476 L
3750 2476 M
3424 2469 L
3424 2469 M
3098 2482 L
3098 2482 M
2771 2463 L
2771 2463 M
2445 2460 L
2445 2460 M
2118 2457 L
2118 2457 M
1792 2467 L
4560 2328 M
4233 2305 L
4233 2305 M
3907 2314 L
3907 2314 M
3581 2311 L
3581 2311 M
3255 2308 L
3255 2308 M
2928 2305 L
2928 2305 M
2602 2307 L
2602 2307 M
2275 2304 L
2275 2304 M
1949 2293 L
1949 2293 M
1622 2306 L
4390 2151 M
4064 2148 L
4064 2148 M
3737 2141 L
3737 2141 M
3412 2150 L
3412 2150 M
3085 2144 L
3085 2144 M
2759 2141 L
2759 2141 M
2432 2142 L
2432 2142 M
2106 2135 L
2106 2135 M
1779 2144 L
1779 2144 M
1453 2146 L
4220 2023 M
3894 1996 L
3894 1996 M
3568 2009 L
3568 2009 M
3242 1990 L
3242 1990 M
2915 1995 L
2915 1995 M
2589 1988 L
2589 1988 M
2263 1994 L
2263 1994 M
1936 1979 L
1936 1979 M
1610 1980 L
1610 1980 M
1283 1997 L
currentpoint stroke moveto
%6714 4556 D
4220 2023 D
4390 2151 D
4560 2328 D
4729 2484 D
4899 2644 D
5069 2792 D
5238 2973 D
5408 3133 D
5578 3306 D
5747 3503 D
5917 3683 D
3894 1996 D
4064 2148 D
4233 2305 D
4403 2477 D
4573 2641 D
4742 2813 D
4912 2966 D
5082 3130 D
5251 3311 D
5421 3488 D
5590 3664 D
3568 2009 D
3737 2141 D
3907 2314 D
4076 2478 D
4246 2634 D
4416 2794 D
4585 2955 D
4755 3132 D
4925 3292 D
5094 3461 D
5264 3654 D
3242 1990 D
3412 2150 D
3581 2311 D
3750 2476 D
3920 2647 D
4089 2804 D
4259 2952 D
4429 3113 D
4598 3297 D
4768 3462 D
4937 3631 D
2915 1995 D
3085 2144 D
3255 2308 D
3424 2469 D
3594 2632 D
3763 2781 D
3932 2949 D
4102 3114 D
4272 3287 D
4441 3451 D
4611 3620 D
2589 1988 D
2759 2141 D
2928 2305 D
3098 2482 D
3268 2613 D
3437 2782 D
3606 2951 D
3776 3123 D
3945 3288 D
4115 3460 D
4285 3617 D
2263 1994 D
2432 2142 D
2602 2307 D
2771 2463 D
2941 2611 D
3111 2775 D
3280 2948 D
3450 3120 D
3619 3281 D
3788 3450 D
3958 3610 D
1936 1979 D
2106 2135 D
2275 2304 D
2445 2460 D
2615 2620 D
2784 2776 D
2954 2945 D
3124 3110 D
3293 3278 D
3463 3439 D
3632 3595 D
1610 1980 D
1779 2144 D
1949 2293 D
2118 2457 D
2288 2605 D
2458 2774 D
2627 2934 D
2797 3099 D
2967 3275 D
3136 3428 D
3306 3580 D
1283 1997 D
1453 2146 D
1622 2306 D
1792 2467 D
1962 2626 D
2131 2787 D
2301 2951 D
2471 3108 D
2640 3268 D
2810 3441 D
2980 3606 D
5917 3683 D
5590 3664 D
5264 3654 D
4937 3631 D
4611 3620 D
4285 3617 D
3958 3610 D
3632 3595 D
3306 3580 D
2980 3606 D
5747 3503 D
5421 3488 D
5094 3461 D
4768 3462 D
4441 3451 D
4115 3460 D
3788 3450 D
3463 3439 D
3136 3428 D
2810 3441 D
5578 3306 D
5251 3311 D
4925 3292 D
4598 3297 D
4272 3287 D
3945 3288 D
3619 3281 D
3293 3278 D
2967 3275 D
2640 3268 D
5408 3133 D
5082 3130 D
4755 3132 D
4429 3113 D
4102 3114 D
3776 3123 D
3450 3120 D
3124 3110 D
2797 3099 D
2471 3108 D
5238 2973 D
4912 2966 D
4585 2955 D
4259 2952 D
3932 2949 D
3606 2951 D
3280 2948 D
2954 2945 D
2627 2934 D
2301 2951 D
5069 2792 D
4742 2813 D
4416 2794 D
4089 2804 D
3763 2781 D
3437 2782 D
3111 2775 D
2784 2776 D
2458 2774 D
2131 2787 D
4899 2644 D
4573 2641 D
4246 2634 D
3920 2647 D
3594 2632 D
3268 2613 D
2941 2611 D
2615 2620 D
2288 2605 D
1962 2626 D
4729 2484 D
4403 2477 D
4076 2478 D
3750 2476 D
3424 2469 D
3098 2482 D
2771 2463 D
2445 2460 D
2118 2457 D
1792 2467 D
4560 2328 D
4233 2305 D
3907 2314 D
3581 2311 D
3255 2308 D
2928 2305 D
2602 2307 D
2275 2304 D
1949 2293 D
1622 2306 D
4390 2151 D
4064 2148 D
3737 2141 D
3412 2150 D
3085 2144 D
2759 2141 D
2432 2142 D
2106 2135 D
1779 2144 D
1453 2146 D
4220 2023 D
3894 1996 D
3568 2009 D
3242 1990 D
2915 1995 D
2589 1988 D
2263 1994 D
1936 1979 D
1610 1980 D
1283 1997 D


LTb
1283 1357 M
4220 802 L
4220 802 M
5917 1763 L
5917 1763 M
2980 2317 L
2980 2317 M
1283 1357 L

LTb
4220 802 M
4220 2023 L
5917 1763 M
5917 3683 L
2980 2317 M
2980 3606 L

LTb
1283 1357 M
1337 1388 L
1119 1264 M
(500) Rshow
1610 1295 M
1664 1326 L
1446 1202 M
(1000) Rshow
1936 1233 M
1990 1264 L
1772 1140 M
(1500) Rshow
2263 1172 M
2317 1203 L
2099 1079 M
(2000) Rshow
2589 1110 M
2643 1141 L
2425 1017 M
(2500) Rshow
2915 1048 M
2969 1079 L
2751 955 M
(3000) Rshow
3242 987 M
3296 1018 L
3078 894 M
(3500) Rshow
3568 925 M
3622 956 L
3404 832 M
(4000) Rshow
3894 863 M
3948 894 L
3730 770 M
(4500) Rshow
4220 802 M
4274 833 L
4056 709 M
(5000) Rshow
4220 802 M
4159 813 L
4405 767 M
(0) Lshow
4390 898 M
4329 909 L
4575 863 M
(500) Lshow
4560 994 M
4499 1005 L
4745 959 M
(1000) Lshow
4729 1090 M
4668 1101 L
4914 1055 M
(1500) Lshow
4899 1186 M
4838 1197 L
5084 1151 M
(2000) Lshow
5069 1282 M
5008 1293 L
5254 1247 M
(2500) Lshow
5238 1378 M
5177 1389 L
5423 1343 M
(3000) Lshow
5408 1474 M
5347 1485 L
5593 1439 M
(3500) Lshow
5578 1571 M
5517 1582 L
5763 1537 M
(4000) Lshow
5747 1667 M
5686 1678 L
5932 1632 M
(4500) Lshow
5917 1763 M
5856 1774 L
6102 1728 M
(5000) Lshow
1283 2146 M
1346 2146 L
1220 2146 M
(5) Rshow
1283 2348 M
1346 2348 L
1220 2348 M
(10) Rshow
1283 2548 M
1346 2548 L
1220 2548 M
(15) Rshow
1283 2750 M
1346 2750 L
1220 2750 M
(20) Rshow
1283 2951 M
1346 2951 L
1220 2951 M
(25) Rshow
1283 3152 M
1346 3152 L
1220 3152 M
(30) Rshow
LTb
1283 1357 M
1283 3277 L
LTa
2328 839 M
(Vertices) Cshow
5803 1144 M
(Edges) Cshow
1283 3598 M
(Seconds) Cshow
stroke
grestore
end
showpage
%%EndDocument
 @endspecial 2189 2315 a
 tx@Dict begin 90 Rot  end
 2189 2315 a 972 2290 a Fr(Figure)i(8:)26
b(Measuremen)o(ts)19 b(tak)o(en)g(on)f(the)g(strongly)g(connected)972
2339 y(comp)q(onen)o(ts)13 b(algorithm)972 2437 y(W)m(e)j(to)q(ok)g
(measuremen)o(ts)h(on)f(the)i(strongly)e(connected)j(comp)q(o-)972
2487 y(nen)o(ts)e(algorithm,)d(whic)o(h)i(uses)i(t)o(w)o(o)e
(depth-\014rst)i(searc)o(hes.)28 b(The)972 2537 y(results)20
b(of)f(our)g(exp)q(erimen)o(t)g(are)h(in)f(Figure)g(8.)34
b(Timings)17 b(w)o(ere)972 2587 y(tak)o(en)g(on)g(randomly)f(generated)
j(graphs)e(\(with)h(di\013ering)f(n)o(um-)972 2637 y(b)q(ers)k(of)f(v)o
(ertices)i(and)f(edges\))h(and)e(are)h(accurate)h(to)e(appro)o(xi-)972
2687 y(mately)12 b(1\045.)972 2761 y(The)g(results)h(are)f(quite)f
(clear.)18 b(The)12 b(plotted)g(p)q(oin)o(ts)g(clearly)f(all)g(lie)972
2811 y(on)i(a)h(plane,)f(indicating)g(the)h(linearit)o(y)f(of)g(the)i
(algorithm.)930 2936 y(10)p eop
%%Page: 11 11
11 10 bop -142 18 a Fr(W)m(e)15 b(w)o(ere)h(also)e(curious)h(as)h(to)e
(the)i(constan)o(t)f(factor)g(that)g(w)o(e)h(are)-142
68 y(pa)o(ying)k(o)o(v)o(er)h(an)f(imp)q(erativ)o(e)f(language.)38
b(W)m(e)20 b(co)q(ded)i(up)f(T)m(ar-)-142 118 y(jan's)g(biconnected)j
(comp)q(onen)o(ts)d(algorithm)e(in)j(C,)f(and)g(com-)-142
167 y(pared)15 b(with)f(our)g(Hask)o(ell)g(implemen)o(tatio)o(n.)j(F)m
(or)c(the)i(graphs)g(w)o(e)-142 217 y(tested)h(Hask)o(ell)d(w)o(as)h(b)
q(et)o(w)o(een)h(10)e(and)h(20)f(times)g(slo)o(w)o(er)h(than)g(C.)-142
267 y(This)f(w)o(as)f(b)q(etter)i(than)e(w)o(e)h(exp)q(ected)h(as)f
(the)g(Hask)o(ell)f(implemen-)-142 317 y(tation)i(is)g(m)o(ulti-pass)e
(whereas)j(the)g(C)f(implemen)o(tatio)o(n)d(w)o(as)j(the)-142
367 y(monolithic)e(single-pass)h(algorithm.)-142 611
y Fp(8)67 b(Related)23 b(w)n(ork)-142 744 y Fr(Kashiw)o(agi)16
b(and)h(Wise)h(\(1991\))e(also)h(express)i(their)e(graph)g(algo-)-142
794 y(rithms)10 b(in)g(Hask)o(ell.)16 b(They)11 b(express)h(a)e(graph)g
(problem)f(in)h(terms)h(of)-142 843 y(a)k(set)h(of)f(recursiv)o(e)h
(equations,)f(and)g(the)h(algorithm)d(is)i(the)h(\014xed)-142
893 y(p)q(oin)o(t)j(of)g(these)i(equations.)34 b(The)20
b(graphs)f(are)h(represen)o(ted)i(b)o(y)-142 943 y(lists,)15
b(so)g(the)g(algorithms)d(ha)o(v)o(e)j(p)q(o)q(or)g(complexit)o(y)m(,)d
(but)j(are)g(suit-)-142 993 y(able)j(for)f(parallel)f(ev)n(aluation.)28
b(Unfortunately)m(,)18 b(man)o(y)e(of)h(their)-142 1043
y(algorithm)11 b(implemen)o(tatio)o(ns)g(are)j(long)e(and)h
(unreadable,)g(giving)-142 1093 y(little)d(insigh)o(t)g(in)o(to)g(the)h
(structure)i(of)d(the)h(problem.)16 b(F)m(or)10 b(example,)-142
1142 y(their)k(strongly)f(connected)i(comp)q(onen)o(ts)d(algorithm)f
(is)i(a)g(page)g(of)-142 1192 y(in)o(tricate)h(Hask)o(ell.)-142
1267 y(Barth)22 b Fo(et)g(al.)f Fr(\(1991\))f(describ)q(e)k
Fo(M-structur)n(es)c Fr(in)h(the)h(parallel)-142 1317
y(functional)12 b(language)g(Id)h(whic)o(h)f(are)i(w)o(ell)e(suited)h
(for)g(state)g(based)-142 1366 y(computation.)33 b(F)m(or)19
b(instance,)i(an)e(M-structure)j(arra)o(y)d(can)g(b)q(e)-142
1416 y(used)12 b(for)e(holding)g(marks)f(to)i(express)i(whether)f(a)e
(v)o(ertex)i(has)f(b)q(een)-142 1466 y(visited)19 b(b)q(efore)h(or)e
(not)h(during)g(a)f(tra)o(v)o(ersal.)33 b(The)20 b(strength)g(of)-142
1516 y(M-structures)g(is)c(that)h(they)h(are)f(designed)h(to)e(supp)q
(ort)i(parallel)-142 1566 y(ev)n(aluation:)h(their)d(dra)o(wbac)o(k)f
(is)g(that)g(referen)o(tial)g(transparency)-142 1616
y(is)f(lost.)19 b(With)13 b(regard)i(to)f(depth-\014rst)i(searc)o(h,)e
(Reif)g(\(1985\))f(giv)o(es)-142 1665 y(strong)e(evidence)h(that)e(it)h
(is)f(inheren)o(tly)h(sequen)o(tial;)g(its)f(computa-)-142
1715 y(tional)f(complexit)o(y)g(cannot)h(b)q(e)h(impro)o(v)o(ed)e(up)q
(on)h(b)o(y)g(parallel)f(com-)-142 1765 y(putation.)17
b(So)c(while)f(M-structures)j(pro)o(vide)e(a)f(v)n(aluable)g(metho)q(d)
-142 1815 y(for)18 b(general)g(graph)f(searc)o(hing)h(in)g(parallel,)f
(they)h(pro)o(vide)g(little)-142 1865 y(help)c(for)g(the)g(particular)g
(case)h(of)e(depth-\014rst)i(searc)o(h.)-142 1939 y(The)j(Graph)f
(Exploration)g(Language)g(\(GEL\))h(of)e(Erwig)i(\(1992\))-142
1989 y(pro)o(vides)g(explicit)f(extensions)h(to)f(a)g(lazy)g
(functional)f(language.)-142 2039 y(These)d(are)f Fo(explor)n(ation)h
(op)n(er)n(ators)p Fr(,)e(whic)o(h)h(giv)o(e)f(a)g(concise)i(w)o(a)o(y)
e(of)-142 2089 y(expressing)16 b(man)o(y)c(graph)j(algorithms.)i(Ho)o
(w)o(ev)o(er,)e(not)f(all)f(graph)-142 2139 y(problems)g(can)g(b)q(e)i
(expressed)g(in)e(terms)h(of)e(a)i(giv)o(en)f(set)h(of)f(prede-)-142
2188 y(\014ned)k(high-lev)o(el)e(op)q(erations,)h(and)g(it)g(seems)g
(less)h(than)f(ideal)f(to)-142 2238 y(add)g(new)h(language)f(concepts)i
(for)e(ev)o(ery)h(new)g(class)g(of)e(problem)-142 2288
y(that)g(is)g(tac)o(kled.)-142 2363 y(Burton)22 b(and)f(Y)m(ang)f
(\(1990\))h(exp)q(erimen)o(ted)g(with)g(m)o(ulti-link)o(ed)-142
2413 y(structures.)30 b(They)18 b(use)g(arra)o(ys)f(whic)o(h)g(are)g
(implemen)o(ted)e(using)-142 2462 y(balanced)h(trees)i(to)e(represen)o
(t)j(heaps.)25 b(They)17 b(giv)o(e)e(man)o(y)f(exam-)-142
2512 y(ples)19 b(of)g(using)f(m)o(ulti-link)o(ed)e(structures)21
b(using)e(heaps,)h(one)f(ex-)-142 2562 y(ample)14 b(is)i(an)f
(arbitrary)h(depth-\014rst)h(searc)o(h)g(function.)23
b(A)15 b(dra)o(w-)-142 2612 y(bac)o(k)e(with)f(their)g(approac)o(h)h
(is)f(that)g(heaps)h(ha)o(v)o(e)g(to)f(b)q(e)h(passed)g(to)-142
2662 y(and)k(returned)i(from)c(eac)o(h)j(function.)27
b(Another)18 b(is)f(that,)g(b)o(y)g(us-)-142 2711 y(ing)d(balanced)g
(trees)i(a)e(logarithmic)e(factor)i(is)g(incurred,)h(so)g(their)-142
2761 y(depth-\014rst)20 b(searc)o(h)g(function)e(is)g(not)g(linear)g
(in)g(the)h(size)h(of)d(the)-142 2811 y(graph.)972 18
y Fp(9)66 b(Ac)n(kno)n(wledgemen)n(ts)972 135 y Fr(W)m(e)13
b(w)o(ould)h(lik)o(e)f(to)h(thank)h(Kieran)f(Clenaghan)g(and)g(Simon)e
(P)o(ey-)972 185 y(ton)20 b(Jones)h(for)g(the)g(helpful)e(commen)o(ts)g
(they)i(ga)o(v)o(e)f(on)g(a)h(pre-)972 234 y(liminary)14
b(draft)j(of)f(this)h(pap)q(er.)28 b(W)m(e)17 b(are)g(also)f(v)o(ery)i
(grateful)e(to)972 284 y(Ric)o(hard)d(Bird)h(for)f(suggesting)h(that)g
(DFS)g(can)g(b)q(e)g(expressed)i(us-)972 334 y(ing)8
b(the)i(generate/prune)i(paradigm,)c(and)h(to)g(him,)f(Gerain)o(t)h
(Jones)972 384 y(and)14 b(Theo)h(Norv)o(ell)f(for)h(inspiring)f(the)h
(correctness)j(pro)q(ofs.)j(The)972 434 y(w)o(ork)d(w)o(as)g(partly)g
(supp)q(orted)i(b)o(y)f(the)g(UK)g(Science)h(and)e(Engi-)972
484 y(neering)c(Researc)o(h)h(Council.)972 651 y Fp(References)972
762 y Fr(Barth,)d(P)m(.)f(S.,)h(Nikhil,)e(R.)h(S.)h(and)f(Arvind)h
(\(1991\),)f(M-structures:)1059 812 y(Extending)21 b(a)f(parallel,)g
(non-strict,)i(functional)d(language)1059 862 y(with)h(state,)j
Fo(in)e Fr(J.)f(Hughes,)j(ed.,)e(`Conference)h(on)e(F)m(unc-)1059
912 y(tional)15 b(Programming)e(Languages)j(and)g(Computer)f(Arc)o(hi-)
1059 961 y(tecture',)e(LNCS)f(523,)e(Springer-V)m(erlag,)i(Cam)o
(bridge,)d(Mas-)1059 1011 y(sac)o(h)o(usetts,)15 b(pp.)f(538{568.)972
1099 y(Burton,)f(F.)f(W.)h(and)f(Y)m(ang,)g(H.-K.)h(\(1990\),)f
(`Manipulating)e(m)o(ul-)1059 1149 y(tilink)o(ed)i(data)g(structures)j
(in)d(a)g(pure)i(functional)d(language',)1059 1199 y
Fo(Softwar)n(e|Pr)n(actic)n(e)j(and)i(Exp)n(erienc)n(e)e
Fg(20)p Fr(,)f(1167{1185.)972 1287 y(Corman,)8 b(T.)g(H.,)i(Leiserson,)
h(C.)d(E.)h(and)h(Riv)o(est,)f(R.)f(L.)h(\(1990\),)g
Fo(In-)1059 1337 y(tr)n(o)n(duction)15 b(to)h(A)o(lgorithms)p
Fr(,)d(The)h(MIT)h(Press,)g(Cam)o(bridge,)1059 1386 y(Massac)o(h)o
(usetts.)972 1474 y(Erwig,)21 b(M.)g(\(1992\),)g(Graph)g(algorithms)d
(=)j(iteration)g(+)g(data)1059 1524 y(structures?)45
b(The)22 b(structure)j(of)c(graph)h(algorithms)d(and)1059
1574 y(a)24 b(st)o(yle)h(of)f(programming)o(,)g Fo(in)h
Fr(E.)f(Ma)o(yr,)i(ed.,)h(`Graph-)1059 1624 y(Theoretic)16
b(Concepts)g(in)f(Computer)f(Science',)i(LNCS)f(657,)1059
1674 y(Springer-V)m(erlag,)e(pp.)h(277{292.)972 1762
y(Harrison,)k(R.)f(\(1993\),)h Fo(A)o(bstr)n(act)f(data)i(typ)n(es)g
(in)f(Standar)n(d)i(ML)p Fr(,)1059 1812 y(John)14 b(Wiley)f(and)h
(Sons.)972 1900 y(Holy)o(er,)20 b(I.)f(\(1991\),)h Fo(F)m(unctional)h
(pr)n(o)n(gr)n(amming)f(with)f(Mir)n(anda)p Fr(,)1059
1949 y(Pitman,)12 b(London.)972 2037 y(Hop)q(croft,)k(J.)h(E.)f(and)g
(T)m(arjan,)g(R.)f(E.)h(\(1973\),)g(`Algorithm)e(447:)1059
2087 y(E\016cien)o(t)h(algorithms)c(for)j(graph)g(manipulation',)c
Fo(Commu-)1059 2137 y(nic)n(ations)15 b(of)g(the)g(A)o(CM)f
Fg(16)p Fr(\(6\),)f(372{378.)972 2225 y(Hudak,)f(P)m(.,)f(P)o(eyton)h
(Jones,)h(S.)f(L.,)g(W)m(adler,)f(P)m(.,)g(Arvind,)h(Boutel,)1059
2275 y(B.,)f(F)m(airbairn,)e(J.,)i(F)m(asel,)f(J.,)h(Guzm\023)-21
b(an,)9 b(M.)h(M.,)g(Hammond,)1059 2325 y(K.,)23 b(Hughes,)h(J.,)f
(Johnsson,)g(T.,)g(Kieburtz,)h(R.,)e(Nikhil,)1059 2374
y(R.)12 b(S.,)h(P)o(artain,)f(W.)g(and)h(P)o(eterson,)i(J.)d(\(1992\),)
h(`Rep)q(ort)f(on)1059 2424 y(the)i(functional)f(programming)d
(language)j(Hask)o(ell,)f(V)m(ersion)1059 2474 y(1.2',)g
Fo(A)o(CM)j(SIGPLAN)g(Notic)n(es)e Fg(27)p Fr(\(5\).)972
2562 y(Kashiw)o(agi,)e(Y.)i(and)g(Wise,)f(D.)h(S.)f(\(1991\),)g(Graph)h
(algorithms)e(in)1059 2612 y(a)k(lazy)g(functional)f(programmi)o(ng)e
(language,)i Fo(in)h Fr(`Pro)q(ceed-)1059 2662 y(ings)c(of)g(the)h
(4'th)f(In)o(ternational)g(Symp)q(osium)e(on)i(Lucid)g(and)1059
2711 y(In)o(tensional)g(Programmi)o(ng',)d(pp.)i(35{46.)i(Also)f(a)o(v)
n(ailable)d(as)1059 2761 y(T)m(ec)o(hnical)15 b(Rep)q(ort)g(Num)o(b)q
(er)f(330,)g(Computer)g(Science)i(De-)1059 2811 y(partmen)o(t,)d
(Indiana)g(Univ)o(ersit)o(y)m(.)930 2936 y(11)p eop
%%Page: 12 12
12 11 bop -142 18 a Fr(Launc)o(h)o(bury)m(,)20 b(J.)f(\(1993\),)g(Lazy)
g(imp)q(erativ)o(e)f(programmi)o(ng,)f Fo(in)-54 68 y
Fr(`W)m(orkshop)9 b(on)g(State)i(in)e(Programming)d(Languages',)k(A)o
(CM)-54 118 y(SIGPLAN,)j(Cop)q(enhagen,)h(Denmark,)e(pp.)i(46{56.)-142
201 y(Launc)o(h)o(bury)m(,)g(J.)h(and)f(P)o(eyton)h(Jones,)h(S.)e(L.)g
(\(1994\),)f(Lazy)i(func-)-54 250 y(tional)i(state)h(threads,)i
Fo(in)e Fr(`Conference)h(on)e(Programming)-54 300 y(Language)25
b(Design)g(and)h(Implemen)o(tation')o(,)f(A)o(CM)h(SIG-)-54
350 y(PLAN,)14 b(Orlando,)f(Florida.)-142 433 y(Man)o(b)q(er,)g(U.)f
(\(1989\),)f Fo(Intr)n(o)n(duction)i(to)h(A)o(lgorithms|A)e(Cr)n(e)n
(ative)-54 483 y(Appr)n(o)n(ach)p Fr(,)i(Addison-W)m(esley)m(,)e
(Reading,)h(Massac)o(h)o(usetts.)-142 566 y(Moggi,)c(E.)h(\(1989\),)f
(Computational)e(lam)o(b)q(da-calculus)g(and)j(mon-)-54
616 y(ads,)21 b Fo(in)f Fr(`Symp)q(osium)d(on)j(Logic)f(in)h(Computer)g
(Science',)-54 666 y(IEEE,)14 b(Asilomar,)d(California.)-142
749 y(P)o(aulson,)22 b(L.)f(C.)g(\(1991\),)h Fo(ML)g(for)f(the)g
(working)h(pr)n(o)n(gr)n(ammer)p Fr(,)-54 798 y(Cam)o(bridge)12
b(Univ)o(ersit)o(y)i(Press,)h(Cam)o(bridge.)-142 881
y(P)o(eyton)d(Jones,)g(S.)f(L.)g(and)g(W)m(adler,)f(P)m(.)h(\(1993\),)g
(Imp)q(erativ)o(e)f(func-)-54 931 y(tional)17 b(programmi)o(ng,)f
Fo(in)i Fr(`20'th)f(Symp)q(osium)e(on)j(Princi-)-54 981
y(ples)j(of)e(Programming)e(Languages',)k(A)o(CM,)f(Charleston,)-54
1031 y(North)14 b(Carolina.)-142 1114 y(Reif,)g(J.)g(H.)h(\(1985\),)e
(`Depth-\014rst)j(searc)o(h)f(is)g(inheren)o(tly)g(sequen-)-54
1164 y(tial',)d Fo(Information)j(Pr)n(o)n(c)n(essing)f(L)n(etters)f
Fg(20)p Fr(,)g(229{234.)-142 1247 y(Sands,)18 b(D.)f(\(1993\),)g(A)g
(na)-5 b(\177)-16 b(\020v)o(e)17 b(time)f(analysis)g(and)h(its)h
(theory)g(of)-54 1296 y(cost)11 b(equiv)n(alence,)h(TOPPS)f(rep)q(ort)h
(D-173,)e(DIKU,)g(Univ)o(er-)-54 1346 y(sit)o(y)k(of)f(Cop)q(enhagen,)h
(Denmark.)-142 1429 y(Sharir,)25 b(M.)d(\(1981\),)i(`A)e
(strong-connectivit)o(y)h(algorithm)d(and)-54 1479 y(its)15
b(applications)g(in)f(data)h(\015o)o(w)g(analysis',)f
Fo(Computers)i(and)-54 1529 y(mathematics)f(with)f(applic)n(ations)g
Fg(7)p Fr(\(1\),)f(67{72.)-142 1612 y(T)m(arjan,)k(R.)f(E.)g(\(1972\),)
h(`Depth-\014rst)h(searc)o(h)g(and)f(linear)f(graph)-54
1662 y(algorithms',)i Fo(SIAM)j(Journal)f(of)g(Computing)g
Fg(1)p Fr(\(2\),)f(146{)-54 1712 y(160.)-142 1795 y(W)m(adler,)13
b(P)m(.)h(\(1990\),)e(Comprehending)i(monads,)e Fo(in)i
Fr(`Conference)-54 1844 y(on)22 b(Lisp)f(and)h(F)m(unctional)f
(Programming')o(,)g(A)o(CM,)g(Nice,)-54 1894 y(F)m(rance,)14
b(pp.)f(61{78.)930 2936 y(12)p eop
%%Page: 13 13
13 12 bop -142 18 a Fp(App)r(endix)-142 146 y Fr(Imp)q(erativ)o(e)13
b(features)i(w)o(ere)f(initially)d(in)o(tro)q(duced)k(in)o(to)e(the)h
(Glas-)-142 196 y(go)o(w)d(Hask)o(ell)g(compiler)f(to)i(p)q(erform)e
(input)i(and)f(output,)h(see)h(P)o(ey-)-142 246 y(ton)19
b(Jones)g(and)f(W)m(adler)g(\(1993\).)31 b(The)19 b(approac)o(h)f(is)g
(based)h(on)-142 296 y(monads)c(\(Moggi)g(1989,)f(W)m(adler)h(1990\),)h
(and)f(can)i(easily)e(b)q(e)i(ex-)-142 345 y(tended)c(to)e(ac)o(hiev)o
(e)h Fo(in-situ)f Fr(arra)o(y)g(up)q(dates.)18 b(Launc)o(h)o(bury)12
b(\(1993\))-142 395 y(sho)o(w)o(ed)k(ho)o(w)e(the)i(original)d(mo)q
(del)g(could)i(b)q(e)g(extended)i(to)e(allo)o(w)-142
445 y(the)h(imp)q(erativ)o(e)e(actions)h(to)g(b)q(e)h(dela)o(y)o(ed)f
(un)o(til)g(their)g(results)i(are)-142 495 y(required.)i(This)14
b(is)g(the)g(mo)q(del)f(w)o(e)h(use.)-142 569 y(W)m(e)e(will)f(use)j
(the)f(monad)e(of)h(state-transformers)h(with)f(t)o(yp)q(e)h(con-)-142
619 y(structor)j Fq(ST)d Fr(whic)o(h)h(is)f(de\014ned:)-142
694 y Fq(type)21 b(ST)h(s)f(a)h(=)f(a)h(->)f(\(a,s\))-142
769 y Fr(So)g(elemen)o(ts)g(of)f(t)o(yp)q(e)h Fq(ST)h(s)f(Int)p
Fr(,)h(sa)o(y)m(,)f(are)h(functions)f(whic)o(h,)-142
819 y(when)k(applied)f(to)g(the)h(state,)i(return)f(a)e(pair)g(of)f(an)
i(in)o(teger)-142 868 y(together)f(with)e(a)g(new)h(state.)45
b(As)23 b(usual)f(w)o(e)h(ha)o(v)o(e)f(the)h(unit)-142
918 y Fq(returnST)12 b Fr(and)i(the)h(sequencing)g(com)o(binator)d
Fq(thenST)n Fr(:)-142 993 y Fq(returnST)20 b(::)i(a)f(->)h(ST)f(s)h(a)
-142 1043 y(returnST)e(a)i(s)g(=)f(\(a,s\))-142 1142
y(thenST)g(::)g(ST)h(s)f(a)h(->)f(\(a)h(->)f(ST)g(s)h(b\))f(->)h(ST)f
(s)h(b)-142 1192 y(\(m)g(`thenST`)e(k\))h(s)h(=)f(k)h(a)g(t)43
b(where)f(\(a,t\))21 b(=)h(m)f(s)-142 1267 y Fr(The)15
b Fq(ST)e Fr(monad)f(pro)o(vides)i(three)h(basic)f(arra)o(y)g(op)q
(erations:)-142 1342 y Fq(newArr)43 b(::Ix)21 b(i=>)g(\(i,i\))g(->)g(a)
g(->ST)g(s)h(\(MutArr)e(s)i(i)g(a\))-142 1391 y(readArr)f(::Ix)g(i=>)g
(MutArr)f(s)i(i)f(a)h(->)f(i)h(->)f(ST)h(s)f(a)-142 1441
y(writeArr::Ix)f(i=>)h(MutArr)f(s)i(i)f(a)h(->)f(i)h(->)f(a)h(->ST)f(s)
h(\(\))-142 1516 y Fr(The)15 b(\014rst,)f Fq(newArr)o
Fr(,)f(tak)o(es)h(a)g(pair)g(of)f(index)h(b)q(ounds)g(\(the)h(t)o(yp)q
(e)f Fq(a)-142 1566 y Fr(m)o(ust)c(lie)h(in)g(the)g(index)h(class)f
Fq(Ix)p Fr(\))g(together)h(with)f(an)g(initial)e(v)n(alue,)-142
1616 y(and)19 b(returns)h(a)f(reference)i(to)d(an)h(initialised)e(arra)
o(y)m(.)32 b(The)19 b(time)-142 1665 y(this)14 b(op)q(eration)g(tak)o
(es)g(is)f(linear)g(with)h(resp)q(ect)i(to)d(the)i(n)o(um)o(b)q(er)e
(of)-142 1715 y(elemen)o(ts)d(in)f(the)i(arra)o(y)m(.)16
b(The)10 b(other)h(t)o(w)o(o)e(pro)o(vide)h(for)f(reading)h(and)-142
1765 y(writing)k(to)h(an)f(elemen)o(t)h(of)f(the)h(arra)o(y)m(,)f(and)h
(b)q(oth)g(tak)o(e)f(constan)o(t)-142 1815 y(time.)-142
1890 y(Finally)m(,)24 b(the)g Fq(ST)f Fr(monad)f(comes)h(equipp)q(ed)h
(with)f(a)g(function)-142 1939 y Fq(runST)o Fr(.)-142
2014 y Fq(runST)e(::)g(\()p Fn(8)p Fq(s)h(.)f(ST)h(s)f(a\))h(->)f(a)
-142 2089 y Fr(This)13 b(tak)o(es)f(a)g(state-transformer)h(function,)f
(applies)g(it)g(to)g(an)g(ini-)-142 2139 y(tial)20 b(state,)j(extracts)
f(the)g(\014nal)e(v)n(alue)h(and)f(discards)i(the)g(\014nal)-142
2188 y(state.)h(The)16 b(t)o(yp)q(e)g(of)e Fq(runST)h
Fr(is)g(not)g(Hindley-Milner)g(b)q(ecause)i(of)-142 2238
y(the)d(nested)g(quan)o(ti\014er,)f(so)g(it)f(m)o(ust)g(b)q(e)h
(built-in)f(to)g(Hask)o(ell.)18 b(The)-142 2288 y(univ)o(ersal)c(quan)o
(ti\014er)g(ensures)h(that)f(in)f(a)h(state)g(thread)h(v)n(ariables)
-142 2338 y(from)f(other)i(state)h(threads)g(are)f(not)f(referenced.)26
b(F)m(or)15 b(details)h(of)-142 2388 y(this)e(see)h(Launc)o(h)o(bury)f
(and)g(P)o(eyton)g(Jones)h(\(1994\).)-142 2462 y(So,)e(for)h(example,)
-98 2537 y Fq(runST)21 b(\(newArr)f(\(1,8\))h(0)108 b(`thenST`)21
b(\(\\nums)f(->)54 2587 y(writeArr)h(nums)g(5)g(42)g(`thenST`)g(\(\\_)g
(->)54 2637 y(readArr)g(nums)g(5)108 b(`thenST`)21 b(\(\\v)g(->)54
2687 y(returnST)g(v\)\)\)\))-142 2761 y Fr(will)11 b(return)j
Fq(42)p Fr(.)j(This)c(can)f(b)q(e)i(read)f(as)f(follo)o(ws:)k(run)d(a)f
(new)h(state)-142 2811 y(thread)f(extracting)e(the)i(\014nal)e(v)n
(alue)f(when)j(\014nished;)f(create)h(a)f(new)972 18
y(arra)o(y)h(indexed)h(from)e Fq(1)h Fr(to)h Fq(8)f Fr(with)g(comp)q
(onen)o(ts)h(all)e Fq(0)p Fr(;)h(then)i(bind)972 68 y(this)f(arra)o(y)f
(to)h Fq(nums)o Fr(;)g(write)g(to)g(arra)o(y)g Fq(nums)f
Fr(at)h(index)g Fq(5)f Fr(the)i(v)n(alue)972 118 y(42;)i(then)g(read)h
(the)g(comp)q(onen)o(t)e(in)h Fq(nums)f Fr(at)h(index)g
Fq(5)g Fr(and)g(bind)972 167 y(this)g(v)n(alue)g(to)g
Fq(v)p Fr(;)h(\014nally)e(return)j(v)n(alue)d Fq(v)p
Fr(.)26 b(Note)16 b(that)h(the)g(\014nal)972 217 y(expression)h
Fq(returnST)i(v)d Fr(is)h(unnecessary)h(as)f Fq(readArr)e
Fr(returns)972 267 y(a)g(v)n(alue.)27 b(The)17 b(paren)o(theses)i
(immediately)13 b(after)18 b Fq(`thenST`)d Fr(are)972
317 y(also)j(unnecessary)m(,)j(as)e(Hask)o(ell's)g(gramma)o(r)d(binds)j
(lam)o(b)q(da)e(ex-)972 367 y(pressions)e(tigh)o(ter)f(than)g(in\014x)f
(functions.)930 2936 y(13)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF


