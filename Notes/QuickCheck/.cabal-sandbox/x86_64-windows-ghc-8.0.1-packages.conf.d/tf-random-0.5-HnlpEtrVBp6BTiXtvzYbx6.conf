name: tf-random
version: 0.5
id: tf-random-0.5-HnlpEtrVBp6BTiXtvzYbx6
key: tf-random-0.5-HnlpEtrVBp6BTiXtvzYbx6
license: BSD3
maintainer: Michał Pałka <michal.palka@chalmers.se>
synopsis: High-quality splittable pseudorandom number generator
description:
    This package contains an implementation of a high-quality splittable pseudorandom number generator. The generator is based on a cryptographic hash function built on top of the ThreeFish block cipher. See the paper /Splittable Pseudorandom Number Generators Using Cryptographic Hashing/ by Claessen, Pałka for details and the rationale of the design.
    .
    The package provides the following:
    .
    * A splittable PRNG that implements the standard 'System.Random.RandomGen' class.
    .
    * The generator also implements an alternative version of the 'System.Random.TF.Gen.RandomGen' class (exported from "System.Random.TF.Gen"), which requires the generator to return pseudorandom integers from the full 32-bit range, and contains an n-way split function.
    .
    * An alternative version of the @Random@ class is provided, which is linked to the new @RandomGen@ class, together with @Random@ instances for some integral types.
    .
    * Two functions for initialising the generator with a non-deterministic seed: one using the system time, and one using the @\/dev\/urandom@ UNIX special file.
    .
    The package uses an adapted version of the reference C implementation of ThreeFish from the reference package of the Skein hash function (<https://www.schneier.com/skein.html>), originally written by Doug Whiting.
    .
    Please note that even though the generator provides very high-quality pseudorandom numbers, it has not been designed with cryptographic applications in mind.
category: Random
author: Michał Pałka <michal.palka@chalmers.se>
exposed: True
exposed-modules:
    System.Random.TF System.Random.TF.Gen System.Random.TF.Init
    System.Random.TF.Instances
abi: 2bdc263ae05236aa5a890b1498f45b53
trusted: False
import-dirs: C:\Users\lnguyen\Dev\Haskell\QuickCheck\.cabal-sandbox\x86_64-windows-ghc-8.0.1\tf-random-0.5-HnlpEtrVBp6BTiXtvzYbx6
library-dirs: C:\Users\lnguyen\Dev\Haskell\QuickCheck\.cabal-sandbox\x86_64-windows-ghc-8.0.1\tf-random-0.5-HnlpEtrVBp6BTiXtvzYbx6
data-dir: C:\Users\lnguyen\Dev\Haskell\QuickCheck\.cabal-sandbox\x86_64-windows-ghc-8.0.1\tf-random-0.5
hs-libraries: HStf-random-0.5-HnlpEtrVBp6BTiXtvzYbx6
depends:
    base-4.9.0.0 primitive-0.6.2.0-3HSsNCfUEEE4fjqDYVydYZ
    random-1.1-54KmMHXjttlERYcr1mvsAe time-1.6.0.1
haddock-interfaces: C:\Users\lnguyen\Dev\Haskell\QuickCheck\.cabal-sandbox\doc\x86_64-windows-ghc-8.0.1\tf-random-0.5\html\tf-random.haddock
haddock-html: C:\Users\lnguyen\Dev\Haskell\QuickCheck\.cabal-sandbox\doc\x86_64-windows-ghc-8.0.1\tf-random-0.5\html
